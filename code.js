var Laya = window.Laya = function (t, e) {
    var i = {
        __internals: [],
        __packages: {},
        __classmap: {
            Object: Object,
            Function: Function,
            Array: Array,
            String: String
        },
        __sysClass: {
            object: "Object",
            array: "Array",
            string: "String",
            dictionary: "Dictionary"
        },
        __propun: {
            writable: !0,
            enumerable: !1,
            configurable: !0
        },
        __presubstr: String.prototype.substr,
        __substr: function (t, e) {
            return 1 == arguments.length ? i.__presubstr.call(this, t) : i.__presubstr.call(this, t, e > 0 ? e : this.length + e);
        },
        __init: function (t) {
            t.forEach(function (t) {
                t.__init$ && t.__init$();
            });
        },
        __isClass: function (t) {
            return t && (t.__isclass || t == Object || t == String || t == Array);
        },
        __newvec: function (t, e) {
            var i = [];
            i.length = t;
            for (var s = 0; s < t; s++) i[s] = e;
            return i;
        },
        __extend: function (t, e) {
            function s() {
                i.un(this, "constructor", t);
            }
            for (var n in e) if (e.hasOwnProperty(n)) {
                var a = Object.getOwnPropertyDescriptor(e, n),
                    r = a.get,
                    o = a.set;
                r || o ? r && o ? Object.defineProperty(t, n, a) : (r && Object.defineProperty(t, n, r), o && Object.defineProperty(t, n, o)) : t[n] = e[n];
            }
            s.prototype = e.prototype,
                t.prototype = new s(),
                i.un(t.prototype, "__imps", i.__copy({},
                    e.prototype.__imps));
        },
        __copy: function (t, e) {
            if (!e) return null;
            t = t || {};
            for (var i in e) t[i] = e[i];
            return t;
        },
        __package: function (e, s) {
            if (!i.__packages[e]) {
                i.__packages[e] = !0;
                var n = t,
                    a = e.split(".");
                if (a.length > 1) for (var r = 0,
                    o = a.length - 1; r < o; r++) {
                    var h = n[a[r]];
                    n = h || (n[a[r]] = {});
                }
                n[a[a.length - 1]] || (n[a[a.length - 1]] = s || {});
            }
        },
        __hasOwnProperty: function (t, e) {
            function i(t, e) {
                if (Object.hasOwnProperty.call(e.prototype, t)) return !0;
                var s = e.prototype.__super;
                return null == s ? null : i(t, s);
            }
            return e = e || this,
                Object.hasOwnProperty.call(e, t) || i(t, e.__class);
        },
        __typeof: function (t, e) {
            if (!t || !e) return !1;
            if (e === String) return "string" == typeof t;
            if (e === Number) return "number" == typeof t;
            if (e.__interface__) e = e.__interface__;
            else if ("string" != typeof e) return t instanceof e;
            return t.__imps && t.__imps[e] || t.__class == e;
        },
        __as: function (t, e) {
            return this.__typeof(t, e) ? t : null;
        },
        __int: function (t) {
            return t ? parseInt(t) : 0;
        },
        interface: function (e, s) {
            i.__package(e, {});
            var n = i.__internals,
                a = n[e] = n[e] || {
                    self: e
                };
            if (s) {
                var r = s.split(",");
                a.extend = [];
                for (c = 0; c < r.length; c++) {
                    var o = r[c];
                    n[o] = n[o] || {
                        self: o
                    },
                        a.extend.push(n[o]);
                }
            }
            for (var h = t,
                l = e.split("."), c = 0; c < l.length - 1; c++) h = h[l[c]];
            h[l[l.length - 1]] = {
                __interface__: e
            };
        },
        class: function (e, s, n, a) {
            if (n && i.__extend(e, n), s) if (i.__package(s, e), i.__classmap[s] = e, s.indexOf(".") > 0) {
                if (0 == s.indexOf("laya.")) {
                    var r = s.split(".");
                    a = a || r[r.length - 1],
                        i[a] && console.log("Warning!,this class[" + a + "] already exist:", i[a]),
                        i[a] = e;
                }
            } else "Main" == s ? t.Main = e : (i[s] && console.log("Error!,this class[" + s + "] already exist:", i[s]), i[s] = e);
            var o = i.un,
                h = e.prototype;
            o(h, "hasOwnProperty", i.__hasOwnProperty),
                o(h, "__class", e),
                o(h, "__super", n),
                o(h, "__className", s),
                o(e, "__super", n),
                o(e, "__className", s),
                o(e, "__isclass", !0),
                o(e, "super",
                    function (t) {
                        this.__super.call(t);
                    });
        },
        imps: function (t, e) {
            function s(t) {
                var e, a;
                if ((e = i.__internals[t]) && (n[t] = !0, a = e.extend)) for (var r = 0; r < a.length; r++) s(a[r].self);
            }
            if (!e) return null;
            var n = t.__imps || i.un(t, "__imps", {});
            for (var a in e) s(a);
        },
        superSet: function (t, e, i, s) {
            var n = t.prototype["_$set_" + i];
            n && n.call(e, s);
        },
        superGet: function (t, e, i) {
            var s = t.prototype["_$get_" + i];
            return s ? s.call(e) : null;
        },
        getset: function (t, e, s, n, a) {
            t ? (n && (e["_$GET_" + s] = n), a && (e["_$SET_" + s] = a)) : (n && i.un(e, "_$get_" + s, n), a && i.un(e, "_$set_" + s, a)),
                n && a ? Object.defineProperty(e, s, {
                    get: n,
                    set: a,
                    enumerable: !1,
                    configurable: !0
                }) : (n && Object.defineProperty(e, s, {
                    get: n,
                    enumerable: !1,
                    configurable: !0
                }), a && Object.defineProperty(e, s, {
                    set: a,
                    enumerable: !1,
                    configurable: !0
                }));
        },
        static: function (t, e) {
            for (var i = 0,
                s = e.length; i < s; i += 2)"length" == e[i] ? t.length = e[i + 1].call(t) : function () {
                    var s = e[i],
                        n = e[i + 1];
                    Object.defineProperty(t, s, {
                        get: function () {
                            return delete this[s],
                                this[s] = n.call(this);
                        },
                        set: function (t) {
                            delete this[s],
                                this[s] = t;
                        },
                        enumerable: !0,
                        configurable: !0
                    });
                }();
        },
        un: function (t, e, s) {
            return s || (s = t[e]),
                i.__propun.value = s,
                Object.defineProperty(t, e, i.__propun),
                s;
        },
        uns: function (t, e) {
            e.forEach(function (e) {
                i.un(t, e);
            });
        }
    };
    return t.console = t.console || {
        log: function () { }
    },
        t.trace = t.console.log,
        Error.prototype.throwError = function () {
            throw arguments;
        },
        Object.defineProperty(Array.prototype, "fixed", {
            enumerable: !1
        }),
        i;
}(window, document);

!function (t, e, i) {
    i.un,
        i.uns,
        i.static,
        i.class,
        i.getset,
        i.__newvec;
}(window, document, Laya),
    function (t, e, i) {
        i.un,
            i.uns;
        var s = i.static,
            n = i.class,
            a = i.getset;
        i.__newvec;
        i.interface("laya.runtime.IMarket"),
            i.interface("laya.filters.IFilter"),
            i.interface("laya.display.ILayout"),
            i.interface("laya.resource.IDispose"),
            i.interface("laya.runtime.IPlatform"),
            i.interface("laya.resource.IDestroy"),
            i.interface("laya.runtime.IConchNode"),
            i.interface("laya.filters.IFilterAction"),
            i.interface("laya.runtime.ICPlatformClass"),
            i.interface("laya.resource.ICreateResource"),
            i.interface("laya.runtime.IConchRenderObject"),
            i.interface("laya.runtime.IPlatformClass", "laya.runtime.IPlatform");
        var r = function () {
            function e() { }
            return n(e, "laya.utils.RunDriver"),
                e.FILTER_ACTIONS = [],
                e.pixelRatio = -1,
                e._charSizeTestDiv = null,
                e.now = function () {
                    return Date.now();
                },
                e.getWindow = function () {
                    return t;
                },
                e.getPixelRatio = function () {
                    if (e.pixelRatio < 0) {
                        var t = O.context,
                            i = t.backingStorePixelRatio || t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1; (e.pixelRatio = (O.window.devicePixelRatio || 1) / i) < 1 && (e.pixelRatio = 1);
                    }
                    return e.pixelRatio;
                },
                e.getIncludeStr = function (t) {
                    return null;
                },
                e.createShaderCondition = function (t) {
                    var e = "(function() {return " + t + ";})";
                    return i._runScript(e);
                },
                e.fontMap = [],
                e.measureText = function (t, i) {
                    var s = e.hanzi.test(t);
                    if (s && e.fontMap[i]) return e.fontMap[i];
                    var n = O.context;
                    n.font = i;
                    var a = n.measureText(t);
                    return s && (e.fontMap[i] = a),
                        a;
                },
                e.getWebGLContext = function (t) { },
                e.beginFlush = function () { },
                e.endFinish = function () { },
                e.addToAtlas = null,
                e.flashFlushImage = function (t) { },
                e.drawToCanvas = function (t, e, i, s, n, a) {
                    var r = yt.create("2D"),
                        o = new k(i, s, r);
                    return D.renders[e]._fun(t, o, n, a),
                        r;
                },
                e.createParticleTemplate2D = null,
                e.createGLTextur = null,
                e.createWebGLContext2D = null,
                e.changeWebGLSize = function (t, e) { },
                e.createRenderSprite = function (t, e) {
                    return new D(t, e);
                },
                e.createFilterAction = function (t) {
                    return new x();
                },
                e.createGraphics = function () {
                    return new p();
                },
                e.clear = function (t) {
                    P._context.ctx.clear();
                },
                e.cancelLoadByUrl = function (t) { },
                e.clearAtlas = function (t) { },
                e.isAtlas = function (t) {
                    return !1;
                },
                e.addTextureToAtlas = function (t) { },
                e.getTexturePixels = function (t, e, i, s, n) {
                    return null;
                },
                e.skinAniSprite = function () {
                    return null;
                },
                e.update3DLoop = function () { },
                s(e, ["hanzi",
                    function () {
                        return this.hanzi = new RegExp("^[一-龥]$");
                    }]),
                e;
        }(),
            o = (a(1, i, "alertGlobalError", null,
                function (t) {
                    var e = 0;
                    O.window.onerror = t ?
                        function (t, i, s, n, a) {
                            e++ < 5 && a && alert("出错啦，请把此信息截图给研发商\n" + t + "\n" + a.stack || a);
                        } : null;
                }), i.init = function (t, e, s) {
                    for (var n = [], a = 2, r = arguments.length; a < r; a++) n.push(arguments[a]);
                    if (!i._isinit) {
                        ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = i._arrayBufferSlice),
                            i._isinit = !0,
                            O.__init__(),
                            B.__init__(),
                            p.__init__(),
                            i.timer = new K(),
                            i.scaleTimer = new K(),
                            i.loader = new ot(),
                            Q.__init__();
                        for (var a = 0,
                            o = n.length; a < o; a++) n[a].enable && n[a].enable();
                        return d.__init__(),
                            u.__init__(),
                            N.__init__(),
                            F.beginCheck(),
                            i._currentStage = i.stage = new gt(),
                            i.stage.conchModel && i.stage.conchModel.setRootNode(),
                            i.getUrlPath(),
                            i.render = new P(0, 0),
                            i.stage.size(t, e),
                            D.__init__(),
                            g.__init__(),
                            v.instance.__init__(i.stage, P.canvas),
                            xt.__init__(),
                            L.autoStopMusic = !0,
                            E.__init__(),
                            P.canvas;
                    }
                },
                i.getUrlPath = function () {
                    var t = O.window.location,
                        e = t.pathname;
                    e = ":" == e.charAt(2) ? e.substring(1) : e,
                        R.rootPath = R.basePath = R.getPath("file:" == t.protocol ? e : t.protocol + "//" + t.host + t.pathname);
                },
                i._arrayBufferSlice = function (t, e) {
                    var i = new Uint8Array(this, t, e - t),
                        s = new Uint8Array(i.length);
                    return s.set(i),
                        s.buffer;
                },
                i._runScript = function (t) {
                    return O.window["e" + String.fromCharCode(118) + "al"](t);
                },
                i.stage = null, i.timer = null, i.scaleTimer = null, i.loader = null, i.version = "1.7.18beta", i.render = null, i._currentStage = null, i._isinit = !1, i.MiniAdpter = {
                    init: function () {
                        t.navigator && t.navigator.userAgent && t.navigator.userAgent.indexOf("MiniGame") > -1 && console.error("请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0");
                    }
                },
                s(i, ["conchMarket",
                    function () {
                        return this.conchMarket = t.conch ? conchMarket : null;
                    },
                    "PlatformClass",
                    function () {
                        return this.PlatformClass = t.PlatformClass;
                    }]),
                function () {
                    function t() { }
                    return n(t, "Config"),
                        t.WebGLTextCacheCount = 500,
                        t.atlasEnable = !1,
                        t.showCanvasMark = !1,
                        t.animationInterval = 50,
                        t.isAntialias = !1,
                        t.isAlpha = !1,
                        t.premultipliedAlpha = !0,
                        t.isStencil = !0,
                        t.preserveDrawingBuffer = !1,
                        t;
                }()),
            h = function () {
                function t() {
                    this._events = null;
                }
                var e;
                n(t, "laya.events.EventDispatcher");
                var i = t.prototype;
                return i.hasListener = function (t) {
                    return !!(this._events && this._events[t]);
                },
                    i.event = function (t, e) {
                        if (!this._events || !this._events[t]) return !1;
                        var i = this._events[t];
                        if (i.run) i.once && delete this._events[t],
                            null != e ? i.runWith(e) : i.run();
                        else {
                            for (var s = 0,
                                n = i.length; s < n; s++) {
                                var a = i[s];
                                a && (null != e ? a.runWith(e) : a.run()),
                                    a && !a.once || (i.splice(s, 1), s-- , n--);
                            }
                            0 === i.length && this._events && delete this._events[t];
                        }
                        return !0;
                    },
                    i.on = function (t, e, i, s) {
                        return this._createListener(t, e, i, s, !1);
                    },
                    i.once = function (t, e, i, s) {
                        return this._createListener(t, e, i, s, !0);
                    },
                    i._createListener = function (t, i, s, n, a, r) {
                        void 0 === r && (r = !0),
                            r && this.off(t, i, s, a);
                        var o = e.create(i || this, s, n, a);
                        this._events || (this._events = {});
                        var h = this._events;
                        return h[t] ? h[t].run ? h[t] = [h[t], o] : h[t].push(o) : h[t] = o,
                            this;
                    },
                    i.off = function (t, e, i, s) {
                        if (void 0 === s && (s = !1), !this._events || !this._events[t]) return this;
                        var n = this._events[t];
                        if (null != i) if (n.run) e && n.caller !== e || n.method !== i || s && !n.once || (delete this._events[t], n.recover());
                        else {
                            for (var a = 0,
                                r = 0,
                                o = n.length; r < o; r++) {
                                var h = n[r];
                                h ? !h || e && h.caller !== e || h.method !== i || s && !h.once || (a++ , n[r] = null, h.recover()) : a++;
                            }
                            a === o && delete this._events[t];
                        }
                        return this;
                    },
                    i.offAll = function (t) {
                        var e = this._events;
                        if (!e) return this;
                        if (t) this._recoverHandlers(e[t]),
                            delete e[t];
                        else {
                            for (var i in e) this._recoverHandlers(e[i]);
                            this._events = null;
                        }
                        return this;
                    },
                    i._recoverHandlers = function (t) {
                        if (t) if (t.run) t.recover();
                        else for (var e = t.length - 1; e > -1; e--) t[e] && (t[e].recover(), t[e] = null);
                    },
                    i.isMouseEvent = function (e) {
                        return t.MOUSE_EVENTS[e];
                    },
                    t.MOUSE_EVENTS = {
                        rightmousedown: !0,
                        rightmouseup: !0,
                        rightclick: !0,
                        mousedown: !0,
                        mouseup: !0,
                        mousemove: !0,
                        mouseover: !0,
                        mouseout: !0,
                        click: !0,
                        doubleclick: !0
                    },
                    t.__init$ = function () {
                        Object.defineProperty(laya.events.EventDispatcher.prototype, "_events", {
                            enumerable: !1,
                            writable: !0
                        }),
                            e = function (t) {
                                function e(t, i, s, n) {
                                    e.__super.call(this, t, i, s, n);
                                }
                                n(e, "", l);
                                return e.prototype.recover = function () {
                                    this._id > 0 && (this._id = 0, e._pool.push(this.clear()));
                                },
                                    e.create = function (t, i, s, n) {
                                        return void 0 === n && (n = !0),
                                            e._pool.length ? e._pool.pop().setTo(t, i, s, n) : new e(t, i, s, n);
                                    },
                                    e._pool = [],
                                    e;
                            }();
                    },
                    t;
            }(),
            l = function () {
                function t(t, e, i, s) {
                    this.once = !1,
                        this._id = 0,
                        void 0 === s && (s = !1),
                        this.setTo(t, e, i, s);
                }
                n(t, "laya.utils.Handler");
                var e = t.prototype;
                return e.setTo = function (e, i, s, n) {
                    return this._id = t._gid++ ,
                        this.caller = e,
                        this.method = i,
                        this.args = s,
                        this.once = n,
                        this;
                },
                    e.run = function () {
                        if (null == this.method) return null;
                        var t = this._id,
                            e = this.method.apply(this.caller, this.args);
                        return this._id === t && this.once && this.recover(),
                            e;
                    },
                    e.runWith = function (t) {
                        if (null == this.method) return null;
                        var e = this._id;
                        if (null == t) var i = this.method.apply(this.caller, this.args);
                        else i = this.args || t.unshift ? this.args ? this.method.apply(this.caller, this.args.concat(t)) : this.method.apply(this.caller, t) : this.method.call(this.caller, t);
                        return this._id === e && this.once && this.recover(),
                            i;
                    },
                    e.clear = function () {
                        return this.caller = null,
                            this.method = null,
                            this.args = null,
                            this;
                    },
                    e.recover = function () {
                        this._id > 0 && (this._id = 0, t._pool.push(this.clear()));
                    },
                    t.create = function (e, i, s, n) {
                        return void 0 === n && (n = !0),
                            t._pool.length ? t._pool.pop().setTo(e, i, s, n) : new t(e, i, s, n);
                    },
                    t._pool = [],
                    t._gid = 1,
                    t;
            }(),
            c = function () {
                function t() {
                    this._texture = null,
                        this._fontCharDic = {},
                        this._fontWidthMap = {},
                        this._complete = null,
                        this._path = null,
                        this._maxWidth = 0,
                        this._spaceWidth = 10,
                        this._padding = null,
                        this.fontSize = 12,
                        this.autoScaleSize = !1,
                        this.letterSpacing = 0;
                }
                n(t, "laya.display.BitmapFont");
                var e = t.prototype;
                return e.loadFont = function (t, e) {
                    this._path = t,
                        this._complete = e,
                        i.loader.load([{
                            url: this._path,
                            type: "xml"
                        },
                        {
                            url: this._path.replace(".fnt", ".png"),
                            type: "image"
                        }], l.create(this, this.onLoaded));
                },
                    e.onLoaded = function () {
                        this.parseFont(rt.getRes(this._path), rt.getRes(this._path.replace(".fnt", ".png"))),
                            this._complete && this._complete.runWith(this._texture ? this : null);
                    },
                    e.parseFont = function (t, e) {
                        if (null != t && null != e) {
                            this._texture = e;
                            var i = t.getElementsByTagName("info");
                            if (!i[0].getAttributeNode) return this.parseFont2(t, e);
                            this.fontSize = parseInt(i[0].getAttributeNode("size").nodeValue);
                            var s = i[0].getAttributeNode("padding").nodeValue.split(",");
                            this._padding = [parseInt(s[0]), parseInt(s[1]), parseInt(s[2]), parseInt(s[3])];
                            var n;
                            n = t.getElementsByTagName("char");
                            var a = 0;
                            for (a = 0; a < n.length; a++) {
                                var r = n[a],
                                    o = parseInt(r.getAttributeNode("id").nodeValue),
                                    h = parseInt(r.getAttributeNode("xoffset").nodeValue) / 1,
                                    l = parseInt(r.getAttributeNode("yoffset").nodeValue) / 1,
                                    c = parseInt(r.getAttributeNode("xadvance").nodeValue) / 1,
                                    u = new I();
                                u.x = parseInt(r.getAttributeNode("x").nodeValue),
                                    u.y = parseInt(r.getAttributeNode("y").nodeValue),
                                    u.width = parseInt(r.getAttributeNode("width").nodeValue),
                                    u.height = parseInt(r.getAttributeNode("height").nodeValue);
                                var d = lt.create(e, u.x, u.y, u.width, u.height, h, l);
                                this._maxWidth = Math.max(this._maxWidth, c + this.letterSpacing),
                                    this._fontCharDic[o] = d,
                                    this._fontWidthMap[o] = c;
                            }
                        }
                    },
                    e.parseFont2 = function (t, e) {
                        if (null != t && null != e) {
                            this._texture = e;
                            var i = t.getElementsByTagName("info");
                            this.fontSize = parseInt(i[0].attributes.size.nodeValue);
                            var s = i[0].attributes.padding.nodeValue.split(",");
                            this._padding = [parseInt(s[0]), parseInt(s[1]), parseInt(s[2]), parseInt(s[3])];
                            var n = t.getElementsByTagName("char"),
                                a = 0;
                            for (a = 0; a < n.length; a++) {
                                var r = n[a].attributes,
                                    o = parseInt(r.id.nodeValue),
                                    h = parseInt(r.xoffset.nodeValue) / 1,
                                    l = parseInt(r.yoffset.nodeValue) / 1,
                                    c = parseInt(r.xadvance.nodeValue) / 1,
                                    u = new I();
                                u.x = parseInt(r.x.nodeValue),
                                    u.y = parseInt(r.y.nodeValue),
                                    u.width = parseInt(r.width.nodeValue),
                                    u.height = parseInt(r.height.nodeValue);
                                var d = lt.create(e, u.x, u.y, u.width, u.height, h, l);
                                this._maxWidth = Math.max(this._maxWidth, c + this.letterSpacing),
                                    this._fontCharDic[o] = d,
                                    this._fontWidthMap[o] = c;
                            }
                        }
                    },
                    e.getCharTexture = function (t) {
                        return this._fontCharDic[t.charCodeAt(0)];
                    },
                    e.destroy = function () {
                        if (this._texture) {
                            for (var t in this._fontCharDic) {
                                var e = this._fontCharDic[t];
                                e && e.destroy();
                            }
                            this._texture.destroy(),
                                this._fontCharDic = null,
                                this._fontWidthMap = null,
                                this._texture = null;
                        }
                    },
                    e.setSpaceWidth = function (t) {
                        this._spaceWidth = t;
                    },
                    e.getCharWidth = function (t) {
                        var e = t.charCodeAt(0);
                        return this._fontWidthMap[e] ? this._fontWidthMap[e] + this.letterSpacing : " " == t ? this._spaceWidth + this.letterSpacing : 0;
                    },
                    e.getTextWidth = function (t) {
                        for (var e = 0,
                            i = 0,
                            s = t.length; i < s; i++) e += this.getCharWidth(t.charAt(i));
                        return e;
                    },
                    e.getMaxWidth = function () {
                        return this._maxWidth;
                    },
                    e.getMaxHeight = function () {
                        return this.fontSize;
                    },
                    e.drawText = function (t, e, i, s, n, a) {
                        var r, o = this.getTextWidth(t),
                            h = 0;
                        "center" === n && (h = (a - o) / 2),
                            "right" === n && (h = a - o);
                        for (var l = 0,
                            c = 0,
                            u = t.length; c < u; c++)(r = this.getCharTexture(t.charAt(c))) && (e.graphics.drawTexture(r, i + l + h, s), l += this.getCharWidth(t.charAt(c)));
                    },
                    t;
            }(),
            u = function () {
                function t() {
                    this.alpha = 1,
                        this.visible = !0,
                        this.scrollRect = null,
                        this.blendMode = null,
                        this._type = 0,
                        this._tf = t._TF_EMPTY;
                }
                n(t, "laya.display.css.Style");
                var e = t.prototype;
                return e.getTransform = function () {
                    return this._tf;
                },
                    e.setTransform = function (e) {
                        this._tf = "none" !== e && e ? e : t._TF_EMPTY;
                    },
                    e.setTranslateX = function (e) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.translateX = e;
                    },
                    e.setTranslateY = function (e) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.translateY = e;
                    },
                    e.setScaleX = function (e) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.scaleX = e;
                    },
                    e.setScale = function (e, i) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.scaleX = e,
                            this._tf.scaleY = i;
                    },
                    e.setScaleY = function (e) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.scaleY = e;
                    },
                    e.setRotate = function (e) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.rotate = e;
                    },
                    e.setSkewX = function (e) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.skewX = e;
                    },
                    e.setSkewY = function (e) {
                        this._tf === t._TF_EMPTY && (this._tf = new _()),
                            this._tf.skewY = e;
                    },
                    e.destroy = function () {
                        this.scrollRect = null;
                    },
                    e.render = function (t, e, i, s) { },
                    e.getCSSStyle = function () {
                        return tt.EMPTY;
                    },
                    e._enableLayout = function () {
                        return !1;
                    },
                    a(0, e, "scaleX",
                        function () {
                            return this._tf.scaleX;
                        },
                        function (t) {
                            this.setScaleX(t);
                        }),
                    a(0, e, "transform",
                        function () {
                            return this.getTransform();
                        },
                        function (t) {
                            this.setTransform(t);
                        }),
                    a(0, e, "translateX",
                        function () {
                            return this._tf.translateX;
                        },
                        function (t) {
                            this.setTranslateX(t);
                        }),
                    a(0, e, "translateY",
                        function () {
                            return this._tf.translateY;
                        },
                        function (t) {
                            this.setTranslateY(t);
                        }),
                    a(0, e, "scaleY",
                        function () {
                            return this._tf.scaleY;
                        },
                        function (t) {
                            this.setScaleY(t);
                        }),
                    a(0, e, "block",
                        function () {
                            return 0 != (1 & this._type);
                        }),
                    a(0, e, "skewY",
                        function () {
                            return this._tf.skewY;
                        },
                        function (t) {
                            this.setSkewY(t);
                        }),
                    a(0, e, "rotate",
                        function () {
                            return this._tf.rotate;
                        },
                        function (t) {
                            this.setRotate(t);
                        }),
                    a(0, e, "skewX",
                        function () {
                            return this._tf.skewX;
                        },
                        function (t) {
                            this.setSkewX(t);
                        }),
                    a(0, e, "paddingLeft",
                        function () {
                            return 0;
                        }),
                    a(0, e, "paddingTop",
                        function () {
                            return 0;
                        }),
                    a(0, e, "absolute",
                        function () {
                            return !0;
                        }),
                    t.__init__ = function () {
                        t._TF_EMPTY = new _(),
                            t.EMPTY = new t();
                    },
                    t.EMPTY = null,
                    t._TF_EMPTY = null,
                    t;
            }(),
            d = function () {
                function t(e) {
                    this._type = 0,
                        this._weight = 0,
                        this._decoration = null,
                        this._text = null,
                        this.indent = 0,
                        this._color = W.create(t.defaultColor),
                        this.family = t.defaultFamily,
                        this.stroke = t._STROKE,
                        this.size = t.defaultSize,
                        e && e !== t.EMPTY && e.copyTo(this);
                }
                n(t, "laya.display.css.Font");
                var e = t.prototype;
                return e.set = function (t) {
                    this._text = null;
                    for (var e = t.split(" "), i = 0, s = e.length; i < s; i++) {
                        var n = e[i];
                        switch (n) {
                            case "italic":
                                this.italic = !0;
                                continue;

                            case "bold":
                                this.bold = !0;
                                continue;
                        }
                        n.indexOf("px") > 0 && (this.size = parseInt(n), this.family = e[i + 1], i++);
                    }
                },
                    e.toString = function () {
                        return this._text = "",
                            this.italic && (this._text += "italic "),
                            this.bold && (this._text += "bold "),
                            this._text += this.size + "px " + this.family;
                    },
                    e.copyTo = function (e) {
                        e._type = this._type,
                            e._text = this._text,
                            e._weight = this._weight,
                            e._color = this._color,
                            e.family = this.family,
                            e.stroke = this.stroke != t._STROKE ? this.stroke.slice() : t._STROKE,
                            e.indent = this.indent,
                            e.size = this.size;
                    },
                    a(0, e, "password",
                        function () {
                            return 0 != (1024 & this._type);
                        },
                        function (t) {
                            t ? this._type |= 1024 : this._type &= -1025;
                        }),
                    a(0, e, "color",
                        function () {
                            return this._color.strColor;
                        },
                        function (t) {
                            this._color = W.create(t);
                        }),
                    a(0, e, "italic",
                        function () {
                            return 0 != (512 & this._type);
                        },
                        function (t) {
                            t ? this._type |= 512 : this._type &= -513;
                        }),
                    a(0, e, "bold",
                        function () {
                            return 0 != (2048 & this._type);
                        },
                        function (t) {
                            t ? this._type |= 2048 : this._type &= -2049;
                        }),
                    a(0, e, "weight",
                        function () {
                            return "" + this._weight;
                        },
                        function (t) {
                            var e = 0;
                            switch (t) {
                                case "normal":
                                    break;

                                case "bold":
                                    this.bold = !0,
                                        e = 700;
                                    break;

                                case "bolder":
                                    e = 800;
                                    break;

                                case "lighter":
                                    e = 100;
                                    break;

                                default:
                                    e = parseInt(t);
                            }
                            this._weight = e,
                                this._text = null;
                        }),
                    a(0, e, "decoration",
                        function () {
                            return this._decoration ? this._decoration.value : "none";
                        },
                        function (t) {
                            var e = t.split(" ");
                            switch (this._decoration || (this._decoration = {}), e[0]) {
                                case "_":
                                    this._decoration.type = "underline";
                                    break;

                                case "-":
                                    this._decoration.type = "line-through";
                                    break;

                                case "overline":
                                    this._decoration.type = "overline";
                                    break;

                                default:
                                    this._decoration.type = e[0];
                            }
                            e[1] && (this._decoration.color = W.create(e)),
                                this._decoration.value = t;
                        }),
                    t.__init__ = function () {
                        t.EMPTY = new t(null);
                    },
                    t.EMPTY = null,
                    t.defaultColor = "#000000",
                    t.defaultSize = 12,
                    t.defaultFamily = "Arial",
                    t.defaultFont = "12px Arial",
                    t._STROKE = [0, "#000000"],
                    t._ITALIC = 512,
                    t._PASSWORD = 1024,
                    t._BOLD = 2048,
                    t;
            }(),
            _ = function () {
                function t() {
                    this.translateX = 0,
                        this.translateY = 0,
                        this.scaleX = 1,
                        this.scaleY = 1,
                        this.rotate = 0,
                        this.skewX = 0,
                        this.skewY = 0;
                }
                return n(t, "laya.display.css.TransformInfo"),
                    t;
            }(),
            p = function () {
                function e() {
                    if (this._one = null, this._cmds = null, this._render = this._renderEmpty, P.isConchNode) {
                        this._nativeObj = new t._conchGraphics(),
                            this.id = this._nativeObj.conchID;
                    }
                }
                n(e, "laya.display.Graphics");
                var s = e.prototype;
                return s.destroy = function () {
                    this.clear(),
                        this._graphicBounds && this._graphicBounds.destroy(),
                        this._graphicBounds = null,
                        this._vectorgraphArray = null,
                        this._sp && (this._sp._renderType = 0),
                        this._sp = null;
                },
                    s.clear = function (t) {
                        void 0 === t && (t = !1);
                        var i = 0,
                            s = 0;
                        if (t) {
                            var n = this._one;
                            if (this._cmds) {
                                for (s = this._cmds.length, i = 0; i < s; i++) !(n = this._cmds[i]) || n.callee !== P._context._drawTexture && n.callee !== P._context._drawTextureWithTransform || (n[0] = null, e._cache.push(n));
                                this._cmds.length = 0;
                            } else n && (!n || n.callee !== P._context._drawTexture && n.callee !== P._context._drawTextureWithTransform || (n[0] = null, e._cache.push(n)));
                        } else this._cmds = null;
                        if (this._one = null, this._render = this._renderEmpty, this._sp && (this._sp._renderType &= -514), this._repaint(), this._vectorgraphArray) {
                            for (i = 0, s = this._vectorgraphArray.length; i < s; i++) j.getInstance().deleteShape(this._vectorgraphArray[i]);
                            this._vectorgraphArray.length = 0;
                        }
                    },
                    s._clearBoundsCache = function () {
                        this._graphicBounds && this._graphicBounds.reset();
                    },
                    s._initGraphicBounds = function () {
                        this._graphicBounds || (this._graphicBounds = new f(), this._graphicBounds._graphics = this);
                    },
                    s._repaint = function () {
                        this._clearBoundsCache(),
                            this._sp && this._sp.repaint();
                    },
                    s._isOnlyOne = function () {
                        return !this._cmds || 0 === this._cmds.length;
                    },
                    s.getBounds = function (t) {
                        return void 0 === t && (t = !1),
                            this._initGraphicBounds(),
                            this._graphicBounds.getBounds(t);
                    },
                    s.getBoundPoints = function (t) {
                        return void 0 === t && (t = !1),
                            this._initGraphicBounds(),
                            this._graphicBounds.getBoundPoints(t);
                    },
                    s._addCmd = function (t) {
                        this._cmds = this._cmds || [],
                            t.callee = t.shift(),
                            this._cmds.push(t);
                    },
                    s.setFilters = function (t) {
                        this._saveToCmd(P._context._setFilters, t);
                    },
                    s.drawTexture = function (t, i, s, n, a, r, o) {
                        if (void 0 === i && (i = 0), void 0 === s && (s = 0), void 0 === n && (n = 0), void 0 === a && (a = 0), void 0 === o && (o = 1), !t || o < .01) return null;
                        n || (n = t.sourceWidth),
                            a || (a = t.sourceHeight),
                            o = o < 0 ? 0 : o > 1 ? 1 : o;
                        var h = !P.isWebGL && (O.onFirefox || O.onEdge || O.onIE || O.onSafari) ? .5 : 0,
                            l = n / t.sourceWidth,
                            c = a / t.sourceHeight;
                        if (n = t.width * l, a = t.height * c, t.loaded && (n <= 0 || a <= 0)) return null;
                        i += t.offsetX * l,
                            s += t.offsetY * c,
                            this._sp && (this._sp._renderType |= 512);
                        var u;
                        return i -= h,
                            s -= h,
                            n += 2 * h,
                            a += 2 * h,
                            e._cache.length ? ((u = e._cache.pop())[0] = t, u[1] = i, u[2] = s, u[3] = n, u[4] = a, u[5] = r, u[6] = o) : u = [t, i, s, n, a, r, o],
                            u.callee = r || 1 != o ? P._context._drawTextureWithTransform : P._context._drawTexture,
                            null != this._one || r || 1 != o ? this._saveToCmd(u.callee, u) : (this._one = u, this._render = this._renderOneImg),
                            t.loaded || t.once("loaded", this, this._textureLoaded, [t, u]),
                            this._repaint(),
                            u;
                    },
                    s.cleanByTexture = function (t, e, i, s, n) {
                        if (void 0 === s && (s = 0), void 0 === n && (n = 0), !t) return this.clear();
                        if (this._one && this._render === this._renderOneImg) {
                            s || (s = t.sourceWidth),
                                n || (n = t.sourceHeight);
                            var a = s / t.sourceWidth,
                                r = n / t.sourceHeight;
                            s = t.width * a,
                                n = t.height * r,
                                e += t.offsetX * a,
                                i += t.offsetY * r,
                                this._one[0] = t,
                                this._one[1] = e,
                                this._one[2] = i,
                                this._one[3] = s,
                                this._one[4] = n,
                                this._repaint();
                        } else this.clear(),
                            t && this.drawTexture(t, e, i, s, n);
                    },
                    s.drawTextures = function (t, e) {
                        t && this._saveToCmd(P._context._drawTextures, [t, e]);
                    },
                    s.fillTexture = function (t, e, i, s, n, a, r) {
                        if (void 0 === s && (s = 0), void 0 === n && (n = 0), void 0 === a && (a = "repeat"), t) {
                            var o = [t, e, i, s, n, a, r || T.EMPTY, {}];
                            t.loaded || t.once("loaded", this, this._textureLoaded, [t, o]),
                                this._saveToCmd(P._context._fillTexture, o);
                        }
                    },
                    s._textureLoaded = function (t, e) {
                        e[3] = e[3] || t.width,
                            e[4] = e[4] || t.height,
                            this._repaint();
                    },
                    s.fillCircle = function (t, e, i, s, n, a, r) {
                        i.bitmap.enableMerageInAtlas = !1;
                        var o = new Float32Array(2 * (r + 1)),
                            h = new Float32Array(2 * (r + 1)),
                            l = new Uint16Array(3 * r),
                            c = 2 * Math.PI / r,
                            u = 0;
                        o[0] = s,
                            o[1] = n,
                            h[0] = s / i.width,
                            h[1] = n / i.height;
                        for (var d = 2,
                            _ = 0; _ < r; _++) {
                            var p = a * Math.cos(u) + s,
                                f = a * Math.sin(u) + n;
                            o[d] = p,
                                o[d + 1] = f,
                                h[d] = p / i.width,
                                h[d + 1] = f / i.height,
                                u += c,
                                d += 2;
                        }
                        for (d = 0, _ = 0; _ < r; _++) l[d++] = 0,
                            l[d++] = _ + 1,
                            l[d++] = _ + 2 >= r + 1 ? 1 : _ + 2;
                        this.drawTriangles(i, t, e, o, h, l);
                    },
                    s.drawTriangles = function (t, e, i, s, n, a, r, o, h, l) {
                        void 0 === o && (o = 1),
                            this._saveToCmd(P._context.drawTriangles, [t, e, i, s, n, a, r, o, h, l]);
                    },
                    s._saveToCmd = function (t, e) {
                        return this._sp && (this._sp._renderType |= 512),
                            null == this._one ? (this._one = e, this._render = this._renderOne) : (this._sp && (this._sp._renderType &= -2), this._render = this._renderAll, 0 === (this._cmds || (this._cmds = [])).length && this._cmds.push(this._one), this._cmds.push(e)),
                            e.callee = t,
                            this._repaint(),
                            e;
                    },
                    s.clipRect = function (t, e, i, s) {
                        this._saveToCmd(P._context._clipRect, [t, e, i, s]);
                    },
                    s.fillText = function (t, e, i, s, n, a, r) {
                        void 0 === r && (r = 0),
                            this._saveToCmd(P._context._fillText, [t, e, i, s || d.defaultFont, n, a]);
                    },
                    s.fillBorderText = function (t, e, i, s, n, a, r, o) {
                        this._saveToCmd(P._context._fillBorderText, [t, e, i, s || d.defaultFont, n, a, r, o]);
                    },
                    s.strokeText = function (t, e, i, s, n, a, r) {
                        this._saveToCmd(P._context._strokeText, [t, e, i, s || d.defaultFont, n, a, r]);
                    },
                    s.alpha = function (t) {
                        t = t < 0 ? 0 : t > 1 ? 1 : t,
                            this._saveToCmd(P._context._alpha, [t]);
                    },
                    s.setAlpha = function (t) {
                        t = t < 0 ? 0 : t > 1 ? 1 : t,
                            this._saveToCmd(P._context._setAlpha, [t]);
                    },
                    s.transform = function (t, e, i) {
                        void 0 === e && (e = 0),
                            void 0 === i && (i = 0),
                            this._saveToCmd(P._context._transform, [t, e, i]);
                    },
                    s.rotate = function (t, e, i) {
                        void 0 === e && (e = 0),
                            void 0 === i && (i = 0),
                            this._saveToCmd(P._context._rotate, [t, e, i]);
                    },
                    s.scale = function (t, e, i, s) {
                        void 0 === i && (i = 0),
                            void 0 === s && (s = 0),
                            this._saveToCmd(P._context._scale, [t, e, i, s]);
                    },
                    s.translate = function (t, e) {
                        this._saveToCmd(P._context._translate, [t, e]);
                    },
                    s.save = function () {
                        this._saveToCmd(P._context._save, []);
                    },
                    s.restore = function () {
                        this._saveToCmd(P._context._restore, []);
                    },
                    s.replaceText = function (t) {
                        this._repaint();
                        var e = this._cmds;
                        if (e) {
                            for (var i = e.length - 1; i > -1; i--) if (this._isTextCmd(e[i].callee)) return e[i][0].toUpperCase ? e[i][0] = t : e[i][0].setText(t),
                                !0;
                        } else if (this._one && this._isTextCmd(this._one.callee)) return this._one[0].toUpperCase ? this._one[0] = t : this._one[0].setText(t),
                            !0;
                        return !1;
                    },
                    s._isTextCmd = function (t) {
                        return t === P._context._fillText || t === P._context._fillBorderText || t === P._context._strokeText;
                    },
                    s.replaceTextColor = function (t) {
                        this._repaint();
                        var e = this._cmds;
                        if (e) for (var i = e.length - 1; i > -1; i--) this._isTextCmd(e[i].callee) && (e[i][4] = t, e[i][0].toUpperCase || (e[i][0].changed = !0));
                        else this._one && this._isTextCmd(this._one.callee) && (this._one[4] = t, this._one[0].toUpperCase || (this._one[0].changed = !0));
                    },
                    s.loadImage = function (t, e, s, n, a, r) {
                        function o(t) {
                            t && (h.drawTexture(t, e, s, n, a), null != r && r.call(h._sp, t));
                        }
                        var h = this;
                        void 0 === e && (e = 0),
                            void 0 === s && (s = 0),
                            void 0 === n && (n = 0),
                            void 0 === a && (a = 0);
                        var c = rt.getRes(t);
                        c ? o(c) : i.loader.load(t, l.create(null, o), null, "image");
                    },
                    s._renderEmpty = function (t, e, i, s) { },
                    s._renderAll = function (t, e, i, s) {
                        for (var n, a = this._cmds,
                            r = 0,
                            o = a.length; r < o; r++)(n = a[r]).callee.call(e, i, s, n);
                    },
                    s._renderOne = function (t, e, i, s) {
                        this._one.callee.call(e, i, s, this._one);
                    },
                    s._renderOneImg = function (t, e, i, s) {
                        this._one.callee.call(e, i, s, this._one),
                            2305 !== t._renderType && (t._renderType |= 1);
                    },
                    s.drawLine = function (t, e, i, s, n, a) {
                        void 0 === a && (a = 1);
                        var r = 0;
                        P.isWebGL && (r = j.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(r));
                        var o = a % 2 == 0 ? 0 : .5,
                            h = [t + o, e + o, i + o, s + o, n, a, r];
                        this._saveToCmd(P._context._drawLine, h);
                    },
                    s.drawLines = function (t, e, i, s, n) {
                        void 0 === n && (n = 1);
                        var a = 0;
                        if (i && !(i.length < 4)) {
                            P.isWebGL && (a = j.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(a));
                            var r = n % 2 == 0 ? 0 : .5,
                                o = [t + r, e + r, i, s, n, a];
                            this._saveToCmd(P._context._drawLines, o);
                        }
                    },
                    s.drawCurves = function (t, e, i, s, n) {
                        void 0 === n && (n = 1);
                        var a = [t, e, i, s, n];
                        this._saveToCmd(P._context._drawCurves, a);
                    },
                    s.drawRect = function (t, e, i, s, n, a, r) {
                        void 0 === r && (r = 1);
                        var o = a ? r / 2 : 0,
                            h = a ? r : 0,
                            l = [t + o, e + o, i - h, s - h, n, a, r];
                        this._saveToCmd(P._context._drawRect, l);
                    },
                    s.drawCircle = function (t, e, i, s, n, a) {
                        void 0 === a && (a = 1);
                        var r = n ? a / 2 : 0,
                            o = 0;
                        P.isWebGL && (o = j.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(o));
                        var h = [t, e, i - r, s, n, a, o];
                        this._saveToCmd(P._context._drawCircle, h);
                    },
                    s.drawPie = function (t, e, i, s, n, a, r, o) {
                        void 0 === o && (o = 1);
                        var h = r ? o / 2 : 0,
                            l = r ? o : 0,
                            c = 0;
                        P.isWebGL && (c = j.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(c));
                        var u = [t + h, e + h, i - l, s, n, a, r, o, c];
                        u[3] = $.toRadian(s),
                            u[4] = $.toRadian(n),
                            this._saveToCmd(P._context._drawPie, u);
                    },
                    s.drawPoly = function (t, e, i, s, n, a) {
                        void 0 === a && (a = 1);
                        var r = 0,
                            o = !1;
                        P.isWebGL && (r = j.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(r), o = !(i.length > 6));
                        var h = n ? a % 2 == 0 ? 0 : .5 : 0,
                            l = [t + h, e + h, i, s, n, a, r, o];
                        this._saveToCmd(P._context._drawPoly, l);
                    },
                    s.drawPath = function (t, e, i, s, n) {
                        var a = [t, e, i, s, n];
                        this._saveToCmd(P._context._drawPath, a);
                    },
                    a(0, s, "cmds",
                        function () {
                            return this._cmds;
                        },
                        function (t) {
                            this._sp && (this._sp._renderType |= 512),
                                this._cmds = t,
                                this._render = this._renderAll,
                                this._repaint();
                        }),
                    e.__init__ = function () {
                        if (P.isConchNode) {
                            for (var t = laya.display.Graphics.prototype,
                                e = O.window.ConchGraphics.prototype,
                                i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"], s = 0, n = i.length; s <= n; s++) {
                                var a = i[s];
                                t[a] = e[a];
                            }
                            t._saveToCmd = null,
                                e.drawImageS && (t.drawTextures = function (t, e) {
                                    if (t && t.loaded && t.bitmap && t.source) {
                                        var i = t.uv,
                                            s = t.bitmap.width,
                                            n = t.bitmap.height;
                                        this.drawImageS(t.bitmap.source, i[0] * s, i[1] * n, (i[2] - i[0]) * s, (i[5] - i[3]) * n, t.offsetX, t.offsetY, t.width, t.height, e);
                                    }
                                }),
                                t.drawTexture = function (t, e, i, s, n, a, r) {
                                    if (void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === s && (s = 0), void 0 === n && (n = 0), void 0 === r && (r = 1), t) if (t.loaded) {
                                        if (t.loaded && t.bitmap && t.source && (s || (s = t.sourceWidth), n || (n = t.sourceHeight), r = r < 0 ? 0 : r > 1 ? 1 : r, s = s - t.sourceWidth + t.width, n = n - t.sourceHeight + t.height, !(s <= 0 || n <= 0))) {
                                            e += t.offsetX,
                                                i += t.offsetY;
                                            var o = t.uv,
                                                h = t.bitmap.width,
                                                l = t.bitmap.height;
                                            this.drawImageM(t.bitmap.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e, i, s, n, a, r),
                                                this._repaint();
                                        }
                                    } else t.once("loaded", this,
                                        function () {
                                            this.drawTexture(t, e, i, s, n, a);
                                        });
                                },
                                t.fillTexture = function (t, e, i, s, n, a, r) {
                                    if (void 0 === s && (s = 0), void 0 === n && (n = 0), void 0 === a && (a = "repeat"), t && t.loaded) {
                                        var o, h = P._context.ctx,
                                            l = t.bitmap.width,
                                            c = t.bitmap.height,
                                            u = t.uv;
                                        o = t.uv != lt.DEF_UV ? h.createPattern(t.bitmap.source, a, u[0] * l, u[1] * c, (u[2] - u[0]) * l, (u[5] - u[3]) * c) : h.createPattern(t.bitmap.source, a);
                                        var d = 0,
                                            _ = 0;
                                        r && (e += r.x % t.width, i += r.y % t.height, d -= r.x % t.width, _ -= r.y % t.height),
                                            this._fillImage(o, e, i, d, _, s, n);
                                    }
                                };
                        }
                    },
                    e._cache = [],
                    e;
            }(),
            f = function () {
                function t() {
                    this._cacheBoundsType = !1;
                }
                n(t, "laya.display.GraphicsBounds");
                var e = t.prototype;
                return e.destroy = function () {
                    this._graphics = null,
                        this._temp = null,
                        this._rstBoundPoints = null,
                        this._bounds = null;
                },
                    e.reset = function () {
                        this._temp && (this._temp.length = 0);
                    },
                    e.getBounds = function (t) {
                        return void 0 === t && (t = !1),
                            (!this._bounds || !this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._bounds = I._getWrapRec(this.getBoundPoints(t), this._bounds)),
                            this._cacheBoundsType = t,
                            this._bounds;
                    },
                    e.getBoundPoints = function (t) {
                        return void 0 === t && (t = !1),
                            (!this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._temp = this._getCmdPoints(t)),
                            this._cacheBoundsType = t,
                            this._rstBoundPoints = $.copyArray(this._rstBoundPoints, this._temp);
                    },
                    e._getCmdPoints = function (e) {
                        void 0 === e && (e = !1);
                        var i, s = P._context,
                            n = this._graphics.cmds;
                        if (i = this._temp || (this._temp = []), i.length = 0, n || null == this._graphics._one || (t._tempCmds.length = 0, t._tempCmds.push(this._graphics._one), n = t._tempCmds), !n) return i;
                        var a; (a = t._tempMatrixArrays).length = 0;
                        var r = t._initMatrix;
                        r.identity();
                        for (var o, h, l = t._tempMatrix,
                            c = NaN,
                            u = NaN,
                            d = NaN,
                            _ = NaN,
                            p = NaN,
                            f = NaN,
                            m = 0,
                            g = n.length; m < g; m++) if ((o = n[m]).callee) switch (o.callee) {
                                case s._save:
                                case 7:
                                    a.push(r),
                                        r = r.clone();
                                    break;

                                case s._restore:
                                case 8:
                                    r = a.pop();
                                    break;

                                case s._scale:
                                case 5:
                                    l.identity(),
                                        l.translate(- o[2], -o[3]),
                                        l.scale(o[0], o[1]),
                                        l.translate(o[2], o[3]),
                                        this._switchMatrix(r, l);
                                    break;

                                case s._rotate:
                                case 3:
                                    l.identity(),
                                        l.translate(- o[1], -o[2]),
                                        l.rotate(o[0]),
                                        l.translate(o[1], o[2]),
                                        this._switchMatrix(r, l);
                                    break;

                                case s._translate:
                                case 6:
                                    l.identity(),
                                        l.translate(o[0], o[1]),
                                        this._switchMatrix(r, l);
                                    break;

                                case s._transform:
                                case 4:
                                    l.identity(),
                                        l.translate(- o[1], -o[2]),
                                        l.concat(o[0]),
                                        l.translate(o[1], o[2]),
                                        this._switchMatrix(r, l);
                                    break;

                                case 16:
                                case 24:
                                    t._addPointArrToRst(i, I._getBoundPointS(o[0], o[1], o[2], o[3]), r);
                                    break;

                                case 17:
                                    r.copyTo(l),
                                        l.concat(o[4]),
                                        t._addPointArrToRst(i, I._getBoundPointS(o[0], o[1], o[2], o[3]), l);
                                    break;

                                case s._drawTexture:
                                    h = o[0],
                                        e ? o[3] && o[4] ? t._addPointArrToRst(i, I._getBoundPointS(o[1], o[2], o[3], o[4]), r) : (h = o[0], t._addPointArrToRst(i, I._getBoundPointS(o[1], o[2], h.width, h.height), r)) : (c = (o[3] || h.sourceWidth) / h.width, u = (o[4] || h.sourceHeight) / h.height, d = c * h.sourceWidth, _ = u * h.sourceHeight, p = h.offsetX > 0 ? h.offsetX : 0, f = h.offsetY > 0 ? h.offsetY : 0, p *= c, f *= u, t._addPointArrToRst(i, I._getBoundPointS(o[1] - p, o[2] - f, d, _), r));
                                    break;

                                case s._fillTexture:
                                    o[3] && o[4] ? t._addPointArrToRst(i, I._getBoundPointS(o[1], o[2], o[3], o[4]), r) : (h = o[0], t._addPointArrToRst(i, I._getBoundPointS(o[1], o[2], h.width, h.height), r));
                                    break;

                                case s._drawTextureWithTransform:
                                    var v;
                                    o[5] ? (r.copyTo(l), l.concat(o[5]), v = l) : v = r,
                                        e ? o[3] && o[4] ? t._addPointArrToRst(i, I._getBoundPointS(o[1], o[2], o[3], o[4]), v) : (h = o[0], t._addPointArrToRst(i, I._getBoundPointS(o[1], o[2], h.width, h.height), v)) : (h = o[0], c = (o[3] || h.sourceWidth) / h.width, u = (o[4] || h.sourceHeight) / h.height, d = c * h.sourceWidth, _ = u * h.sourceHeight, p = h.offsetX > 0 ? h.offsetX : 0, f = h.offsetY > 0 ? h.offsetY : 0, p *= c, f *= u, t._addPointArrToRst(i, I._getBoundPointS(o[1] - p, o[2] - f, d, _), v));
                                    break;

                                case s._drawRect:
                                case 13:
                                    t._addPointArrToRst(i, I._getBoundPointS(o[0], o[1], o[2], o[3]), r);
                                    break;

                                case s._drawCircle:
                                case s._fillCircle:
                                case 14:
                                    t._addPointArrToRst(i, I._getBoundPointS(o[0] - o[2], o[1] - o[2], o[2] + o[2], o[2] + o[2]), r);
                                    break;

                                case s._drawLine:
                                case 20:
                                    t._tempPoints.length = 0;
                                    var y = NaN;
                                    y = .5 * o[5],
                                        o[0] == o[2] ? t._tempPoints.push(o[0] + y, o[1], o[2] + y, o[3], o[0] - y, o[1], o[2] - y, o[3]) : o[1] == o[3] ? t._tempPoints.push(o[0], o[1] + y, o[2], o[3] + y, o[0], o[1] - y, o[2], o[3] - y) : t._tempPoints.push(o[0], o[1], o[2], o[3]),
                                        t._addPointArrToRst(i, t._tempPoints, r);
                                    break;

                                case s._drawCurves:
                                case 22:
                                    t._addPointArrToRst(i, w.I.getBezierPoints(o[2]), r, o[0], o[1]);
                                    break;

                                case s._drawPoly:
                                case s._drawLines:
                                case 18:
                                    t._addPointArrToRst(i, o[2], r, o[0], o[1]);
                                    break;

                                case s._drawPath:
                                case 19:
                                    t._addPointArrToRst(i, this._getPathPoints(o[2]), r, o[0], o[1]);
                                    break;

                                case s._drawPie:
                                case 15:
                                    t._addPointArrToRst(i, this._getPiePoints(o[0], o[1], o[2], o[3], o[4]), r);
                            }
                        return i.length > 200 ? i = $.copyArray(i, I._getWrapRec(i)._getBoundPoints()) : i.length > 8 && (i = M.scanPList(i)),
                            i;
                    },
                    e._switchMatrix = function (t, e) {
                        e.concat(t),
                            e.copyTo(t);
                    },
                    e._getPiePoints = function (e, i, s, n, a) {
                        var r = t._tempPoints;
                        t._tempPoints.length = 0,
                            r.push(e, i);
                        var o = (a - n) % (2 * Math.PI) / 10,
                            h = NaN,
                            l = n;
                        for (h = 0; h <= 10; h++) r.push(e + s * Math.cos(l), i + s * Math.sin(l)),
                            l += o;
                        return r;
                    },
                    e._getPathPoints = function (e) {
                        var i = 0,
                            s = 0,
                            n = t._tempPoints;
                        n.length = 0,
                            s = e.length;
                        var a;
                        for (i = 0; i < s; i++)(a = e[i]).length > 1 && (n.push(a[1], a[2]), a.length > 3 && n.push(a[3], a[4]));
                        return n;
                    },
                    t._addPointArrToRst = function (e, i, s, n, a) {
                        void 0 === n && (n = 0),
                            void 0 === a && (a = 0);
                        var r = 0,
                            o = 0;
                        for (o = i.length, r = 0; r < o; r += 2) t._addPointToRst(e, i[r] + n, i[r + 1] + a, s);
                    },
                    t._addPointToRst = function (t, e, i, s) {
                        var n = T.TEMP;
                        n.setTo(e || 0, i || 0),
                            s.transformPoint(n),
                            t.push(n.x, n.y);
                    },
                    t._tempPoints = [],
                    t._tempMatrixArrays = [],
                    t._tempCmds = [],
                    s(t, ["_tempMatrix",
                        function () {
                            return this._tempMatrix = new C();
                        },
                        "_initMatrix",
                        function () {
                            return this._initMatrix = new C();
                        }]),
                    t;
            }(),
            m = function () {
                function t() { }
                n(t, "laya.events.Event");
                var e = t.prototype;
                return e.setTo = function (t, e, i) {
                    return this.type = t,
                        this.currentTarget = e,
                        this.target = i,
                        this;
                },
                    e.stopPropagation = function () {
                        this._stoped = !0;
                    },
                    a(0, e, "stageY",
                        function () {
                            return i.stage.mouseY;
                        }),
                    a(0, e, "charCode",
                        function () {
                            return this.nativeEvent.charCode;
                        }),
                    a(0, e, "touches",
                        function () {
                            var t = this.nativeEvent.touches;
                            if (t) for (var e = i.stage,
                                s = 0,
                                n = t.length; s < n; s++) {
                                var a = t[s],
                                    r = T.TEMP;
                                r.setTo(a.clientX, a.clientY),
                                    e._canvasTransform.invertTransformPoint(r),
                                    e.transform.invertTransformPoint(r),
                                    a.stageX = r.x,
                                    a.stageY = r.y;
                            }
                            return t;
                        }),
                    a(0, e, "keyLocation",
                        function () {
                            return this.nativeEvent.keyLocation;
                        }),
                    a(0, e, "ctrlKey",
                        function () {
                            return this.nativeEvent.ctrlKey;
                        }),
                    a(0, e, "altKey",
                        function () {
                            return this.nativeEvent.altKey;
                        }),
                    a(0, e, "shiftKey",
                        function () {
                            return this.nativeEvent.shiftKey;
                        }),
                    a(0, e, "stageX",
                        function () {
                            return i.stage.mouseX;
                        }),
                    t.EMPTY = new t(),
                    t.MOUSE_DOWN = "mousedown",
                    t.MOUSE_UP = "mouseup",
                    t.CLICK = "click",
                    t.RIGHT_MOUSE_DOWN = "rightmousedown",
                    t.RIGHT_MOUSE_UP = "rightmouseup",
                    t.RIGHT_CLICK = "rightclick",
                    t.MOUSE_MOVE = "mousemove",
                    t.MOUSE_OVER = "mouseover",
                    t.MOUSE_OUT = "mouseout",
                    t.MOUSE_WHEEL = "mousewheel",
                    t.ROLL_OVER = "mouseover",
                    t.ROLL_OUT = "mouseout",
                    t.DOUBLE_CLICK = "doubleclick",
                    t.CHANGE = "change",
                    t.CHANGED = "changed",
                    t.RESIZE = "resize",
                    t.ADDED = "added",
                    t.REMOVED = "removed",
                    t.DISPLAY = "display",
                    t.UNDISPLAY = "undisplay",
                    t.ERROR = "error",
                    t.COMPLETE = "complete",
                    t.LOADED = "loaded",
                    t.PROGRESS = "progress",
                    t.INPUT = "input",
                    t.RENDER = "render",
                    t.OPEN = "open",
                    t.MESSAGE = "message",
                    t.CLOSE = "close",
                    t.KEY_DOWN = "keydown",
                    t.KEY_PRESS = "keypress",
                    t.KEY_UP = "keyup",
                    t.FRAME = "enterframe",
                    t.DRAG_START = "dragstart",
                    t.DRAG_MOVE = "dragmove",
                    t.DRAG_END = "dragend",
                    t.ENTER = "enter",
                    t.SELECT = "select",
                    t.BLUR = "blur",
                    t.FOCUS = "focus",
                    t.VISIBILITY_CHANGE = "visibilitychange",
                    t.FOCUS_CHANGE = "focuschange",
                    t.PLAYED = "played",
                    t.PAUSED = "paused",
                    t.STOPPED = "stopped",
                    t.START = "start",
                    t.END = "end",
                    t.ENABLE_CHANGED = "enablechanged",
                    t.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged",
                    t.COMPONENT_ADDED = "componentadded",
                    t.COMPONENT_REMOVED = "componentremoved",
                    t.LAYER_CHANGED = "layerchanged",
                    t.HIERARCHY_LOADED = "hierarchyloaded",
                    t.RECOVERED = "recovered",
                    t.RELEASED = "released",
                    t.LINK = "link",
                    t.LABEL = "label",
                    t.FULL_SCREEN_CHANGE = "fullscreenchange",
                    t.DEVICE_LOST = "devicelost",
                    t.MESH_CHANGED = "meshchanged",
                    t.MATERIAL_CHANGED = "materialchanged",
                    t.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged",
                    t.ANIMATION_CHANGED = "animationchanged",
                    t.TRIGGER_ENTER = "triggerenter",
                    t.TRIGGER_STAY = "triggerstay",
                    t.TRIGGER_EXIT = "triggerexit",
                    t.TRAIL_FILTER_CHANGE = "trailfilterchange",
                    t.DOMINO_FILTER_CHANGE = "dominofilterchange",
                    t;
            }(),
            g = (function () {
                function t() { }
                n(t, "laya.events.Keyboard"),
                    t.NUMBER_0 = 48,
                    t.NUMBER_1 = 49,
                    t.NUMBER_2 = 50,
                    t.NUMBER_3 = 51,
                    t.NUMBER_4 = 52,
                    t.NUMBER_5 = 53,
                    t.NUMBER_6 = 54,
                    t.NUMBER_7 = 55,
                    t.NUMBER_8 = 56,
                    t.NUMBER_9 = 57,
                    t.A = 65,
                    t.B = 66,
                    t.C = 67,
                    t.D = 68,
                    t.E = 69,
                    t.F = 70,
                    t.G = 71,
                    t.H = 72,
                    t.I = 73,
                    t.J = 74,
                    t.K = 75,
                    t.L = 76,
                    t.M = 77,
                    t.N = 78,
                    t.O = 79,
                    t.P = 80,
                    t.Q = 81,
                    t.R = 82,
                    t.S = 83,
                    t.T = 84,
                    t.U = 85,
                    t.V = 86,
                    t.W = 87,
                    t.X = 88,
                    t.Y = 89,
                    t.Z = 90,
                    t.F1 = 112,
                    t.F2 = 113,
                    t.F3 = 114,
                    t.F4 = 115,
                    t.F5 = 116,
                    t.F6 = 117,
                    t.F7 = 118,
                    t.F8 = 119,
                    t.F9 = 120,
                    t.F10 = 121,
                    t.F11 = 122,
                    t.F12 = 123,
                    t.F13 = 124,
                    t.F14 = 125,
                    t.F15 = 126,
                    t.NUMPAD = 21,
                    t.NUMPAD_0 = 96,
                    t.NUMPAD_1 = 97,
                    t.NUMPAD_2 = 98,
                    t.NUMPAD_3 = 99,
                    t.NUMPAD_4 = 100,
                    t.NUMPAD_5 = 101,
                    t.NUMPAD_6 = 102,
                    t.NUMPAD_7 = 103,
                    t.NUMPAD_8 = 104,
                    t.NUMPAD_9 = 105,
                    t.NUMPAD_ADD = 107,
                    t.NUMPAD_DECIMAL = 110,
                    t.NUMPAD_DIVIDE = 111,
                    t.NUMPAD_ENTER = 108,
                    t.NUMPAD_MULTIPLY = 106,
                    t.NUMPAD_SUBTRACT = 109,
                    t.SEMICOLON = 186,
                    t.EQUAL = 187,
                    t.COMMA = 188,
                    t.MINUS = 189,
                    t.PERIOD = 190,
                    t.SLASH = 191,
                    t.BACKQUOTE = 192,
                    t.LEFTBRACKET = 219,
                    t.BACKSLASH = 220,
                    t.RIGHTBRACKET = 221,
                    t.QUOTE = 222,
                    t.ALTERNATE = 18,
                    t.BACKSPACE = 8,
                    t.CAPS_LOCK = 20,
                    t.COMMAND = 15,
                    t.CONTROL = 17,
                    t.DELETE = 46,
                    t.ENTER = 13,
                    t.ESCAPE = 27,
                    t.PAGE_UP = 33,
                    t.PAGE_DOWN = 34,
                    t.END = 35,
                    t.HOME = 36,
                    t.LEFT = 37,
                    t.UP = 38,
                    t.RIGHT = 39,
                    t.DOWN = 40,
                    t.SHIFT = 16,
                    t.SPACE = 32,
                    t.TAB = 9,
                    t.INSERT = 45;
            }(),
                function () {
                    function t() { }
                    return n(t, "laya.events.KeyBoardManager"),
                        t.__init__ = function () {
                            t._addEvent("keydown"),
                                t._addEvent("keypress"),
                                t._addEvent("keyup");
                        },
                        t._addEvent = function (t) {
                            O.document.addEventListener(t,
                                function (e) {
                                    laya.events.KeyBoardManager._dispatch(e, t);
                                },
                                !0);
                        },
                        t._dispatch = function (e, s) {
                            if (t.enabled) {
                                t._event._stoped = !1,
                                    t._event.nativeEvent = e,
                                    t._event.keyCode = e.keyCode || e.which || e.charCode,
                                    "keydown" === s ? t._pressKeys[t._event.keyCode] = !0 : "keyup" === s && (t._pressKeys[t._event.keyCode] = null);
                                for (var n = i.stage.focus && null != i.stage.focus.event && i.stage.focus.displayedInStage ? i.stage.focus : i.stage, a = n; a;) a.event(s, t._event.setTo(s, a, n)),
                                    a = a.parent;
                            }
                        },
                        t.hasKeyDown = function (e) {
                            return t._pressKeys[e];
                        },
                        t._pressKeys = {},
                        t.enabled = !0,
                        s(t, ["_event",
                            function () {
                                return this._event = new m();
                            }]),
                        t;
                }()),
            v = (function () {
                function t() { }
                n(t, "laya.events.KeyLocation"),
                    t.STANDARD = 0,
                    t.LEFT = 1,
                    t.RIGHT = 2,
                    t.NUM_PAD = 3;
            }(),
                function () {
                    function t() {
                        this.mouseX = 0,
                            this.mouseY = 0,
                            this.disableMouseEvent = !1,
                            this.mouseDownTime = 0,
                            this.mouseMoveAccuracy = 2,
                            this._stage = null,
                            this._target = null,
                            this._lastMoveTimer = 0,
                            this._isLeftMouse = !1,
                            this._eventList = [],
                            this._touchIDs = {},
                            this._id = 1,
                            this._tTouchID = 0,
                            this._event = new m(),
                            this._matrix = new C(),
                            this._point = new T(),
                            this._rect = new I(),
                            this._prePoint = new T(),
                            this._curTouchID = NaN;
                    }
                    n(t, "laya.events.MouseManager");
                    var e = t.prototype;
                    return e.__init__ = function (e, i) {
                        var s = this;
                        this._stage = e;
                        var n = this,
                            a = this._eventList;
                        i.oncontextmenu = function (e) {
                            if (t.enabled) return !1;
                        },
                            i.addEventListener("mousedown",
                                function (e) {
                                    t.enabled && (O.onIE || e.preventDefault(), a.push(e), n.mouseDownTime = O.now());
                                }),
                            i.addEventListener("mouseup",
                                function (e) {
                                    t.enabled && (e.preventDefault(), a.push(e), n.mouseDownTime = -O.now());
                                },
                                !0),
                            i.addEventListener("mousemove",
                                function (e) {
                                    if (t.enabled) {
                                        e.preventDefault();
                                        var i = O.now();
                                        if (i - n._lastMoveTimer < 10) return;
                                        n._lastMoveTimer = i,
                                            a.push(e);
                                    }
                                },
                                !0),
                            i.addEventListener("mouseout",
                                function (e) {
                                    t.enabled && a.push(e);
                                }),
                            i.addEventListener("mouseover",
                                function (e) {
                                    t.enabled && a.push(e);
                                }),
                            i.addEventListener("touchstart",
                                function (e) {
                                    t.enabled && (a.push(e), t._isFirstTouch || xt.isInputting || e.preventDefault(), n.mouseDownTime = O.now());
                                }),
                            i.addEventListener("touchend",
                                function (e) {
                                    t.enabled ? (t._isFirstTouch || xt.isInputting || e.preventDefault(), t._isFirstTouch = !1, a.push(e), n.mouseDownTime = -O.now()) : s._curTouchID = NaN;
                                },
                                !0),
                            i.addEventListener("touchmove",
                                function (e) {
                                    t.enabled && (e.preventDefault(), a.push(e));
                                },
                                !0),
                            i.addEventListener("touchcancel",
                                function (e) {
                                    t.enabled ? (e.preventDefault(), a.push(e)) : s._curTouchID = NaN;
                                },
                                !0),
                            i.addEventListener("mousewheel",
                                function (e) {
                                    t.enabled && a.push(e);
                                }),
                            i.addEventListener("DOMMouseScroll",
                                function (e) {
                                    t.enabled && a.push(e);
                                });
                    },
                        e.initEvent = function (t, e) {
                            this._event._stoped = !1,
                                this._event.nativeEvent = e || t,
                                this._target = null,
                                this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY),
                                this._stage._canvasTransform.invertTransformPoint(this._point),
                                this.mouseX = this._point.x,
                                this.mouseY = this._point.y,
                                this._event.touchId = t.identifier || 0,
                                this._tTouchID = this._event.touchId;
                            var i; (i = y.I._event)._stoped = !1,
                                i.nativeEvent = this._event.nativeEvent,
                                i.touchId = this._event.touchId;
                        },
                        e.checkMouseWheel = function (t) {
                            this._event.delta = t.wheelDelta ? .025 * t.wheelDelta : -t.detail;
                            for (var e = y.I.getLastOvers(), i = 0, s = e.length; i < s; i++) {
                                var n = e[i];
                                n.event("mousewheel", this._event.setTo("mousewheel", n, this._target));
                            }
                        },
                        e.onMouseMove = function (t) {
                            y.I.onMouseMove(t, this._tTouchID);
                        },
                        e.onMouseDown = function (t) {
                            if (xt.isInputting && i.stage.focus && i.stage.focus.focus && !i.stage.focus.contains(this._target)) {
                                var e = i.stage.focus._tf || i.stage.focus,
                                    s = t._tf || t;
                                s instanceof laya.display.Input && s.multiline == e.multiline ? e._focusOut() : e.focus = !1;
                            }
                            y.I.onMouseDown(t, this._tTouchID, this._isLeftMouse);
                        },
                        e.onMouseUp = function (t) {
                            y.I.onMouseUp(t, this._tTouchID, this._isLeftMouse);
                        },
                        e.check = function (t, e, i, s) {
                            this._point.setTo(e, i),
                                t.fromParentPoint(this._point),
                                e = this._point.x,
                                i = this._point.y;
                            var n = t.scrollRect;
                            if (n && (this._rect.setTo(n.x, n.y, n.width, n.height), !this._rect.contains(e, i))) return !1;
                            if (!this.disableMouseEvent) {
                                if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i)) return !1;
                                for (var a = t._childs.length - 1; a > -1; a--) {
                                    var r = t._childs[a];
                                    if (!r.destroyed && r.mouseEnabled && r.visible && this.check(r, e, i, s)) return !0;
                                }
                            }
                            var o = !(!t.hitTestPrior || t.mouseThrough || this.disableMouseEvent) || this.hitTest(t, e, i);
                            return o ? (this._target = t, s.call(this, t)) : s === this.onMouseUp && t === this._stage && (this._target = this._stage, s.call(this, this._target)),
                                o;
                        },
                        e.hitTest = function (t, e, i) {
                            var s = !1;
                            if (t.scrollRect && (e -= t.scrollRect.x, i -= t.scrollRect.y), t.hitArea instanceof laya.utils.HitArea) return t.hitArea.isHit(e, i);
                            if (t.width > 0 && t.height > 0 || t.mouseThrough || t.hitArea) if (t.mouseThrough) s = t.getGraphicBounds().contains(e, i);
                            else {
                                var n = this._rect;
                                t.hitArea ? n = t.hitArea : n.setTo(0, 0, t.width, t.height),
                                    s = n.contains(e, i);
                            }
                            return s;
                        },
                        e.runEvent = function () {
                            var e = this._eventList.length;
                            if (e) {
                                for (var i, s = 0,
                                    n = 0,
                                    a = 0; s < e;) {
                                    var r = this._eventList[s];
                                    switch ("mousemove" !== r.type && (this._prePoint.x = this._prePoint.y = -1e6), r.type) {
                                        case "mousedown":
                                            this._touchIDs[0] = this._id++ ,
                                                t._isTouchRespond ? t._isTouchRespond = !1 : (this._isLeftMouse = 0 === r.button, this.initEvent(r), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));
                                            break;

                                        case "mouseup":
                                            this._isLeftMouse = 0 === r.button,
                                                this.initEvent(r),
                                                this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp);
                                            break;

                                        case "mousemove":
                                            Math.abs(this._prePoint.x - r.clientX) + Math.abs(this._prePoint.y - r.clientY) >= this.mouseMoveAccuracy && (this._prePoint.x = r.clientX, this._prePoint.y = r.clientY, this.initEvent(r), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));
                                            break;

                                        case "touchstart":
                                            t._isTouchRespond = !0,
                                                this._isLeftMouse = !0;
                                            var o = r.changedTouches;
                                            for (n = 0, a = o.length; n < a; n++) i = o[n],
                                                (t.multiTouchEnabled || isNaN(this._curTouchID)) && (this._curTouchID = i.identifier, this._id % 200 == 0 && (this._touchIDs = {}), this._touchIDs[i.identifier] = this._id++ , this.initEvent(i, r), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));
                                            break;

                                        case "touchend":
                                        case "touchcancel":
                                            t._isTouchRespond = !0,
                                                this._isLeftMouse = !0;
                                            var h = r.changedTouches;
                                            for (n = 0, a = h.length; n < a; n++) if (i = h[n], t.multiTouchEnabled || i.identifier == this._curTouchID) {
                                                this._curTouchID = NaN,
                                                    this.initEvent(i, r);
                                                this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp) || this.onMouseUp(null);
                                            }
                                            break;

                                        case "touchmove":
                                            var l = r.changedTouches;
                                            for (n = 0, a = l.length; n < a; n++) i = l[n],
                                                (t.multiTouchEnabled || i.identifier == this._curTouchID) && (this.initEvent(i, r), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));
                                            break;

                                        case "wheel":
                                        case "mousewheel":
                                        case "DOMMouseScroll":
                                            this.checkMouseWheel(r);
                                            break;

                                        case "mouseout":
                                            y.I.stageMouseOut();
                                            break;

                                        case "mouseover":
                                            this._stage.event("mouseover", this._event.setTo("mouseover", this._stage, this._stage));
                                    }
                                    s++;
                                }
                                this._eventList.length = 0;
                            }
                        },
                        t.enabled = !0,
                        t.multiTouchEnabled = !0,
                        t._isTouchRespond = !1,
                        t._isFirstTouch = !0,
                        s(t, ["instance",
                            function () {
                                return this.instance = new t();
                            }]),
                        t;
                }()),
            y = function () {
                function t() {
                    this.preOvers = [],
                        this.preDowns = [],
                        this.preRightDowns = [],
                        this.enable = !0,
                        this._lastClickTime = 0,
                        this._event = new m();
                }
                n(t, "laya.events.TouchManager");
                var e = t.prototype;
                return e._clearTempArrs = function () {
                    t._oldArr.length = 0,
                        t._newArr.length = 0,
                        t._tEleArr.length = 0;
                },
                    e.getTouchFromArr = function (t, e) {
                        var i = 0,
                            s = 0;
                        s = e.length;
                        var n;
                        for (i = 0; i < s; i++) if ((n = e[i]).id == t) return n;
                        return null;
                    },
                    e.removeTouchFromArr = function (t, e) {
                        var i = 0;
                        for (i = e.length - 1; i >= 0; i--) e[i].id == t && e.splice(i, 1);
                    },
                    e.createTouchO = function (t, e) {
                        var i;
                        return i = H.getItem("TouchData") || {},
                            i.id = e,
                            i.tar = t,
                            i;
                    },
                    e.onMouseDown = function (e, i, s) {
                        if (void 0 === s && (s = !1), this.enable) {
                            var n, a, r;
                            n = this.getTouchFromArr(i, this.preOvers),
                                r = this.getEles(e, null, t._tEleArr),
                                n ? n.tar = e : (a = this.createTouchO(e, i), this.preOvers.push(a)),
                                O.onMobile && this.sendEvents(r, "mouseover", i);
                            var o;
                            o = s ? this.preDowns : this.preRightDowns,
                                (n = this.getTouchFromArr(i, o)) ? n.tar = e : (a = this.createTouchO(e, i), o.push(a)),
                                this.sendEvents(r, s ? "mousedown" : "rightmousedown", i),
                                this._clearTempArrs();
                        }
                    },
                    e.sendEvents = function (t, e, i) {
                        void 0 === i && (i = 0);
                        var s = 0,
                            n = 0;
                        n = t.length,
                            this._event._stoped = !1;
                        var a;
                        a = t[0];
                        var r;
                        for (s = 0; s < n; s++) {
                            if ((r = t[s]).destroyed) return;
                            if (r.event(e, this._event.setTo(e, r, a)), this._event._stoped) break;
                        }
                    },
                    e.getEles = function (t, e, i) {
                        for (i ? i.length = 0 : i = []; t && t != e;) i.push(t),
                            t = t.parent;
                        return i;
                    },
                    e.checkMouseOutAndOverOfMove = function (e, i, s) {
                        if (void 0 === s && (s = 0), i != e) {
                            var n, a, r = 0,
                                o = 0;
                            if (i.contains(e)) a = this.getEles(e, i, t._tEleArr),
                                this.sendEvents(a, "mouseover", s);
                            else if (e.contains(i)) a = this.getEles(i, e, t._tEleArr),
                                this.sendEvents(a, "mouseout", s);
                            else {
                                (a = t._tEleArr).length = 0;
                                var h;
                                h = this.getEles(i, null, t._oldArr);
                                var l;
                                l = this.getEles(e, null, t._newArr),
                                    o = h.length;
                                var c = 0;
                                for (r = 0; r < o; r++) {
                                    if (n = h[r], (c = l.indexOf(n)) >= 0) {
                                        l.splice(c, l.length - c);
                                        break;
                                    }
                                    a.push(n);
                                }
                                a.length > 0 && this.sendEvents(a, "mouseout", s),
                                    l.length > 0 && this.sendEvents(l, "mouseover", s);
                            }
                        }
                    },
                    e.onMouseMove = function (e, i) {
                        if (this.enable) {
                            var s, n; (s = this.getTouchFromArr(i, this.preOvers)) ? (this.checkMouseOutAndOverOfMove(e, s.tar), s.tar = e, n = this.getEles(e, null, t._tEleArr)) : (n = this.getEles(e, null, t._tEleArr), this.sendEvents(n, "mouseover", i), this.preOvers.push(this.createTouchO(e, i))),
                                this.sendEvents(n, "mousemove", i),
                                this._clearTempArrs();
                        }
                    },
                    e.getLastOvers = function () {
                        return t._tEleArr.length = 0,
                            this.preOvers.length > 0 && this.preOvers[0].tar ? this.getEles(this.preOvers[0].tar, null, t._tEleArr) : (t._tEleArr.push(i.stage), t._tEleArr);
                    },
                    e.stageMouseOut = function () {
                        var t;
                        t = this.getLastOvers(),
                            this.preOvers.length = 0,
                            this.sendEvents(t, "mouseout", 0);
                    },
                    e.onMouseUp = function (e, i, s) {
                        if (void 0 === s && (s = !1), this.enable) {
                            var n, a, r, o, h, l = 0,
                                c = 0,
                                u = O.onMobile;
                            a = this.getEles(e, null, t._tEleArr),
                                this.sendEvents(a, s ? "mouseup" : "rightmouseup", i);
                            var d;
                            if (d = s ? this.preDowns : this.preRightDowns, n = this.getTouchFromArr(i, d)) {
                                var _ = !1,
                                    p = O.now();
                                if (_ = p - this._lastClickTime < 300, this._lastClickTime = p, e == n.tar) h = a;
                                else for (r = this.getEles(n.tar, null, t._oldArr), (h = t._newArr).length = 0, c = r.length, l = 0; l < c; l++) o = r[l],
                                    a.indexOf(o) >= 0 && h.push(o);
                                h.length > 0 && this.sendEvents(h, s ? "click" : "rightclick", i),
                                    s && _ && this.sendEvents(h, "doubleclick", i),
                                    this.removeTouchFromArr(i, d),
                                    n.tar = null,
                                    H.recover("TouchData", n);
                            } else; (n = this.getTouchFromArr(i, this.preOvers)) && u && ((h = this.getEles(n.tar, null, h)) && h.length > 0 && this.sendEvents(h, "mouseout", i), this.removeTouchFromArr(i, this.preOvers), n.tar = null, H.recover("TouchData", n)),
                                this._clearTempArrs();
                        }
                    },
                    t._oldArr = [],
                    t._newArr = [],
                    t._tEleArr = [],
                    s(t, ["I",
                        function () {
                            return this.I = new t();
                        }]),
                    t;
            }(),
            b = function () {
                function t() {
                    this._action = null;
                }
                n(t, "laya.filters.Filter");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.filters.IFilter": !0
                }),
                    e.callNative = function (t) { },
                    a(0, e, "type",
                        function () {
                            return - 1;
                        }),
                    a(0, e, "action",
                        function () {
                            return this._action;
                        }),
                    t.BLUR = 16,
                    t.COLOR = 32,
                    t.GLOW = 8,
                    t._filterStart = null,
                    t._filterEnd = null,
                    t._EndTarget = null,
                    t._recycleScope = null,
                    t._filter = null,
                    t._useSrc = null,
                    t._endSrc = null,
                    t._useOut = null,
                    t._endOut = null,
                    t;
            }(),
            x = function () {
                function t() {
                    this.data = null;
                }
                n(t, "laya.filters.ColorFilterAction");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.filters.IFilterAction": !0
                }),
                    e.apply = function (t) {
                        var e = t.ctx.ctx,
                            i = t.ctx.ctx.canvas;
                        if (0 == i.width || 0 == i.height) return i;
                        for (var s, n = e.getImageData(0, 0, i.width, i.height), a = n.data, r = 0, o = a.length; r < o; r += 4) s = this.getColor(a[r], a[r + 1], a[r + 2], a[r + 3]),
                            0 != a[r + 3] && (a[r] = s[0], a[r + 1] = s[1], a[r + 2] = s[2], a[r + 3] = s[3]);
                        return e.putImageData(n, 0, 0),
                            t;
                    },
                    e.getColor = function (t, e, i, s) {
                        var n = [];
                        if (this.data._mat && this.data._alpha) {
                            var a = this.data._mat,
                                r = this.data._alpha;
                            n[0] = a[0] * t + a[1] * e + a[2] * i + a[3] * s + r[0],
                                n[1] = a[4] * t + a[5] * e + a[6] * i + a[7] * s + r[1],
                                n[2] = a[8] * t + a[9] * e + a[10] * i + a[11] * s + r[2],
                                n[3] = a[12] * t + a[13] * e + a[14] * i + a[15] * s + r[3];
                        }
                        return n;
                    },
                    t;
            }(),
            w = (function () {
                function t() { }
                n(t, "laya.maths.Arith"),
                    t.formatR = function (t) {
                        return t > Math.PI && (t -= 2 * Math.PI),
                            t < -Math.PI && (t += 2 * Math.PI),
                            t;
                    },
                    t.isPOT = function (t, e) {
                        return t > 0 && 0 == (t & t - 1) && e > 0 && 0 == (e & e - 1);
                    },
                    t.setMatToArray = function (t, e) {
                        t.a,
                            t.b,
                            t.c,
                            t.d,
                            t.tx,
                            t.ty,
                            e[0] = t.a,
                            e[1] = t.b,
                            e[4] = t.c,
                            e[5] = t.d,
                            e[12] = t.tx,
                            e[13] = t.ty;
                    };
            }(),
                function () {
                    function t() {
                        this._controlPoints = [new T(), new T(), new T()],
                            this._calFun = this.getPoint2;
                    }
                    n(t, "laya.maths.Bezier");
                    var e = t.prototype;
                    return e._switchPoint = function (t, e) {
                        var i = this._controlPoints.shift();
                        i.setTo(t, e),
                            this._controlPoints.push(i);
                    },
                        e.getPoint2 = function (t, e) {
                            var i = this._controlPoints[0],
                                s = this._controlPoints[1],
                                n = this._controlPoints[2],
                                a = Math.pow(1 - t, 2) * i.x + 2 * t * (1 - t) * s.x + Math.pow(t, 2) * n.x,
                                r = Math.pow(1 - t, 2) * i.y + 2 * t * (1 - t) * s.y + Math.pow(t, 2) * n.y;
                            e.push(a, r);
                        },
                        e.getPoint3 = function (t, e) {
                            var i = this._controlPoints[0],
                                s = this._controlPoints[1],
                                n = this._controlPoints[2],
                                a = this._controlPoints[3],
                                r = Math.pow(1 - t, 3) * i.x + 3 * s.x * t * (1 - t) * (1 - t) + 3 * n.x * t * t * (1 - t) + a.x * Math.pow(t, 3),
                                o = Math.pow(1 - t, 3) * i.y + 3 * s.y * t * (1 - t) * (1 - t) + 3 * n.y * t * t * (1 - t) + a.y * Math.pow(t, 3);
                            e.push(r, o);
                        },
                        e.insertPoints = function (t, e) {
                            var i = NaN,
                                s = NaN;
                            for (s = 1 / (t = t > 0 ? t : 5), i = 0; i <= 1; i += s) this._calFun(i, e);
                        },
                        e.getBezierPoints = function (t, e, i) {
                            void 0 === e && (e = 5),
                                void 0 === i && (i = 2);
                            var s = 0,
                                n = 0;
                            if ((n = t.length) < 2 * (i + 1)) return [];
                            var a;
                            switch (a = [], i) {
                                case 2:
                                    this._calFun = this.getPoint2;
                                    break;

                                case 3:
                                    this._calFun = this.getPoint3;
                                    break;

                                default:
                                    return [];
                            }
                            for (; this._controlPoints.length <= i;) this._controlPoints.push(new T());
                            for (s = 0; s < 2 * i; s += 2) this._switchPoint(t[s], t[s + 1]);
                            for (s = 2 * i; s < n; s += 2) this._switchPoint(t[s], t[s + 1]),
                                s / 2 % i == 0 && this.insertPoints(e, a);
                            return a;
                        },
                        s(t, ["I",
                            function () {
                                return this.I = new t();
                            }]),
                        t;
                }()),
            M = function () {
                function t() { }
                return n(t, "laya.maths.GrahamScan"),
                    t.multiply = function (t, e, i) {
                        return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y);
                    },
                    t.dis = function (t, e) {
                        return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y);
                    },
                    t._getPoints = function (e, i, s) {
                        for (void 0 === i && (i = !1), t._mPointList || (t._mPointList = []); t._mPointList.length < e;) t._mPointList.push(new T());
                        return s || (s = []),
                            s.length = 0,
                            i ? t.getFrom(s, t._mPointList, e) : t.getFromR(s, t._mPointList, e),
                            s;
                    },
                    t.getFrom = function (t, e, i) {
                        var s = 0;
                        for (s = 0; s < i; s++) t.push(e[s]);
                        return t;
                    },
                    t.getFromR = function (t, e, i) {
                        var s = 0;
                        for (s = 0; s < i; s++) t.push(e.pop());
                        return t;
                    },
                    t.pListToPointList = function (e, i) {
                        void 0 === i && (i = !1);
                        var s = 0,
                            n = e.length / 2,
                            a = t._getPoints(n, i, t._tempPointList);
                        for (s = 0; s < n; s++) a[s].setTo(e[s + s], e[s + s + 1]);
                        return a;
                    },
                    t.pointListToPlist = function (e) {
                        var i, s = 0,
                            n = e.length,
                            a = t._temPList;
                        for (a.length = 0, s = 0; s < n; s++) i = e[s],
                            a.push(i.x, i.y);
                        return a;
                    },
                    t.scanPList = function (e) {
                        return $.copyArray(e, t.pointListToPlist(t.scan(t.pListToPointList(e, !0))));
                    },
                    t.scan = function (e) {
                        var i, s, n, a = 0,
                            r = 0,
                            o = 0,
                            h = e.length,
                            l = {};
                        for ((s = t._temArr).length = 0, a = (h = e.length) - 1; a >= 0; a--) n = (i = e[a]).x + "_" + i.y,
                            l.hasOwnProperty(n) || (l[n] = !0, s.push(i));
                        for (h = s.length, $.copyArray(e, s), a = 1; a < h; a++)(e[a].y < e[o].y || e[a].y == e[o].y && e[a].x < e[o].x) && (o = a);
                        for (i = e[0], e[0] = e[o], e[o] = i, a = 1; a < h - 1; a++) {
                            for (o = a, r = a + 1; r < h; r++)(t.multiply(e[r], e[o], e[0]) > 0 || 0 == t.multiply(e[r], e[o], e[0]) && t.dis(e[0], e[r]) < t.dis(e[0], e[o])) && (o = r);
                            i = e[a],
                                e[a] = e[o],
                                e[o] = i;
                        }
                        if (s = t._temArr, s.length = 0, e.length < 3) return $.copyArray(s, e);
                        for (s.push(e[0], e[1], e[2]), a = 3; a < h; a++) {
                            for (; s.length >= 2 && t.multiply(e[a], s[s.length - 1], s[s.length - 2]) >= 0;) s.pop();
                            e[a] && s.push(e[a]);
                        }
                        return s;
                    },
                    t._mPointList = null,
                    t._tempPointList = [],
                    t._temPList = [],
                    t._temArr = [],
                    t;
            }(),
            S = function () {
                function t() { }
                return n(t, "laya.maths.MathUtil"),
                    t.subtractVector3 = function (t, e, i) {
                        i[0] = t[0] - e[0],
                            i[1] = t[1] - e[1],
                            i[2] = t[2] - e[2];
                    },
                    t.lerp = function (t, e, i) {
                        return t * (1 - i) + e * i;
                    },
                    t.scaleVector3 = function (t, e, i) {
                        i[0] = t[0] * e,
                            i[1] = t[1] * e,
                            i[2] = t[2] * e;
                    },
                    t.lerpVector3 = function (t, e, i, s) {
                        var n = t[0],
                            a = t[1],
                            r = t[2];
                        s[0] = n + i * (e[0] - n),
                            s[1] = a + i * (e[1] - a),
                            s[2] = r + i * (e[2] - r);
                    },
                    t.lerpVector4 = function (t, e, i, s) {
                        var n = t[0],
                            a = t[1],
                            r = t[2],
                            o = t[3];
                        s[0] = n + i * (e[0] - n),
                            s[1] = a + i * (e[1] - a),
                            s[2] = r + i * (e[2] - r),
                            s[3] = o + i * (e[3] - o);
                    },
                    t.slerpQuaternionArray = function (t, e, i, s, n, a, r) {
                        var o, h, l, c, u, d = t[e + 0],
                            _ = t[e + 1],
                            p = t[e + 2],
                            f = t[e + 3],
                            m = i[s + 0],
                            g = i[s + 1],
                            v = i[s + 2],
                            y = i[s + 3];
                        return (h = d * m + _ * g + p * v + f * y) < 0 && (h = -h, m = -m, g = -g, v = -v, y = -y),
                            1 - h > 1e-6 ? (o = Math.acos(h), l = Math.sin(o), c = Math.sin((1 - n) * o) / l, u = Math.sin(n * o) / l) : (c = 1 - n, u = n),
                            a[r + 0] = c * d + u * m,
                            a[r + 1] = c * _ + u * g,
                            a[r + 2] = c * p + u * v,
                            a[r + 3] = c * f + u * y,
                            a;
                    },
                    t.getRotation = function (t, e, i, s) {
                        return Math.atan2(s - e, i - t) / Math.PI * 180;
                    },
                    t.sortBigFirst = function (t, e) {
                        return t == e ? 0 : e > t ? 1 : -1;
                    },
                    t.sortSmallFirst = function (t, e) {
                        return t == e ? 0 : e > t ? -1 : 1;
                    },
                    t.sortNumBigFirst = function (t, e) {
                        return parseFloat(e) - parseFloat(t);
                    },
                    t.sortNumSmallFirst = function (t, e) {
                        return parseFloat(t) - parseFloat(e);
                    },
                    t.sortByKey = function (e, i, s) {
                        void 0 === i && (i = !1),
                            void 0 === s && (s = !0);
                        var n;
                        return n = i ? s ? t.sortNumBigFirst : t.sortBigFirst : s ? t.sortNumSmallFirst : t.sortSmallFirst,
                            function (t, i) {
                                return n(t[e], i[e]);
                            };
                    },
                    t;
            }(),
            C = function () {
                function t(t, e, i, s, n, a) {
                    this.inPool = !1,
                        this.bTransform = !1,
                        void 0 === t && (t = 1),
                        void 0 === e && (e = 0),
                        void 0 === i && (i = 0),
                        void 0 === s && (s = 1),
                        void 0 === n && (n = 0),
                        void 0 === a && (a = 0),
                        this.a = t,
                        this.b = e,
                        this.c = i,
                        this.d = s,
                        this.tx = n,
                        this.ty = a,
                        this._checkTransform();
                }
                n(t, "laya.maths.Matrix");
                var e = t.prototype;
                return e.identity = function () {
                    return this.a = this.d = 1,
                        this.b = this.tx = this.ty = this.c = 0,
                        this.bTransform = !1,
                        this;
                },
                    e._checkTransform = function () {
                        return this.bTransform = 1 !== this.a || 0 !== this.b || 0 !== this.c || 1 !== this.d;
                    },
                    e.setTranslate = function (t, e) {
                        return this.tx = t,
                            this.ty = e,
                            this;
                    },
                    e.translate = function (t, e) {
                        return this.tx += t,
                            this.ty += e,
                            this;
                    },
                    e.scale = function (t, e) {
                        this.a *= t,
                            this.d *= e,
                            this.c *= t,
                            this.b *= e,
                            this.tx *= t,
                            this.ty *= e,
                            this.bTransform = !0;
                    },
                    e.rotate = function (t) {
                        var e = Math.cos(t),
                            i = Math.sin(t),
                            s = this.a,
                            n = this.c,
                            a = this.tx;
                        this.a = s * e - this.b * i,
                            this.b = s * i + this.b * e,
                            this.c = n * e - this.d * i,
                            this.d = n * i + this.d * e,
                            this.tx = a * e - this.ty * i,
                            this.ty = a * i + this.ty * e,
                            this.bTransform = !0;
                    },
                    e.skew = function (t, e) {
                        var i = Math.tan(t),
                            s = Math.tan(e),
                            n = this.a,
                            a = this.b;
                        return this.a += s * this.c,
                            this.b += s * this.d,
                            this.c += i * n,
                            this.d += i * a,
                            this;
                    },
                    e.invertTransformPoint = function (t) {
                        var e = this.a,
                            i = this.b,
                            s = this.c,
                            n = this.d,
                            a = this.tx,
                            r = e * n - i * s,
                            o = n / r,
                            h = -i / r,
                            l = -s / r,
                            c = e / r,
                            u = (s * this.ty - n * a) / r,
                            d = -(e * this.ty - i * a) / r;
                        return t.setTo(o * t.x + l * t.y + u, h * t.x + c * t.y + d);
                    },
                    e.transformPoint = function (t) {
                        return t.setTo(this.a * t.x + this.c * t.y + this.tx, this.b * t.x + this.d * t.y + this.ty);
                    },
                    e.transformPointN = function (t) {
                        return t.setTo(this.a * t.x + this.c * t.y, this.b * t.x + this.d * t.y);
                    },
                    e.transformPointArray = function (t, e) {
                        for (var i = t.length,
                            s = 0; s < i; s += 2) {
                            var n = t[s],
                                a = t[s + 1];
                            e[s] = this.a * n + this.c * a + this.tx,
                                e[s + 1] = this.b * n + this.d * a + this.ty;
                        }
                        return e;
                    },
                    e.transformPointArrayScale = function (t, e) {
                        for (var i = t.length,
                            s = 0; s < i; s += 2) {
                            var n = t[s],
                                a = t[s + 1];
                            e[s] = this.a * n + this.c * a,
                                e[s + 1] = this.b * n + this.d * a;
                        }
                        return e;
                    },
                    e.getScaleX = function () {
                        return 0 === this.b ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);
                    },
                    e.getScaleY = function () {
                        return 0 === this.c ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);
                    },
                    e.invert = function () {
                        var t = this.a,
                            e = this.b,
                            i = this.c,
                            s = this.d,
                            n = this.tx,
                            a = t * s - e * i;
                        return this.a = s / a,
                            this.b = -e / a,
                            this.c = -i / a,
                            this.d = t / a,
                            this.tx = (i * this.ty - s * n) / a,
                            this.ty = -(t * this.ty - e * n) / a,
                            this;
                    },
                    e.setTo = function (t, e, i, s, n, a) {
                        return this.a = t,
                            this.b = e,
                            this.c = i,
                            this.d = s,
                            this.tx = n,
                            this.ty = a,
                            this;
                    },
                    e.concat = function (t) {
                        var e = this.a,
                            i = this.c,
                            s = this.tx;
                        return this.a = e * t.a + this.b * t.c,
                            this.b = e * t.b + this.b * t.d,
                            this.c = i * t.a + this.d * t.c,
                            this.d = i * t.b + this.d * t.d,
                            this.tx = s * t.a + this.ty * t.c + t.tx,
                            this.ty = s * t.b + this.ty * t.d + t.ty,
                            this;
                    },
                    e.scaleEx = function (t, e) {
                        var i = this.a,
                            s = this.b,
                            n = this.c,
                            a = this.d;
                        0 !== s || 0 !== n ? (this.a = t * i, this.b = t * s, this.c = e * n, this.d = e * a) : (this.a = t * i, this.b = 0 * a, this.c = 0 * i, this.d = e * a),
                            this.bTransform = !0;
                    },
                    e.rotateEx = function (t) {
                        var e = Math.cos(t),
                            i = Math.sin(t),
                            s = this.a,
                            n = this.b,
                            a = this.c,
                            r = this.d;
                        0 !== n || 0 !== a ? (this.a = e * s + i * a, this.b = e * n + i * r, this.c = -i * s + e * a, this.d = -i * n + e * r) : (this.a = e * s, this.b = i * r, this.c = -i * s, this.d = e * r),
                            this.bTransform = !0;
                    },
                    e.clone = function () {
                        var e = t.create();
                        return e.a = this.a,
                            e.b = this.b,
                            e.c = this.c,
                            e.d = this.d,
                            e.tx = this.tx,
                            e.ty = this.ty,
                            e.bTransform = this.bTransform,
                            e;
                    },
                    e.copyTo = function (t) {
                        return t.a = this.a,
                            t.b = this.b,
                            t.c = this.c,
                            t.d = this.d,
                            t.tx = this.tx,
                            t.ty = this.ty,
                            t.bTransform = this.bTransform,
                            t;
                    },
                    e.toString = function () {
                        return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty;
                    },
                    e.destroy = function () {
                        if (!this.inPool) {
                            var e = t._cache;
                            this.inPool = !0,
                                e._length || (e._length = 0),
                                e[e._length++] = this,
                                this.a = this.d = 1,
                                this.b = this.c = this.tx = this.ty = 0,
                                this.bTransform = !1;
                        }
                    },
                    t.mul = function (t, e, i) {
                        var s = t.a,
                            n = t.b,
                            a = t.c,
                            r = t.d,
                            o = t.tx,
                            h = t.ty,
                            l = e.a,
                            c = e.b,
                            u = e.c,
                            d = e.d,
                            _ = e.tx,
                            p = e.ty;
                        return 0 !== c || 0 !== u ? (i.a = s * l + n * u, i.b = s * c + n * d, i.c = a * l + r * u, i.d = a * c + r * d, i.tx = l * o + u * h + _, i.ty = c * o + d * h + p) : (i.a = s * l, i.b = n * d, i.c = a * l, i.d = r * d, i.tx = l * o + _, i.ty = d * h + p),
                            i;
                    },
                    t.mul16 = function (t, e, i) {
                        var s = t.a,
                            n = t.b,
                            a = t.c,
                            r = t.d,
                            o = t.tx,
                            h = t.ty,
                            l = e.a,
                            c = e.b,
                            u = e.c,
                            d = e.d,
                            _ = e.tx,
                            p = e.ty;
                        return 0 !== c || 0 !== u ? (i[0] = s * l + n * u, i[1] = s * c + n * d, i[4] = a * l + r * u, i[5] = a * c + r * d, i[12] = l * o + u * h + _, i[13] = c * o + d * h + p) : (i[0] = s * l, i[1] = n * d, i[4] = a * l, i[5] = r * d, i[12] = l * o + _, i[13] = d * h + p),
                            i;
                    },
                    t.mulPre = function (t, e, i, s, n, a, r, o) {
                        var h = t.a,
                            l = t.b,
                            c = t.c,
                            u = t.d,
                            d = t.tx,
                            _ = t.ty;
                        return 0 !== i || 0 !== s ? (o.a = h * e + l * s, o.b = h * i + l * n, o.c = c * e + u * s, o.d = c * i + u * n, o.tx = e * d + s * _ + a, o.ty = i * d + n * _ + r) : (o.a = h * e, o.b = l * n, o.c = c * e, o.d = u * n, o.tx = e * d + a, o.ty = n * _ + r),
                            o;
                    },
                    t.mulPos = function (t, e, i, s, n, a, r, o) {
                        var h = t.a,
                            l = t.b,
                            c = t.c,
                            u = t.d,
                            d = t.tx,
                            _ = t.ty;
                        return 0 !== l || 0 !== c ? (o.a = e * h + i * c, o.b = e * l + i * u, o.c = s * h + n * c, o.d = s * l + n * u, o.tx = h * a + c * r + d, o.ty = l * a + u * r + _) : (o.a = e * h, o.b = i * u, o.c = s * h, o.d = n * u, o.tx = h * a + d, o.ty = u * r + _),
                            o;
                    },
                    t.preMul = function (t, e, i) {
                        var s = t.a,
                            n = t.b,
                            a = t.c,
                            r = t.d,
                            o = e.a,
                            h = e.b,
                            l = e.c,
                            c = e.d,
                            u = e.tx,
                            d = e.ty;
                        return i.a = o * s,
                            i.b = i.c = 0,
                            i.d = c * r,
                            i.tx = u * s + t.tx,
                            i.ty = d * r + t.ty,
                            0 === h && 0 === l && 0 === n && 0 === a || (i.a += h * a, i.d += l * n, i.b += o * n + h * r, i.c += l * s + c * a, i.tx += d * a, i.ty += u * n),
                            i;
                    },
                    t.preMulXY = function (t, e, i, s) {
                        var n = t.a,
                            a = t.b,
                            r = t.c,
                            o = t.d;
                        return s.a = n,
                            s.b = a,
                            s.c = r,
                            s.d = o,
                            s.tx = e * n + t.tx + i * r,
                            s.ty = i * o + t.ty + e * a,
                            s;
                    },
                    t.create = function () {
                        var e = t._cache,
                            i = e._length ? e[--e._length] : new t();
                        return i.inPool = !1,
                            i;
                    },
                    t.EMPTY = new t(),
                    t.TEMP = new t(),
                    t._cache = [],
                    t;
            }(),
            T = function () {
                function t(t, e) {
                    void 0 === t && (t = 0),
                        void 0 === e && (e = 0),
                        this.x = t,
                        this.y = e;
                }
                n(t, "laya.maths.Point");
                var e = t.prototype;
                return e.setTo = function (t, e) {
                    return this.x = t,
                        this.y = e,
                        this;
                },
                    e.distance = function (t, e) {
                        return Math.sqrt((this.x - t) * (this.x - t) + (this.y - e) * (this.y - e));
                    },
                    e.toString = function () {
                        return this.x + "," + this.y;
                    },
                    e.normalize = function () {
                        var t = Math.sqrt(this.x * this.x + this.y * this.y);
                        if (t > 0) {
                            var e = 1 / t;
                            this.x *= e,
                                this.y *= e;
                        }
                    },
                    t.TEMP = new t(),
                    t.EMPTY = new t(),
                    t;
            }(),
            I = function () {
                function t(t, e, i, s) {
                    void 0 === t && (t = 0),
                        void 0 === e && (e = 0),
                        void 0 === i && (i = 0),
                        void 0 === s && (s = 0),
                        this.x = t,
                        this.y = e,
                        this.width = i,
                        this.height = s;
                }
                n(t, "laya.maths.Rectangle");
                var e = t.prototype;
                return e.setTo = function (t, e, i, s) {
                    return this.x = t,
                        this.y = e,
                        this.width = i,
                        this.height = s,
                        this;
                },
                    e.copyFrom = function (t) {
                        return this.x = t.x,
                            this.y = t.y,
                            this.width = t.width,
                            this.height = t.height,
                            this;
                    },
                    e.contains = function (t, e) {
                        return !(this.width <= 0 || this.height <= 0) && (t >= this.x && t < this.right && e >= this.y && e < this.bottom);
                    },
                    e.intersects = function (t) {
                        return !(t.x > this.x + this.width || t.x + t.width < this.x || t.y > this.y + this.height || t.y + t.height < this.y);
                    },
                    e.intersection = function (e, i) {
                        return this.intersects(e) ? (i || (i = new t()), i.x = Math.max(this.x, e.x), i.y = Math.max(this.y, e.y), i.width = Math.min(this.right, e.right) - i.x, i.height = Math.min(this.bottom, e.bottom) - i.y, i) : null;
                    },
                    e.union = function (e, i) {
                        return i || (i = new t()),
                            this.clone(i),
                            e.width <= 0 || e.height <= 0 ? i : (i.addPoint(e.x, e.y), i.addPoint(e.right, e.bottom), this);
                    },
                    e.clone = function (e) {
                        return e || (e = new t()),
                            e.x = this.x,
                            e.y = this.y,
                            e.width = this.width,
                            e.height = this.height,
                            e;
                    },
                    e.toString = function () {
                        return this.x + "," + this.y + "," + this.width + "," + this.height;
                    },
                    e.equals = function (t) {
                        return !(!t || t.x !== this.x || t.y !== this.y || t.width !== this.width || t.height !== this.height);
                    },
                    e.addPoint = function (t, e) {
                        return this.x > t && (this.width += this.x - t, this.x = t),
                            this.y > e && (this.height += this.y - e, this.y = e),
                            this.width < t - this.x && (this.width = t - this.x),
                            this.height < e - this.y && (this.height = e - this.y),
                            this;
                    },
                    e._getBoundPoints = function () {
                        var e = t._temB;
                        return e.length = 0,
                            0 == this.width || 0 == this.height ? e : (e.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height), e);
                    },
                    e.isEmpty = function () {
                        return this.width <= 0 || this.height <= 0;
                    },
                    a(0, e, "right",
                        function () {
                            return this.x + this.width;
                        }),
                    a(0, e, "bottom",
                        function () {
                            return this.y + this.height;
                        }),
                    t._getBoundPointS = function (e, i, s, n) {
                        var a = t._temA;
                        return a.length = 0,
                            0 == s || 0 == n ? a : (a.push(e, i, e + s, i, e, i + n, e + s, i + n), a);
                    },
                    t._getWrapRec = function (e, i) {
                        if (!e || e.length < 1) return i ? i.setTo(0, 0, 0, 0) : t.TEMP.setTo(0, 0, 0, 0);
                        i = i || new t();
                        var s, n, a, r, o, h = e.length,
                            l = T.TEMP;
                        for (a = o = -(n = r = 99999), s = 0; s < h; s += 2) l.x = e[s],
                            l.y = e[s + 1],
                            n = n < l.x ? n : l.x,
                            r = r < l.y ? r : l.y,
                            a = a > l.x ? a : l.x,
                            o = o > l.y ? o : l.y;
                        return i.setTo(n, r, a - n, o - r);
                    },
                    t.EMPTY = new t(),
                    t.TEMP = new t(),
                    t._temB = [],
                    t._temA = [],
                    t;
            }(),
            L = function () {
                function t() { }
                return n(t, "laya.media.SoundManager"),
                    a(1, t, "useAudioMusic",
                        function () {
                            return t._useAudioMusic;
                        },
                        function (e) {
                            t._useAudioMusic = e,
                                t._musicClass = e ? et : null;
                        }),
                    a(1, t, "autoStopMusic",
                        function () {
                            return t._autoStopMusic;
                        },
                        function (e) {
                            i.stage.off("blur", null, t._stageOnBlur),
                                i.stage.off("focus", null, t._stageOnFocus),
                                i.stage.off("visibilitychange", null, t._visibilityChange),
                                t._autoStopMusic = e,
                                e && (i.stage.on("blur", null, t._stageOnBlur), i.stage.on("focus", null, t._stageOnFocus), i.stage.on("visibilitychange", null, t._visibilityChange));
                        }),
                    a(1, t, "muted",
                        function () {
                            return t._muted;
                        },
                        function (e) {
                            e != t._muted && (e && t.stopAllSound(), t.musicMuted = e, t._muted = e);
                        }),
                    a(1, t, "musicMuted",
                        function () {
                            return t._musicMuted;
                        },
                        function (e) {
                            e != t._musicMuted && (e ? (t._tMusic && t._musicChannel && !t._musicChannel.isStopped ? t._musicChannel.pause() : t._musicChannel = null, t._musicMuted = e) : (t._musicMuted = e, t._tMusic && t._musicChannel && t._musicChannel.resume()));
                        }),
                    a(1, t, "soundMuted",
                        function () {
                            return t._soundMuted;
                        },
                        function (e) {
                            t._soundMuted = e;
                        }),
                    t.addChannel = function (e) {
                        t._channels.indexOf(e) >= 0 || t._channels.push(e);
                    },
                    t.removeChannel = function (e) {
                        var i = 0;
                        for (i = t._channels.length - 1; i >= 0; i--) t._channels[i] == e && t._channels.splice(i, 1);
                    },
                    t.disposeSoundIfNotUsed = function (e) {
                        var i = 0;
                        for (i = t._channels.length - 1; i >= 0; i--) if (t._channels[i].url == e) return;
                        t.destroySound(e);
                    },
                    t._visibilityChange = function () {
                        i.stage.isVisibility ? t._stageOnFocus() : t._stageOnBlur();
                    },
                    t._stageOnBlur = function () {
                        t._isActive = !1,
                            t._musicChannel && (t._musicChannel.isStopped || (t._blurPaused = !0, t._musicChannel.pause())),
                            t.stopAllSound(),
                            i.stage.once("mousedown", null, t._stageOnFocus);
                    },
                    t._recoverWebAudio = function () {
                        nt.ctx && "running" != nt.ctx.state && nt.ctx.resume && nt.ctx.resume();
                    },
                    t._stageOnFocus = function () {
                        t._isActive = !0,
                            t._recoverWebAudio(),
                            i.stage.off("mousedown", null, t._stageOnFocus),
                            t._blurPaused && t._musicChannel && t._musicChannel.isStopped && (t._blurPaused = !1, t._musicChannel.resume());
                    },
                    t.playSound = function (e, s, n, a, r) {
                        if (void 0 === s && (s = 1), void 0 === r && (r = 0), !t._isActive || !e) return null;
                        if (t._muted) return null;
                        if (t._recoverWebAudio(), (e = R.formatURL(e)) == t._tMusic) {
                            if (t._musicMuted) return null;
                        } else {
                            if (P.isConchApp) {
                                var o = $.getFileExtension(e);
                                if ("wav" != o && "ogg" != o) return alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."),
                                    null;
                            }
                            if (t._soundMuted) return null;
                        }
                        var h;
                        O.onMiniGame || (h = i.loader.getRes(e)),
                            a || (a = t._soundClass),
                            h || ((h = new a()).load(e), rt.cacheRes(e, h));
                        var l;
                        return (l = h.play(r, s)) ? (l.url = e, l.volume = e == t._tMusic ? t.musicVolume : t.soundVolume, l.completeHandler = n, l) : null;
                    },
                    t.destroySound = function (t) {
                        var e = i.loader.getRes(t);
                        e && (rt.clearRes(t), e.dispose());
                    },
                    t.playMusic = function (e, i, s, n) {
                        return void 0 === i && (i = 0),
                            void 0 === n && (n = 0),
                            e = R.formatURL(e),
                            t._tMusic = e,
                            t._musicChannel && t._musicChannel.stop(),
                            t._musicChannel = t.playSound(e, i, s, t._musicClass, n);
                    },
                    t.stopSound = function (e) {
                        e = R.formatURL(e);
                        var i, s = 0;
                        for (s = t._channels.length - 1; s >= 0; s--)(i = t._channels[s]).url == e && i.stop();
                    },
                    t.stopAll = function () {
                        t._tMusic = null;
                        var e = 0;
                        for (e = t._channels.length - 1; e >= 0; e--) t._channels[e].stop();
                    },
                    t.stopAllSound = function () {
                        var e, i = 0;
                        for (i = t._channels.length - 1; i >= 0; i--)(e = t._channels[i]).url != t._tMusic && e.stop();
                    },
                    t.stopMusic = function () {
                        t._musicChannel && t._musicChannel.stop(),
                            t._tMusic = null;
                    },
                    t.setSoundVolume = function (e, i) {
                        if (i) i = R.formatURL(i),
                            t._setVolume(i, e);
                        else {
                            t.soundVolume = e;
                            var s, n = 0;
                            for (n = t._channels.length - 1; n >= 0; n--)(s = t._channels[n]).url != t._tMusic && (s.volume = e);
                        }
                    },
                    t.setMusicVolume = function (e) {
                        t.musicVolume = e,
                            t._setVolume(t._tMusic, e);
                    },
                    t._setVolume = function (e, i) {
                        e = R.formatURL(e);
                        var s, n = 0;
                        for (n = t._channels.length - 1; n >= 0; n--)(s = t._channels[n]).url == e && (s.volume = i);
                    },
                    t.musicVolume = 1,
                    t.soundVolume = 1,
                    t.playbackRate = 1,
                    t._useAudioMusic = !0,
                    t._muted = !1,
                    t._soundMuted = !1,
                    t._musicMuted = !1,
                    t._tMusic = null,
                    t._musicChannel = null,
                    t._channels = [],
                    t._autoStopMusic = !1,
                    t._blurPaused = !1,
                    t._isActive = !0,
                    t._soundClass = null,
                    t._musicClass = null,
                    t.autoReleaseSound = !0,
                    t;
            }(),
            E = function () {
                function e() { }
                var i;
                return n(e, "laya.net.LocalStorage"),
                    e.__init__ = function () {
                        e._baseClass || (e._baseClass = i, i.init()),
                            e.items = e._baseClass.items,
                            e.support = e._baseClass.support;
                    },
                    e.setItem = function (t, i) {
                        e._baseClass.setItem(t, i);
                    },
                    e.getItem = function (t) {
                        return e._baseClass.getItem(t);
                    },
                    e.setJSON = function (t, i) {
                        e._baseClass.setJSON(t, i);
                    },
                    e.getJSON = function (t) {
                        return e._baseClass.getJSON(t);
                    },
                    e.removeItem = function (t) {
                        e._baseClass.removeItem(t);
                    },
                    e.clear = function () {
                        e._baseClass.clear();
                    },
                    e._baseClass = null,
                    e.items = null,
                    e.support = !1,
                    e.__init$ = function () {
                        i = function () {
                            function e() { }
                            return n(e, ""),
                                e.init = function () {
                                    try {
                                        e.items = t.localStorage,
                                            e.setItem("laya", "1"),
                                            e.removeItem("laya"),
                                            e.support = !0;
                                    } catch (t) { }
                                    e.support || console.log("LocalStorage is not supprot or browser is private mode.");
                                },
                                e.setItem = function (t, i) {
                                    try {
                                        e.support && e.items.setItem(t, i);
                                    } catch (t) {
                                        console.warn("set localStorage failed", t);
                                    }
                                },
                                e.getItem = function (t) {
                                    return e.support ? e.items.getItem(t) : null;
                                },
                                e.setJSON = function (t, i) {
                                    try {
                                        e.support && e.items.setItem(t, JSON.stringify(i));
                                    } catch (t) {
                                        console.warn("set localStorage failed", t);
                                    }
                                },
                                e.getJSON = function (t) {
                                    return JSON.parse(e.support ? e.items.getItem(t) : null);
                                },
                                e.removeItem = function (t) {
                                    e.support && e.items.removeItem(t);
                                },
                                e.clear = function () {
                                    e.support && e.items.clear();
                                },
                                e.items = null,
                                e.support = !1,
                                e;
                        }();
                    },
                    e;
            }(),
            A = (function () {
                function t() { }
                n(t, "laya.net.ResourceVersion"),
                    t.enable = function (e, s, n) {
                        void 0 === n && (n = 2),
                            laya.net.ResourceVersion.type = n,
                            i.loader.load(e, l.create(null, t.onManifestLoaded, [s]), null, "json"),
                            R.customFormat = t.addVersionPrefix;
                    },
                    t.onManifestLoaded = function (e, i) {
                        t.manifest = i,
                            e.run(),
                            i || console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。");
                    },
                    t.addVersionPrefix = function (e) {
                        return t.manifest && t.manifest[e] ? 2 == t.type ? t.manifest[e] : t.manifest[e] + "/" + e : e;
                    },
                    t.FOLDER_VERSION = 1,
                    t.FILENAME_VERSION = 2,
                    t.manifest = null,
                    t.type = 1;
            }(),
                function () {
                    function t() {
                        this.fontName = null,
                            this.complete = null,
                            this.err = null,
                            this._fontTxt = null,
                            this._url = null,
                            this._div = null,
                            this._txtWidth = NaN,
                            this._http = null;
                    }
                    n(t, "laya.net.TTFLoader");
                    var e = t.prototype;
                    return e.load = function (t) {
                        this._url = t;
                        var e = t.split(".ttf")[0].split("/");
                        this.fontName = e[e.length - 1],
                            O.window.conch ? this._loadConch() : O.window.FontFace ? this._loadWithFontFace() : this._loadWithCSS();
                    },
                        e._loadConch = function () {
                            this._http = new at(),
                                this._http.on("error", this, this._onErr),
                                this._http.on("complete", this, this._onHttpLoaded),
                                this._http.send(this._url, null, "get", "arraybuffer");
                        },
                        e._onHttpLoaded = function (t) {
                            O.window.conch.setFontFaceFromBuffer(this.fontName, t),
                                this._clearHttp(),
                                this._complete();
                        },
                        e._clearHttp = function () {
                            this._http && (this._http.off("error", this, this._onErr), this._http.off("complete", this, this._onHttpLoaded), this._http = null);
                        },
                        e._onErr = function () {
                            this._clearHttp(),
                                this.err && (this.err.runWith("fail:" + this._url), this.err = null);
                        },
                        e._complete = function () {
                            i.timer.clear(this, this._complete),
                                i.timer.clear(this, this._checkComplete),
                                this._div && this._div.parentNode && (this._div.parentNode.removeChild(this._div), this._div = null),
                                this.complete && (this.complete.runWith(this), this.complete = null);
                        },
                        e._checkComplete = function () {
                            r.measureText("LayaTTFFont", this._fontTxt).width != this._txtWidth && this._complete();
                        },
                        e._loadWithFontFace = function () {
                            var t = new O.window.FontFace(this.fontName, "url('" + this._url + "')");
                            O.window.document.fonts.add(t);
                            var e = this;
                            t.loaded.then(function () {
                                e._complete();
                            }),
                                t.load();
                        },
                        e._createDiv = function () {
                            this._div = O.createElement("div"),
                                this._div.innerHTML = "laya";
                            var t = this._div.style;
                            t.fontFamily = this.fontName,
                                t.position = "absolute",
                                t.left = "-100px",
                                t.top = "-100px",
                                O.document.body.appendChild(this._div);
                        },
                        e._loadWithCSS = function () {
                            var t = this,
                                e = O.createElement("style");
                            e.type = "text/css",
                                O.document.body.appendChild(e),
                                e.textContent = "@font-face { font-family:'" + this.fontName + "'; src:url('" + this._url + "');}",
                                this._fontTxt = "40px " + this.fontName,
                                this._txtWidth = r.measureText("LayaTTFFont", this._fontTxt).width;
                            var s = this;
                            e.onload = function () {
                                i.timer.once(1e4, s, t._complete);
                            },
                                i.timer.loop(20, this, this._checkComplete),
                                this._createDiv();
                        },
                        t._testString = "LayaTTFFont",
                        t;
                }()),
            R = function () {
                function t(e) {
                    this._url = null,
                        this._path = null,
                        this._url = t.formatURL(e),
                        this._path = t.getPath(e);
                }
                n(t, "laya.net.URL");
                var e = t.prototype;
                return a(0, e, "path",
                    function () {
                        return this._path;
                    }),
                    a(0, e, "url",
                        function () {
                            return this._url;
                        }),
                    t.formatURL = function (e, i) {
                        if (!e) return "null path";
                        if (e.indexOf(":") > 0) return e;
                        null != t.customFormat && (e = t.customFormat(e, i));
                        var s = e.charAt(0);
                        if ("." === s) return t.formatRelativePath((i || t.basePath) + e);
                        if ("~" === s) return t.rootPath + e.substring(1);
                        if ("d" === s) {
                            if (0 === e.indexOf("data:image")) return e;
                        } else if ("/" === s) return e;
                        return (i || t.basePath) + e;
                    },
                    t.formatRelativePath = function (t) {
                        for (var e = t.split("/"), i = 0, s = e.length; i < s; i++)".." == e[i] && (e.splice(i - 1, 2), i -= 2);
                        return e.join("/");
                    },
                    t.isAbsolute = function (t) {
                        return t.indexOf(":") > 0 || "/" == t.charAt(0);
                    },
                    t.getPath = function (t) {
                        var e = t.lastIndexOf("/");
                        return e > 0 ? t.substr(0, e + 1) : "";
                    },
                    t.getFileName = function (t) {
                        var e = t.lastIndexOf("/");
                        return e > 0 ? t.substr(e + 1) : t;
                    },
                    t.version = {},
                    t.basePath = "",
                    t.rootPath = "",
                    t.customFormat = function (e) {
                        var i = t.version[e];
                        return !P.isConchApp && i && (e += "?v=" + i),
                            e;
                    },
                    t;
            }(),
            P = function () {
                function e(t, s) {
                    function n() {
                        i.stage._loop(),
                            O.window.requestAnimationFrame(n);
                    }
                    this._timeId = 0;
                    var a = e._mainCanvas.source.style;
                    a.position = "absolute",
                        a.top = a.left = "0px",
                        a.background = "#000000",
                        e._mainCanvas.source.id = "layaCanvas";
                    var r = laya.renders.Render.isWebGL;
                    e._mainCanvas.source.width = t,
                        e._mainCanvas.source.height = s,
                        r && e.WebGL.init(e._mainCanvas, t, s),
                        O.container.appendChild(e._mainCanvas.source),
                        (e._context = new k(t, s, r ? null : e._mainCanvas)).ctx.setIsMainContext(),
                        O.window.requestAnimationFrame(n),
                        i.stage.on("visibilitychange", this, this._onVisibilitychange);
                }
                n(e, "laya.renders.Render");
                var s = e.prototype;
                return s._onVisibilitychange = function () {
                    i.stage.isVisibility ? 0 != this._timeId && O.window.clearInterval(this._timeId) : this._timeId = O.window.setInterval(this._enterFrame, 1e3);
                },
                    s._enterFrame = function (t) {
                        i.stage._loop();
                    },
                    a(1, e, "context",
                        function () {
                            return e._context;
                        }),
                    a(1, e, "canvas",
                        function () {
                            return e._mainCanvas.source;
                        }),
                    e._context = null,
                    e._mainCanvas = null,
                    e.WebGL = null,
                    e.isConchNode = !1,
                    e.isConchApp = !1,
                    e.isConchWebGL = !1,
                    e.isWebGL = !1,
                    e.is3DMode = !1,
                    e.optimizeTextureMemory = function (t, e) {
                        return !0;
                    },
                    e.__init$ = function () {
                        t.ConchRenderType = t.ConchRenderType || 1,
                            t.ConchRenderType |= t.conch ? 4 : 0,
                            e.isConchNode = 5 == (5 & t.ConchRenderType),
                            e.isConchApp = 4 == (4 & t.ConchRenderType),
                            e.isConchWebGL = 6 == t.ConchRenderType;
                    },
                    e;
            }(),
            k = function () {
                function t(e, i, s) {
                    this.x = 0,
                        this.y = 0,
                        this._drawTexture = function (t, e, i) {
                            i[0].loaded && this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e);
                        },
                        this._fillTexture = function (t, e, i) {
                            i[0].loaded && this.ctx.fillTexture(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
                        },
                        this._drawTextureWithTransform = function (t, e, i) {
                            i[0].loaded && this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], t, e, i[6]);
                        },
                        this._fillQuadrangle = function (t, e, i) {
                            this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4]);
                        },
                        this._drawRect = function (t, e, i) {
                            var s = this.ctx;
                            null != i[4] && (s.fillStyle = i[4], s.fillRect(t + i[0], e + i[1], i[2], i[3], null)),
                                null != i[5] && (s.strokeStyle = i[5], s.lineWidth = i[6], s.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]));
                        },
                        this._drawPie = function (t, e, i) {
                            var s = this.ctx;
                            P.isWebGL && s.setPathId(i[8]),
                                s.beginPath(),
                                P.isWebGL ? (s.movePath(i[0] + t, i[1] + e), s.moveTo(0, 0)) : s.moveTo(t + i[0], e + i[1]),
                                s.arc(t + i[0], e + i[1], i[2], i[3], i[4]),
                                s.closePath(),
                                this._fillAndStroke(i[5], i[6], i[7], !0);
                        },
                        this._clipRect = function (t, e, i) {
                            this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3]);
                        },
                        this._fillRect = function (t, e, i) {
                            this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4]);
                        },
                        this._drawCircle = function (e, i, s) {
                            var n = this.ctx;
                            P.isWebGL && n.setPathId(s[6]),
                                V.drawCall++ ,
                                n.beginPath(),
                                P.isWebGL && n.movePath(s[0] + e, s[1] + i),
                                n.arc(s[0] + e, s[1] + i, s[2], 0, t.PI2),
                                n.closePath(),
                                this._fillAndStroke(s[3], s[4], s[5], !0);
                        },
                        this._fillCircle = function (e, i, s) {
                            V.drawCall++;
                            var n = this.ctx;
                            n.beginPath(),
                                n.fillStyle = s[3],
                                n.arc(s[0] + e, s[1] + i, s[2], 0, t.PI2),
                                n.fill();
                        },
                        this._setShader = function (t, e, i) {
                            this.ctx.setShader(i[0]);
                        },
                        this._drawLine = function (t, e, i) {
                            var s = this.ctx;
                            P.isWebGL && s.setPathId(i[6]),
                                s.beginPath(),
                                s.strokeStyle = i[4],
                                s.lineWidth = i[5],
                                P.isWebGL ? (s.movePath(t, e), s.moveTo(i[0], i[1]), s.lineTo(i[2], i[3])) : (s.moveTo(t + i[0], e + i[1]), s.lineTo(t + i[2], e + i[3])),
                                s.stroke();
                        },
                        this._drawLines = function (t, e, i) {
                            var s = this.ctx;
                            P.isWebGL && s.setPathId(i[5]),
                                s.beginPath(),
                                t += i[0],
                                e += i[1],
                                P.isWebGL && s.movePath(t, e),
                                s.strokeStyle = i[3],
                                s.lineWidth = i[4];
                            var n = i[2],
                                a = 2,
                                r = n.length;
                            if (P.isWebGL) for (s.moveTo(n[0], n[1]); a < r;) s.lineTo(n[a++], n[a++]);
                            else for (s.moveTo(t + n[0], e + n[1]); a < r;) s.lineTo(t + n[a++], e + n[a++]);
                            s.stroke();
                        },
                        this._drawLinesWebGL = function (t, e, i) {
                            this.ctx.drawLines(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4]);
                        },
                        this._drawCurves = function (t, e, i) {
                            this.ctx.drawCurves(t, e, i);
                        },
                        this._draw = function (t, e, i) {
                            i[0].call(null, this, t, e);
                        },
                        this._transformByMatrix = function (t, e, i) {
                            this.ctx.transformByMatrix(i[0]);
                        },
                        this._setTransform = function (t, e, i) {
                            this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]);
                        },
                        this._setTransformByMatrix = function (t, e, i) {
                            this.ctx.setTransformByMatrix(i[0]);
                        },
                        this._save = function (t, e, i) {
                            this.ctx.save();
                        },
                        this._restore = function (t, e, i) {
                            this.ctx.restore();
                        },
                        this._translate = function (t, e, i) {
                            this.ctx.translate(i[0], i[1]);
                        },
                        this._transform = function (t, e, i) {
                            this.ctx.translate(i[1] + t, i[2] + e);
                            var s = i[0];
                            this.ctx.transform(s.a, s.b, s.c, s.d, s.tx, s.ty),
                                this.ctx.translate(- t - i[1], -e - i[2]);
                        },
                        this._rotate = function (t, e, i) {
                            this.ctx.translate(i[1] + t, i[2] + e),
                                this.ctx.rotate(i[0]),
                                this.ctx.translate(- t - i[1], -e - i[2]);
                        },
                        this._scale = function (t, e, i) {
                            this.ctx.translate(i[2] + t, i[3] + e),
                                this.ctx.scale(i[0], i[1]),
                                this.ctx.translate(- t - i[2], -e - i[3]);
                        },
                        this._alpha = function (t, e, i) {
                            this.ctx.globalAlpha *= i[0];
                        },
                        this._setAlpha = function (t, e, i) {
                            this.ctx.globalAlpha = i[0];
                        },
                        this._fillText = function (t, e, i) {
                            this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5]);
                        },
                        this._strokeText = function (t, e, i) {
                            this.ctx.strokeText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6]);
                        },
                        this._fillBorderText = function (t, e, i) {
                            this.ctx.fillBorderText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
                        },
                        this._blendMode = function (t, e, i) {
                            this.ctx.globalCompositeOperation = i[0];
                        },
                        this._beginClip = function (t, e, i) {
                            this.ctx.beginClip && this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3]);
                        },
                        this._setIBVB = function (t, e, i) {
                            this.ctx.setIBVB(i[0] + t, i[1] + e, i[2], i[3], i[4], i[5], i[6], i[7]);
                        },
                        this._fillTrangles = function (t, e, i) {
                            this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4]);
                        },
                        this._drawPath = function (t, e, i) {
                            var s = this.ctx;
                            P.isWebGL && s.setPathId(- 1),
                                s.beginPath(),
                                t += i[0],
                                e += i[1],
                                P.isWebGL && s.movePath(t, e);
                            for (var n = i[2], a = 0, r = n.length; a < r; a++) {
                                var o = n[a];
                                switch (o[0]) {
                                    case "moveTo":
                                        P.isWebGL ? s.moveTo(o[1], o[2]) : s.moveTo(t + o[1], e + o[2]);
                                        break;

                                    case "lineTo":
                                        P.isWebGL ? s.lineTo(o[1], o[2]) : s.lineTo(t + o[1], e + o[2]);
                                        break;

                                    case "arcTo":
                                        P.isWebGL ? s.arcTo(o[1], o[2], o[3], o[4], o[5]) : s.arcTo(t + o[1], e + o[2], t + o[3], e + o[4], o[5]);
                                        break;

                                    case "closePath":
                                        s.closePath();
                                }
                            }
                            var h = i[3];
                            null != h && (s.fillStyle = h.fillStyle, s.fill());
                            var l = i[4];
                            null != l && (s.strokeStyle = l.strokeStyle, s.lineWidth = l.lineWidth || 1, s.lineJoin = l.lineJoin, s.lineCap = l.lineCap, s.miterLimit = l.miterLimit, s.stroke());
                        },
                        this.drawPoly = function (t, e, i) {
                            this.ctx.drawPoly(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4], i[5], i[6]);
                        },
                        this._drawPoly = function (t, e, i) {
                            var s = this.ctx,
                                n = i[2],
                                a = 2,
                                r = n.length;
                            if (P.isWebGL) for (s.setPathId(i[6]), s.beginPath(), t += i[0], e += i[1], s.movePath(t, e), s.moveTo(n[0], n[1]); a < r;) s.lineTo(n[a++], n[a++]);
                            else for (s.beginPath(), t += i[0], e += i[1], s.moveTo(t + n[0], e + n[1]); a < r;) s.lineTo(t + n[a++], e + n[a++]);
                            s.closePath(),
                                this._fillAndStroke(i[3], i[4], i[5], i[7]);
                        },
                        this._drawSkin = function (t, e, i) {
                            var s = i[0];
                            if (s) {
                                var n = this.ctx;
                                s.render(n, t, e);
                            }
                        },
                        this._drawParticle = function (t, e, i) {
                            this.ctx.drawParticle(t + this.x, e + this.y, i[0]);
                        },
                        this._setFilters = function (t, e, i) {
                            this.ctx.setFilters(i);
                        },
                        s ? this.ctx = s.getContext("2d") : (s = yt.create("3D"), this.ctx = r.createWebGLContext2D(s), s._setContext(this.ctx)),
                        s.size(e, i),
                        this.canvas = s;
                }
                n(t, "laya.renders.RenderContext");
                var e = t.prototype;
                return e.destroy = function () {
                    this.canvas && (this.canvas.destroy(), this.canvas = null, this.ctx = null),
                        this.ctx && (this.ctx.destroy(), this.ctx = null);
                },
                    e.drawTexture = function (t, e, i, s, n) {
                        t.loaded && this.ctx.drawTexture(t, e, i, s, n, this.x, this.y);
                    },
                    e._drawTextures = function (t, e, i) {
                        i[0].loaded && this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y);
                    },
                    e.drawTextureWithTransform = function (t, e, i, s, n, a, r) {
                        t.loaded && this.ctx.drawTextureWithTransform(t, e, i, s, n, a, this.x, this.y, r);
                    },
                    e.fillQuadrangle = function (t, e, i, s, n) {
                        this.ctx.fillQuadrangle(t, e, i, s, n);
                    },
                    e.drawCanvas = function (t, e, i, s, n) {
                        this.ctx.drawCanvas(t, e + this.x, i + this.y, s, n);
                    },
                    e.drawRect = function (t, e, i, s, n, a) {
                        void 0 === a && (a = 1);
                        var r = this.ctx;
                        r.strokeStyle = n,
                            r.lineWidth = a,
                            r.strokeRect(t + this.x, e + this.y, i, s, a);
                    },
                    e._fillAndStroke = function (t, e, i, s) {
                        void 0 === s && (s = !1);
                        var n = this.ctx;
                        null != t && (n.fillStyle = t, P.isWebGL ? n.fill(s) : n.fill()),
                            null != e && i > 0 && (n.strokeStyle = e, n.lineWidth = i, n.stroke());
                    },
                    e.clipRect = function (t, e, i, s) {
                        this.ctx.clipRect(t + this.x, e + this.y, i, s);
                    },
                    e.fillRect = function (t, e, i, s, n) {
                        this.ctx.fillRect(t + this.x, e + this.y, i, s, n);
                    },
                    e.drawCircle = function (e, i, s, n, a) {
                        void 0 === a && (a = 1),
                            V.drawCall++;
                        var r = this.ctx;
                        r.beginPath(),
                            r.strokeStyle = n,
                            r.lineWidth = a,
                            r.arc(e + this.x, i + this.y, s, 0, t.PI2),
                            r.stroke();
                    },
                    e.drawTriangles = function (t, e, i) {
                        if (P.isWebGL) this.ctx.drawTriangles(i[0], t + i[1], e + i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9]);
                        else {
                            var s = i[5],
                                n = 0,
                                a = s.length,
                                r = this.ctx;
                            for (n = 0; n < a; n += 3) {
                                var o = 2 * s[n],
                                    h = 2 * s[n + 1],
                                    l = 2 * s[n + 2];
                                r.drawTriangle(i[0], i[3], i[4], o, h, l, i[6], !0);
                            }
                        }
                    },
                    e.fillCircle = function (e, i, s, n) {
                        V.drawCall++;
                        var a = this.ctx;
                        a.beginPath(),
                            a.fillStyle = n,
                            a.arc(e + this.x, i + this.y, s, 0, t.PI2),
                            a.fill();
                    },
                    e.setShader = function (t) {
                        this.ctx.setShader(t);
                    },
                    e.drawLine = function (t, e, i, s, n, a) {
                        void 0 === a && (a = 1);
                        var r = this.ctx;
                        r.beginPath(),
                            r.strokeStyle = n,
                            r.lineWidth = a,
                            r.moveTo(this.x + t, this.y + e),
                            r.lineTo(this.x + i, this.y + s),
                            r.stroke();
                    },
                    e.clear = function () {
                        this.ctx.clear();
                    },
                    e.transformByMatrix = function (t) {
                        this.ctx.transformByMatrix(t);
                    },
                    e.setTransform = function (t, e, i, s, n, a) {
                        this.ctx.setTransform(t, e, i, s, n, a);
                    },
                    e.setTransformByMatrix = function (t) {
                        this.ctx.setTransformByMatrix(t);
                    },
                    e.save = function () {
                        this.ctx.save();
                    },
                    e.restore = function () {
                        this.ctx.restore();
                    },
                    e.translate = function (t, e) {
                        this.ctx.translate(t, e);
                    },
                    e.transform = function (t, e, i, s, n, a) {
                        this.ctx.transform(t, e, i, s, n, a);
                    },
                    e.rotate = function (t) {
                        this.ctx.rotate(t);
                    },
                    e.scale = function (t, e) {
                        this.ctx.scale(t, e);
                    },
                    e.alpha = function (t) {
                        this.ctx.globalAlpha *= t;
                    },
                    e.setAlpha = function (t) {
                        this.ctx.globalAlpha = t;
                    },
                    e.fillWords = function (t, e, i, s, n, a) {
                        void 0 === a && (a = 0),
                            this.ctx.fillWords(t, e, i, s, n, a);
                    },
                    e.fillBorderWords = function (t, e, i, s, n, a, r) {
                        this.ctx.fillBorderWords(t, e, i, s, n, a, r);
                    },
                    e.fillText = function (t, e, i, s, n, a) {
                        this.ctx.fillText(t, e + this.x, i + this.y, s, n, a);
                    },
                    e.strokeText = function (t, e, i, s, n, a, r) {
                        this.ctx.strokeText(t, e + this.x, i + this.y, s, n, a, r);
                    },
                    e.blendMode = function (t) {
                        this.ctx.globalCompositeOperation = t;
                    },
                    e.flush = function () {
                        this.ctx.flush && this.ctx.flush();
                    },
                    e.addRenderObject = function (t) {
                        this.ctx.addRenderObject(t);
                    },
                    e.beginClip = function (t, e, i, s) {
                        this.ctx.beginClip && this.ctx.beginClip(t, e, i, s);
                    },
                    e.endClip = function () {
                        this.ctx.endClip && this.ctx.endClip();
                    },
                    e.fillTrangles = function (t, e, i) {
                        this.ctx.fillTrangles(i[0], i[1], i[2], i[3], i.length > 4 ? i[4] : null);
                    },
                    t.PI2 = 2 * Math.PI,
                    t;
            }(),
            D = function () {
                function t(e, i) {
                    switch (this._next = i || t.NORENDER, e) {
                        case 0:
                            return void (this._fun = this._no);

                        case 1:
                            return void (this._fun = this._image);

                        case 2:
                            return void (this._fun = this._alpha);

                        case 4:
                            return void (this._fun = this._transform);

                        case 8:
                            return void (this._fun = this._blend);

                        case 16:
                            return void (this._fun = this._canvas);

                        case 64:
                            return void (this._fun = this._mask);

                        case 128:
                            return void (this._fun = this._clip);

                        case 256:
                            return void (this._fun = this._style);

                        case 512:
                            return void (this._fun = this._graphics);

                        case 2048:
                            return void (this._fun = this._childs);

                        case 1024:
                            return void (this._fun = this._custom);

                        case 513:
                        case 517:
                            return void (this._fun = this._image2);

                        case 32:
                            return void (this._fun = b._filter);

                        case 69905:
                            return void (this._fun = t._initRenderFun);
                    }
                    this.onCreate(e);
                }
                n(t, "laya.renders.RenderSprite");
                var e = t.prototype;
                return e.onCreate = function (t) { },
                    e._style = function (t, e, i, s) {
                        t._style.render(t, e, i, s);
                        var n = this._next;
                        n._fun.call(n, t, e, i, s);
                    },
                    e._no = function (t, e, i, s) { },
                    e._custom = function (t, e, i, s) {
                        t.customRender(e, i, s);
                        var n = t._style._tf;
                        this._next._fun.call(this._next, t, e, i - n.translateX, s - n.translateY);
                    },
                    e._clip = function (e, i, s, n) {
                        var a = this._next;
                        if (a != t.NORENDER) {
                            var r = e._style.scrollRect;
                            i.ctx.save(),
                                i.ctx.clipRect(s, n, r.width, r.height),
                                a._fun.call(a, e, i, s - r.x, n - r.y),
                                i.ctx.restore();
                        }
                    },
                    e._blend = function (t, e, i, s) {
                        var n = t._style;
                        n.blendMode && (e.ctx.globalCompositeOperation = n.blendMode);
                        var a = this._next;
                        a._fun.call(a, t, e, i, s),
                            e.ctx.globalCompositeOperation = "source-over";
                    },
                    e._mask = function (t, e, i, s) {
                        var n = this._next;
                        n._fun.call(n, t, e, i, s);
                        var a = t.mask;
                        a && (e.ctx.globalCompositeOperation = "destination-in", (a.numChildren > 0 || !a.graphics._isOnlyOne()) && (a.cacheAsBitmap = !0), a.render(e, i - t.pivotX, s - t.pivotY)),
                            e.ctx.globalCompositeOperation = "source-over";
                    },
                    e._graphics = function (t, e, i, s) {
                        var n = t._style._tf;
                        t._graphics && t._graphics._render(t, e, i - n.translateX, s - n.translateY);
                        var a = this._next;
                        a._fun.call(a, t, e, i, s);
                    },
                    e._image = function (t, e, i, s) {
                        var n = t._style;
                        e.ctx.drawTexture2(i, s, n._tf.translateX, n._tf.translateY, t.transform, n.alpha, n.blendMode, t._graphics._one);
                    },
                    e._image2 = function (t, e, i, s) {
                        var n = t._style._tf;
                        e.ctx.drawTexture2(i, s, n.translateX, n.translateY, t.transform, 1, null, t._graphics._one);
                    },
                    e._alpha = function (t, e, i, s) {
                        var n;
                        if ((n = t._style.alpha) > .01 || t._needRepaint()) {
                            var a = e.ctx.globalAlpha;
                            e.ctx.globalAlpha *= n;
                            var r = this._next;
                            r._fun.call(r, t, e, i, s),
                                e.ctx.globalAlpha = a;
                        }
                    },
                    e._transform = function (e, i, s, n) {
                        var a = e.transform,
                            r = this._next;
                        a && r != t.NORENDER ? (i.save(), i.transform(a.a, a.b, a.c, a.d, a.tx + s, a.ty + n), r._fun.call(r, e, i, 0, 0), i.restore()) : r._fun.call(r, e, i, s, n);
                    },
                    e._childs = function (t, e, i, s) {
                        var n = t._style,
                            a = n._tf;
                        if (i = i - a.translateX + n.paddingLeft, s = s - a.translateY + n.paddingTop, n._calculation) {
                            var r = t._getWords();
                            if (r) {
                                var o = n;
                                o && (o.stroke ? e.fillBorderWords(r, i, s, o.font, o.color, o.strokeColor, o.stroke) : e.fillWords(r, i, s, o.font, o.color, "none" != o.textDecoration && o.underLine ? 1 : 0));
                            }
                        }
                        var h, l = t._childs,
                            c = l.length;
                        if (t.viewport || t.optimizeScrollRect && t._style.scrollRect) {
                            var u = t.viewport || t._style.scrollRect,
                                d = u.x,
                                _ = u.y,
                                p = u.right,
                                f = u.bottom,
                                m = NaN,
                                g = NaN;
                            for (v = 0; v < c; ++v)(h = l[v]).visible && (m = h._x) < p && m + h.width > d && (g = h._y) < f && g + h.height > _ && h.render(e, i, s);
                        } else for (var v = 0; v < c; ++v)(h = l[v])._style.visible && h.render(e, i, s);
                    },
                    e._canvas = function (t, e, i, s) {
                        var n = t._$P.cacheCanvas;
                        if (n) {
                            "bitmap" === n.type ? V.canvasBitmap++ : V.canvasNormal++;
                            var a = n.ctx;
                            if (t._needRepaint() || !a) this._canvas_repaint(t, e, i, s);
                            else {
                                var r = n._cacheRec;
                                e.drawCanvas(a.canvas, i + r.x, s + r.y, r.width, r.height);
                            }
                        } else this._next._fun.call(this._next, t, e, i, s);
                    },
                    e._canvas_repaint = function (t, e, s, n) {
                        var a = t._$P.cacheCanvas,
                            r = this._next;
                        if (a) {
                            var o, h, l, c, u = a.ctx,
                                d = t._needRepaint() || !u,
                                _ = a.type;
                            if ("bitmap" === _ ? V.canvasBitmap++ : V.canvasNormal++ , d) {
                                a._cacheRec || (a._cacheRec = new I());
                                var p, f;
                                P.isWebGL && "bitmap" !== _ ? a._cacheRec.setTo(- t.pivotX, -t.pivotY, 1, 1) : ((c = t.getSelfBounds()).x = c.x - t.pivotX, c.y = c.y - t.pivotY, c.x = c.x - 16, c.y = c.y - 16, c.width = c.width + 32, c.height = c.height + 32, c.x = Math.floor(c.x + s) - s, c.y = Math.floor(c.y + n) - n, c.width = Math.floor(c.width), c.height = Math.floor(c.height), a._cacheRec.copyFrom(c)),
                                    c = a._cacheRec;
                                var m = P.isWebGL ? 1 : O.pixelRatio * i.stage.clientScaleX,
                                    g = P.isWebGL ? 1 : O.pixelRatio * i.stage.clientScaleY;
                                if (!P.isWebGL) {
                                    var v, y = 1,
                                        b = 1;
                                    for (v = t; v && v != i.stage;) y *= v.scaleX,
                                        b *= v.scaleY,
                                        v = v.parent;
                                    P.isWebGL ? (y < 1 && (m *= y), b < 1 && (g *= b)) : (y > 1 && (m *= y), b > 1 && (g *= b));
                                }
                                if (t.scrollRect) {
                                    var x = t.scrollRect;
                                    c.x -= x.x,
                                        c.y -= x.y;
                                }
                                if (p = c.width * m, f = c.height * g, h = c.x, l = c.y, P.isWebGL && "bitmap" === _ && (p > 2048 || f > 2048)) return console.warn("cache bitmap size larger than 2048,cache ignored"),
                                    a.ctx && (H.recover("RenderContext", a.ctx), a.ctx.canvas.size(0, 0), a.ctx = null),
                                    void r._fun.call(r, t, e, s, n);
                                u || (u = a.ctx = H.getItem("RenderContext") || new k(p, f, yt.create("AUTO"))),
                                    u.ctx.sprite = t,
                                    (o = u.canvas).clear(),
                                    (o.width != p || o.height != f) && o.size(p, f),
                                    "bitmap" === _ ? o.context.asBitmap = !0 : "normal" === _ && (o.context.asBitmap = !1);
                                var w;
                                if (1 != m || 1 != g) {
                                    var M = u.ctx;
                                    M.save(),
                                        M.scale(m, g),
                                        !P.isConchWebGL && P.isConchApp && (w = t._$P.cf) && M.setFilterMatrix && M.setFilterMatrix(w._mat, w._alpha),
                                        r._fun.call(r, t, u, -h, -l),
                                        M.restore(),
                                        P.isConchApp && !P.isConchWebGL || t._applyFilters();
                                } else M = u.ctx,
                                    !P.isConchWebGL && P.isConchApp && (w = t._$P.cf) && M.setFilterMatrix && M.setFilterMatrix(w._mat, w._alpha),
                                    r._fun.call(r, t, u, -h, -l),
                                    P.isConchApp && !P.isConchWebGL || t._applyFilters();
                                t._$P.staticCache && (a.reCache = !1),
                                    V.canvasReCache++;
                            } else h = (c = a._cacheRec).x,
                                l = c.y,
                                o = u.canvas;
                            e.drawCanvas(o, s + h, n + l, c.width, c.height);
                        } else r._fun.call(r, t, u, s, n);
                    },
                    t.__init__ = function () {
                        var e, i = 0,
                            s = 0;
                        for (e = r.createRenderSprite(69905, null), s = t.renders.length = 4096, i = 0; i < s; i++) t.renders[i] = e;
                        t.renders[0] = r.createRenderSprite(0, null),
                            function (e, i) {
                                for (var s = 0,
                                    n = 0; n < e.length; n++) s |= e[n],
                                        t.renders[s] = i;
                            }([1, 512, 4, 2], new t(1, null)),
                            t.renders[513] = r.createRenderSprite(513, null),
                            t.renders[517] = new t(517, null);
                    },
                    t._initRenderFun = function (e, i, s, n) {
                        var a = e._renderType; (t.renders[a] = t._getTypeRender(a))._fun(e, i, s, n);
                    },
                    t._getTypeRender = function (t) {
                        for (var e = null,
                            i = 2048; i > 1;) i & t && (e = r.createRenderSprite(i, e)),
                                i >>= 1;
                        return e;
                    },
                    t.IMAGE = 1,
                    t.ALPHA = 2,
                    t.TRANSFORM = 4,
                    t.BLEND = 8,
                    t.CANVAS = 16,
                    t.FILTERS = 32,
                    t.MASK = 64,
                    t.CLIP = 128,
                    t.STYLE = 256,
                    t.GRAPHICS = 512,
                    t.CUSTOM = 1024,
                    t.CHILDS = 2048,
                    t.INIT = 69905,
                    t.renders = [],
                    t.NORENDER = new t(0, null),
                    t;
            }(),
            B = function () {
                function t() {
                    this._repaint = !1;
                }
                n(t, "laya.resource.Context");
                var e = t.prototype;
                return e.replaceReset = function () {
                    var e = 0,
                        i = 0;
                    i = t.replaceKeys.length;
                    var s;
                    for (e = 0; e < i; e++) s = t.replaceKeys[e],
                        this[t.newKeys[e]] = this[s];
                },
                    e.replaceResotre = function () {
                        this.__restore(),
                            this.__reset();
                    },
                    e.setIsMainContext = function () { },
                    e.drawTextures = function (t, e, i, s) {
                        V.drawCall += e.length / 2;
                        for (var n = t.width,
                            a = t.height,
                            r = 0,
                            o = e.length; r < o; r += 2) this.drawTexture(t, e[r], e[r + 1], n, a, i, s);
                    },
                    e.drawCanvas = function (t, e, i, s, n) {
                        V.drawCall++ ,
                            this.drawImage(t.source, e, i, s, n);
                    },
                    e.fillRect = function (t, e, i, s, n) {
                        V.drawCall++ ,
                            n && (this.fillStyle = n),
                            this.__fillRect(t, e, i, s);
                    },
                    e.fillText = function (t, e, i, s, n, a) {
                        V.drawCall++ ,
                            arguments.length > 3 && null != s && (this.font = s, this.fillStyle = n, this.textAlign = a, this.textBaseline = "top"),
                            this.__fillText(t, e, i);
                    },
                    e.fillBorderText = function (t, e, i, s, n, a, r, o) {
                        V.drawCall++ ,
                            this.font = s,
                            this.fillStyle = n,
                            this.textBaseline = "top",
                            this.strokeStyle = a,
                            this.lineWidth = r,
                            this.textAlign = o,
                            this.__strokeText(t, e, i),
                            this.__fillText(t, e, i);
                    },
                    e.strokeText = function (t, e, i, s, n, a, r) {
                        V.drawCall++ ,
                            arguments.length > 3 && null != s && (this.font = s, this.strokeStyle = n, this.lineWidth = a, this.textAlign = r, this.textBaseline = "top"),
                            this.__strokeText(t, e, i);
                    },
                    e.transformByMatrix = function (t) {
                        this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty);
                    },
                    e.setTransformByMatrix = function (t) {
                        this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty);
                    },
                    e.clipRect = function (t, e, i, s) {
                        V.drawCall++ ,
                            this.beginPath(),
                            this.rect(t, e, i, s),
                            this.clip();
                    },
                    e.drawTexture = function (t, e, i, s, n, a, r) {
                        V.drawCall++;
                        var o = t.uv,
                            h = t.bitmap.width,
                            l = t.bitmap.height;
                        this.drawImage(t.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e + a, i + r, s, n);
                    },
                    e.drawTextureWithTransform = function (t, e, i, s, n, a, r, o, h) {
                        V.drawCall++;
                        var l = t.uv,
                            c = t.bitmap.width,
                            u = t.bitmap.height;
                        this.save(),
                            1 != h && (this.globalAlpha *= h),
                            a ? (this.transform(a.a, a.b, a.c, a.d, a.tx + r, a.ty + o), this.drawImage(t.source, l[0] * c, l[1] * u, (l[2] - l[0]) * c, (l[5] - l[3]) * u, e, i, s, n)) : this.drawImage(t.source, l[0] * c, l[1] * u, (l[2] - l[0]) * c, (l[5] - l[3]) * u, e + r, i + o, s, n),
                            this.restore();
                    },
                    e.drawTexture2 = function (t, e, i, s, n, a, r, o) {
                        var h = o[0];
                        if (h.loaded && h.bitmap && h.source) {
                            V.drawCall++;
                            var l = 1 !== a;
                            if (l) {
                                var c = this.globalAlpha;
                                this.globalAlpha *= a;
                            }
                            var u = h.uv,
                                d = h.bitmap.width,
                                _ = h.bitmap.height;
                            n ? (this.save(), this.transform(n.a, n.b, n.c, n.d, n.tx + t, n.ty + e), this.drawImage(h.source, u[0] * d, u[1] * _, (u[2] - u[0]) * d, (u[5] - u[3]) * _, o[1] - i, o[2] - s, o[3], o[4]), this.restore()) : this.drawImage(h.source, u[0] * d, u[1] * _, (u[2] - u[0]) * d, (u[5] - u[3]) * _, o[1] - i + t, o[2] - s + e, o[3], o[4]),
                                l && (this.globalAlpha = c);
                        }
                    },
                    e.fillTexture = function (t, e, i, s, n, a, r, o) {
                        if (!o.pat) {
                            if (t.uv != lt.DEF_UV) {
                                var h = new yt("2D");
                                h.getContext("2d"),
                                    h.size(t.width, t.height),
                                    h.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0),
                                    t = new lt(h);
                            }
                            o.pat = this.createPattern(t.bitmap.source, a);
                        }
                        var l = e,
                            c = i,
                            u = 0,
                            d = 0;
                        r && (l += r.x % t.width, c += r.y % t.height, u -= r.x % t.width, d -= r.y % t.height),
                            this.translate(l, c),
                            this.fillRect(u, d, s, n, o.pat),
                            this.translate(- l, -c);
                    },
                    e.drawTriangle = function (t, e, i, s, n, a, r, o) {
                        var h = t.bitmap,
                            l = h.source,
                            c = t.width,
                            u = t.height,
                            d = h.width,
                            _ = h.height,
                            p = i[s] * d,
                            f = i[n] * d,
                            m = i[a] * d,
                            g = i[s + 1] * _,
                            v = i[n + 1] * _,
                            y = i[a + 1] * _,
                            b = e[s],
                            x = e[n],
                            w = e[a],
                            M = e[s + 1],
                            S = e[n + 1],
                            C = e[a + 1];
                        if (o) {
                            var T = (b + x + w) / 3,
                                I = (M + S + C) / 3,
                                L = b - T,
                                E = M - I,
                                A = Math.sqrt(L * L + E * E);
                            b = T + L / A * (A + 1),
                                M = I + E / A * (A + 1),
                                E = S - I,
                                x = T + (L = x - T) / (A = Math.sqrt(L * L + E * E)) * (A + 1),
                                S = I + E / A * (A + 1),
                                E = C - I,
                                w = T + (L = w - T) / (A = Math.sqrt(L * L + E * E)) * (A + 1),
                                C = I + E / A * (A + 1);
                        }
                        this.save(),
                            r && this.transform(r.a, r.b, r.c, r.d, r.tx, r.ty),
                            this.beginPath(),
                            this.moveTo(b, M),
                            this.lineTo(x, S),
                            this.lineTo(w, C),
                            this.closePath(),
                            this.clip();
                        var R = 1 / (p * v + g * m + f * y - v * m - g * f - p * y),
                            P = b * v + g * w + x * y - v * w - g * x - b * y,
                            k = p * x + b * m + f * w - x * m - b * f - p * w,
                            D = p * v * w + g * x * m + b * f * y - b * v * m - g * f * w - p * x * y,
                            B = M * v + g * C + S * y - v * C - g * S - M * y,
                            N = p * S + M * m + f * C - S * m - M * f - p * C,
                            O = p * v * C + g * S * m + M * f * y - M * v * m - g * f * C - p * S * y;
                        this.transform(P * R, B * R, k * R, N * R, D * R, O * R),
                            this.drawImage(l, t.uv[0] * d, t.uv[1] * _, c, u, t.uv[0] * d, t.uv[1] * _, c, u),
                            this.restore();
                    },
                    e.flush = function () {
                        return 0;
                    },
                    e.fillWords = function (t, e, i, s, n, a) {
                        s && (this.font = s),
                            n && (this.fillStyle = n);
                        this.textBaseline = "top",
                            this.textAlign = "left";
                        for (var r = 0,
                            o = t.length; r < o; r++) {
                            var h = t[r];
                            if (this.__fillText(h.char, h.x + e, h.y + i), 1 === a) {
                                var l = h.height,
                                    c = .5 * h.style.letterSpacing;
                                c || (c = 0),
                                    this.beginPath(),
                                    this.strokeStyle = n,
                                    this.lineWidth = 1,
                                    this.moveTo(e + h.x - c + .5, i + h.y + l + .5),
                                    this.lineTo(e + h.x + h.width + c + .5, i + h.y + l + .5),
                                    this.stroke();
                            }
                        }
                    },
                    e.fillBorderWords = function (t, e, i, s, n, a, r) {
                        s && (this.font = s),
                            n && (this.fillStyle = n),
                            this.textBaseline = "top",
                            this.lineWidth = r,
                            this.textAlign = "left",
                            this.strokeStyle = a;
                        for (var o = 0,
                            h = t.length; o < h; o++) {
                            var l = t[o];
                            this.__strokeText(l.char, l.x + e, l.y + i),
                                this.__fillText(l.char, l.x + e, l.y + i);
                        }
                    },
                    e.destroy = function () {
                        this.canvas.width = this.canvas.height = 0;
                    },
                    e.clear = function () {
                        this.clearRect(0, 0, this._canvas.width, this._canvas.height),
                            this._repaint = !1;
                    },
                    e.drawCurves = function (t, e, i) {
                        this.beginPath(),
                            this.strokeStyle = i[3],
                            this.lineWidth = i[4];
                        var s = i[2];
                        t += i[0],
                            e += i[1],
                            this.moveTo(t + s[0], e + s[1]);
                        for (var n = 2,
                            a = s.length; n < a;) this.quadraticCurveTo(t + s[n++], e + s[n++], t + s[n++], e + s[n++]);
                        this.stroke();
                    },
                    t.__init__ = function (t) {
                        var e = laya.resource.Context.prototype;
                        if (!(t = t || CanvasRenderingContext2D.prototype).inited) {
                            t.inited = !0,
                                t.__fillText = t.fillText,
                                t.__fillRect = t.fillRect,
                                t.__strokeText = t.strokeText;["drawTextures", "drawTriangle", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"].forEach(function (i) {
                                    t[i] = e[i];
                                });
                        }
                    },
                    t.replaceCanvasGetSet = function (t, e) {
                        var i = Object.getOwnPropertyDescriptor(t, e);
                        if (!i || !i.configurable) return !1;
                        var s, n = {};
                        for (s in i) "set" != s && (n[s] = i[s]);
                        var a = i.set;
                        return n.set = function (t) {
                            a.call(this, t);
                            var e = this.getContext("2d");
                            e && "__reset" in e && e.__reset();
                        },
                            Object.defineProperty(t, e, n),
                            !0;
                    },
                    t.replaceGetSet = function (e, i) {
                        var s = Object.getOwnPropertyDescriptor(e, i);
                        if (!s || !s.configurable) return !1;
                        var n, a = {};
                        for (n in s) "set" != n && (a[n] = s[n]);
                        var r = s.set,
                            o = "___" + i + "__";
                        return t.newKeys.push(o),
                            a.set = function (t) {
                                t != this[o] && (this[o] = t, r.call(this, t));
                            },
                            Object.defineProperty(e, i, a),
                            !0;
                    },
                    t._default = new t(),
                    t.newKeys = [],
                    s(t, ["replaceKeys",
                        function () {
                            return this.replaceKeys = ["font", "fillStyle", "textBaseline"];
                        }]),
                    t;
            }(),
            N = function () {
                function t(e) {
                    this._id = 0,
                        this._name = null,
                        this._resources = null,
                        this._memorySize = 0,
                        this._garbageCollectionRate = NaN,
                        this._isOverflow = !1,
                        this.autoRelease = !1,
                        this.autoReleaseMaxSize = 0,
                        this._id = ++t._uniqueIDCounter,
                        this._name = e || "Content Manager",
                        t._isResourceManagersSorted = !1,
                        this._memorySize = 0,
                        this._isOverflow = !1,
                        this.autoRelease = !1,
                        this.autoReleaseMaxSize = 536870912,
                        this._garbageCollectionRate = .2,
                        t._resourceManagers.push(this),
                        this._resources = [];
                }
                n(t, "laya.resource.ResourceManager");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.resource.IDispose": !0
                }),
                    e.getResourceByIndex = function (t) {
                        return this._resources[t];
                    },
                    e.getResourcesLength = function () {
                        return this._resources.length;
                    },
                    e.addResource = function (t) {
                        t.resourceManager && t.resourceManager.removeResource(t);
                        return - 1 === this._resources.indexOf(t) && (t._resourceManager = this, this._resources.push(t), this.addSize(t.memorySize), !0);
                    },
                    e.removeResource = function (t) {
                        var e = this._resources.indexOf(t);
                        return - 1 !== e && (this._resources.splice(e, 1), t._resourceManager = null, this._memorySize -= t.memorySize, !0);
                    },
                    e.unload = function () {
                        for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
                            t[e].destroy();
                        }
                        t.length = 0;
                    },
                    e.dispose = function () {
                        if (this === t._systemResourceManager) throw new Error("systemResourceManager不能被释放！");
                        t._resourceManagers.splice(t._resourceManagers.indexOf(this), 1),
                            t._isResourceManagersSorted = !1;
                        for (var e = this._resources.slice(0, this._resources.length), i = 0; i < e.length; i++) {
                            var s = e[i];
                            s.resourceManager.removeResource(s),
                                s.destroy();
                        }
                        e.length = 0;
                    },
                    e.addSize = function (t) {
                        t && (this.autoRelease && t > 0 && this._memorySize + t > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize), this._memorySize += t);
                    },
                    e.garbageCollection = function (t) {
                        var e = this._resources; (e = e.slice()).sort(function (t, e) {
                            if (!t || !e) throw new Error("a或b不能为空！");
                            return t.released && e.released ? 0 : t.released ? 1 : e.released ? -1 : t._lastUseFrameCount - e._lastUseFrameCount;
                        });
                        for (var i = V.loopCount,
                            s = 0,
                            n = e.length; s < n; s++) {
                            var a = e[s];
                            if (!(i - a._lastUseFrameCount > 1)) return void (this._memorySize >= t && (this._isOverflow = !0));
                            if (a.releaseResource(), this._memorySize < t) return void (this._isOverflow = !1);
                        }
                    },
                    a(0, e, "id",
                        function () {
                            return this._id;
                        }),
                    a(0, e, "name",
                        function () {
                            return this._name;
                        },
                        function (e) {
                            !e && "" === e || this._name === e || (this._name = e, t._isResourceManagersSorted = !1);
                        }),
                    a(0, e, "memorySize",
                        function () {
                            return this._memorySize;
                        }),
                    a(1, t, "systemResourceManager",
                        function () {
                            return t._systemResourceManager;
                        }),
                    t.__init__ = function () {
                        t.currentResourceManager = t.systemResourceManager;
                    },
                    t.getLoadedResourceManagerByIndex = function (e) {
                        return t._resourceManagers[e];
                    },
                    t.getLoadedResourceManagersCount = function () {
                        return t._resourceManagers.length;
                    },
                    t.recreateContentManagers = function (e) {
                        void 0 === e && (e = !1);
                        for (var i = t.currentResourceManager,
                            s = 0; s < t._resourceManagers.length; s++) {
                            t.currentResourceManager = t._resourceManagers[s];
                            for (var n = 0; n < t.currentResourceManager._resources.length; n++) t.currentResourceManager._resources[n].releaseResource(e),
                                t.currentResourceManager._resources[n].activeResource(e);
                        }
                        t.currentResourceManager = i;
                    },
                    t.releaseContentManagers = function (e) {
                        void 0 === e && (e = !1);
                        for (var i = t.currentResourceManager,
                            s = 0; s < t._resourceManagers.length; s++) {
                            t.currentResourceManager = t._resourceManagers[s];
                            for (var n = 0; n < t.currentResourceManager._resources.length; n++) {
                                var a = t.currentResourceManager._resources[n]; !a.released && a.releaseResource(e);
                            }
                        }
                        t.currentResourceManager = i;
                    },
                    t._uniqueIDCounter = 0,
                    t._isResourceManagersSorted = !1,
                    t._resourceManagers = [],
                    s(t, ["_systemResourceManager",
                        function () {
                            return this._systemResourceManager = new t("System Resource Manager");
                        },
                        "currentResourceManager",
                        function () {
                            return this.currentResourceManager = t._systemResourceManager;
                        }]),
                    t;
            }(),
            O = (function () {
                function t() { }
                n(t, "laya.system.System"),
                    t.changeDefinition = function (t, e) {
                        i[t] = e;
                        var s = t + "=classObj";
                        i._runScript(s);
                    },
                    t.__init__ = function () {
                        P.isConchApp && (conch.disableConchResManager(), conch.disableConchAutoRestoreLostedDevice());
                    };
            }(),
                function () {
                    function s() { }
                    return n(s, "laya.utils.Browser"),
                        a(1, s, "pixelRatio",
                            function () {
                                return s.__init__(),
                                    s.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") > -1 ? 2 : r.getPixelRatio();
                            }),
                        a(1, s, "height",
                            function () {
                                return s.__init__(),
                                    (i.stage && i.stage.canvasRotation ? s.clientWidth : s.clientHeight) * s.pixelRatio;
                            }),
                        a(1, s, "clientWidth",
                            function () {
                                return s.__init__(),
                                    s.window.innerWidth || s.document.body.clientWidth;
                            }),
                        a(1, s, "window",
                            function () {
                                return s.__init__(),
                                    s._window;
                            }),
                        a(1, s, "clientHeight",
                            function () {
                                return s.__init__(),
                                    s.window.innerHeight || s.document.body.clientHeight || s.document.documentElement.clientHeight;
                            }),
                        a(1, s, "width",
                            function () {
                                return s.__init__(),
                                    (i.stage && i.stage.canvasRotation ? s.clientHeight : s.clientWidth) * s.pixelRatio;
                            }),
                        a(1, s, "container",
                            function () {
                                return s.__init__(),
                                    s._container || ((s._container = s.createElement("div")).id = "layaContainer", s.document.body.appendChild(s._container)),
                                    s._container;
                            },
                            function (t) {
                                s._container = t;
                            }),
                        a(1, s, "document",
                            function () {
                                return s.__init__(),
                                    s._document;
                            }),
                        s.__init__ = function () {
                            s._window || (s._window = r.getWindow(), s._document = s.window.document, s._window.addEventListener("message",
                                function (t) {
                                    laya.utils.Browser._onMessage(t);
                                },
                                !1), s.document.__createElement = s.document.createElement, t.requestAnimationFrame = t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || t.msRequestAnimationFrame ||
                                function (e) {
                                    return t.setTimeout(e, 1e3 / 60);
                                },
                                s.userAgent = s.window.navigator.userAgent, s.onIOS = !!(s.u = s.userAgent).match(/\(i[^;]+;(U;)? CPU.+Mac OS X/), s.onMobile = s.u.indexOf("Mobile") > -1, s.onIPhone = s.u.indexOf("iPhone") > -1, s.onMac = s.u.indexOf("Mac OS X") > -1, s.onIPad = s.u.indexOf("iPad") > -1, s.onAndriod = s.u.indexOf("Android") > -1 || s.u.indexOf("Adr") > -1, s.onWP = s.u.indexOf("Windows Phone") > -1, s.onQQBrowser = s.u.indexOf("QQBrowser") > -1, s.onMQQBrowser = s.u.indexOf("MQQBrowser") > -1 || s.u.indexOf("Mobile") > -1 && s.u.indexOf("QQ") > -1, s.onIE = !!s.window.ActiveXObject || "ActiveXObject" in s.window, s.onWeiXin = s.u.indexOf("MicroMessenger") > -1, s.onPC = !s.onMobile, s.onSafari = s.u.indexOf("Safari") > -1, s.onFirefox = s.u.indexOf("Firefox") > -1, s.onEdge = s.u.indexOf("Edge") > -1, s.onMiniGame = s.u.indexOf("MiniGame") > -1, s.onLimixiu = s.u.indexOf("limixiu") > -1, s.httpProtocol = "http:" == s.window.location.protocol, s.onMiniGame && null == s.window.focus && console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0"), s.webAudioEnabled = !!(s.window.AudioContext || s.window.webkitAudioContext || s.window.mozAudioContext), s.soundType = s.webAudioEnabled ? "WEBAUDIOSOUND" : "AUDIOSOUND", st = s.webAudioEnabled ? nt : et, s.webAudioEnabled && nt.initWebAudio(), et._initMusicAudio(), s.enableTouch = "ontouchstart" in t || t.DocumentTouch && e instanceof DocumentTouch, t.focus(), L._soundClass = st, L._musicClass = et, P._mainCanvas = P._mainCanvas || yt.create("2D"), s.canvas || (s.canvas = yt.create("2D"), s.context = s.canvas.getContext("2d")));
                        },
                        s._onMessage = function (t) {
                            if (t.data && "size" == t.data.name) {
                                if (s.window.innerWidth = t.data.width, s.window.innerHeight = t.data.height, s.window.__innerHeight = t.data.clientHeight, !s.document.createEvent) return void console.warn("no document.createEvent");
                                var e = s.document.createEvent("HTMLEvents");
                                return e.initEvent("resize", !1, !1),
                                    void s.window.dispatchEvent(e);
                            }
                        },
                        s.createElement = function (t) {
                            return s.__init__(),
                                s.document.__createElement(t);
                        },
                        s.getElementById = function (t) {
                            return s.__init__(),
                                s.document.getElementById(t);
                        },
                        s.removeElement = function (t) {
                            t && t.parentNode && t.parentNode.removeChild(t);
                        },
                        s.now = function () {
                            return r.now();
                        },
                        s._window = null,
                        s._document = null,
                        s._container = null,
                        s.userAgent = null,
                        s.u = null,
                        s.onIOS = !1,
                        s.onMac = !1,
                        s.onMobile = !1,
                        s.onIPhone = !1,
                        s.onIPad = !1,
                        s.onAndriod = !1,
                        s.onAndroid = !1,
                        s.onWP = !1,
                        s.onQQBrowser = !1,
                        s.onMQQBrowser = !1,
                        s.onSafari = !1,
                        s.onFirefox = !1,
                        s.onEdge = !1,
                        s.onIE = !1,
                        s.onWeiXin = !1,
                        s.onMiniGame = !1,
                        s.onLimixiu = !1,
                        s.onPC = !1,
                        s.httpProtocol = !1,
                        s.webAudioEnabled = !1,
                        s.soundType = null,
                        s.enableTouch = !1,
                        s.canvas = null,
                        s.context = null,
                        s.__init$ = function () { },
                        s;
                }()),
            G = function () {
                function t(t) {
                    this._xd_ = !0,
                        this._allocated_ = 8,
                        this._pos_ = 0,
                        this._length = 0,
                        t ? (this._u8d_ = new Uint8Array(t), this._d_ = new DataView(this._u8d_.buffer), this._length = this._d_.byteLength) : this.___resizeBuffer(this._allocated_);
                }
                n(t, "laya.utils.Byte");
                var e = t.prototype;
                return e.___resizeBuffer = function (t) {
                    try {
                        var e = new Uint8Array(t);
                        null != this._u8d_ && (this._u8d_.length <= t ? e.set(this._u8d_) : e.set(this._u8d_.subarray(0, t))),
                            this._u8d_ = e,
                            this._d_ = new DataView(e.buffer);
                    } catch (e) {
                        throw "___resizeBuffer err:" + t;
                    }
                },
                    e.getString = function () {
                        return this.rUTF(this.getUint16());
                    },
                    e.getFloat32Array = function (t, e) {
                        var i = t + e;
                        i = i > this._length ? this._length : i;
                        var s = new Float32Array(this._d_.buffer.slice(t, i));
                        return this._pos_ = i,
                            s;
                    },
                    e.getUint8Array = function (t, e) {
                        var i = t + e;
                        i = i > this._length ? this._length : i;
                        var s = new Uint8Array(this._d_.buffer.slice(t, i));
                        return this._pos_ = i,
                            s;
                    },
                    e.getInt16Array = function (t, e) {
                        var i = t + e;
                        i = i > this._length ? this._length : i;
                        var s = new Int16Array(this._d_.buffer.slice(t, i));
                        return this._pos_ = i,
                            s;
                    },
                    e.getFloat32 = function () {
                        if (this._pos_ + 4 > this._length) throw "getFloat32 error - Out of bounds";
                        var t = this._d_.getFloat32(this._pos_, this._xd_);
                        return this._pos_ += 4,
                            t;
                    },
                    e.getFloat64 = function () {
                        if (this._pos_ + 8 > this._length) throw "getFloat64 error - Out of bounds";
                        var t = this._d_.getFloat64(this._pos_, this._xd_);
                        return this._pos_ += 8,
                            t;
                    },
                    e.writeFloat32 = function (t) {
                        this.ensureWrite(this._pos_ + 4),
                            this._d_.setFloat32(this._pos_, t, this._xd_),
                            this._pos_ += 4;
                    },
                    e.writeFloat64 = function (t) {
                        this.ensureWrite(this._pos_ + 8),
                            this._d_.setFloat64(this._pos_, t, this._xd_),
                            this._pos_ += 8;
                    },
                    e.getInt32 = function () {
                        if (this._pos_ + 4 > this._length) throw "getInt32 error - Out of bounds";
                        var t = this._d_.getInt32(this._pos_, this._xd_);
                        return this._pos_ += 4,
                            t;
                    },
                    e.getUint32 = function () {
                        if (this._pos_ + 4 > this._length) throw "getUint32 error - Out of bounds";
                        var t = this._d_.getUint32(this._pos_, this._xd_);
                        return this._pos_ += 4,
                            t;
                    },
                    e.writeInt32 = function (t) {
                        this.ensureWrite(this._pos_ + 4),
                            this._d_.setInt32(this._pos_, t, this._xd_),
                            this._pos_ += 4;
                    },
                    e.writeUint32 = function (t) {
                        this.ensureWrite(this._pos_ + 4),
                            this._d_.setUint32(this._pos_, t, this._xd_),
                            this._pos_ += 4;
                    },
                    e.getInt16 = function () {
                        if (this._pos_ + 2 > this._length) throw "getInt16 error - Out of bounds";
                        var t = this._d_.getInt16(this._pos_, this._xd_);
                        return this._pos_ += 2,
                            t;
                    },
                    e.getUint16 = function () {
                        if (this._pos_ + 2 > this._length) throw "getUint16 error - Out of bounds";
                        var t = this._d_.getUint16(this._pos_, this._xd_);
                        return this._pos_ += 2,
                            t;
                    },
                    e.writeUint16 = function (t) {
                        this.ensureWrite(this._pos_ + 2),
                            this._d_.setUint16(this._pos_, t, this._xd_),
                            this._pos_ += 2;
                    },
                    e.writeInt16 = function (t) {
                        this.ensureWrite(this._pos_ + 2),
                            this._d_.setInt16(this._pos_, t, this._xd_),
                            this._pos_ += 2;
                    },
                    e.getUint8 = function () {
                        if (this._pos_ + 1 > this._length) throw "getUint8 error - Out of bounds";
                        return this._d_.getUint8(this._pos_++);
                    },
                    e.writeUint8 = function (t) {
                        this.ensureWrite(this._pos_ + 1),
                            this._d_.setUint8(this._pos_, t),
                            this._pos_++;
                    },
                    e._getUInt8 = function (t) {
                        return this._d_.getUint8(t);
                    },
                    e._getUint16 = function (t) {
                        return this._d_.getUint16(t, this._xd_);
                    },
                    e._getMatrix = function () {
                        return new C(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());
                    },
                    e.rUTF = function (t) {
                        for (var e = "",
                            i = this._pos_ + t,
                            s = 0,
                            n = String.fromCharCode,
                            a = this._u8d_; this._pos_ < i;)(s = a[this._pos_++]) < 128 ? 0 != s && (e += n(s)) : e += n(s < 224 ? (63 & s) << 6 | 127 & a[this._pos_++] : s < 240 ? (31 & s) << 12 | (127 & a[this._pos_++]) << 6 | 127 & a[this._pos_++] : (15 & s) << 18 | (127 & a[this._pos_++]) << 12 | a[this._pos_++] << 6 & 127 | 127 & a[this._pos_++]),
                                0;
                        return e;
                    },
                    e.getCustomString = function (t) {
                        for (var e = "",
                            i = 0,
                            s = 0,
                            n = String.fromCharCode,
                            a = this._u8d_; t > 0;) if ((s = a[this._pos_]) < 128) e += n(s),
                                this._pos_++ ,
                                t--;
                            else for (i = s - 128, this._pos_++ , t -= i; i > 0;) s = a[this._pos_++],
                                e += n(a[this._pos_++] << 8 | s),
                                i--;
                        return e;
                    },
                    e.clear = function () {
                        this._pos_ = 0,
                            this.length = 0;
                    },
                    e.__getBuffer = function () {
                        return this._d_.buffer;
                    },
                    e.writeUTFBytes = function (t) {
                        for (var e = 0,
                            i = (t += "").length; e < i; e++) {
                            var s = t.charCodeAt(e);
                            s <= 127 ? this.writeByte(s) : s <= 2047 ? (this.ensureWrite(this._pos_ + 2), this._u8d_.set([192 | s >> 6, 128 | 63 & s], this._pos_), this._pos_ += 2) : s <= 65535 ? (this.ensureWrite(this._pos_ + 3), this._u8d_.set([224 | s >> 12, 128 | s >> 6 & 63, 128 | 63 & s], this._pos_), this._pos_ += 3) : (this.ensureWrite(this._pos_ + 4), this._u8d_.set([240 | s >> 18, 128 | s >> 12 & 63, 128 | s >> 6 & 63, 128 | 63 & s], this._pos_), this._pos_ += 4);
                        }
                    },
                    e.writeUTFString = function (t) {
                        var e = this.pos;
                        this.writeUint16(1),
                            this.writeUTFBytes(t);
                        var i = this.pos - e - 2;
                        if (i >= 65536) throw "writeUTFString byte len more than 65536";
                        this._d_.setUint16(e, i, this._xd_);
                    },
                    e.readUTFString = function () {
                        return this.readUTFBytes(this.getUint16());
                    },
                    e.getUTFString = function () {
                        return this.readUTFString();
                    },
                    e.readUTFBytes = function (t) {
                        if (void 0 === t && (t = -1), 0 == t) return "";
                        var e = this.bytesAvailable;
                        if (t > e) throw "readUTFBytes error - Out of bounds";
                        return t = t > 0 ? t : e,
                            this.rUTF(t);
                    },
                    e.getUTFBytes = function (t) {
                        return void 0 === t && (t = -1),
                            this.readUTFBytes(t);
                    },
                    e.writeByte = function (t) {
                        this.ensureWrite(this._pos_ + 1),
                            this._d_.setInt8(this._pos_, t),
                            this._pos_ += 1;
                    },
                    e.readByte = function () {
                        if (this._pos_ + 1 > this._length) throw "readByte error - Out of bounds";
                        return this._d_.getInt8(this._pos_++);
                    },
                    e.getByte = function () {
                        return this.readByte();
                    },
                    e.ensureWrite = function (t) {
                        this._length < t && (this._length = t),
                            this._allocated_ < t && (this.length = t);
                    },
                    e.writeArrayBuffer = function (t, e, i) {
                        if (void 0 === e && (e = 0), void 0 === i && (i = 0), e < 0 || i < 0) throw "writeArrayBuffer error - Out of bounds";
                        0 == i && (i = t.byteLength - e),
                            this.ensureWrite(this._pos_ + i);
                        var s = new Uint8Array(t);
                        this._u8d_.set(s.subarray(e, e + i), this._pos_),
                            this._pos_ += i;
                    },
                    a(0, e, "buffer",
                        function () {
                            var t = this._d_.buffer;
                            return t.byteLength == this.length ? t : t.slice(0, this.length);
                        }),
                    a(0, e, "endian",
                        function () {
                            return this._xd_ ? "littleEndian" : "bigEndian";
                        },
                        function (t) {
                            this._xd_ = "littleEndian" == t;
                        }),
                    a(0, e, "length",
                        function () {
                            return this._length;
                        },
                        function (t) {
                            this._allocated_ < t ? this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(t, 2 * this._allocated_))) : this._allocated_ > t && this.___resizeBuffer(this._allocated_ = t),
                                this._length = t;
                        }),
                    a(0, e, "pos",
                        function () {
                            return this._pos_;
                        },
                        function (t) {
                            this._pos_ = t;
                        }),
                    a(0, e, "bytesAvailable",
                        function () {
                            return this._length - this._pos_;
                        }),
                    t.getSystemEndian = function () {
                        if (!t._sysEndian) {
                            var e = new ArrayBuffer(2);
                            new DataView(e).setInt16(0, 256, !0),
                                t._sysEndian = 256 === new Int16Array(e)[0] ? "littleEndian" : "bigEndian";
                        }
                        return t._sysEndian;
                    },
                    t.BIG_ENDIAN = "bigEndian",
                    t.LITTLE_ENDIAN = "littleEndian",
                    t._sysEndian = null,
                    t;
            }(),
            F = function () {
                function t() { }
                return n(t, "laya.utils.CacheManager"),
                    t.regCacheByFunction = function (e, i) {
                        t.unRegCacheByFunction(e, i);
                        var s;
                        s = {
                            tryDispose: e,
                            getCacheList: i
                        },
                            t._cacheList.push(s);
                    },
                    t.unRegCacheByFunction = function (e, i) {
                        var s = 0,
                            n = 0;
                        for (n = t._cacheList.length, s = 0; s < n; s++) if (t._cacheList[s].tryDispose == e && t._cacheList[s].getCacheList == i) return void t._cacheList.splice(s, 1);
                    },
                    t.forceDispose = function () {
                        var e = 0,
                            i = t._cacheList.length;
                        for (e = 0; e < i; e++) t._cacheList[e].tryDispose(!0);
                    },
                    t.beginCheck = function (e) {
                        void 0 === e && (e = 15e3),
                            i.timer.loop(e, null, t._checkLoop);
                    },
                    t.stopCheck = function () {
                        i.timer.clear(null, t._checkLoop);
                    },
                    t._checkLoop = function () {
                        var e = t._cacheList;
                        if (!(e.length < 1)) {
                            var i = O.now(),
                                s = 0,
                                n = 0;
                            for (n = s = e.length; s > 0 && (t._index++ , t._index = t._index % n, e[t._index].tryDispose(!1), !(O.now() - i > t.loopTimeLimit));) s--;
                        }
                    },
                    t.loopTimeLimit = 2,
                    t._cacheList = [],
                    t._index = 0,
                    t;
            }(),
            U = function () {
                function t() { }
                return n(t, "laya.utils.ClassUtils"),
                    t.regClass = function (e, i) {
                        t._classMap[e] = i;
                    },
                    t.getRegClass = function (e) {
                        return t._classMap[e];
                    },
                    t.getInstance = function (e) {
                        var i = t.getClass(e);
                        return i ? new i() : (console.warn("[error] Undefined class:", e), null);
                    },
                    t.createByJson = function (e, i, s, n, a) {
                        "string" == typeof e && (e = JSON.parse(e));
                        var r = e.props;
                        if (!i && !(i = a ? a.runWith(e) : t.getInstance(r.runtime || e.type))) return null;
                        var o = e.child;
                        if (o) for (var h = 0,
                            l = o.length; h < l; h++) {
                            var c = o[h];
                            if ("render" !== c.props.name && "render" !== c.props.renderType || !i._$set_itemRender) if ("Graphic" == c.type) t.addGraphicsToSprite(c, i);
                            else if (t.isDrawType(c.type)) t.addGraphicToSprite(c, i, !0);
                            else {
                                var u = t.createByJson(c, null, s, n, a);
                                "Script" == c.type ? u.hasOwnProperty("owner") ? u.owner = i : u.hasOwnProperty("target") && (u.target = i) : "mask" == c.props.renderType ? i.mask = u : i.addChild(u);
                            } else i.itemRender = c;
                        }
                        if (r) for (var d in r) {
                            var _ = r[d];
                            "var" === d && s ? s[_] = i : _ instanceof Array && "function" == typeof i[d] ? i[d].apply(i, _) : i[d] = _;
                        }
                        return n && e.customProps && n.runWith([i, e]),
                            i.created && i.created(),
                            i;
                    },
                    t.addGraphicsToSprite = function (e, i) {
                        var s;
                        if ((s = e.child) && !(s.length < 1)) {
                            var n;
                            n = t._getGraphicsFromSprite(e, i);
                            var a = 0,
                                r = 0;
                            e.props && (a = t._getObjVar(e.props, "x", 0), r = t._getObjVar(e.props, "y", 0)),
                                0 != a && 0 != r && n.translate(a, r);
                            var o = 0,
                                h = 0;
                            for (h = s.length, o = 0; o < h; o++) t._addGraphicToGraphics(s[o], n);
                            0 != a && 0 != r && n.translate(- a, -r);
                        }
                    },
                    t.addGraphicToSprite = function (e, i, s) {
                        void 0 === s && (s = !1);
                        var n;
                        n = s ? t._getGraphicsFromSprite(e, i) : i.graphics,
                            t._addGraphicToGraphics(e, n);
                    },
                    t._getGraphicsFromSprite = function (t, e) {
                        var i;
                        if (!t || !t.props) return e.graphics;
                        var s;
                        switch (s = t.props.renderType) {
                            case "hit":
                            case "unHit":
                                var n;
                                e.hitArea || (e.hitArea = new Y()),
                                    (n = e.hitArea)[s] || (n[s] = new p()),
                                    i = n[s];
                        }
                        return i || (i = e.graphics),
                            i;
                    },
                    t._getTransformData = function (e) {
                        var i; (e.hasOwnProperty("pivotX") || e.hasOwnProperty("pivotY")) && (i = i || new C()).translate(- t._getObjVar(e, "pivotX", 0), -t._getObjVar(e, "pivotY", 0));
                        var s = t._getObjVar(e, "scaleX", 1),
                            n = t._getObjVar(e, "scaleY", 1),
                            a = t._getObjVar(e, "rotation", 0);
                        t._getObjVar(e, "skewX", 0),
                            t._getObjVar(e, "skewY", 0);
                        return 1 == s && 1 == n && 0 == a || ((i = i || new C()).scale(s, n), i.rotate(.0174532922222222 * a)),
                            i;
                    },
                    t._addGraphicToGraphics = function (e, i) {
                        var s;
                        if (s = e.props) {
                            var n;
                            if (n = t.DrawTypeDic[e.type]) {
                                var a;
                                a = i;
                                var r, o = t._getParams(s, n[1], n[2], n[3]); ((r = t._tM) || 1 != t._alpha) && (a.save(), r && a.transform(r), 1 != t._alpha && a.alpha(t._alpha)),
                                    a[n[0]].apply(a, o),
                                    (r || 1 != t._alpha) && a.restore();
                            }
                        }
                    },
                    t._adptLineData = function (t) {
                        return t[2] = parseFloat(t[0]) + parseFloat(t[2]),
                            t[3] = parseFloat(t[1]) + parseFloat(t[3]),
                            t;
                    },
                    t._adptTextureData = function (t) {
                        return t[0] = rt.getRes(t[0]),
                            t;
                    },
                    t._adptLinesData = function (e) {
                        return e[2] = t._getPointListByStr(e[2]),
                            e;
                    },
                    t.isDrawType = function (e) {
                        return "Image" != e && t.DrawTypeDic.hasOwnProperty(e);
                    },
                    t._getParams = function (e, i, s, n) {
                        void 0 === s && (s = 0);
                        var a; (a = t._temParam).length = i.length;
                        var r = 0,
                            o = 0;
                        for (o = i.length, r = 0; r < o; r++) a[r] = t._getObjVar(e, i[r][0], i[r][1]);
                        t._alpha = t._getObjVar(e, "alpha", 1);
                        var h;
                        return (h = t._getTransformData(e)) ? (s || (s = 0), h.translate(a[s], a[s + 1]), a[s] = a[s + 1] = 0, t._tM = h) : t._tM = null,
                            n && t[n] && (a = t[n](a)),
                            a;
                    },
                    t._getPointListByStr = function (t) {
                        var e, i = 0,
                            s = 0;
                        for (s = (e = t.split(",")).length, i = 0; i < s; i++) e[i] = parseFloat(e[i]);
                        return e;
                    },
                    t._getObjVar = function (t, e, i) {
                        return t.hasOwnProperty(e) ? t[e] : i;
                    },
                    t._temParam = [],
                    t._classMap = {
                        Sprite: "laya.display.Sprite",
                        Text: "laya.display.Text",
                        Animation: "laya.display.Animation",
                        Skeleton: "laya.ani.bone.Skeleton",
                        Particle2D: "laya.particle.Particle2D",
                        div: "laya.html.dom.HTMLDivElement",
                        p: "laya.html.dom.HTMLElement",
                        img: "laya.html.dom.HTMLImageElement",
                        span: "laya.html.dom.HTMLElement",
                        br: "laya.html.dom.HTMLBrElement",
                        style: "laya.html.dom.HTMLStyleElement",
                        font: "laya.html.dom.HTMLElement",
                        a: "laya.html.dom.HTMLElement",
                        "#text": "laya.html.dom.HTMLElement"
                    },
                    t.getClass = function (e) {
                        var s = t._classMap[e] || e;
                        return "string" == typeof s ? i.__classmap[s] : s;
                    },
                    t._tM = null,
                    t._alpha = NaN,
                    s(t, ["DrawTypeDic",
                        function () {
                            return this.DrawTypeDic = {
                                Rect: ["drawRect", [["x", 0], ["y", 0], ["width", 0], ["height", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                                Circle: ["drawCircle", [["x", 0], ["y", 0], ["radius", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                                Pie: ["drawPie", [["x", 0], ["y", 0], ["radius", 0], ["startAngle", 0], ["endAngle", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                                Image: ["drawTexture", [["x", 0], ["y", 0], ["width", 0], ["height", 0]]],
                                Texture: ["drawTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0]], 1, "_adptTextureData"],
                                FillTexture: ["fillTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0], ["repeat", null]], 1, "_adptTextureData"],
                                FillText: ["fillText", [["text", ""], ["x", 0], ["y", 0], ["font", null], ["color", null], ["textAlign", null]], 1],
                                Line: ["drawLine", [["x", 0], ["y", 0], ["toX", 0], ["toY", 0], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLineData"],
                                Lines: ["drawLines", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"],
                                Curves: ["drawCurves", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"],
                                Poly: ["drawPoly", [["x", 0], ["y", 0], ["points", ""], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]], 0, "_adptLinesData"]
                            };
                        }]),
                    t;
            }(),
            W = function () {
                function t(e) {
                    if (this._color = [], "string" == typeof e) {
                        this.strColor = e,
                            null === e && (e = "#000000"),
                            "#" == e.charAt(0) && (e = e.substr(1));
                        var i = e.length;
                        if (3 == i || 4 == i) {
                            for (var s = "",
                                n = 0; n < i; n++) s += e[n] + e[n];
                            e = s;
                        }
                        var a = this.numColor = parseInt(e, 16);
                        if (8 == e.length) return void (this._color = [parseInt(e.substr(0, 2), 16) / 255, ((16711680 & a) >> 16) / 255, ((65280 & a) >> 8) / 255, (255 & a) / 255]);
                    } else a = this.numColor = e,
                        this.strColor = $.toHexColor(a);
                    this._color = [((16711680 & a) >> 16) / 255, ((65280 & a) >> 8) / 255, (255 & a) / 255, 1],
                        this._color.__id = ++t._COLODID;
                }
                return n(t, "laya.utils.Color"),
                    t._initDefault = function () {
                        t._DEFAULT = {};
                        for (var e in t._COLOR_MAP) t._SAVE[e] = t._DEFAULT[e] = new t(t._COLOR_MAP[e]);
                        return t._DEFAULT;
                    },
                    t._initSaveMap = function () {
                        t._SAVE_SIZE = 0,
                            t._SAVE = {};
                        for (var e in t._DEFAULT) t._SAVE[e] = t._DEFAULT[e];
                    },
                    t.create = function (e) {
                        var i = t._SAVE[e + ""];
                        return null != i ? i : (t._SAVE_SIZE < 1e3 || t._initSaveMap(), t._SAVE[e + ""] = new t(e));
                    },
                    t._SAVE = {},
                    t._SAVE_SIZE = 0,
                    t._COLOR_MAP = {
                        white: "#FFFFFF",
                        red: "#FF0000",
                        green: "#00FF00",
                        blue: "#0000FF",
                        black: "#000000",
                        yellow: "#FFFF00",
                        gray: "#AAAAAA"
                    },
                    t._DEFAULT = t._initDefault(),
                    t._COLODID = 1,
                    t;
            }(),
            X = (function () {
                function t() {
                    this._values = [],
                        this._keys = [];
                }
                n(t, "laya.utils.Dictionary");
                var e = t.prototype;
                e.set = function (t, e) {
                    var i = this.indexOf(t);
                    i >= 0 ? this._values[i] = e : (this._keys.push(t), this._values.push(e));
                },
                    e.indexOf = function (t) {
                        var e = this._keys.indexOf(t);
                        return e >= 0 ? e : (t = "string" == typeof t ? Number(t) : "number" == typeof t ? t.toString() : t, this._keys.indexOf(t));
                    },
                    e.get = function (t) {
                        var e = this.indexOf(t);
                        return e < 0 ? null : this._values[e];
                    },
                    e.remove = function (t) {
                        var e = this.indexOf(t);
                        return e >= 0 && (this._keys.splice(e, 1), this._values.splice(e, 1), !0);
                    },
                    e.clear = function () {
                        this._values.length = 0,
                            this._keys.length = 0;
                    },
                    a(0, e, "values",
                        function () {
                            return this._values;
                        }),
                    a(0, e, "keys",
                        function () {
                            return this._keys;
                        });
            }(),
                function () {
                    function t() {
                        this.ratio = .92,
                            this.maxOffset = 60,
                            this._dragging = !1,
                            this._clickOnly = !0;
                    }
                    n(t, "laya.utils.Dragging");
                    var e = t.prototype;
                    return e.start = function (t, e, s, n, a, r, o, h) {
                        void 0 === h && (h = .92),
                            this.clearTimer(),
                            this.target = t,
                            this.area = e,
                            this.hasInertia = s,
                            this.elasticDistance = e ? n : 0,
                            this.elasticBackTime = a,
                            this.data = r,
                            this._disableMouseEvent = o,
                            this.ratio = h,
                            1 != t.globalScaleX || 1 != t.globalScaleY ? this._parent = t.parent : this._parent = i.stage,
                            this._clickOnly = !0,
                            this._dragging = !0,
                            this._elasticRateX = this._elasticRateY = 1,
                            this._lastX = this._parent.mouseX,
                            this._lastY = this._parent.mouseY,
                            i.stage.on("mouseup", this, this.onStageMouseUp),
                            i.stage.on("mouseout", this, this.onStageMouseUp),
                            i.timer.frameLoop(1, this, this.loop);
                    },
                        e.clearTimer = function () {
                            i.timer.clear(this, this.loop),
                                i.timer.clear(this, this.tweenMove),
                                this._tween && (this._tween.recover(), this._tween = null);
                        },
                        e.stop = function () {
                            this._dragging && (v.instance.disableMouseEvent = !1, i.stage.off("mouseup", this, this.onStageMouseUp), i.stage.off("mouseout", this, this.onStageMouseUp), this._dragging = !1, this.target && this.area && this.backToArea(), this.clear());
                        },
                        e.loop = function () {
                            var t = this._parent.getMousePoint(),
                                e = t.x,
                                s = t.y,
                                n = e - this._lastX,
                                a = s - this._lastY;
                            if (this._clickOnly) {
                                if (!(Math.abs(n * i.stage._canvasTransform.getScaleX()) > 1 || Math.abs(a * i.stage._canvasTransform.getScaleY()) > 1)) return;
                                this._clickOnly = !1,
                                    this._offsets || (this._offsets = []),
                                    this._offsets.length = 0,
                                    this.target.event("dragstart", this.data),
                                    v.instance.disableMouseEvent = this._disableMouseEvent,
                                    this.target._set$P("$_MOUSEDOWN", !1);
                            } else this._offsets.push(n, a);
                            0 === n && 0 === a || (this._lastX = e, this._lastY = s, this.target.x += n * this._elasticRateX, this.target.y += a * this._elasticRateY, this.area && this.checkArea(), this.target.event("dragmove", this.data));
                        },
                        e.checkArea = function () {
                            if (this.elasticDistance <= 0) this.backToArea();
                            else {
                                if (this.target.x < this.area.x) var t = this.area.x - this.target.x;
                                else t = this.target.x > this.area.x + this.area.width ? this.target.x - this.area.x - this.area.width : 0;
                                if (this._elasticRateX = Math.max(0, 1 - t / this.elasticDistance), this.target.y < this.area.y) var e = this.area.y - this.target.y;
                                else e = this.target.y > this.area.y + this.area.height ? this.target.y - this.area.y - this.area.height : 0;
                                this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance);
                            }
                        },
                        e.backToArea = function () {
                            this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width),
                                this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height);
                        },
                        e.onStageMouseUp = function (t) {
                            if (v.instance.disableMouseEvent = !1, i.stage.off("mouseup", this, this.onStageMouseUp), i.stage.off("mouseout", this, this.onStageMouseUp), i.timer.clear(this, this.loop), !this._clickOnly && this.target) if (this.hasInertia) {
                                this._offsets.length < 1 && this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY),
                                    this._offsetX = this._offsetY = 0;
                                for (var e = this._offsets.length,
                                    s = Math.min(e, 6), n = this._offsets.length - s, a = e - 1; a > n; a--) this._offsetY += this._offsets[a--],
                                        this._offsetX += this._offsets[a];
                                this._offsetX = this._offsetX / s * 2,
                                    this._offsetY = this._offsetY / s * 2,
                                    Math.abs(this._offsetX) > this.maxOffset && (this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset),
                                    Math.abs(this._offsetY) > this.maxOffset && (this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset),
                                    i.timer.frameLoop(1, this, this.tweenMove);
                            } else this.elasticDistance > 0 ? this.checkElastic() : this.clear();
                        },
                        e.checkElastic = function () {
                            var t = NaN,
                                e = NaN;
                            if (this.target.x < this.area.x ? t = this.area.x : this.target.x > this.area.x + this.area.width && (t = this.area.x + this.area.width), this.target.y < this.area.y ? e = this.area.y : this.target.y > this.area.y + this.area.height && (e = this.area.y + this.area.height), isNaN(t) && isNaN(e)) this.clear();
                            else {
                                var i = {};
                                isNaN(t) || (i.x = t),
                                    isNaN(e) || (i.y = e),
                                    this._tween = q.to(this.target, i, this.elasticBackTime, z.sineOut, l.create(this, this.clear), 0, !1, !1);
                            }
                        },
                        e.tweenMove = function () {
                            this._offsetX *= this.ratio * this._elasticRateX,
                                this._offsetY *= this.ratio * this._elasticRateY,
                                this.target.x += this._offsetX,
                                this.target.y += this._offsetY,
                                this.area && this.checkArea(),
                                this.target.event("dragmove", this.data),
                                (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) && (i.timer.clear(this, this.tweenMove), this.elasticDistance > 0 ? this.checkElastic() : this.clear());
                        },
                        e.clear = function () {
                            if (this.target) {
                                this.clearTimer();
                                var t = this.target;
                                this.target = null,
                                    this._parent = null,
                                    t.event("dragend", this.data);
                            }
                        },
                        t;
                }()),
            z = function () {
                function t() { }
                return n(t, "laya.utils.Ease"),
                    t.linearNone = function (t, e, i, s) {
                        return i * t / s + e;
                    },
                    t.linearIn = function (t, e, i, s) {
                        return i * t / s + e;
                    },
                    t.linearInOut = function (t, e, i, s) {
                        return i * t / s + e;
                    },
                    t.linearOut = function (t, e, i, s) {
                        return i * t / s + e;
                    },
                    t.bounceIn = function (e, i, s, n) {
                        return s - t.bounceOut(n - e, 0, s, n) + i;
                    },
                    t.bounceInOut = function (e, i, s, n) {
                        return e < .5 * n ? .5 * t.bounceIn(2 * e, 0, s, n) + i : .5 * t.bounceOut(2 * e - n, 0, s, n) + .5 * s + i;
                    },
                    t.bounceOut = function (t, e, i, s) {
                        return (t /= s) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e;
                    },
                    t.backIn = function (t, e, i, s, n) {
                        return void 0 === n && (n = 1.70158),
                            i * (t /= s) * t * ((n + 1) * t - n) + e;
                    },
                    t.backInOut = function (t, e, i, s, n) {
                        return void 0 === n && (n = 1.70158),
                            (t /= .5 * s) < 1 ? .5 * i * (t * t * ((1 + (n *= 1.525)) * t - n)) + e : i / 2 * ((t -= 2) * t * ((1 + (n *= 1.525)) * t + n) + 2) + e;
                    },
                    t.backOut = function (t, e, i, s, n) {
                        return void 0 === n && (n = 1.70158),
                            i * ((t = t / s - 1) * t * ((n + 1) * t + n) + 1) + e;
                    },
                    t.elasticIn = function (e, i, s, n, a, r) {
                        void 0 === a && (a = 0),
                            void 0 === r && (r = 0);
                        var o;
                        return 0 == e ? i : 1 == (e /= n) ? i + s : (r || (r = .3 * n), !a || s > 0 && a < s || s < 0 && a < -s ? (a = s, o = r / 4) : o = r / t.PI2 * Math.asin(s / a), -a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * n - o) * t.PI2 / r) + i);
                    },
                    t.elasticInOut = function (e, i, s, n, a, r) {
                        void 0 === a && (a = 0),
                            void 0 === r && (r = 0);
                        var o;
                        return 0 == e ? i : 2 == (e /= .5 * n) ? i + s : (r || (r = n * (.3 * 1.5)), !a || s > 0 && a < s || s < 0 && a < -s ? (a = s, o = r / 4) : o = r / t.PI2 * Math.asin(s / a), e < 1 ? a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * n - o) * t.PI2 / r) * -.5 + i : a * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * n - o) * t.PI2 / r) * .5 + s + i);
                    },
                    t.elasticOut = function (e, i, s, n, a, r) {
                        void 0 === a && (a = 0),
                            void 0 === r && (r = 0);
                        var o;
                        return 0 == e ? i : 1 == (e /= n) ? i + s : (r || (r = .3 * n), !a || s > 0 && a < s || s < 0 && a < -s ? (a = s, o = r / 4) : o = r / t.PI2 * Math.asin(s / a), a * Math.pow(2, -10 * e) * Math.sin((e * n - o) * t.PI2 / r) + s + i);
                    },
                    t.strongIn = function (t, e, i, s) {
                        return i * (t /= s) * t * t * t * t + e;
                    },
                    t.strongInOut = function (t, e, i, s) {
                        return (t /= .5 * s) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
                    },
                    t.strongOut = function (t, e, i, s) {
                        return i * ((t = t / s - 1) * t * t * t * t + 1) + e;
                    },
                    t.sineInOut = function (t, e, i, s) {
                        return .5 * -i * (Math.cos(Math.PI * t / s) - 1) + e;
                    },
                    t.sineIn = function (e, i, s, n) {
                        return - s * Math.cos(e / n * t.HALF_PI) + s + i;
                    },
                    t.sineOut = function (e, i, s, n) {
                        return s * Math.sin(e / n * t.HALF_PI) + i;
                    },
                    t.quintIn = function (t, e, i, s) {
                        return i * (t /= s) * t * t * t * t + e;
                    },
                    t.quintInOut = function (t, e, i, s) {
                        return (t /= .5 * s) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
                    },
                    t.quintOut = function (t, e, i, s) {
                        return i * ((t = t / s - 1) * t * t * t * t + 1) + e;
                    },
                    t.quartIn = function (t, e, i, s) {
                        return i * (t /= s) * t * t * t + e;
                    },
                    t.quartInOut = function (t, e, i, s) {
                        return (t /= .5 * s) < 1 ? .5 * i * t * t * t * t + e : .5 * -i * ((t -= 2) * t * t * t - 2) + e;
                    },
                    t.quartOut = function (t, e, i, s) {
                        return - i * ((t = t / s - 1) * t * t * t - 1) + e;
                    },
                    t.cubicIn = function (t, e, i, s) {
                        return i * (t /= s) * t * t + e;
                    },
                    t.cubicInOut = function (t, e, i, s) {
                        return (t /= .5 * s) < 1 ? .5 * i * t * t * t + e : .5 * i * ((t -= 2) * t * t + 2) + e;
                    },
                    t.cubicOut = function (t, e, i, s) {
                        return i * ((t = t / s - 1) * t * t + 1) + e;
                    },
                    t.quadIn = function (t, e, i, s) {
                        return i * (t /= s) * t + e;
                    },
                    t.quadInOut = function (t, e, i, s) {
                        return (t /= .5 * s) < 1 ? .5 * i * t * t + e : .5 * -i * (--t * (t - 2) - 1) + e;
                    },
                    t.quadOut = function (t, e, i, s) {
                        return - i * (t /= s) * (t - 2) + e;
                    },
                    t.expoIn = function (t, e, i, s) {
                        return 0 == t ? e : i * Math.pow(2, 10 * (t / s - 1)) + e - .001 * i;
                    },
                    t.expoInOut = function (t, e, i, s) {
                        return 0 == t ? e : t == s ? e + i : (t /= .5 * s) < 1 ? .5 * i * Math.pow(2, 10 * (t - 1)) + e : .5 * i * (2 - Math.pow(2, -10 * --t)) + e;
                    },
                    t.expoOut = function (t, e, i, s) {
                        return t == s ? e + i : i * (1 - Math.pow(2, -10 * t / s)) + e;
                    },
                    t.circIn = function (t, e, i, s) {
                        return - i * (Math.sqrt(1 - (t /= s) * t) - 1) + e;
                    },
                    t.circInOut = function (t, e, i, s) {
                        return (t /= .5 * s) < 1 ? .5 * -i * (Math.sqrt(1 - t * t) - 1) + e : .5 * i * (Math.sqrt(1 - (t -= 2) * t) + 1) + e;
                    },
                    t.circOut = function (t, e, i, s) {
                        return i * Math.sqrt(1 - (t = t / s - 1) * t) + e;
                    },
                    t.HALF_PI = .5 * Math.PI,
                    t.PI2 = 2 * Math.PI,
                    t;
            }(),
            Y = function () {
                function t() {
                    this._hit = null,
                        this._unHit = null;
                }
                n(t, "laya.utils.HitArea");
                var e = t.prototype;
                return e.isHit = function (e, i) {
                    return !!t.isHitGraphic(e, i, this.hit) && !t.isHitGraphic(e, i, this.unHit);
                },
                    e.contains = function (t, e) {
                        return this.isHit(t, e);
                    },
                    a(0, e, "hit",
                        function () {
                            return this._hit || (this._hit = new p()),
                                this._hit;
                        },
                        function (t) {
                            this._hit = t;
                        }),
                    a(0, e, "unHit",
                        function () {
                            return this._unHit || (this._unHit = new p()),
                                this._unHit;
                        },
                        function (t) {
                            this._unHit = t;
                        }),
                    t.isHitGraphic = function (e, i, s) {
                        if (!s) return !1;
                        var n;
                        if (!(n = s.cmds) && s._one && ((n = t._cmds).length = 1, n[0] = s._one), !n) return !1;
                        var a = 0,
                            r = 0;
                        r = n.length;
                        var o;
                        for (a = 0; a < r; a++) if (o = n[a]) {
                            var h = P._context;
                            switch (o.callee) {
                                case h._translate:
                                case 6:
                                    e -= o[0],
                                        i -= o[1];
                            }
                            if (t.isHitCmd(e, i, o)) return !0;
                        }
                        return !1;
                    },
                    t.isHitCmd = function (e, i, s) {
                        if (!s) return !1;
                        var n = P._context,
                            a = !1;
                        switch (s.callee) {
                            case n._drawRect:
                            case 13:
                                t._rec.setTo(s[0], s[1], s[2], s[3]),
                                    a = t._rec.contains(e, i);
                                break;

                            case n._drawCircle:
                            case n._fillCircle:
                            case 14:
                                a = (e -= s[0]) * e + (i -= s[1]) * i < s[2] * s[2];
                                break;

                            case n._drawPoly:
                            case 18:
                                e -= s[0],
                                    i -= s[1],
                                    a = t.ptInPolygon(e, i, s[2]);
                        }
                        return a;
                    },
                    t.ptInPolygon = function (e, i, s) {
                        var n; (n = t._ptPoint).setTo(e, i);
                        var a = 0,
                            r = NaN,
                            o = NaN,
                            h = NaN,
                            l = NaN,
                            c = 0;
                        c = s.length;
                        for (var u = 0; u < c; u += 2) if (r = s[u], o = s[u + 1], h = s[(u + 2) % c], l = s[(u + 3) % c], o != l && !(n.y < Math.min(o, l) || n.y >= Math.max(o, l))) {
                            (n.y - o) * (h - r) / (l - o) + r > n.x && a++;
                        }
                        return a % 2 == 1;
                    },
                    t._cmds = [],
                    s(t, ["_rec",
                        function () {
                            return this._rec = new I();
                        },
                        "_ptPoint",
                        function () {
                            return this._ptPoint = new T();
                        }]),
                    t;
            }(),
            H = (function () {
                function t(e, i, s, n) {
                    this.char = e,
                        this.charNum = e.charCodeAt(0),
                        this._x = this._y = 0,
                        this.width = i,
                        this.height = s,
                        this.style = n,
                        this.isWord = !t._isWordRegExp.test(e);
                }
                n(t, "laya.utils.HTMLChar");
                var e = t.prototype;
                i.imps(e, {
                    "laya.display.ILayout": !0
                }),
                    e.setSprite = function (t) {
                        this._sprite = t;
                    },
                    e.getSprite = function () {
                        return this._sprite;
                    },
                    e._isChar = function () {
                        return !0;
                    },
                    e._getCSSStyle = function () {
                        return this.style;
                    },
                    a(0, e, "width",
                        function () {
                            return this._w;
                        },
                        function (t) {
                            this._w = t;
                        }),
                    a(0, e, "x",
                        function () {
                            return this._x;
                        },
                        function (t) {
                            this._sprite && (this._sprite.x = t),
                                this._x = t;
                        }),
                    a(0, e, "y",
                        function () {
                            return this._y;
                        },
                        function (t) {
                            this._sprite && (this._sprite.y = t),
                                this._y = t;
                        }),
                    a(0, e, "height",
                        function () {
                            return this._h;
                        },
                        function (t) {
                            this._h = t;
                        }),
                    t._isWordRegExp = new RegExp("[\\w.]", "");
            }(),
                function () {
                    function t() { }
                    n(t, "laya.utils.Log"),
                        t.enable = function () {
                            t._logdiv || (t._logdiv = O.window.document.createElement("div"), O.window.document.body.appendChild(t._logdiv), t._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;");
                        },
                        t.toggle = function () {
                            var e = t._logdiv.style;
                            "1px" == e.width ? e.width = e.height = "50%" : e.width = e.height = "1px";
                        },
                        t.print = function (e) {
                            t._logdiv && (t._count >= t.maxCount && t.clear(), t._count++ , t._logdiv.innerText += e + "\n", t._logdiv.scrollTop = t._logdiv.scrollHeight);
                        },
                        t.clear = function () {
                            t._logdiv.innerText = "",
                                t._count = 0;
                        },
                        t._logdiv = null,
                        t._count = 0,
                        t.maxCount = 20;
                }(),
                function () {
                    function t() { }
                    n(t, "laya.utils.Mouse"),
                        a(1, t, "cursor",
                            function () {
                                return t._style.cursor;
                            },
                            function (e) {
                                t._style.cursor = e;
                            }),
                        t.hide = function () {
                            "none" != t.cursor && (t._preCursor = t.cursor, t.cursor = "none");
                        },
                        t.show = function () {
                            "none" == t.cursor && (t.cursor = t._preCursor ? t._preCursor : "auto");
                        },
                        t._preCursor = null,
                        s(t, ["_style",
                            function () {
                                return this._style = O.document.body.style;
                            }]);
                }(),
                function () {
                    function t() { }
                    return n(t, "laya.utils.Pool"),
                        t.getPoolBySign = function (e) {
                            return t._poolDic[e] || (t._poolDic[e] = []);
                        },
                        t.clearBySign = function (e) {
                            t._poolDic[e] && (t._poolDic[e].length = 0);
                        },
                        t.recover = function (e, i) {
                            i.__InPool || (i.__InPool = !0, t.getPoolBySign(e).push(i));
                        },
                        t.getItemByClass = function (e, i) {
                            var s = t.getPoolBySign(e),
                                n = s.length ? s.pop() : new i();
                            return n.__InPool = !1,
                                n;
                        },
                        t.getItemByCreateFun = function (e, i) {
                            var s = t.getPoolBySign(e),
                                n = s.length ? s.pop() : i();
                            return n.__InPool = !1,
                                n;
                        },
                        t.getItem = function (e) {
                            var i = t.getPoolBySign(e),
                                s = i.length ? i.pop() : null;
                            return s && (s.__InPool = !1),
                                s;
                        },
                        t._poolDic = {},
                        t.InPoolSign = "__InPool",
                        t;
                }()),
            V = (function () {
                function t() {
                    this.sign = null,
                        this.maxCount = 1e3;
                }
                n(t, "laya.utils.PoolCache");
                var e = t.prototype;
                e.getCacheList = function () {
                    return H.getPoolBySign(this.sign);
                },
                    e.tryDispose = function (t) {
                        var e; (e = H.getPoolBySign(this.sign)).length > this.maxCount && e.splice(this.maxCount, e.length - this.maxCount);
                    },
                    t.addPoolCacheManager = function (e, i) {
                        void 0 === i && (i = 100);
                        var s; (s = new t()).sign = e,
                            s.maxCount = i,
                            F.regCacheByFunction($.bind(s.tryDispose, s), $.bind(s.getCacheList, s));
                    };
            }(),
                function () {
                    function t() { }
                    return n(t, "laya.utils.Stat"),
                        a(1, t, "onclick", null,
                            function (e) {
                                t._sp && t._sp.on("click", t._sp, e),
                                    t._canvas && (t._canvas.source.onclick = e, t._canvas.source.style.pointerEvents = "");
                            }),
                        t.show = function (e, i) {
                            void 0 === e && (e = 0),
                                void 0 === i && (i = 0),
                                !P.isConchApp || P.isConchWebGL ? (P.isConchWebGL || O.onMiniGame || O.onLimixiu || (t._useCanvas = !0), t._show = !0, t._fpsData.length = 60, t._view[0] = {
                                    title: "FPS(Canvas)",
                                    value: "_fpsStr",
                                    color: "yellow",
                                    units: "int"
                                },
                                    t._view[1] = {
                                        title: "Sprite",
                                        value: "_spriteStr",
                                        color: "white",
                                        units: "int"
                                    },
                                    t._view[2] = {
                                        title: "DrawCall",
                                        value: "drawCall",
                                        color: "white",
                                        units: "int"
                                    },
                                    t._view[3] = {
                                        title: "CurMem",
                                        value: "currentMemorySize",
                                        color: "yellow",
                                        units: "M"
                                    },
                                    P.isWebGL ? (t._view[4] = {
                                        title: "Shader",
                                        value: "shaderCall",
                                        color: "white",
                                        units: "int"
                                    },
                                        P.is3DMode ? (t._view[0].title = "FPS(3D)", t._view[5] = {
                                            title: "TriFaces",
                                            value: "trianglesFaces",
                                            color: "white",
                                            units: "int"
                                        },
                                            t._view[6] = {
                                                title: "treeNodeColl",
                                                value: "treeNodeCollision",
                                                color: "white",
                                                units: "int"
                                            },
                                            t._view[7] = {
                                                title: "treeSpriteColl",
                                                value: "treeSpriteCollision",
                                                color: "white",
                                                units: "int"
                                            }) : (t._view[0].title = "FPS(WebGL)", t._view[5] = {
                                                title: "Canvas",
                                                value: "_canvasStr",
                                                color: "white",
                                                units: "int"
                                            })) : t._view[4] = {
                                                title: "Canvas",
                                                value: "_canvasStr",
                                                color: "white",
                                                units: "int"
                                            },
                                    t._useCanvas ? t.createUIPre(e, i) : t.createUI(e, i), t.enable()) : O.window.conch.showFPS && O.window.conch.showFPS(e, i);
                        },
                        t.createUIPre = function (e, i) {
                            var s = O.pixelRatio;
                            t._width = 130 * s,
                                t._vx = 75 * s,
                                t._height = s * (12 * t._view.length + 3 * s) + 4,
                                t._fontSize = 12 * s;
                            for (var n = 0; n < t._view.length; n++) t._view[n].x = 4,
                                t._view[n].y = n * t._fontSize + 2 * s;
                            t._canvas || ((t._canvas = new yt("2D")).size(t._width, t._height), (t._ctx = t._canvas.getContext("2d")).textBaseline = "top", t._ctx.font = t._fontSize + "px Sans-serif", t._canvas.source.style.cssText = "pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:" + e + "px;top:" + i + "px;width:" + t._width / s + "px;height:" + t._height / s + "px;"),
                                t._first = !0,
                                t.loop(),
                                t._first = !1,
                                O.container.appendChild(t._canvas.source);
                        },
                        t.createUI = function (e, i) {
                            var s = t._sp,
                                n = O.pixelRatio;
                            s || (s = new ut(), (t._leftText = new mt()).pos(5, 5), t._leftText.color = "#ffffff", s.addChild(t._leftText), (t._txt = new mt()).pos(80 * n, 5), t._txt.color = "#ffffff", s.addChild(t._txt), t._sp = s),
                                s.pos(e, i);
                            for (var a = "",
                                r = 0; r < t._view.length; r++) {
                                a += t._view[r].title + "\n";
                            }
                            t._leftText.text = a;
                            var o = 138 * n,
                                h = n * (12 * t._view.length + 3 * n) + 4;
                            t._txt.fontSize = t._fontSize * n,
                                t._leftText.fontSize = t._fontSize * n,
                                s.size(o, h),
                                s.graphics.clear(),
                                s.graphics.setAlpha(.5),
                                s.graphics.drawRect(0, 0, o, h, "#999999"),
                                s.graphics.setAlpha(1),
                                t.loop();
                        },
                        t.enable = function () {
                            i.timer.frameLoop(1, t, t.loop);
                        },
                        t.hide = function () {
                            t._show = !1,
                                i.timer.clear(t, t.loop),
                                t._canvas && O.removeElement(t._canvas.source);
                        },
                        t.clear = function () {
                            t.trianglesFaces = t.drawCall = t.shaderCall = t.spriteCount = t.spriteRenderUseCacheCount = t.treeNodeCollision = t.treeSpriteCollision = t.canvasNormal = t.canvasBitmap = t.canvasReCache = 0;
                        },
                        t.loop = function () {
                            t._count++;
                            var e = O.now();
                            if (!(e - t._timer < 1e3)) {
                                var i = t._count;
                                if (t.FPS = Math.round(1e3 * i / (e - t._timer)), t._show) {
                                    t.trianglesFaces = Math.round(t.trianglesFaces / i),
                                        t._useCanvas ? (t.drawCall = Math.round(t.drawCall / i) - 2, t.shaderCall = Math.round(t.shaderCall / i), t.spriteCount = Math.round(t.spriteCount / i) - 1) : (t.drawCall = Math.round(t.drawCall / i) - 2, t.shaderCall = Math.round(t.shaderCall / i) - 4, t.spriteCount = Math.round(t.spriteCount / i) - 4),
                                        t.spriteRenderUseCacheCount = Math.round(t.spriteRenderUseCacheCount / i),
                                        t.canvasNormal = Math.round(t.canvasNormal / i),
                                        t.canvasBitmap = Math.round(t.canvasBitmap / i),
                                        t.canvasReCache = Math.ceil(t.canvasReCache / i),
                                        t.treeNodeCollision = Math.round(t.treeNodeCollision / i),
                                        t.treeSpriteCollision = Math.round(t.treeSpriteCollision / i);
                                    var s = t.FPS > 0 ? Math.floor(1e3 / t.FPS).toString() : " ";
                                    t._fpsStr = t.FPS + (t.renderSlow ? " slow" : "") + " " + s,
                                        t._spriteStr = t.spriteCount + (t.spriteRenderUseCacheCount ? "/" + t.spriteRenderUseCacheCount : ""),
                                        t._canvasStr = t.canvasReCache + "/" + t.canvasNormal + "/" + t.canvasBitmap,
                                        t.currentMemorySize = N.systemResourceManager.memorySize,
                                        t._useCanvas ? t.renderInfoPre() : t.renderInfo(),
                                        t.clear();
                                }
                                t._count = 0,
                                    t._timer = e;
                            }
                        },
                        t.renderInfoPre = function () {
                            if (t._canvas) {
                                var e = t._ctx;
                                e.clearRect(t._first ? 0 : t._vx, 0, t._width, t._height);
                                for (var i = 0; i < t._view.length; i++) {
                                    var s = t._view[i];
                                    t._first && (e.fillStyle = "white", e.fillText(s.title, s.x, s.y, null, null, null)),
                                        e.fillStyle = s.color;
                                    var n = t[s.value];
                                    "M" == s.units && (n = Math.floor(n / 1048576 * 100) / 100 + " M"),
                                        e.fillText(n + "", s.x + t._vx, s.y, null, null, null);
                                }
                            }
                        },
                        t.renderInfo = function () {
                            for (var e = "",
                                i = 0; i < t._view.length; i++) {
                                var s = t._view[i],
                                    n = t[s.value];
                                "M" == s.units && (n = Math.floor(n / 1048576 * 100) / 100 + " M"),
                                    "K" == s.units && (n = Math.floor(n / 1024 * 100) / 100 + " K"),
                                    e += n + "\n";
                            }
                            t._txt.text = e;
                        },
                        t.FPS = 0,
                        t.loopCount = 0,
                        t.shaderCall = 0,
                        t.drawCall = 0,
                        t.trianglesFaces = 0,
                        t.spriteCount = 0,
                        t.spriteRenderUseCacheCount = 0,
                        t.treeNodeCollision = 0,
                        t.treeSpriteCollision = 0,
                        t.canvasNormal = 0,
                        t.canvasBitmap = 0,
                        t.canvasReCache = 0,
                        t.renderSlow = !1,
                        t.currentMemorySize = 0,
                        t._fpsStr = null,
                        t._canvasStr = null,
                        t._spriteStr = null,
                        t._fpsData = [],
                        t._timer = 0,
                        t._count = 0,
                        t._view = [],
                        t._fontSize = 12,
                        t._txt = null,
                        t._leftText = null,
                        t._sp = null,
                        t._show = !1,
                        t._useCanvas = !1,
                        t._canvas = null,
                        t._ctx = null,
                        t._first = !1,
                        t._vx = NaN,
                        t._width = 0,
                        t._height = 100,
                        t;
                }()),
            K = (function () {
                function t() {
                    this._strsToID = {},
                        this._idToStrs = [],
                        this._length = 0;
                }
                n(t, "laya.utils.StringKey");
                var e = t.prototype;
                e.add = function (t) {
                    var e = this._strsToID[t];
                    return null != e ? e : (this._idToStrs[this._length] = t, this._strsToID[t] = this._length++);
                },
                    e.getID = function (t) {
                        var e = this._strsToID[t];
                        return null == e ? -1 : e;
                    },
                    e.getName = function (t) {
                        var e = this._idToStrs[t];
                        return null == e ? void 0 : e;
                    };
            }(),
                function () {
                    function t() {
                        this._delta = 0,
                            this.scale = 1,
                            this.currFrame = 0,
                            this._mid = 1,
                            this._map = [],
                            this._laters = [],
                            this._handlers = [],
                            this._temp = [],
                            this._count = 0,
                            this.currTimer = this._now(),
                            this._lastTimer = this._now(),
                            this._init();
                    }
                    var e;
                    n(t, "laya.utils.Timer");
                    var s = t.prototype;
                    return s._init = function () {
                        i.timer && i.timer.frameLoop(1, this, this._update);
                    },
                        s._now = function () {
                            return Date.now();
                        },
                        s._update = function () {
                            if (this.scale <= 0) this._lastTimer = this._now();
                            else {
                                var t = this.currFrame = this.currFrame + this.scale,
                                    e = this._now();
                                this._delta = (e - this._lastTimer) * this.scale;
                                var i = this.currTimer = this.currTimer + this._delta;
                                this._lastTimer = e;
                                var s = this._handlers;
                                for (this._count = 0, r = 0, o = s.length; r < o; r++) if (null !== (h = s[r]).method) {
                                    var n = h.userFrame ? t : i;
                                    if (n >= h.exeTime) if (h.repeat) if (h.jumpFrame) for (; n >= h.exeTime;) h.exeTime += h.delay,
                                        h.run(!1);
                                    else h.exeTime += h.delay,
                                        h.run(!1),
                                        n > h.exeTime && (h.exeTime += Math.ceil((n - h.exeTime) / h.delay) * h.delay);
                                    else h.run(!0);
                                } else this._count++; (this._count > 30 || t % 200 == 0) && this._clearHandlers();
                                for (var a = this._laters,
                                    r = 0,
                                    o = a.length - 1; r <= o; r++) {
                                    var h = a[r];
                                    null !== h.method && (this._map[h.key] = null, h.run(!1)),
                                        this._recoverHandler(h),
                                        r === o && (o = a.length - 1);
                                }
                                a.length = 0;
                            }
                        },
                        s._clearHandlers = function () {
                            for (var t = this._handlers,
                                e = 0,
                                i = t.length; e < i; e++) {
                                var s = t[e];
                                null !== s.method ? this._temp.push(s) : this._recoverHandler(s);
                            }
                            this._handlers = this._temp,
                                this._temp = t,
                                this._temp.length = 0;
                        },
                        s._recoverHandler = function (e) {
                            this._map[e.key] == e && (this._map[e.key] = null),
                                e.clear(),
                                t._pool.push(e);
                        },
                        s._create = function (i, s, n, a, r, o, h) {
                            if (!n) return r.apply(a, o),
                                null;
                            if (h) {
                                var l = this._getHandler(a, r);
                                if (l) return l.repeat = s,
                                    l.userFrame = i,
                                    l.delay = n,
                                    l.caller = a,
                                    l.method = r,
                                    l.args = o,
                                    l.exeTime = n + (i ? this.currFrame : this.currTimer + this._now() - this._lastTimer),
                                    l;
                            }
                            return l = t._pool.length > 0 ? t._pool.pop() : new e(),
                                l.repeat = s,
                                l.userFrame = i,
                                l.delay = n,
                                l.caller = a,
                                l.method = r,
                                l.args = o,
                                l.exeTime = n + (i ? this.currFrame : this.currTimer + this._now() - this._lastTimer) + 1,
                                this._indexHandler(l),
                                this._handlers.push(l),
                                l;
                        },
                        s._indexHandler = function (t) {
                            var e = t.caller,
                                i = t.method,
                                s = e ? e.$_GID || (e.$_GID = $.getGID()) : 0,
                                n = i.$_TID || (i.$_TID = 1e5 * this._mid++);
                            t.key = s + n,
                                this._map[t.key] = t;
                        },
                        s.once = function (t, e, i, s, n) {
                            void 0 === n && (n = !0),
                                this._create(!1, !1, t, e, i, s, n);
                        },
                        s.loop = function (t, e, i, s, n, a) {
                            void 0 === n && (n = !0),
                                void 0 === a && (a = !1);
                            var r = this._create(!1, !0, t, e, i, s, n);
                            r && (r.jumpFrame = a);
                        },
                        s.frameOnce = function (t, e, i, s, n) {
                            void 0 === n && (n = !0),
                                this._create(!0, !1, t, e, i, s, n);
                        },
                        s.frameLoop = function (t, e, i, s, n) {
                            void 0 === n && (n = !0),
                                this._create(!0, !0, t, e, i, s, n);
                        },
                        s.toString = function () {
                            return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + t._pool.length;
                        },
                        s.clear = function (t, e) {
                            var i = this._getHandler(t, e);
                            i && (this._map[i.key] = null, i.key = 0, i.clear());
                        },
                        s.clearAll = function (t) {
                            if (t) for (var e = 0,
                                i = this._handlers.length; e < i; e++) {
                                var s = this._handlers[e];
                                s.caller === t && (this._map[s.key] = null, s.key = 0, s.clear());
                            }
                        },
                        s._getHandler = function (t, e) {
                            var i = t ? t.$_GID || (t.$_GID = $.getGID()) : 0,
                                s = e.$_TID || (e.$_TID = 1e5 * this._mid++);
                            return this._map[i + s];
                        },
                        s.callLater = function (i, s, n) {
                            if (null == this._getHandler(i, s)) {
                                if (t._pool.length) var a = t._pool.pop();
                                else a = new e();
                                a.caller = i,
                                    a.method = s,
                                    a.args = n,
                                    this._indexHandler(a),
                                    this._laters.push(a);
                            }
                        },
                        s.runCallLater = function (t, e) {
                            var i = this._getHandler(t, e);
                            i && null != i.method && (this._map[i.key] = null, i.run(!0));
                        },
                        s.runTimer = function (t, e) {
                            this.runCallLater(t, e);
                        },
                        a(0, s, "delta",
                            function () {
                                return this._delta;
                            }),
                        t._pool = [],
                        t.__init$ = function () {
                            e = function () {
                                function t() {
                                    this.key = 0,
                                        this.repeat = !1,
                                        this.delay = 0,
                                        this.userFrame = !1,
                                        this.exeTime = 0,
                                        this.caller = null,
                                        this.method = null,
                                        this.args = null,
                                        this.jumpFrame = !1;
                                }
                                n(t, "");
                                var e = t.prototype;
                                return e.clear = function () {
                                    this.caller = null,
                                        this.method = null,
                                        this.args = null;
                                },
                                    e.run = function (t) {
                                        var e = this.caller;
                                        if (e && e.destroyed) return this.clear();
                                        var i = this.method,
                                            s = this.args;
                                        t && this.clear(),
                                            null != i && (s ? i.apply(e, s) : i.call(e));
                                    },
                                    t;
                            }();
                        },
                        t;
                }()),
            q = function () {
                function t() {
                    this.gid = 0;
                }
                n(t, "laya.utils.Tween");
                var e = t.prototype;
                return e.to = function (t, e, i, s, n, a, r) {
                    return void 0 === a && (a = 0),
                        void 0 === r && (r = !1),
                        this._create(t, e, i, s, n, a, r, !0, !1, !0);
                },
                    e.from = function (t, e, i, s, n, a, r) {
                        return void 0 === a && (a = 0),
                            void 0 === r && (r = !1),
                            this._create(t, e, i, s, n, a, r, !1, !1, !0);
                    },
                    e._create = function (e, s, n, a, r, o, h, l, c, u) {
                        if (!e) throw new Error("Tween:target is null");
                        this._target = e,
                            this._duration = n,
                            this._ease = a || s.ease || t.easeNone,
                            this._complete = r || s.complete,
                            this._delay = o,
                            this._props = [],
                            this._usedTimer = 0,
                            this._startTimer = O.now(),
                            this._usedPool = c,
                            this._delayParam = null,
                            this.update = s.update;
                        var d = e.$_GID || (e.$_GID = $.getGID());
                        return t.tweenMap[d] ? (h && t.clearTween(e), t.tweenMap[d].push(this)) : t.tweenMap[d] = [this],
                            u ? o <= 0 ? this.firstStart(e, s, l) : (this._delayParam = [e, s, l], i.scaleTimer.once(o, this, this.firstStart, this._delayParam)) : this._initProps(e, s, l),
                            this;
                    },
                    e.firstStart = function (t, e, i) {
                        this._delayParam = null,
                            t.destroyed ? this.clear() : (this._initProps(t, e, i), this._beginLoop());
                    },
                    e._initProps = function (t, e, i) {
                        for (var s in e) if ("number" == typeof t[s]) {
                            var n = i ? t[s] : e[s],
                                a = i ? e[s] : t[s];
                            this._props.push([s, n, a - n]),
                                i || (t[s] = n);
                        }
                    },
                    e._beginLoop = function () {
                        i.scaleTimer.frameLoop(1, this, this._doEase);
                    },
                    e._doEase = function () {
                        this._updateEase(O.now());
                    },
                    e._updateEase = function (e) {
                        var i = this._target;
                        if (i) {
                            if (i.destroyed) return t.clearTween(i);
                            var s = this._usedTimer = e - this._startTimer - this._delay;
                            if (!(s < 0)) {
                                if (s >= this._duration) return this.complete();
                                for (var n = s > 0 ? this._ease(s, 0, 1, this._duration) : 0, a = this._props, r = 0, o = a.length; r < o; r++) {
                                    var h = a[r];
                                    i[h[0]] = h[1] + n * h[2];
                                }
                                this.update && this.update.run();
                            }
                        }
                    },
                    e.complete = function () {
                        if (this._target) {
                            i.scaleTimer.runTimer(this, this.firstStart);
                            for (var t = this._target,
                                e = this._props,
                                s = this._complete,
                                n = 0,
                                a = e.length; n < a; n++) {
                                var r = e[n];
                                t[r[0]] = r[1] + r[2];
                            }
                            this.update && this.update.run(),
                                this.clear(),
                                s && s.run();
                        }
                    },
                    e.pause = function () {
                        i.scaleTimer.clear(this, this._beginLoop),
                            i.scaleTimer.clear(this, this._doEase),
                            i.scaleTimer.clear(this, this.firstStart);
                        var t = NaN; (t = O.now() - this._startTimer - this._delay) < 0 && (this._usedTimer = t);
                    },
                    e.setStartTime = function (t) {
                        this._startTimer = t;
                    },
                    e.clear = function () {
                        this._target && (this._remove(), this._clear());
                    },
                    e._clear = function () {
                        this.pause(),
                            i.scaleTimer.clear(this, this.firstStart),
                            this._complete = null,
                            this._target = null,
                            this._ease = null,
                            this._props = null,
                            this._delayParam = null,
                            this._usedPool && (this.update = null, H.recover("tween", this));
                    },
                    e.recover = function () {
                        this._usedPool = !0,
                            this._clear();
                    },
                    e._remove = function () {
                        var e = t.tweenMap[this._target.$_GID];
                        if (e) for (var i = 0,
                            s = e.length; i < s; i++) if (e[i] === this) {
                                e.splice(i, 1);
                                break;
                            }
                    },
                    e.restart = function () {
                        if (this.pause(), this._usedTimer = 0, this._startTimer = O.now(), this._delayParam) i.scaleTimer.once(this._delay, this, this.firstStart, this._delayParam);
                        else {
                            for (var t = this._props,
                                e = 0,
                                s = t.length; e < s; e++) {
                                var n = t[e];
                                this._target[n[0]] = n[1];
                            }
                            i.scaleTimer.once(this._delay, this, this._beginLoop);
                        }
                    },
                    e.resume = function () {
                        this._usedTimer >= this._duration || (this._startTimer = O.now() - this._usedTimer - this._delay, this._delayParam ? this._usedTimer < 0 ? i.scaleTimer.once(- this._usedTimer, this, this.firstStart, this._delayParam) : this.firstStart.apply(this, this._delayParam) : this._beginLoop());
                    },
                    a(0, e, "progress", null,
                        function (t) {
                            var e = t * this._duration;
                            this._startTimer = O.now() - this._delay - e;
                        }),
                    t.to = function (e, i, s, n, a, r, o, h) {
                        return void 0 === r && (r = 0),
                            void 0 === o && (o = !1),
                            void 0 === h && (h = !0),
                            H.getItemByClass("tween", t)._create(e, i, s, n, a, r, o, !0, h, !0);
                    },
                    t.from = function (e, i, s, n, a, r, o, h) {
                        return void 0 === r && (r = 0),
                            void 0 === o && (o = !1),
                            void 0 === h && (h = !0),
                            H.getItemByClass("tween", t)._create(e, i, s, n, a, r, o, !1, h, !0);
                    },
                    t.clearAll = function (e) {
                        if (e && e.$_GID) {
                            var i = t.tweenMap[e.$_GID];
                            if (i) {
                                for (var s = 0,
                                    n = i.length; s < n; s++) i[s]._clear();
                                i.length = 0;
                            }
                        }
                    },
                    t.clear = function (t) {
                        t.clear();
                    },
                    t.clearTween = function (e) {
                        t.clearAll(e);
                    },
                    t.easeNone = function (t, e, i, s) {
                        return i * t / s + e;
                    },
                    t.tweenMap = {},
                    t;
            }(),
            $ = function () {
                function t() { }
                return n(t, "laya.utils.Utils"),
                    t.toRadian = function (e) {
                        return e * t._pi2;
                    },
                    t.toAngle = function (e) {
                        return e * t._pi;
                    },
                    t.toHexColor = function (t) {
                        if (t < 0 || isNaN(t)) return null;
                        for (var e = t.toString(16); e.length < 6;) e = "0" + e;
                        return "#" + e;
                    },
                    t.getGID = function () {
                        return t._gid++;
                    },
                    t.concatArray = function (t, e) {
                        if (!e) return t;
                        if (!t) return e;
                        var i = 0,
                            s = e.length;
                        for (i = 0; i < s; i++) t.push(e[i]);
                        return t;
                    },
                    t.clearArray = function (t) {
                        return t ? (t.length = 0, t) : t;
                    },
                    t.copyArray = function (t, e) {
                        if (t || (t = []), !e) return t;
                        t.length = e.length;
                        var i = 0,
                            s = e.length;
                        for (i = 0; i < s; i++) t[i] = e[i];
                        return t;
                    },
                    t.getGlobalRecByPoints = function (t, e, i, s, n) {
                        var a;
                        a = new T(e, i),
                            a = t.localToGlobal(a);
                        var r;
                        return r = new T(s, n),
                            r = t.localToGlobal(r),
                            I._getWrapRec([a.x, a.y, r.x, r.y]);
                    },
                    t.getGlobalPosAndScale = function (e) {
                        return t.getGlobalRecByPoints(e, 0, 0, 1, 1);
                    },
                    t.bind = function (t, e) {
                        return t.bind(e);
                    },
                    t.measureText = function (t, e) {
                        return r.measureText(t, e);
                    },
                    t.updateOrder = function (t) {
                        if (!t || t.length < 2) return !1;
                        for (var e, i = 1,
                            s = 0,
                            n = t.length,
                            a = NaN; i < n;) {
                            for (e = t[s = i], a = t[s]._zOrder; --s > -1 && t[s]._zOrder > a;) t[s + 1] = t[s];
                            t[s + 1] = e,
                                i++;
                        }
                        var r = e.parent.conchModel;
                        if (r) if (null != r.updateZOrder) r.updateZOrder();
                        else {
                            for (i = 0; i < n; i++) r.removeChild(t[i].conchModel);
                            for (i = 0; i < n; i++) r.addChildAt(t[i].conchModel, i);
                        }
                        return !0;
                    },
                    t.transPointList = function (t, e, i) {
                        var s = 0,
                            n = t.length;
                        for (s = 0; s < n; s += 2) t[s] += e,
                            t[s + 1] += i;
                    },
                    t.parseInt = function (t, e) {
                        void 0 === e && (e = 0);
                        var i = O.window.parseInt(t, e);
                        return isNaN(i) ? 0 : i;
                    },
                    t.getFileExtension = function (e) {
                        t._extReg.lastIndex = e.lastIndexOf(".");
                        var i = t._extReg.exec(e);
                        return i && i.length > 1 ? i[1].toLowerCase() : null;
                    },
                    t.getTransformRelativeToWindow = function (t, e, s) {
                        var n = i.stage,
                            a = laya.utils.Utils.getGlobalPosAndScale(t),
                            r = n._canvasTransform.clone(),
                            o = r.tx,
                            h = r.ty;
                        r.rotate(- Math.PI / 180 * i.stage.canvasDegree),
                            r.scale(i.stage.clientScaleX, i.stage.clientScaleY);
                        var l = i.stage.canvasDegree % 180 != 0,
                            c = NaN,
                            u = NaN;
                        l ? (c = s + a.y, u = e + a.x, c *= r.d, u *= r.a, 90 == i.stage.canvasDegree ? (c = o - c, u += h) : (c += o, u = h - u)) : (c = e + a.x, u = s + a.y, c *= r.a, u *= r.d, c += o, u += h);
                        var d = NaN,
                            _ = NaN;
                        return l ? (d = r.d * a.height, _ = r.a * a.width) : (d = r.a * a.width, _ = r.d * a.height),
                            {
                                x: c,
                                y: u,
                                scaleX: d,
                                scaleY: _
                            };
                    },
                    t.fitDOMElementInArea = function (e, s, n, a, r, o) {
                        e._fitLayaAirInitialized || (e._fitLayaAirInitialized = !0, e.style.transformOrigin = e.style.webKittransformOrigin = "left top", e.style.position = "absolute");
                        var h = t.getTransformRelativeToWindow(s, n, a);
                        e.style.transform = e.style.webkitTransform = "scale(" + h.scaleX + "," + h.scaleY + ") rotate(" + i.stage.canvasDegree + "deg)",
                            e.style.width = r + "px",
                            e.style.height = o + "px",
                            e.style.left = h.x + "px",
                            e.style.top = h.y + "px";
                    },
                    t.isOkTextureList = function (t) {
                        if (!t) return !1;
                        var e, i = 0,
                            s = t.length;
                        for (i = 0; i < s; i++) if (!(e = t[i]) || !e.source) return !1;
                        return !0;
                    },
                    t.isOKCmdList = function (t) {
                        if (!t) return !1;
                        var e, i, s = 0,
                            n = t.length,
                            a = P._context;
                        for (s = 0; s < n; s++) switch ((e = t[s]).callee) {
                            case a._drawTexture:
                            case a._fillTexture:
                            case a._drawTextureWithTransform:
                                if (!(i = e[0]) || !i.source) return !1;
                        }
                        return !0;
                    },
                    t._gid = 1,
                    t._pi = 180 / Math.PI,
                    t._pi2 = Math.PI / 180,
                    t._extReg = /\.(\w+)\??/g,
                    t.parseXMLFromString = function (t) {
                        var e;
                        if (t = t.replace(/>\s+</g, "><"), (e = new DOMParser().parseFromString(t, "text/xml")).firstChild.textContent.indexOf("This page contains the following errors") > -1) throw new Error(e.firstChild.firstChild.textContent);
                        return e;
                    },
                    t;
            }(),
            j = function () {
                function t() {
                    this.useDic = {},
                        this.shapeDic = {},
                        this.shapeLineDic = {},
                        this._id = 0,
                        this._checkKey = !1,
                        this._freeIdArray = [],
                        P.isWebGL && F.regCacheByFunction($.bind(this.startDispose, this), $.bind(this.getCacheList, this));
                }
                n(t, "laya.utils.VectorGraphManager");
                var e = t.prototype;
                return e.getId = function () {
                    return this._id++;
                },
                    e.addShape = function (t, e) {
                        this.shapeDic[t] = e,
                            this.useDic[t] || (this.useDic[t] = !0);
                    },
                    e.addLine = function (t, e) {
                        this.shapeLineDic[t] = e,
                            this.shapeLineDic[t] || (this.shapeLineDic[t] = !0);
                    },
                    e.getShape = function (t) {
                        this._checkKey && null != this.useDic[t] && (this.useDic[t] = !0);
                    },
                    e.deleteShape = function (t) {
                        this.shapeDic[t] && (this.shapeDic[t] = null, delete this.shapeDic[t]),
                            this.shapeLineDic[t] && (this.shapeLineDic[t] = null, delete this.shapeLineDic[t]),
                            null != this.useDic[t] && delete this.useDic[t];
                    },
                    e.getCacheList = function () {
                        var t, e = [];
                        for (t in this.shapeDic) e.push(this.shapeDic[t]);
                        for (t in this.shapeLineDic) e.push(this.shapeLineDic[t]);
                        return e;
                    },
                    e.startDispose = function (t) {
                        var e;
                        for (e in this.useDic) this.useDic[e] = !1;
                        this._checkKey = !0;
                    },
                    e.endDispose = function () {
                        if (this._checkKey) {
                            var t;
                            for (t in this.useDic) this.useDic[t] || this.deleteShape(t);
                            this._checkKey = !1;
                        }
                    },
                    t.getInstance = function () {
                        return t.instance = t.instance || new t();
                    },
                    t.instance = null,
                    t;
            }(),
            Q = function () {
                function t() {
                    this._obj = null,
                        this._obj = t.supportWeakMap ? new O.window.WeakMap() : {},
                        t.supportWeakMap || t._maps.push(this);
                }
                n(t, "laya.utils.WeakObject");
                var e = t.prototype;
                return e.set = function (e, i) {
                    if (null != e) if (t.supportWeakMap) {
                        var s = e;
                        "string" != typeof e && "number" != typeof e || (s = t._keys[e]) || (s = t._keys[e] = {
                            k: e
                        }),
                            this._obj.set(s, i);
                    } else "string" == typeof e || "number" == typeof e ? this._obj[e] = i : (e.$_GID || (e.$_GID = $.getGID()), this._obj[e.$_GID] = i);
                },
                    e.get = function (e) {
                        if (null == e) return null;
                        if (t.supportWeakMap) {
                            var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
                            return i ? this._obj.get(i) : null;
                        }
                        return "string" == typeof e || "number" == typeof e ? this._obj[e] : this._obj[e.$_GID];
                    },
                    e.del = function (e) {
                        if (null != e) if (t.supportWeakMap) {
                            var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
                            if (!i) return;
                            this._obj.delete(i);
                        } else "string" == typeof e || "number" == typeof e ? delete this._obj[e] : delete this._obj[this._obj.$_GID];
                    },
                    e.has = function (e) {
                        if (null == e) return !1;
                        if (t.supportWeakMap) {
                            var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;
                            return this._obj.has(i);
                        }
                        return "string" == typeof e || "number" == typeof e ? null != this._obj[e] : null != this._obj[this._obj.$_GID];
                    },
                    t.__init__ = function () {
                        (t.supportWeakMap = null != O.window.WeakMap) || i.timer.loop(t.delInterval, null, t.clearCache);
                    },
                    t.clearCache = function () {
                        for (var e = 0,
                            i = t._maps.length; e < i; e++) {
                            t._maps[e]._obj = {};
                        }
                    },
                    t.supportWeakMap = !1,
                    t.delInterval = 3e5,
                    t._keys = {},
                    t._maps = [],
                    s(t, ["I",
                        function () {
                            return this.I = new t();
                        }]),
                    t;
            }(),
            Z = function () {
                function t() {
                    this.id = NaN,
                        this.save = [],
                        this.toUpperCase = null,
                        this.changed = !1,
                        this._text = null;
                }
                n(t, "laya.utils.WordText");
                var e = t.prototype;
                return e.setText = function (t) {
                    this.changed = !0,
                        this._text = t;
                },
                    e.toString = function () {
                        return this._text;
                    },
                    e.charCodeAt = function (t) {
                        return this._text ? this._text.charCodeAt(t) : NaN;
                    },
                    e.charAt = function (t) {
                        return this._text ? this._text.charAt(t) : null;
                    },
                    a(0, e, "length",
                        function () {
                            return this._text ? this._text.length : 0;
                        }),
                    t;
            }(),
            J = function (t) {
                function e() {
                    this._bits = 0,
                        this._displayedInStage = !1,
                        this._parent = null,
                        this.conchModel = null,
                        this.name = "",
                        this._destroyed = !1,
                        e.__super.call(this),
                        this._childs = e.ARRAY_EMPTY,
                        this._$P = e.PROP_EMPTY,
                        this.timer = i.scaleTimer,
                        this.conchModel = P.isConchNode ? this.createConchModel() : null;
                }
                n(e, "laya.display.Node", h);
                var s = e.prototype;
                return s._setBit = function (t, e) {
                    if (1 == t) {
                        this._getBit(t) != e && this._updateDisplayedInstage();
                    }
                    e ? this._bits |= t : this._bits &= ~t;
                },
                    s._getBit = function (t) {
                        return 0 != (this._bits & t);
                    },
                    s._setUpNoticeChain = function () {
                        this._getBit(1) && this._setUpNoticeType(1);
                    },
                    s._setUpNoticeType = function (t) {
                        var e = this;
                        for (e._setBit(t, !0), e = e.parent; e;) {
                            if (e._getBit(t)) return;
                            e._setBit(t, !0),
                                e = e.parent;
                        }
                    },
                    s.on = function (t, e, i, s) {
                        return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1),
                            this._createListener(t, e, i, s, !1);
                    },
                    s.once = function (t, e, i, s) {
                        return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1),
                            this._createListener(t, e, i, s, !0);
                    },
                    s.createConchModel = function () {
                        return null;
                    },
                    s.destroy = function (t) {
                        void 0 === t && (t = !0),
                            this._destroyed = !0,
                            this._parent && this._parent.removeChild(this),
                            this._childs && (t ? this.destroyChildren() : this.removeChildren()),
                            this._childs = null,
                            this._$P = null,
                            this.offAll(),
                            this.timer.clearAll(this);
                    },
                    s.destroyChildren = function () {
                        if (this._childs) for (var t = this._childs.length - 1; t > -1; t--) this._childs[t].destroy(!0);
                    },
                    s.addChild = function (t) {
                        if (!t || this.destroyed || t === this) return t;
                        if (t.zOrder && this._set$P("hasZorder", !0), t._parent === this) {
                            var i = this.getChildIndex(t);
                            i !== this._childs.length - 1 && (this._childs.splice(i, 1), this._childs.push(t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)), this._childChanged());
                        } else t.parent && t.parent.removeChild(t),
                            this._childs === e.ARRAY_EMPTY && (this._childs = []),
                            this._childs.push(t),
                            this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1),
                            t.parent = this,
                            this._childChanged();
                        return t;
                    },
                    s.addChildren = function (t) {
                        for (var e = arguments,
                            i = 0,
                            s = e.length; i < s;) this.addChild(e[i++]);
                    },
                    s.addChildAt = function (t, i) {
                        if (!t || this.destroyed || t === this) return t;
                        if (t.zOrder && this._set$P("hasZorder", !0), i >= 0 && i <= this._childs.length) {
                            if (t._parent === this) {
                                var s = this.getChildIndex(t);
                                this._childs.splice(s, 1),
                                    this._childs.splice(i, 0, t),
                                    this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, i)),
                                    this._childChanged();
                            } else t.parent && t.parent.removeChild(t),
                                this._childs === e.ARRAY_EMPTY && (this._childs = []),
                                this._childs.splice(i, 0, t),
                                this.conchModel && this.conchModel.addChildAt(t.conchModel, i),
                                t.parent = this;
                            return t;
                        }
                        throw new Error("appendChildAt:The index is out of bounds");
                    },
                    s.getChildIndex = function (t) {
                        return this._childs.indexOf(t);
                    },
                    s.getChildByName = function (t) {
                        var e = this._childs;
                        if (e) for (var i = 0,
                            s = e.length; i < s; i++) {
                            var n = e[i];
                            if (n.name === t) return n;
                        }
                        return null;
                    },
                    s._get$P = function (t) {
                        return this._$P[t];
                    },
                    s._set$P = function (t, i) {
                        return this.destroyed || (this._$P === e.PROP_EMPTY && (this._$P = {}), this._$P[t] = i),
                            i;
                    },
                    s.getChildAt = function (t) {
                        return this._childs[t];
                    },
                    s.setChildIndex = function (t, e) {
                        var i = this._childs;
                        if (e < 0 || e >= i.length) throw new Error("setChildIndex:The index is out of bounds.");
                        var s = this.getChildIndex(t);
                        if (s < 0) throw new Error("setChildIndex:node is must child of this object.");
                        return i.splice(s, 1),
                            i.splice(e, 0, t),
                            this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, e)),
                            this._childChanged(),
                            t;
                    },
                    s._childChanged = function (t) { },
                    s.removeChild = function (t) {
                        if (!this._childs) return t;
                        var e = this._childs.indexOf(t);
                        return this.removeChildAt(e);
                    },
                    s.removeSelf = function () {
                        return this._parent && this._parent.removeChild(this),
                            this;
                    },
                    s.removeChildByName = function (t) {
                        var e = this.getChildByName(t);
                        return e && this.removeChild(e),
                            e;
                    },
                    s.removeChildAt = function (t) {
                        var e = this.getChildAt(t);
                        return e && (this._childs.splice(t, 1), this.conchModel && this.conchModel.removeChild(e.conchModel), e.parent = null),
                            e;
                    },
                    s.removeChildren = function (t, i) {
                        if (void 0 === t && (t = 0), void 0 === i && (i = 2147483647), this._childs && this._childs.length > 0) {
                            var s = this._childs;
                            if (0 === t && i >= r) {
                                var n = s;
                                this._childs = e.ARRAY_EMPTY;
                            } else n = s.splice(t, i - t);
                            for (var a = 0,
                                r = n.length; a < r; a++) n[a].parent = null,
                                    this.conchModel && this.conchModel.removeChild(n[a].conchModel);
                        }
                        return this;
                    },
                    s.replaceChild = function (t, e) {
                        var i = this._childs.indexOf(e);
                        return i > -1 ? (this._childs.splice(i, 1, t), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(t.conchModel, i)), e.parent = null, t.parent = this, t) : null;
                    },
                    s._updateDisplayedInstage = function () {
                        var t;
                        t = this;
                        var e = i.stage;
                        for (this._displayedInStage = !1; t;) {
                            if (t._getBit(1)) {
                                this._displayedInStage = t._displayedInStage;
                                break;
                            }
                            if (t == e || t._displayedInStage) {
                                this._displayedInStage = !0;
                                break;
                            }
                            t = t.parent;
                        }
                    },
                    s._setDisplay = function (t) {
                        this._displayedInStage !== t && (this._displayedInStage = t, t ? this.event("display") : this.event("undisplay"));
                    },
                    s._displayChild = function (t, e) {
                        var i = t._childs;
                        if (i) for (var s = 0,
                            n = i.length; s < n; s++) {
                            var a = i[s];
                            a._getBit(1) && (a._childs.length > 0 ? this._displayChild(a, e) : a._setDisplay(e));
                        }
                        t._setDisplay(e);
                    },
                    s.contains = function (t) {
                        if (t === this) return !0;
                        for (; t;) {
                            if (t.parent === this) return !0;
                            t = t.parent;
                        }
                        return !1;
                    },
                    s.timerLoop = function (t, e, i, s, n, a) {
                        void 0 === n && (n = !0),
                            void 0 === a && (a = !1),
                            this.timer.loop(t, e, i, s, n, a);
                    },
                    s.timerOnce = function (t, e, i, s, n) {
                        void 0 === n && (n = !0),
                            this.timer._create(!1, !1, t, e, i, s, n);
                    },
                    s.frameLoop = function (t, e, i, s, n) {
                        void 0 === n && (n = !0),
                            this.timer._create(!0, !0, t, e, i, s, n);
                    },
                    s.frameOnce = function (t, e, i, s, n) {
                        void 0 === n && (n = !0),
                            this.timer._create(!0, !1, t, e, i, s, n);
                    },
                    s.clearTimer = function (t, e) {
                        this.timer.clear(t, e);
                    },
                    a(0, s, "numChildren",
                        function () {
                            return this._childs.length;
                        }),
                    a(0, s, "destroyed",
                        function () {
                            return this._destroyed;
                        }),
                    a(0, s, "parent",
                        function () {
                            return this._parent;
                        },
                        function (t) {
                            this._parent !== t && (t ? (this._parent = t, this.event("added"), this._getBit(1) && (this._setUpNoticeChain(), t.displayedInStage && this._displayChild(this, !0)), t._childChanged(this)) : (this.event("removed"), this._parent._childChanged(), this._getBit(1) && this._displayChild(this, !1), this._parent = t));
                        }),
                    a(0, s, "displayedInStage",
                        function () {
                            return this._getBit(1) ? this._displayedInStage : (this._setUpNoticeType(1), this._displayedInStage);
                        }),
                    e.ARRAY_EMPTY = [],
                    e.PROP_EMPTY = {},
                    e.NOTICE_DISPLAY = 1,
                    e.MOUSEENABLE = 2,
                    e;
            }(),
            tt = function (t) {
                function e(t) {
                    this._bgground = null,
                        this._border = null,
                        this._rect = null,
                        this.underLine = 0,
                        this.lineHeight = 0,
                        e.__super.call(this),
                        this._padding = e._PADDING,
                        this._spacing = e._SPACING,
                        this._aligns = e._ALIGNS,
                        this._font = d.EMPTY,
                        this._ower = t;
                }
                n(e, "laya.display.css.CSSStyle", t);
                var i = e.prototype;
                return i.destroy = function () {
                    this._ower = null,
                        this._font = null,
                        this._rect = null;
                },
                    i.inherit = function (t) {
                        this._font = t._font,
                            this._spacing = t._spacing === e._SPACING ? e._SPACING : t._spacing.slice(),
                            this.lineHeight = t.lineHeight;
                    },
                    i._widthAuto = function () {
                        return 0 != (262144 & this._type);
                    },
                    i.widthed = function (t) {
                        return 0 != (8 & this._type);
                    },
                    i._calculation = function (t, e) {
                        function i(t, e, i) {
                            return t * i[0] + e * i[1] + i[2];
                        }
                        function s(t) {
                            var e = a.width,
                                s = n.width;
                            r.width && (n.width = i(e, s, r.width)),
                                r.height && (n.height = i(e, s, r.height)),
                                r.left && (n.x = i(e, s, r.left)),
                                r.top && (n.y = i(e, s, r.top));
                        }
                        if (e.indexOf("%") < 0) return !1;
                        var n = this._ower,
                            a = n.parent,
                            r = this._rect;
                        null === r && (a._getCSSStyle()._type |= 524288, a.on("resize", this, s), this._rect = r = {
                            input: {}
                        });
                        var o = e.split(" ");
                        return o[0] = parseFloat(o[0]) / 100,
                            1 == o.length ? o[1] = o[2] = 0 : (o[1] = parseFloat(o[1]) / 100, o[2] = parseFloat(o[2])),
                            r[t] = o,
                            r.input[t] = e,
                            s(),
                            !0;
                    },
                    i.heighted = function (t) {
                        return 0 != (8192 & this._type);
                    },
                    i.size = function (t, e) {
                        var i = this._ower,
                            s = !1; - 1 !== t && t != this._ower.width && (this._type |= 8, this._ower.width = t, s = !0),
                                -1 !== e && e != this._ower.height && (this._type |= 8192, this._ower.height = e, s = !0),
                                s && (i._layoutLater(), 524288 & this._type && i.event("resize", this));
                    },
                    i._getAlign = function () {
                        return this._aligns[0];
                    },
                    i._getValign = function () {
                        return this._aligns[1];
                    },
                    i._getCssFloat = function () {
                        return 0 != (32768 & this._type) ? 32768 : 0;
                    },
                    i._createFont = function () {
                        return 4096 & this._type ? this._font : (this._type |= 4096, this._font = new d(this._font));
                    },
                    i.render = function (t, e, i, s) {
                        var n = t.width,
                            a = t.height;
                        i -= t.pivotX,
                            s -= t.pivotY,
                            this._bgground && null != this._bgground.color && e.ctx.fillRect(i, s, n, a, this._bgground.color),
                            this._border && this._border.color && e.drawRect(i, s, n, a, this._border.color.strColor, this._border.size);
                    },
                    i.getCSSStyle = function () {
                        return this;
                    },
                    i.cssText = function (t) {
                        this.attrs(e.parseOneCSS(t, ";"));
                    },
                    i.attrs = function (t) {
                        if (t) for (var e = 0,
                            i = t.length; e < i; e++) {
                            var s = t[e];
                            this[s[0]] = s[1];
                        }
                    },
                    i.setTransform = function (t) {
                        "none" === t ? this._tf = u._TF_EMPTY : this.attrs(e.parseOneCSS(t, ","));
                    },
                    i.translate = function (t, e) {
                        this._tf === u._TF_EMPTY && (this._tf = new _()),
                            this._tf.translateX = t,
                            this._tf.translateY = e;
                    },
                    i.scale = function (t, e) {
                        this._tf === u._TF_EMPTY && (this._tf = new _()),
                            this._tf.scaleX = t,
                            this._tf.scaleY = e;
                    },
                    i._enableLayout = function () {
                        return 0 == (2 & this._type) && 0 == (4 & this._type);
                    },
                    a(0, i, "block", t.prototype._$get_block,
                        function (t) {
                            t ? this._type |= 1 : this._type &= -2;
                        }),
                    a(0, i, "valign",
                        function () {
                            return e._valigndef[this._aligns[1]];
                        },
                        function (t) {
                            this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]),
                                this._aligns[1] = e._valigndef[t];
                        }),
                    a(0, i, "height", null,
                        function (t) {
                            if (this._type |= 8192, "string" == typeof t) {
                                if (this._calculation("height", t)) return;
                                t = parseInt(t);
                            }
                            this.size(- 1, t);
                        }),
                    a(0, i, "width", null,
                        function (t) {
                            if (this._type |= 8, "string" == typeof t) {
                                var e = t.indexOf("auto");
                                if (e >= 0 && (this._type |= 262144, t = t.substr(0, e)), this._calculation("width", t)) return;
                                t = parseInt(t);
                            }
                            this.size(t, -1);
                        }),
                    a(0, i, "fontWeight",
                        function () {
                            return this._font.weight;
                        },
                        function (t) {
                            this._createFont().weight = t;
                        }),
                    a(0, i, "left", null,
                        function (t) {
                            var e = this._ower;
                            if ("string" == typeof t) {
                                if ("center" === t ? t = "50% -50% 0" : "right" === t && (t = "100% -100% 0"), this._calculation("left", t)) return;
                                t = parseInt(t);
                            }
                            e.x = t;
                        }),
                    a(0, i, "_translate", null,
                        function (t) {
                            this.translate(t[0], t[1]);
                        }),
                    a(0, i, "absolute",
                        function () {
                            return 0 != (4 & this._type);
                        }),
                    a(0, i, "top", null,
                        function (t) {
                            var e = this._ower;
                            if ("string" == typeof t) {
                                if ("middle" === t ? t = "50% -50% 0" : "bottom" === t && (t = "100% -100% 0"), this._calculation("top", t)) return;
                                t = parseInt(t);
                            }
                            e.y = t;
                        }),
                    a(0, i, "align",
                        function () {
                            return e._aligndef[this._aligns[0]];
                        },
                        function (t) {
                            this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]),
                                this._aligns[0] = e._aligndef[t];
                        }),
                    a(0, i, "bold",
                        function () {
                            return this._font.bold;
                        },
                        function (t) {
                            this._createFont().bold = t;
                        }),
                    a(0, i, "padding",
                        function () {
                            return this._padding;
                        },
                        function (t) {
                            this._padding = t;
                        }),
                    a(0, i, "leading",
                        function () {
                            return this._spacing[1];
                        },
                        function (t) {
                            "string" == typeof t && (t = parseInt(t + "")),
                                this._spacing === e._SPACING && (this._spacing = [0, 0]),
                                this._spacing[1] = t;
                        }),
                    a(0, i, "lineElement",
                        function () {
                            return 0 != (65536 & this._type);
                        },
                        function (t) {
                            t ? this._type |= 65536 : this._type &= -65537;
                        }),
                    a(0, i, "cssFloat",
                        function () {
                            return 0 != (32768 & this._type) ? "right" : "left";
                        },
                        function (t) {
                            this.lineElement = !1,
                                "right" === t ? this._type |= 32768 : this._type &= -32769;
                        }),
                    a(0, i, "textDecoration",
                        function () {
                            return this._font.decoration;
                        },
                        function (t) {
                            this._createFont().decoration = t;
                        }),
                    a(0, i, "whiteSpace",
                        function () {
                            return 131072 & this._type ? "nowrap" : "";
                        },
                        function (t) {
                            "nowrap" === t && (this._type |= 131072),
                                "none" === t && (this._type &= -131073);
                        }),
                    a(0, i, "background", null,
                        function (t) {
                            t ? (this._bgground || (this._bgground = {}), this._bgground.color = t, this._ower.conchModel && this._ower.conchModel.bgColor(t), this._type |= 16384, this._ower._renderType |= 256) : this._bgground = null;
                        }),
                    a(0, i, "wordWrap",
                        function () {
                            return 0 == (131072 & this._type);
                        },
                        function (t) {
                            t ? this._type &= -131073 : this._type |= 131072;
                        }),
                    a(0, i, "color",
                        function () {
                            return this._font.color;
                        },
                        function (t) {
                            this._createFont().color = t;
                        }),
                    a(0, i, "password",
                        function () {
                            return this._font.password;
                        },
                        function (t) {
                            this._createFont().password = t;
                        }),
                    a(0, i, "backgroundColor",
                        function () {
                            return this._bgground ? this._bgground.color : null;
                        },
                        function (t) {
                            "none" === t ? this._bgground = null : (this._bgground || (this._bgground = {}), this._bgground.color = t),
                                this._ower.conchModel && this._ower.conchModel.bgColor(t),
                                this._ower._renderType |= 256;
                        }),
                    a(0, i, "font",
                        function () {
                            return this._font.toString();
                        },
                        function (t) {
                            this._createFont().set(t);
                        }),
                    a(0, i, "weight", null,
                        function (t) {
                            this._createFont().weight = t;
                        }),
                    a(0, i, "letterSpacing",
                        function () {
                            return this._spacing[0];
                        },
                        function (t) {
                            "string" == typeof t && (t = parseInt(t + "")),
                                this._spacing === e._SPACING && (this._spacing = [0, 0]),
                                this._spacing[0] = t;
                        }),
                    a(0, i, "fontSize",
                        function () {
                            return this._font.size;
                        },
                        function (t) {
                            this._createFont().size = t;
                        }),
                    a(0, i, "italic",
                        function () {
                            return this._font.italic;
                        },
                        function (t) {
                            this._createFont().italic = t;
                        }),
                    a(0, i, "fontFamily",
                        function () {
                            return this._font.family;
                        },
                        function (t) {
                            this._createFont().family = t;
                        }),
                    a(0, i, "stroke",
                        function () {
                            return this._font.stroke[0];
                        },
                        function (t) {
                            this._createFont().stroke === d._STROKE && (this._font.stroke = [0, "#000000"]),
                                this._font.stroke[0] = t;
                        }),
                    a(0, i, "strokeColor",
                        function () {
                            return this._font.stroke[1];
                        },
                        function (t) {
                            this._createFont().stroke === d._STROKE && (this._font.stroke = [0, "#000000"]),
                                this._font.stroke[1] = t;
                        }),
                    a(0, i, "border",
                        function () {
                            return this._border ? this._border.value : "";
                        },
                        function (t) {
                            if ("none" != t) {
                                this._border || (this._border = {}),
                                    this._border.value = t;
                                var e = t.split(" ");
                                if (this._border.color = W.create(e[e.length - 1]), 1 == e.length) return this._border.size = 1,
                                    void (this._border.type = "solid");
                                var i = 0;
                                e[0].indexOf("px") > 0 ? (this._border.size = parseInt(e[0]), i++) : this._border.size = 1,
                                    this._border.type = e[i],
                                    this._ower._renderType |= 256;
                            } else this._border = null;
                        }),
                    a(0, i, "borderColor",
                        function () {
                            return this._border && this._border.color ? this._border.color.strColor : null;
                        },
                        function (t) {
                            t ? (this._border || (this._border = {
                                size: 1,
                                type: "solid"
                            }), this._border.color = null == t ? null : W.create(t), this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor), this._ower._renderType |= 256) : this._border = null;
                        }),
                    a(0, i, "position",
                        function () {
                            return 4 & this._type ? "absolute" : "";
                        },
                        function (t) {
                            "absolute" == t ? this._type |= 4 : this._type &= -5;
                        }),
                    a(0, i, "display", null,
                        function (t) {
                            switch (t) {
                                case "":
                                    this._type &= -3,
                                        this.visible = !0;
                                    break;

                                case "none":
                                    this._type |= 2,
                                        this.visible = !1,
                                        this._ower._layoutLater();
                            }
                        }),
                    a(0, i, "paddingLeft",
                        function () {
                            return this.padding[3];
                        }),
                    a(0, i, "paddingTop",
                        function () {
                            return this.padding[0];
                        }),
                    a(0, i, "_scale", null,
                        function (t) {
                            this._ower.scale(t[0], t[1]);
                        }),
                    a(0, i, "_rotate", null,
                        function (t) {
                            this._ower.rotation = t;
                        }),
                    e.parseOneCSS = function (t, i) {
                        for (var s, n = [], a = t.split(i), r = 0, o = a.length; r < o; r++) {
                            var h = a[r],
                                l = h.indexOf(":"),
                                c = h.substr(0, l).replace(/^\s+|\s+$/g, "");
                            if (0 != c.length) {
                                var u = h.substr(l + 1).replace(/^\s+|\s+$/g, ""),
                                    d = [c, u];
                                switch (c) {
                                    case "italic":
                                    case "bold":
                                        d[1] = "true" == u;
                                        break;

                                    case "line-height":
                                        d[0] = "lineHeight",
                                            d[1] = parseInt(u);
                                        break;

                                    case "font-size":
                                        d[0] = "fontSize",
                                            d[1] = parseInt(u);
                                        break;

                                    case "padding":
                                        (s = u.split(" ")).length > 1 || (s[1] = s[2] = s[3] = s[0]),
                                            d[1] = [parseInt(s[0]), parseInt(s[1]), parseInt(s[2]), parseInt(s[3])];
                                        break;

                                    case "rotate":
                                        d[0] = "_rotate",
                                            d[1] = parseFloat(u);
                                        break;

                                    case "scale":
                                        s = u.split(" "),
                                            d[0] = "_scale",
                                            d[1] = [parseFloat(s[0]), parseFloat(s[1])];
                                        break;

                                    case "translate":
                                        s = u.split(" "),
                                            d[0] = "_translate",
                                            d[1] = [parseInt(s[0]), parseInt(s[1])];
                                        break;

                                    default:
                                        (d[0] = e._CSSTOVALUE[c]) || (d[0] = c);
                                }
                                n.push(d);
                            }
                        }
                        return n;
                    },
                    e.parseCSS = function (t, i) {
                        for (var s; null != (s = e._parseCSSRegExp.exec(t));) e.styleSheets[s[1]] = e.parseOneCSS(s[2], ";");
                    },
                    e.EMPTY = new e(null),
                    e._CSSTOVALUE = {
                        "letter-spacing": "letterSpacing",
                        "line-spacing": "lineSpacing",
                        "white-space": "whiteSpace",
                        "line-height": "lineHeight",
                        "scale-x": "scaleX",
                        "scale-y": "scaleY",
                        "translate-x": "translateX",
                        "translate-y": "translateY",
                        "font-family": "fontFamily",
                        "font-weight": "fontWeight",
                        "vertical-align": "valign",
                        "text-decoration": "textDecoration",
                        "background-color": "backgroundColor",
                        "border-color": "borderColor",
                        float: "cssFloat"
                    },
                    e._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}", "g"),
                    e._aligndef = {
                        left: 0,
                        center: 1,
                        right: 2,
                        0: "left",
                        1: "center",
                        2: "right"
                    },
                    e._valigndef = {
                        top: 0,
                        middle: 1,
                        bottom: 2,
                        0: "top",
                        1: "middle",
                        2: "bottom"
                    },
                    e.styleSheets = {},
                    e.ALIGN_CENTER = 1,
                    e.ALIGN_RIGHT = 2,
                    e.VALIGN_MIDDLE = 1,
                    e.VALIGN_BOTTOM = 2,
                    e._CSS_BLOCK = 1,
                    e._DISPLAY_NONE = 2,
                    e._ABSOLUTE = 4,
                    e._WIDTH_SET = 8,
                    e._PADDING = [0, 0, 0, 0],
                    e._RECT = [- 1, -1, -1, -1],
                    e._SPACING = [0, 0],
                    e._ALIGNS = [0, 0, 0],
                    e.ADDLAYOUTED = 512,
                    e._NEWFONT = 4096,
                    e._HEIGHT_SET = 8192,
                    e._BACKGROUND_SET = 16384,
                    e._FLOAT_RIGHT = 32768,
                    e._LINE_ELEMENT = 65536,
                    e._NOWARP = 131072,
                    e._WIDTHAUTO = 262144,
                    e._LISTERRESZIE = 524288,
                    e;
            }(u),
            et = function (t) {
                function e() {
                    this.url = null,
                        this.audio = null,
                        this.loaded = !1,
                        e.__super.call(this);
                }
                n(e, "laya.media.h5audio.AudioSound", h);
                var i = e.prototype;
                return i.dispose = function () {
                    var t = e._audioCache[this.url];
                    t && (t.src = "", delete e._audioCache[this.url]);
                },
                    i.load = function (t) {
                        function i() {
                            n(),
                                r.loaded = !0,
                                r.event("complete");
                        }
                        function s() {
                            a.load = null,
                                n(),
                                r.event("error");
                        }
                        function n() {
                            a.removeEventListener("canplaythrough", i),
                                a.removeEventListener("error", s);
                        }
                        t = R.formatURL(t),
                            this.url = t;
                        var a;
                        if (t == L._tMusic ? (e._initMusicAudio(), (a = e._musicAudio).src != t && (e._audioCache[a.src] = null, a = null)) : a = e._audioCache[t], a && a.readyState >= 2) this.event("complete");
                        else {
                            a || (t == L._tMusic ? (e._initMusicAudio(), a = e._musicAudio) : a = O.createElement("audio"), e._audioCache[t] = a, a.src = t),
                                a.addEventListener("canplaythrough", i),
                                a.addEventListener("error", s);
                            var r = this;
                            this.audio = a,
                                a.load ? a.load() : s();
                        }
                    },
                    i.play = function (t, i) {
                        if (void 0 === t && (t = 0), void 0 === i && (i = 0), !this.url) return null;
                        var s;
                        if (!(s = this.url == L._tMusic ? e._musicAudio : e._audioCache[this.url])) return null;
                        var n;
                        n = H.getItem("audio:" + this.url),
                            P.isConchApp ? n || ((n = O.createElement("audio")).src = this.url) : this.url == L._tMusic ? (e._initMusicAudio(), (n = e._musicAudio).src = this.url) : n = n || s.cloneNode(!0);
                        var a = new dt(n);
                        return a.url = this.url,
                            a.loops = i,
                            a.startTime = t,
                            a.play(),
                            L.addChannel(a),
                            a;
                    },
                    a(0, i, "duration",
                        function () {
                            var t;
                            return (t = e._audioCache[this.url]) ? t.duration : 0;
                        }),
                    e._initMusicAudio = function () {
                        e._musicAudio || (e._musicAudio || (e._musicAudio = O.createElement("audio")), P.isConchApp || O.document.addEventListener("mousedown", e._makeMusicOK));
                    },
                    e._makeMusicOK = function () {
                        O.document.removeEventListener("mousedown", e._makeMusicOK),
                            e._musicAudio.src ? e._musicAudio.play() : (e._musicAudio.src = "", e._musicAudio.load());
                    },
                    e._audioCache = {},
                    e._musicAudio = null,
                    e;
            }(),
            it = function (t) {
                function e() {
                    this.url = null,
                        this.loops = 0,
                        this.startTime = NaN,
                        this.isStopped = !1,
                        this.completeHandler = null,
                        e.__super.call(this);
                }
                n(e, "laya.media.SoundChannel", h);
                var i = e.prototype;
                return i.play = function () { },
                    i.stop = function () { },
                    i.pause = function () { },
                    i.resume = function () { },
                    i.__runComplete = function (t) {
                        t && t.run();
                    },
                    a(0, i, "volume",
                        function () {
                            return 1;
                        },
                        function (t) { }),
                    a(0, i, "position",
                        function () {
                            return 0;
                        }),
                    a(0, i, "duration",
                        function () {
                            return 0;
                        }),
                    e;
            }(),
            st = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.media.Sound", h);
                var i = e.prototype;
                return i.load = function (t) { },
                    i.play = function (t, e) {
                        return void 0 === t && (t = 0),
                            void 0 === e && (e = 0),
                            null;
                    },
                    i.dispose = function () { },
                    a(0, i, "duration",
                        function () {
                            return 0;
                        }),
                    e;
            }(),
            nt = function (t) {
                function e() {
                    this.url = null,
                        this.loaded = !1,
                        this.data = null,
                        this.audioBuffer = null,
                        this.__toPlays = null,
                        this._disposed = !1,
                        e.__super.call(this);
                }
                n(e, "laya.media.webaudio.WebAudioSound", h);
                var i = e.prototype;
                return i.load = function (t) {
                    var i = this;
                    if (t = R.formatURL(t), this.url = t, this.audioBuffer = e._dataCache[t], this.audioBuffer) this._loaded(this.audioBuffer);
                    else if (e.e.on("loaded:" + t, this, this._loaded), e.e.on("err:" + t, this, this._err), !e.__loadingSound[t]) {
                        e.__loadingSound[t] = !0;
                        var s = new O.window.XMLHttpRequest();
                        s.open("GET", t, !0),
                            s.responseType = "arraybuffer",
                            s.onload = function () {
                                i._disposed ? i._removeLoadEvents() : (i.data = s.response, e.buffs.push({
                                    buffer: i.data,
                                    url: i.url
                                }), e.decode());
                            },
                            s.onerror = function (t) {
                                i._err();
                            },
                            s.send();
                    }
                },
                    i._err = function () {
                        this._removeLoadEvents(),
                            e.__loadingSound[this.url] = !1,
                            this.event("error");
                    },
                    i._loaded = function (t) {
                        this._removeLoadEvents(),
                            this._disposed || (this.audioBuffer = t, e._dataCache[this.url] = this.audioBuffer, this.loaded = !0, this.event("complete"));
                    },
                    i._removeLoadEvents = function () {
                        e.e.off("loaded:" + this.url, this, this._loaded),
                            e.e.off("err:" + this.url, this, this._err);
                    },
                    i.__playAfterLoaded = function () {
                        if (this.__toPlays) {
                            var t, e = 0,
                                i = 0;
                            i = (t = this.__toPlays).length;
                            var s;
                            for (e = 0; e < i; e++)(s = t[e])[2] && !s[2].isStopped && this.play(s[0], s[1], s[2]);
                            this.__toPlays.length = 0;
                        }
                    },
                    i.play = function (t, e, i) {
                        return void 0 === t && (t = 0),
                            void 0 === e && (e = 0),
                            i = i || new _t(),
                            this.audioBuffer || this.url && (this.__toPlays || (this.__toPlays = []), this.__toPlays.push([t, e, i]), this.once("complete", this, this.__playAfterLoaded), this.load(this.url)),
                            i.url = this.url,
                            i.loops = e,
                            i.audioBuffer = this.audioBuffer,
                            i.startTime = t,
                            i.play(),
                            L.addChannel(i),
                            i;
                    },
                    i.dispose = function () {
                        this._disposed = !0,
                            delete e._dataCache[this.url],
                            delete e.__loadingSound[this.url],
                            this.audioBuffer = null,
                            this.data = null,
                            this.__toPlays = [];
                    },
                    a(0, i, "duration",
                        function () {
                            return this.audioBuffer ? this.audioBuffer.duration : 0;
                        }),
                    e.decode = function () {
                        e.buffs.length <= 0 || e.isDecoding || (e.isDecoding = !0, e.tInfo = e.buffs.shift(), e.ctx.decodeAudioData(e.tInfo.buffer, e._done, e._fail));
                    },
                    e._done = function (t) {
                        e.e.event("loaded:" + e.tInfo.url, t),
                            e.isDecoding = !1,
                            e.decode();
                    },
                    e._fail = function () {
                        e.e.event("err:" + e.tInfo.url, null),
                            e.isDecoding = !1,
                            e.decode();
                    },
                    e._playEmptySound = function () {
                        if (null != e.ctx) {
                            var t = e.ctx.createBufferSource();
                            t.buffer = e._miniBuffer,
                                t.connect(e.ctx.destination),
                                t.start(0, 0, 0);
                        }
                    },
                    e._unlock = function () {
                        e._unlocked || (e._playEmptySound(), "running" == e.ctx.state && (O.document.removeEventListener("mousedown", e._unlock, !0), O.document.removeEventListener("touchend", e._unlock, !0), e._unlocked = !0));
                    },
                    e.initWebAudio = function () {
                        "running" != e.ctx.state && (e._unlock(), O.document.addEventListener("mousedown", e._unlock, !0), O.document.addEventListener("touchend", e._unlock, !0));
                    },
                    e._dataCache = {},
                    e.buffs = [],
                    e.isDecoding = !1,
                    e._unlocked = !1,
                    e.tInfo = null,
                    e.__loadingSound = {},
                    s(e, ["window",
                        function () {
                            return this.window = O.window;
                        },
                        "webAudioEnabled",
                        function () {
                            return this.webAudioEnabled = e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext;
                        },
                        "ctx",
                        function () {
                            return this.ctx = e.webAudioEnabled ? new (e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext)() : void 0;
                        },
                        "_miniBuffer",
                        function () {
                            return this._miniBuffer = e.ctx.createBuffer(1, 1, 22050);
                        },
                        "e",
                        function () {
                            return this.e = new h();
                        }]),
                    e;
            }(),
            at = function (t) {
                function e() {
                    this._responseType = null,
                        this._data = null,
                        e.__super.call(this),
                        this._http = new O.window.XMLHttpRequest();
                }
                n(e, "laya.net.HttpRequest", h);
                var i = e.prototype;
                return i.send = function (t, e, i, s, n) {
                    void 0 === i && (i = "get"),
                        void 0 === s && (s = "text"),
                        this._responseType = s,
                        this._data = null;
                    var a = this,
                        r = this._http;
                    if (r.open(i, t, !0), n) for (var o = 0; o < n.length; o++) r.setRequestHeader(n[o++], n[o]);
                    else P.isConchApp || (e && "string" != typeof e ? r.setRequestHeader("Content-Type", "application/json") : r.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"));
                    r.responseType = "arraybuffer" !== s ? "text" : "arraybuffer",
                        r.onerror = function (t) {
                            a._onError(t);
                        },
                        r.onabort = function (t) {
                            a._onAbort(t);
                        },
                        r.onprogress = function (t) {
                            a._onProgress(t);
                        },
                        r.onload = function (t) {
                            a._onLoad(t);
                        },
                        r.send(e);
                },
                    i._onProgress = function (t) {
                        t && t.lengthComputable && this.event("progress", t.loaded / t.total);
                    },
                    i._onAbort = function (t) {
                        this.error("Request was aborted by user");
                    },
                    i._onError = function (t) {
                        this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText);
                    },
                    i._onLoad = function (t) {
                        var e = this._http,
                            i = void 0 !== e.status ? e.status : 200;
                        200 === i || 204 === i || 0 === i ? this.complete() : this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL);
                    },
                    i.error = function (t) {
                        this.clear(),
                            this.event("error", t);
                    },
                    i.complete = function () {
                        this.clear();
                        var t = !0;
                        try {
                            "json" === this._responseType ? this._data = JSON.parse(this._http.responseText) : "xml" === this._responseType ? this._data = $.parseXMLFromString(this._http.responseText) : this._data = this._http.response || this._http.responseText;
                        } catch (e) {
                            t = !1,
                                this.error(e.message);
                        }
                        t && this.event("complete", this._data instanceof Array ? [this._data] : this._data);
                    },
                    i.clear = function () {
                        var t = this._http;
                        t.onerror = t.onabort = t.onprogress = t.onload = null;
                    },
                    a(0, i, "url",
                        function () {
                            return this._http.responseURL;
                        }),
                    a(0, i, "http",
                        function () {
                            return this._http;
                        }),
                    a(0, i, "data",
                        function () {
                            return this._data;
                        }),
                    e;
            }(),
            rt = function (t) {
                function e() {
                    this._data = null,
                        this._class = null,
                        this._url = null,
                        this._type = null,
                        this._cache = !1,
                        this._http = null,
                        this._customParse = !1,
                        e.__super.call(this);
                }
                n(e, "laya.net.Loader", h);
                var s = e.prototype;
                return s.load = function (t, i, s, n, a) {
                    if (void 0 === s && (s = !0), void 0 === a && (a = !1), this._url = t, 0 === t.indexOf("data:image") ? this._type = i = "image" : (this._type = i || (i = this.getTypeFromUrl(t)), t = R.formatURL(t)), this._cache = s, this._data = null, !a && e.loadedMap[t]) return this._data = e.loadedMap[t],
                        this.event("progress", 1),
                        void this.event("complete", this._data);
                    if (n && e.setGroup(t, n), null != e.parserMap[i]) return this._customParse = !0,
                        void (e.parserMap[i] instanceof laya.utils.Handler ? e.parserMap[i].runWith(this) : e.parserMap[i].call(null, this));
                    if ("image" === i || "htmlimage" === i || "nativeimage" === i) return this._loadImage(t);
                    if ("sound" === i) return this._loadSound(t);
                    if ("ttf" === i) return this._loadTTF(t);
                    var r;
                    switch (i) {
                        case "atlas":
                            r = "json";
                            break;

                        case "font":
                            r = "xml";
                            break;

                        case "pkm":
                            r = "arraybuffer";
                            break;

                        default:
                            r = i;
                    }
                    e.preLoadedMap[t] ? this.onLoaded(e.preLoadedMap[t]) : (this._http || (this._http = new at(), this._http.on("progress", this, this.onProgress), this._http.on("error", this, this.onError), this._http.on("complete", this, this.onLoaded)), this._http.send(t, null, "get", r));
                },
                    s.getTypeFromUrl = function (t) {
                        var i = $.getFileExtension(t);
                        return i ? e.typeMap[i] : (console.warn("Not recognize the resources suffix", t), "text");
                    },
                    s._loadTTF = function (t) {
                        t = R.formatURL(t);
                        var e = new A();
                        e.complete = l.create(this, this.onLoaded),
                            e.load(t);
                    },
                    s._loadImage = function (t) {
                        function i() {
                            s.onload = null,
                                s.onerror = null,
                                delete e.imgCache[t];
                        }
                        t = R.formatURL(t);
                        var s, n = this,
                            a = function () {
                                i(),
                                    n.onLoaded(s);
                            },
                            r = function () {
                                i(),
                                    n.event("error", "Load image failed");
                            };
                        "nativeimage" === this._type ? ((s = new O.window.Image()).crossOrigin = "", s.onload = a, s.onerror = r, s.src = t, e.imgCache[t] = s) : new wt.create(t, {
                            onload: a,
                            onerror: r,
                            onCreate: function (i) {
                                s = i,
                                    e.imgCache[t] = i;
                            }
                        });
                    },
                    s._loadSound = function (t) {
                        function e() {
                            i.offAll();
                        }
                        var i = new L._soundClass(),
                            s = this;
                        i.on("complete", this,
                            function () {
                                e(),
                                    s.onLoaded(i);
                            }),
                            i.on("error", this,
                                function () {
                                    e(),
                                        i.dispose(),
                                        s.event("error", "Load sound failed");
                                }),
                            i.load(t);
                    },
                    s.onProgress = function (t) {
                        "atlas" === this._type ? this.event("progress", .3 * t) : this.event("progress", t);
                    },
                    s.onError = function (t) {
                        this.event("error", t);
                    },
                    s.onLoaded = function (t) {
                        var i = this._type;
                        if ("image" === i) {
                            var s = new lt(t);
                            s.url = this._url,
                                this.complete(s);
                        } else if ("sound" === i || "htmlimage" === i || "nativeimage" === i) this.complete(t);
                        else if ("atlas" === i) {
                            if (!t.src && !t._setContext) {
                                if (!this._data) {
                                    if (this._data = t, t.meta && t.meta.image) for (var n = t.meta.image.split(","), a = this._url.indexOf("/") >= 0 ? "/" : "\\", r = this._url.lastIndexOf(a), o = r >= 0 ? this._url.substr(0, r + 1) : "", h = 0, l = n.length; h < l; h++) n[h] = o + n[h];
                                    else n = [this._url.replace(".json", ".png")];
                                    n.reverse(),
                                        t.toLoads = n,
                                        t.pics = [];
                                }
                                return this.event("progress", .3 + 1 / n.length * .6),
                                    this._loadImage(n.pop());
                            }
                            if (this._data.pics.push(t), this._data.toLoads.length > 0) return this.event("progress", .3 + 1 / this._data.toLoads.length * .6),
                                this._loadImage(this._data.toLoads.pop());
                            var u = this._data.frames,
                                d = this._url.split("?")[0],
                                _ = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix : d.substring(0, d.lastIndexOf(".")) + "/",
                                p = this._data.pics,
                                f = R.formatURL(this._url),
                                m = e.atlasMap[f] || (e.atlasMap[f] = []);
                            m.dir = _;
                            var g = 1;
                            if (this._data.meta && this._data.meta.scale && 1 != this._data.meta.scale) {
                                g = parseFloat(this._data.meta.scale);
                                for (var v in u) {
                                    var y = u[v],
                                        b = p[y.frame.idx ? y.frame.idx : 0],
                                        x = R.formatURL(_ + v);
                                    b.scaleRate = g,
                                        e.cacheRes(x, lt.create(b, y.frame.x, y.frame.y, y.frame.w, y.frame.h, y.spriteSourceSize.x, y.spriteSourceSize.y, y.sourceSize.w, y.sourceSize.h)),
                                        e.loadedMap[x].url = x,
                                        m.push(x);
                                }
                            } else for (v in u) b = p[(y = u[v]).frame.idx ? y.frame.idx : 0],
                                x = R.formatURL(_ + v),
                                e.cacheRes(x, lt.create(b, y.frame.x, y.frame.y, y.frame.w, y.frame.h, y.spriteSourceSize.x, y.spriteSourceSize.y, y.sourceSize.w, y.sourceSize.h)),
                                e.loadedMap[x].url = x,
                                m.push(x);
                            delete this._data.pics,
                                this.complete(this._data);
                        } else if ("font" == i) {
                            if (!t.src) return this._data = t,
                                this.event("progress", .5),
                                this._loadImage(this._url.replace(".fnt", ".png"));
                            var w = new c();
                            w.parseFont(this._data, t);
                            var M = this._url.split(".fnt")[0].split("/"),
                                S = M[M.length - 1];
                            mt.registerBitmapFont(S, w),
                                this._data = w,
                                this.complete(this._data);
                        } else if ("pkm" == i) {
                            var C = wt.create(t, this._url),
                                T = new lt(C);
                            T.url = this._url,
                                this.complete(T);
                        } else this.complete(t);
                    },
                    s.complete = function (t) {
                        this._data = t,
                            this._customParse ? this.event("loaded", t instanceof Array ? [t] : t) : (e._loaders.push(this), e._isWorking || e.checkNext());
                    },
                    s.endLoad = function (t) {
                        t && (this._data = t),
                            this._cache && e.cacheRes(this._url, this._data),
                            this.event("progress", 1),
                            this.event("complete", this.data instanceof Array ? [this.data] : this.data);
                    },
                    a(0, s, "url",
                        function () {
                            return this._url;
                        }),
                    a(0, s, "data",
                        function () {
                            return this._data;
                        }),
                    a(0, s, "cache",
                        function () {
                            return this._cache;
                        }),
                    a(0, s, "type",
                        function () {
                            return this._type;
                        }),
                    e.checkNext = function () {
                        e._isWorking = !0;
                        for (var t = O.now(); e._startIndex < e._loaders.length;) if (O.now(), e._loaders[e._startIndex].endLoad(), e._startIndex++ , O.now() - t > e.maxTimeOut) return console.warn("loader callback cost a long time:" + (O.now() - t) + " url=" + e._loaders[e._startIndex - 1].url),
                            void i.timer.frameOnce(1, null, e.checkNext);
                        e._loaders.length = 0,
                            e._startIndex = 0,
                            e._isWorking = !1;
                    },
                    e.clearRes = function (t, i) {
                        void 0 === i && (i = !1),
                            t = R.formatURL(t);
                        var s = e.getAtlas(t);
                        if (s) {
                            for (var n = 0,
                                a = s.length; n < a; n++) {
                                var r = s[n],
                                    o = e.getRes(r);
                                delete e.loadedMap[r],
                                    o && o.destroy(i);
                            }
                            s.length = 0,
                                delete e.atlasMap[t],
                                delete e.loadedMap[t];
                        } else {
                            var h = e.loadedMap[t];
                            h && (delete e.loadedMap[t], h instanceof laya.resource.Texture && h.bitmap && h.destroy(i));
                        }
                    },
                    e.clearTextureRes = function (t) {
                        t = R.formatURL(t);
                        var e = laya.net.Loader.getAtlas(t),
                            i = e && e.length > 0 ? laya.net.Loader.getRes(e[0]) : laya.net.Loader.getRes(t);
                        i && i.bitmap && (P.isConchApp ? i.bitmap.source.releaseTexture && i.bitmap.source.releaseTexture() : null == i.bitmap._atlaser && i.bitmap.releaseResource(!0));
                    },
                    e.getRes = function (t) {
                        return e.loadedMap[R.formatURL(t)];
                    },
                    e.getAtlas = function (t) {
                        return e.atlasMap[R.formatURL(t)];
                    },
                    e.cacheRes = function (t, i) {
                        t = R.formatURL(t),
                            null != e.loadedMap[t] || (e.loadedMap[t] = i);
                    },
                    e.setGroup = function (t, i) {
                        e.groupMap[i] || (e.groupMap[i] = []),
                            e.groupMap[i].push(t);
                    },
                    e.clearResByGroup = function (t) {
                        if (e.groupMap[t]) {
                            var i = e.groupMap[t],
                                s = 0,
                                n = i.length;
                            for (s = 0; s < n; s++) e.clearRes(i[s]);
                            i.length = 0;
                        }
                    },
                    e.TEXT = "text",
                    e.JSON = "json",
                    e.XML = "xml",
                    e.BUFFER = "arraybuffer",
                    e.IMAGE = "image",
                    e.SOUND = "sound",
                    e.ATLAS = "atlas",
                    e.FONT = "font",
                    e.TTF = "ttf",
                    e.PKM = "pkm",
                    e.typeMap = {
                        png: "image",
                        jpg: "image",
                        jpeg: "image",
                        txt: "text",
                        json: "json",
                        xml: "xml",
                        als: "atlas",
                        atlas: "atlas",
                        mp3: "sound",
                        ogg: "sound",
                        wav: "sound",
                        part: "json",
                        fnt: "font",
                        pkm: "pkm",
                        ttf: "ttf"
                    },
                    e.parserMap = {},
                    e.groupMap = {},
                    e.maxTimeOut = 100,
                    e.loadedMap = {},
                    e.preLoadedMap = {},
                    e.atlasMap = {},
                    e._loaders = [],
                    e._isWorking = !1,
                    e._startIndex = 0,
                    e.imgCache = {},
                    e;
            }(),
            ot = function (t) {
                function e() {
                    this.retryNum = 1,
                        this.retryDelay = 0,
                        this.maxLoader = 5,
                        this._loaders = [],
                        this._loaderCount = 0,
                        this._resInfos = [],
                        this._infoPool = [],
                        this._maxPriority = 5,
                        this._failRes = {},
                        e.__super.call(this);
                    for (var t = 0; t < this._maxPriority; t++) this._resInfos[t] = [];
                }
                var a;
                n(e, "laya.net.LoaderManager", h);
                var r = e.prototype;
                return r.create = function (t, e, i, s, n, a, r, o) {
                    if (void 0 === a && (a = 1), void 0 === r && (r = !0), t instanceof Array) {
                        var h = t,
                            c = h.length,
                            u = 0;
                        if (i) var d = l.create(i.caller, i.method, i.args, !1);
                        for (var _ = 0; _ < c; _++) {
                            var p = h[_];
                            "string" == typeof p && (p = h[_] = {
                                url: p
                            }),
                                p.progress = 0;
                        }
                        for (_ = 0; _ < c; _++) {
                            p = h[_];
                            var f = i ? l.create(null,
                                function (t, e) {
                                    t.progress = e;
                                    for (var i = 0,
                                        s = 0; s < c; s++) i += h[s].progress;
                                    var n = i / c;
                                    d.runWith(n);
                                },
                                [p], !1) : null,
                                m = i || e ? l.create(null,
                                    function (t, i) {
                                        u++ ,
                                            t.progress = 1,
                                            u === c && e && e.run();
                                    },
                                    [p]) : null;
                            this._create(p.url, m, f, p.clas || s, p.params || n, p.priority || a, r, p.group || o);
                        }
                        return !0;
                    }
                    return this._create(t, e, i, s, n, a, r, o);
                },
                    r._create = function (t, s, n, a, r, o, h, c) {
                        void 0 === o && (o = 1),
                            void 0 === h && (h = !0);
                        var u = R.formatURL(t),
                            d = this.getRes(u);
                        if (d) !d.hasOwnProperty("loaded") || d.loaded ? (n && n.runWith(1), s && s.run()) : s && i.loader._createListener(t, s.caller, s.method, s.args, !0, !1);
                        else {
                            var _ = $.getFileExtension(t),
                                p = e.createMap[_];
                            if (!p) throw new Error("LoaderManager:unknown file(" + t + ") extension with: " + _ + ".");
                            a || (a = p[0]);
                            var f = p[1];
                            "atlas" == _ ? this.load(t, s, n, f, o, h) : (a === lt && (f = "htmlimage"), (d = a ? new a() : null).hasOwnProperty("_loaded") && (d._loaded = !1), d._setUrl(t), c && d._setGroup(c), this._createLoad(d, t, l.create(null,
                                function (e) {
                                    d && !d.destroyed && e && d.onAsynLoaded.call(d, t, e, r),
                                        s && s.run(),
                                        i.loader.event(t);
                                }), n, f, o, !1, c, !0), h && this.cacheRes(u, d));
                        }
                        return d;
                    },
                    r.load = function (t, s, n, r, o, h, l, c) {
                        var u = this;
                        if (void 0 === o && (o = 1), void 0 === h && (h = !0), void 0 === c && (c = !1), t instanceof Array) return this._loadAssets(t, s, n, r, o, h, l);
                        var d = rt.getRes(t);
                        if (null != d) i.timer.frameOnce(1, null,
                            function () {
                                n && n.runWith(1),
                                    s && s.runWith(d),
                                    u._loaderCount || u.event("complete");
                            });
                        else {
                            var _ = e._resMap[t];
                            _ ? (s && _._createListener("complete", s.caller, s.method, s.args, !1, !1), n && _._createListener("progress", n.caller, n.method, n.args, !1, !1)) : ((_ = this._infoPool.length ? this._infoPool.pop() : new a()).url = t, _.type = r, _.cache = h, _.group = l, _.ignoreCache = c, s && _.on("complete", s.caller, s.method, s.args), n && _.on("progress", n.caller, n.method, n.args), e._resMap[t] = _, o = o < this._maxPriority ? o : this._maxPriority - 1, this._resInfos[o].push(_), this._next());
                        }
                        return this;
                    },
                    r._createLoad = function (t, s, n, r, o, h, l, c, u) {
                        var d = this;
                        if (void 0 === h && (h = 1), void 0 === l && (l = !0), void 0 === u && (u = !1), s instanceof Array) return this._loadAssets(s, n, r, o, h, l, c);
                        var _ = rt.getRes(s);
                        if (null != _) i.timer.frameOnce(1, null,
                            function () {
                                r && r.runWith(1),
                                    n && n.runWith(_),
                                    d._loaderCount || d.event("complete");
                            });
                        else {
                            var p = e._resMap[s];
                            p ? (n && p._createListener("complete", n.caller, n.method, n.args, !1, !1), r && p._createListener("progress", r.caller, r.method, r.args, !1, !1)) : ((p = this._infoPool.length ? this._infoPool.pop() : new a()).url = s, p.clas = t, p.type = o, p.cache = l, p.group = c, p.ignoreCache = u, n && p.on("complete", n.caller, n.method, n.args), r && p.on("progress", r.caller, r.method, r.args), e._resMap[s] = p, h = h < this._maxPriority ? h : this._maxPriority - 1, this._resInfos[h].push(p), this._next());
                        }
                        return this;
                    },
                    r._next = function () {
                        if (!(this._loaderCount >= this.maxLoader)) {
                            for (var t = 0; t < this._maxPriority; t++) for (var e = this._resInfos[t]; e.length > 0;) {
                                var i = e.shift();
                                if (i) return this._doLoad(i);
                            }
                            this._loaderCount || this.event("complete");
                        }
                    },
                    r._doLoad = function (t) {
                        function e(e) {
                            i.offAll(),
                                i._data = null,
                                i._customParse = !1,
                                s._loaders.push(i),
                                s._endLoad(t, e instanceof Array ? [e] : e),
                                s._loaderCount-- ,
                                s._next();
                        }
                        this._loaderCount++;
                        var i = this._loaders.length ? this._loaders.pop() : new rt();
                        i.on("complete", null, e),
                            i.on("progress", null,
                                function (e) {
                                    t.event("progress", e);
                                }),
                            i.on("error", null,
                                function (t) {
                                    e(null);
                                });
                        var s = this;
                        i._class = t.clas,
                            i.load(t.url, t.type, t.cache, t.group, t.ignoreCache);
                    },
                    r._endLoad = function (t, s) {
                        var n = t.url;
                        if (null == s) {
                            var a = this._failRes[n] || 0;
                            if (a < this.retryNum) return console.warn("[warn]Retry to load:", n),
                                this._failRes[n] = a + 1,
                                void i.timer.once(this.retryDelay, this, this._addReTry, [t], !1);
                            console.warn("[error]Failed to load:", n),
                                this.event("error", n);
                        }
                        this._failRes[n] && (this._failRes[n] = 0),
                            delete e._resMap[n],
                            t.event("complete", s),
                            t.offAll(),
                            this._infoPool.push(t);
                    },
                    r._addReTry = function (t) {
                        this._resInfos[this._maxPriority - 1].push(t),
                            this._next();
                    },
                    r.clearRes = function (t, e) {
                        void 0 === e && (e = !1),
                            rt.clearRes(t, e);
                    },
                    r.getRes = function (t) {
                        return rt.getRes(t);
                    },
                    r.cacheRes = function (t, e) {
                        rt.cacheRes(t, e);
                    },
                    r.clearTextureRes = function (t) {
                        rt.clearTextureRes(t);
                    },
                    r.setGroup = function (t, e) {
                        rt.setGroup(t, e);
                    },
                    r.clearResByGroup = function (t) {
                        rt.clearResByGroup(t);
                    },
                    r.clearUnLoaded = function () {
                        for (var t = 0; t < this._maxPriority; t++) {
                            for (var i = this._resInfos[t], s = i.length - 1; s > -1; s--) {
                                var n = i[s];
                                n && (n.offAll(), this._infoPool.push(n));
                            }
                            i.length = 0;
                        }
                        this._loaderCount = 0,
                            e._resMap = {};
                    },
                    r.cancelLoadByUrls = function (t) {
                        if (t) for (var e = 0,
                            i = t.length; e < i; e++) this.cancelLoadByUrl(t[e]);
                    },
                    r.cancelLoadByUrl = function (t) {
                        for (var i = 0; i < this._maxPriority; i++) for (var s = this._resInfos[i], n = s.length - 1; n > -1; n--) {
                            var a = s[n];
                            a && a.url === t && (s[n] = null, a.offAll(), this._infoPool.push(a));
                        }
                        e._resMap[t] && delete e._resMap[t];
                    },
                    r._loadAssets = function (t, e, i, s, n, a, r) {
                        void 0 === n && (n = 1),
                            void 0 === a && (a = !0);
                        for (var o = t.length,
                            h = 0,
                            c = 0,
                            u = [], d = !0, _ = 0; _ < o; _++) {
                            var p = t[_];
                            "string" == typeof p && (p = {
                                url: p,
                                type: s,
                                size: 1,
                                priority: n
                            }),
                                p.size || (p.size = 1),
                                p.progress = 0,
                                c += p.size,
                                u.push(p);
                            var f = i ? l.create(null,
                                function (t, e) {
                                    if (null != i) {
                                        t.progress = e;
                                        for (var s = 0,
                                            n = 0; n < u.length; n++) {
                                            var a = u[n];
                                            s += a.size * a.progress;
                                        }
                                        var r = s / c;
                                        i.runWith(r);
                                    }
                                },
                                [p], !1) : null,
                                m = e || i ? l.create(null,
                                    function (t, i) {
                                        h++ ,
                                            t.progress = 1,
                                            i || (d = !1),
                                            h === o && e && e.runWith(d);
                                    },
                                    [p]) : null;
                            this.load(p.url, m, f, p.type, p.priority || 1, a, p.group || r);
                        }
                        return this;
                    },
                    e.cacheRes = function (t, e) {
                        rt.cacheRes(t, e);
                    },
                    e._resMap = {},
                    s(e, ["createMap",
                        function () {
                            return this.createMap = {
                                atlas: [null, "atlas"]
                            };
                        }]),
                    e.__init$ = function () {
                        a = function (t) {
                            function e() {
                                this.url = null,
                                    this.type = null,
                                    this.cache = !1,
                                    this.group = null,
                                    this.ignoreCache = !1,
                                    this.clas = null,
                                    e.__super.call(this);
                            }
                            return n(e, "", h),
                                e;
                        }();
                    },
                    e;
            }(),
            ht = (function (t) {
                function e(t) {
                    e.__super.call(this),
                        t || (t = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0]),
                        this._mat = new Float32Array(16),
                        this._alpha = new Float32Array(4);
                    for (var i = 0,
                        s = 0,
                        n = 0; n < 20; n++) n % 5 != 4 ? this._mat[i++] = t[n] : this._alpha[s++] = t[n];
                    this._action = r.createFilterAction(32),
                        this._action.data = this;
                }
                n(e, "laya.filters.ColorFilter", b);
                var s = e.prototype;
                i.imps(s, {
                    "laya.filters.IFilter": !0
                }),
                    s.callNative = function (t) {
                        t._$P.cf = this;
                        t.conchModel && t.conchModel.setFilterMatrix && t.conchModel.setFilterMatrix(this._mat, this._alpha);
                    },
                    a(0, s, "type",
                        function () {
                            return 32;
                        }),
                    a(0, s, "action",
                        function () {
                            return this._action;
                        });
            }(),
                function (t) {
                    function e(t, i, s) {
                        this._endian = null,
                            this._stamp = NaN,
                            this._socket = null,
                            this._connected = !1,
                            this._addInputPosition = 0,
                            this._input = null,
                            this._output = null,
                            this.timeout = 0,
                            this.objectEncoding = 0,
                            this.disableInput = !1,
                            this._byteClass = null,
                            this.protocols = [],
                            void 0 === i && (i = 0),
                            e.__super.call(this),
                            this._byteClass = s || G,
                            this.endian = "bigEndian",
                            this.timeout = 2e4,
                            this._addInputPosition = 0,
                            t && i > 0 && i < 65535 && this.connect(t, i);
                    }
                    n(e, "laya.net.Socket", h);
                    var i = e.prototype;
                    i.connect = function (t, e) {
                        var i = "ws://" + t + ":" + e;
                        i = "https:" == O.window.location.protocol ? "wss://" + t + ":" + e : "ws://" + t + ":" + e,
                            this.connectByUrl(i);
                    },
                        i.connectByUrl = function (t) {
                            var e = this;
                            null != this._socket && this.close(),
                                this._socket && this.cleanSocket(),
                                this.protocols && 0 != this.protocols.length ? this._socket = new O.window.WebSocket(t, this.protocols) : this._socket = new O.window.WebSocket(t),
                                this._socket.binaryType = "arraybuffer",
                                this._output = new this._byteClass(),
                                this._output.endian = this.endian,
                                this._input = new this._byteClass(),
                                this._input.endian = this.endian,
                                this._addInputPosition = 0,
                                this._socket.onopen = function (t) {
                                    e._onOpen(t);
                                },
                                this._socket.onmessage = function (t) {
                                    e._onMessage(t);
                                },
                                this._socket.onclose = function (t) {
                                    e._onClose(t);
                                },
                                this._socket.onerror = function (t) {
                                    e._onError(t);
                                };
                        },
                        i.cleanSocket = function () {
                            try {
                                this._socket.close();
                            } catch (t) { }
                            this._connected = !1,
                                this._socket.onopen = null,
                                this._socket.onmessage = null,
                                this._socket.onclose = null,
                                this._socket.onerror = null,
                                this._socket = null;
                        },
                        i.close = function () {
                            if (null != this._socket) try {
                                this._socket.close();
                            } catch (t) { }
                        },
                        i._onOpen = function (t) {
                            this._connected = !0,
                                this.event("open", t);
                        },
                        i._onMessage = function (t) {
                            if (t && t.data) {
                                var e = t.data;
                                if (this.disableInput && e) this.event("message", e);
                                else {
                                    this._input.length > 0 && this._input.bytesAvailable < 1 && (this._input.clear(), this._addInputPosition = 0);
                                    var i = this._input.pos; !this._addInputPosition && (this._addInputPosition = 0),
                                        this._input.pos = this._addInputPosition,
                                        e && ("string" == typeof e ? this._input.writeUTFBytes(e) : this._input.writeArrayBuffer(e), this._addInputPosition = this._input.pos, this._input.pos = i),
                                        this.event("message", e);
                                }
                            }
                        },
                        i._onClose = function (t) {
                            this._connected = !1,
                                this.event("close", t);
                        },
                        i._onError = function (t) {
                            this.event("error", t);
                        },
                        i.send = function (t) {
                            this._socket.send(t);
                        },
                        i.flush = function () {
                            if (this._output && this._output.length > 0) {
                                var t;
                                try {
                                    this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));
                                } catch (e) {
                                    t = e;
                                }
                                this._output.endian = this.endian,
                                    this._output.clear(),
                                    t && this.event("error", t);
                            }
                        },
                        a(0, i, "input",
                            function () {
                                return this._input;
                            }),
                        a(0, i, "output",
                            function () {
                                return this._output;
                            }),
                        a(0, i, "connected",
                            function () {
                                return this._connected;
                            }),
                        a(0, i, "endian",
                            function () {
                                return this._endian;
                            },
                            function (t) {
                                this._endian = t,
                                    null != this._input && (this._input.endian = t),
                                    null != this._output && (this._output.endian = t);
                            }),
                        e.LITTLE_ENDIAN = "littleEndian",
                        e.BIG_ENDIAN = "bigEndian";
                }(),
                function (t) {
                    function e() {
                        this.worker = null,
                            e.__super.call(this);
                        var t = this;
                        this.worker = new O.window.Worker(e.workerPath),
                            this.worker.onmessage = function (e) {
                                t.workerMessage(e.data);
                            };
                    }
                    n(e, "laya.net.WorkerLoader", h);
                    var i = e.prototype;
                    i.workerMessage = function (t) {
                        if (t) switch (t.type) {
                            case "Image":
                                this.imageLoaded(t);
                                break;

                            case "Msg":
                                this.event("image_msg", t.msg);
                        }
                    },
                        i.imageLoaded = function (t) {
                            if (t && t.buffer && t.buffer.length < 10) return e._enable = !1,
                                this._myTrace("buffer lost when postmessage ,disable workerloader"),
                                this.event(t.url, null),
                                void this.event("image_err", t.url + "\n" + t.msg);
                            if (!t.dataType) return this.event(t.url, null),
                                void this.event("image_err", t.url + "\n" + t.msg);
                            var i, s, n;
                            switch (t.dataType) {
                                case "buffer":
                                    (n = (s = (i = new yt("2D")).source.getContext("2d")).createImageData(t.width, t.height)).data.set(t.buffer),
                                        i.size(n.width, n.height),
                                        s.putImageData(n, 0, 0),
                                        i.memorySize = 0;
                                    break;

                                case "imagedata":
                                    s = (i = new yt("2D")).source.getContext("2d"),
                                        n = t.imagedata,
                                        i.size(n.width, n.height),
                                        s.putImageData(n, 0, 0),
                                        n = t.imagedata,
                                        i.memorySize = 0;
                                    break;

                                case "imageBitmap":
                                    n = t.imageBitmap,
                                        P.isWebGL ? i = n : (s = (i = new yt("2D")).source.getContext("2d"), i.size(n.width, n.height), s.drawImage(n, 0, 0), i.src = t.url);
                            }
                            P.isWebGL && (i = new laya.webgl.resource.WebGLImage(i, t.url)),
                                this.event(t.url, i);
                        },
                        i._myTrace = function (t) {
                            var e = arguments,
                                i = [],
                                s = 0,
                                n = e.length;
                            for (s = 0; s < n; s++) i.push(e[s]);
                            this.event("image_msg", i.join(" "));
                        },
                        i.loadImage = function (t) {
                            var e; (e = {}).type = "load",
                                e.url = t,
                                this.worker.postMessage(e);
                        },
                        i._loadImage = function (t) {
                            var i = this;
                            if (!e._enable || t.toLowerCase().indexOf(".png") < 0) e._preLoadFun.call(i, t);
                            else {
                                t = R.formatURL(t);
                                var s = function (n) {
                                    laya.net.WorkerLoader.I.off(t, i, s),
                                        n ? i.onLoaded(n) : e._preLoadFun.call(i, t);
                                };
                                laya.net.WorkerLoader.I.on(t, i, s),
                                    laya.net.WorkerLoader.I.loadImage(t);
                            }
                        },
                        a(1, e, "enable",
                            function () {
                                return e._enable;
                            },
                            function (t) {
                                e.disableJSDecode && !O.window.createImageBitmap || (e._enable = t) && null == e._preLoadFun && (e._enable = e.__init__());
                            }),
                        e.__init__ = function () {
                            return null == e._preLoadFun && (!!O.window.Worker && (e._preLoadFun = rt.prototype._loadImage, rt.prototype._loadImage = e.prototype._loadImage, e.I || (e.I = new e()), !0));
                        },
                        e.workerSupported = function () {
                            return !!O.window.Worker;
                        },
                        e.IMAGE_LOADED = "image_loaded",
                        e.IMAGE_ERR = "image_err",
                        e.IMAGE_MSG = "image_msg",
                        e.I = null,
                        e._preLoadFun = null,
                        e._enable = !1,
                        e.workerPath = "libs/worker.js",
                        e.disableJSDecode = !0;
                }(),
                function (t) {
                    function e() {
                        e.__super.call(this),
                            this._$1__id = ++e._uniqueIDCounter,
                            this.__loaded = !0,
                            this._destroyed = !1,
                            this._referenceCount = 0,
                            e._idResourcesMap[this.id] = this,
                            this._released = !0,
                            this.lock = !1,
                            this._memorySize = 0,
                            this._lastUseFrameCount = -1,
                            N.currentResourceManager && N.currentResourceManager.addResource(this);
                    }
                    n(e, "laya.resource.Resource", h);
                    var s = e.prototype;
                    return i.imps(s, {
                        "laya.resource.ICreateResource": !0,
                        "laya.resource.IDispose": !0
                    }),
                        s._setUrl = function (t) {
                            if (this._url !== t) {
                                var i;
                                this._url && ((i = e._urlResourcesMap[this._url]).splice(i.indexOf(this), 1), 0 === i.length && delete e._urlResourcesMap[this._url]),
                                    t && ((i = e._urlResourcesMap[t]) || (e._urlResourcesMap[t] = i = []), i.push(this)),
                                    this._url = t;
                            }
                        },
                        s._getGroup = function () {
                            return this._group;
                        },
                        s._setGroup = function (t) {
                            if (this._group !== t) {
                                var i;
                                this._group && ((i = e._groupResourcesMap[this._group]).splice(i.indexOf(this), 1), 0 === i.length && delete e._groupResourcesMap[this._group]),
                                    t && ((i = e._groupResourcesMap[t]) || (e._groupResourcesMap[t] = i = []), i.push(this)),
                                    this._group = t;
                            }
                        },
                        s._addReference = function () {
                            this._referenceCount++;
                        },
                        s._removeReference = function () {
                            this._referenceCount--;
                        },
                        s._clearReference = function () {
                            this._referenceCount = 0;
                        },
                        s._endLoaded = function () {
                            this.__loaded = !0,
                                this.event("loaded", this);
                        },
                        s.recreateResource = function () {
                            this.completeCreate();
                        },
                        s.disposeResource = function () { },
                        s.activeResource = function (t) {
                            void 0 === t && (t = !1),
                                this._lastUseFrameCount = V.loopCount,
                                !this._destroyed && this.__loaded && (this._released || t) && this.recreateResource();
                        },
                        s.releaseResource = function (t) {
                            return void 0 === t && (t = !1),
                                !(!t && this.lock) && (!(this._released && !t) && (this.disposeResource(), this._released = !0, this._lastUseFrameCount = -1, this.event("released", this), !0));
                        },
                        s.onAsynLoaded = function (t, e, i) {
                            throw new Error("Resource: must override this function!");
                        },
                        s.destroy = function () {
                            if (!this._destroyed) {
                                null !== this._resourceManager && this._resourceManager.removeResource(this),
                                    this._destroyed = !0,
                                    this.lock = !1,
                                    this.releaseResource(),
                                    delete e._idResourcesMap[this.id];
                                var t;
                                this._url && ((t = e._urlResourcesMap[this._url]) && (t.splice(t.indexOf(this), 1), 0 === t.length && delete e._urlResourcesMap[this.url]), rt.clearRes(this._url), this.__loaded || r.cancelLoadByUrl(this._url)),
                                    this._group && ((t = e._groupResourcesMap[this._group]).splice(t.indexOf(this), 1), 0 === t.length && delete e._groupResourcesMap[this.url]);
                            }
                        },
                        s.completeCreate = function () {
                            this._released = !1,
                                this.event("recovered", this);
                        },
                        s.dispose = function () {
                            this.destroy();
                        },
                        a(0, s, "memorySize",
                            function () {
                                return this._memorySize;
                            },
                            function (t) {
                                var e = t - this._memorySize;
                                this._memorySize = t,
                                    this.resourceManager && this.resourceManager.addSize(e);
                            }),
                        a(0, s, "_loaded", null,
                            function (t) {
                                this.__loaded = t;
                            }),
                        a(0, s, "loaded",
                            function () {
                                return this.__loaded;
                            }),
                        a(0, s, "id",
                            function () {
                                return this._$1__id;
                            }),
                        a(0, s, "destroyed",
                            function () {
                                return this._destroyed;
                            }),
                        a(0, s, "group",
                            function () {
                                return this._getGroup();
                            },
                            function (t) {
                                this._setGroup(t);
                            }),
                        a(0, s, "resourceManager",
                            function () {
                                return this._resourceManager;
                            }),
                        a(0, s, "url",
                            function () {
                                return this._url;
                            }),
                        a(0, s, "released",
                            function () {
                                return this._released;
                            }),
                        a(0, s, "referenceCount",
                            function () {
                                return this._referenceCount;
                            }),
                        e.getResourceByID = function (t) {
                            return e._idResourcesMap[t];
                        },
                        e.getResourceByURL = function (t, i) {
                            return void 0 === i && (i = 0),
                                e._urlResourcesMap[t][i];
                        },
                        e.getResourceCountByURL = function (t) {
                            return e._urlResourcesMap[t].length;
                        },
                        e.destroyUnusedResources = function (t) {
                            var i;
                            if (t) {
                                var s = e._groupResourcesMap[t];
                                if (s) for (var n = s.slice(), a = 0, r = n.length; a < r; a++)(i = n[a]).lock || 0 !== i._referenceCount || i.destroy();
                            } else for (var o in e._idResourcesMap) (i = e._idResourcesMap[o]).lock || 0 !== i._referenceCount || i.destroy();
                        },
                        e._uniqueIDCounter = 0,
                        e._idResourcesMap = {},
                        e._urlResourcesMap = {},
                        e._groupResourcesMap = {},
                        e;
                }()),
            lt = function (e) {
                function s(t, e) {
                    this.offsetX = 0,
                        this.offsetY = 0,
                        this.sourceWidth = 0,
                        this.sourceHeight = 0,
                        this._w = 0,
                        this._h = 0,
                        this._uvID = 0,
                        this._atlasID = -1,
                        this.scaleRate = 1,
                        s.__super.call(this),
                        t && t._addReference && t._addReference(),
                        this.setTo(t, e);
                }
                n(s, "laya.resource.Texture", h);
                var o = s.prototype;
                return o._setUrl = function (t) {
                    this.url = t;
                },
                    o.setTo = function (e, i) {
                        if (e instanceof t.HTMLElement) {
                            var n = yt.create("2D", e);
                            this.bitmap = n;
                        } else this.bitmap = e;
                        if (this.uv = i || s.DEF_UV, e) {
                            this._w = e.width,
                                this._h = e.height,
                                this.sourceWidth = this.sourceWidth || this._w,
                                this.sourceHeight = this.sourceHeight || this._h,
                                this._loaded = this._w > 0;
                            var a = this;
                            if (this._loaded) r.addToAtlas && r.addToAtlas(a);
                            else {
                                var o = e;
                                o instanceof laya.resource.HTMLImage && o.image && o.image.addEventListener("load",
                                    function (t) {
                                        r.addToAtlas && r.addToAtlas(a);
                                    },
                                    !1);
                            }
                        }
                    },
                    o.active = function () {
                        this.bitmap && this.bitmap.activeResource();
                    },
                    o.destroy = function (t) {
                        if (void 0 === t && (t = !1), this.bitmap && this.bitmap.referenceCount > 0) {
                            var e = this.bitmap;
                            t ? (P.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose(), e._clearReference()) : (e._removeReference(), 0 == e.referenceCount && (P.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose())),
                                this.url && this === i.loader.getRes(this.url) && i.loader.clearRes(this.url, t),
                                this._loaded = !1;
                        }
                    },
                    o.load = function (t) {
                        var e = this;
                        this._loaded = !1,
                            t = R.customFormat(t);
                        var i = this.bitmap || (this.bitmap = wt.create(t));
                        i && i._addReference();
                        var s = this;
                        i.onload = function () {
                            i.onload = null,
                                s._loaded = !0,
                                e.sourceWidth = e._w = i.width,
                                e.sourceHeight = e._h = i.height,
                                s.event("loaded", this),
                                r.addToAtlas && r.addToAtlas(s);
                        };
                    },
                    o.addTextureToAtlas = function (t) {
                        r.addTextureToAtlas(this);
                    },
                    o.getPixels = function (t, e, i, s) {
                        if (P.isConchApp) {
                            var n = this.bitmap;
                            if (n.source && n.source.getImageData) {
                                var a = n.source.getImageData(t, e, i, s),
                                    o = new Uint8Array(a);
                                return Array.from(o);
                            }
                            return null;
                        }
                        if (P.isWebGL) return r.getTexturePixels(this, t, e, i, s);
                        O.canvas.size(i, s),
                            O.canvas.clear(),
                            O.context.drawTexture(this, -t, -e, this.width, this.height, 0, 0);
                        return O.context.getImageData(0, 0, i, s).data;
                    },
                    o.onAsynLoaded = function (t, e) {
                        e && e._addReference(),
                            this.setTo(e, this.uv);
                    },
                    a(0, o, "source",
                        function () {
                            return this.bitmap ? (this.bitmap.activeResource(), this.bitmap.source) : null;
                        }),
                    a(0, o, "loaded",
                        function () {
                            return this._loaded;
                        }),
                    a(0, o, "released",
                        function () {
                            return !this.bitmap || this.bitmap.released;
                        }),
                    a(0, o, "width",
                        function () {
                            return this._w ? this._w : this.uv && this.uv !== s.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;
                        },
                        function (t) {
                            this._w = t,
                                this.sourceWidth || (this.sourceWidth = t);
                        }),
                    a(0, o, "repeat",
                        function () {
                            return !P.isWebGL || !this.bitmap || this.bitmap.repeat;
                        },
                        function (t) {
                            t && P.isWebGL && this.bitmap && (this.bitmap.repeat = t, t && (this.bitmap.enableMerageInAtlas = !1));
                        }),
                    a(0, o, "height",
                        function () {
                            return this._h ? this._h : this.uv && this.uv !== s.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;
                        },
                        function (t) {
                            this._h = t,
                                this.sourceHeight || (this.sourceHeight = t);
                        }),
                    a(0, o, "isLinearSampling",
                        function () {
                            return !P.isWebGL || 9728 != this.bitmap.minFifter;
                        },
                        function (t) {
                            !t && P.isWebGL && (t || -1 != this.bitmap.minFifter || -1 != this.bitmap.magFifter || (this.bitmap.minFifter = 9728, this.bitmap.magFifter = 9728, this.bitmap.enableMerageInAtlas = !1));
                        }),
                    s.moveUV = function (t, e, i) {
                        for (var s = 0; s < 8; s += 2) i[s] += t,
                            i[s + 1] += e;
                        return i;
                    },
                    s.create = function (t, e, i, n, a, o, h, l, c) {
                        void 0 === o && (o = 0),
                            void 0 === h && (h = 0),
                            void 0 === l && (l = 0),
                            void 0 === c && (c = 0);
                        var u = t instanceof laya.resource.Texture,
                            d = u ? t.uv : s.DEF_UV,
                            _ = u ? t.bitmap : t,
                            p = r.isAtlas(_);
                        if (p) {
                            var f = _._atlaser,
                                m = t._atlasID;
                            if (- 1 == m) throw new Error("create texture error");
                            _ = f._inAtlasTextureBitmapValue[m],
                                d = f._inAtlasTextureOriUVValue[m];
                        }
                        var g = new s(_, null);
                        _.width && e + n > _.width && (n = _.width - e),
                            _.height && i + a > _.height && (a = _.height - i),
                            g.width = n,
                            g.height = a,
                            g.offsetX = o,
                            g.offsetY = h,
                            g.sourceWidth = l || n,
                            g.sourceHeight = c || a;
                        var v = 1 / _.width,
                            y = 1 / _.height;
                        e *= v,
                            i *= y,
                            n *= v,
                            a *= y;
                        var b = g.uv[0],
                            x = g.uv[1],
                            w = g.uv[4],
                            M = g.uv[5],
                            S = w - b,
                            C = M - x,
                            T = s.moveUV(d[0], d[1], [e, i, e + n, i, e + n, i + a, e, i + a]);
                        g.uv = [b + T[0] * S, x + T[1] * C, w - (1 - T[2]) * S, x + T[3] * C, w - (1 - T[4]) * S, M - (1 - T[5]) * C, b + T[6] * S, M - (1 - T[7]) * C],
                            p && g.addTextureToAtlas();
                        var I = _.scaleRate;
                        return I && 1 != I ? (g.sourceWidth /= I, g.sourceHeight /= I, g.width /= I, g.height /= I, g.scaleRate = I, g.offsetX /= I, g.offsetY /= I) : g.scaleRate = 1,
                            g;
                    },
                    s.createFromTexture = function (t, e, i, n, a) {
                        var r = t.scaleRate;
                        1 != r && (e *= r, i *= r, n *= r, a *= r);
                        var o = I.TEMP.setTo(e - t.offsetX, i - t.offsetY, n, a),
                            h = o.intersection(s._rect1.setTo(0, 0, t.width, t.height), s._rect2);
                        if (!h) return null;
                        var l = s.create(t, h.x, h.y, h.width, h.height, h.x - o.x, h.y - o.y, n, a);
                        return l.bitmap._removeReference(),
                            l;
                    },
                    s.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1],
                    s.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0],
                    s._rect1 = new I(),
                    s._rect2 = new I(),
                    s;
            }(),
            ct = function (t) {
                function e() {
                    this._labelDic = null,
                        this._tweenDic = {},
                        this._tweenDataList = [],
                        this._endTweenDataList = null,
                        this._currTime = 0,
                        this._lastTime = 0,
                        this._startTime = 0,
                        this._index = 0,
                        this._gidIndex = 0,
                        this._firstTweenDic = {},
                        this._startTimeSort = !1,
                        this._endTimeSort = !1,
                        this._loopKey = !1,
                        this.scale = 1,
                        this._frameRate = 60,
                        this._frameIndex = 0,
                        this._total = 0,
                        e.__super.call(this);
                }
                var s;
                n(e, "laya.utils.TimeLine", h);
                var r = e.prototype;
                return r.to = function (t, e, i, s, n) {
                    return void 0 === n && (n = 0),
                        this._create(t, e, i, s, n, !0);
                },
                    r.from = function (t, e, i, s, n) {
                        return void 0 === n && (n = 0),
                            this._create(t, e, i, s, n, !1);
                    },
                    r._create = function (t, e, i, n, a, r) {
                        var o = H.getItemByClass("tweenData", s);
                        return o.isTo = r,
                            o.type = 0,
                            o.target = t,
                            o.duration = i,
                            o.data = e,
                            o.startTime = this._startTime + a,
                            o.endTime = o.startTime + o.duration,
                            o.ease = n,
                            this._startTime = Math.max(o.endTime, this._startTime),
                            this._tweenDataList.push(o),
                            this._startTimeSort = !0,
                            this._endTimeSort = !0,
                            this;
                    },
                    r.addLabel = function (t, e) {
                        var i = H.getItemByClass("tweenData", s);
                        return i.type = 1,
                            i.data = t,
                            i.endTime = i.startTime = this._startTime + e,
                            this._labelDic || (this._labelDic = {}),
                            this._labelDic[t] = i,
                            this._tweenDataList.push(i),
                            this;
                    },
                    r.removeLabel = function (t) {
                        if (this._labelDic && this._labelDic[t]) {
                            var e = this._labelDic[t];
                            if (e) {
                                var i = this._tweenDataList.indexOf(e);
                                i > -1 && this._tweenDataList.splice(i, 1);
                            }
                            delete this._labelDic[t];
                        }
                    },
                    r.gotoTime = function (t) {
                        if (null != this._tweenDataList && 0 != this._tweenDataList.length) {
                            var e, i;
                            for (var s in this._firstTweenDic) if (i = this._firstTweenDic[s]) for (var n in i) i.diyTarget.hasOwnProperty(n) && (i.diyTarget[n] = i[n]);
                            for (s in this._tweenDic) (e = this._tweenDic[s]).clear(),
                                delete this._tweenDic[s];
                            this._index = 0,
                                this._gidIndex = 0,
                                this._currTime = t,
                                this._lastTime = O.now();
                            var a;
                            null == this._endTweenDataList || this._endTimeSort ? (this._endTimeSort = !1, this._endTweenDataList = a = this._tweenDataList.concat(), a.sort(function (t, e) {
                                return t.endTime > e.endTime ? 1 : t.endTime < e.endTime ? -1 : 0;
                            })) : a = this._endTweenDataList;
                            for (var r, o = 0,
                                h = a.length; o < h; o++) if (0 == (r = a[o]).type) {
                                    if (!(t >= r.endTime)) break;
                                    this._index = Math.max(this._index, o + 1);
                                    var c = r.data;
                                    if (r.isTo) for (var u in c) r.target[u] = c[u];
                                }
                            for (o = 0, h = this._tweenDataList.length; o < h; o++) 0 == (r = this._tweenDataList[o]).type && t >= r.startTime && t < r.endTime && (this._index = Math.max(this._index, o + 1), this._gidIndex++ , (e = H.getItemByClass("tween", q))._create(r.target, r.data, r.duration, r.ease, l.create(this, this._animComplete, [this._gidIndex]), 0, !1, r.isTo, !0, !1), e.setStartTime(this._currTime - (t - r.startTime)), e._updateEase(this._currTime), e.gid = this._gidIndex, this._tweenDic[this._gidIndex] = e);
                        }
                    },
                    r.gotoLabel = function (t) {
                        if (null != this._labelDic) {
                            var e = this._labelDic[t];
                            e && this.gotoTime(e.startTime);
                        }
                    },
                    r.pause = function () {
                        i.timer.clear(this, this._update);
                    },
                    r.resume = function () {
                        this.play(this._currTime, this._loopKey);
                    },
                    r.play = function (t, e) {
                        if (void 0 === t && (t = 0), void 0 === e && (e = !1), this._tweenDataList) {
                            if (this._startTimeSort) {
                                this._startTimeSort = !1,
                                    this._tweenDataList.sort(function (t, e) {
                                        return t.startTime > e.startTime ? 1 : t.startTime < e.startTime ? -1 : 0;
                                    });
                                for (var s = 0,
                                    n = this._tweenDataList.length; s < n; s++) {
                                    var a = this._tweenDataList[s];
                                    if (null != a && 0 == a.type) {
                                        var r = a.target,
                                            o = r.$_GID || (r.$_GID = $.getGID()),
                                            h = null;
                                        null == this._firstTweenDic[o] ? ((h = {}).diyTarget = r, this._firstTweenDic[o] = h) : h = this._firstTweenDic[o];
                                        for (var l in a.data) null == h[l] && (h[l] = r[l]);
                                    }
                                }
                            }
                            "string" == typeof t ? this.gotoLabel(t) : this.gotoTime(t),
                                this._loopKey = e,
                                this._lastTime = O.now(),
                                i.timer.frameLoop(1, this, this._update);
                        }
                    },
                    r._update = function () {
                        if (this._currTime >= this._startTime) {
                            if (!this._loopKey) {
                                for (var t in this._tweenDic) (n = this._tweenDic[t]).complete();
                                return this._complete(),
                                    void this.pause();
                            }
                            if (this._complete(), !this._tweenDataList) return;
                            this.gotoTime(0);
                        }
                        var e = O.now(),
                            i = e - this._lastTime,
                            s = this._currTime += i * this.scale;
                        this._lastTime = e;
                        for (t in this._tweenDic) (n = this._tweenDic[t])._updateEase(s);
                        var n;
                        if (0 != this._tweenDataList.length && this._index < this._tweenDataList.length) {
                            var a = this._tweenDataList[this._index];
                            s >= a.startTime && (this._index++ , 0 == a.type ? (this._gidIndex++ , (n = H.getItemByClass("tween", q))._create(a.target, a.data, a.duration, a.ease, l.create(this, this._animComplete, [this._gidIndex]), 0, !1, a.isTo, !0, !1), n.setStartTime(s), n.gid = this._gidIndex, this._tweenDic[this._gidIndex] = n, n._updateEase(s)) : this.event("label", a.data));
                        }
                    },
                    r._animComplete = function (t) {
                        this._tweenDic[t] && delete this._tweenDic[t];
                    },
                    r._complete = function () {
                        this.event("complete");
                    },
                    r.reset = function () {
                        var t;
                        if (this._labelDic) for (t in this._labelDic) delete this._labelDic[t];
                        for (t in this._tweenDic) this._tweenDic[t].clear(),
                            delete this._tweenDic[t];
                        for (t in this._firstTweenDic) delete this._firstTweenDic[t];
                        if (this._endTweenDataList = null, this._tweenDataList && this._tweenDataList.length) {
                            var e = 0,
                                s = 0;
                            for (s = this._tweenDataList.length, e = 0; e < s; e++) this._tweenDataList[e] && this._tweenDataList[e].destroy();
                        }
                        this._tweenDataList.length = 0,
                            this._currTime = 0,
                            this._lastTime = 0,
                            this._startTime = 0,
                            this._index = 0,
                            this._gidIndex = 0,
                            this.scale = 1,
                            i.timer.clear(this, this._update);
                    },
                    r.destroy = function () {
                        this.reset(),
                            this._labelDic = null,
                            this._tweenDic = null,
                            this._tweenDataList = null,
                            this._firstTweenDic = null;
                    },
                    a(0, r, "index",
                        function () {
                            return this._frameIndex;
                        },
                        function (t) {
                            this._frameIndex = t,
                                this.gotoTime(this._frameIndex / this._frameRate * 1e3);
                        }),
                    a(0, r, "total",
                        function () {
                            return this._total = Math.floor(this._startTime / 1e3 * this._frameRate),
                                this._total;
                        }),
                    e.to = function (t, i, s, n, a) {
                        return void 0 === a && (a = 0),
                            new e().to(t, i, s, n, a);
                    },
                    e.from = function (t, i, s, n, a) {
                        return void 0 === a && (a = 0),
                            new e().from(t, i, s, n, a);
                    },
                    e.__init$ = function () {
                        s = function () {
                            function t() {
                                this.type = 0,
                                    this.isTo = !0,
                                    this.startTime = NaN,
                                    this.endTime = NaN,
                                    this.target = null,
                                    this.duration = NaN,
                                    this.ease = null,
                                    this.data = null;
                            }
                            n(t, "");
                            return t.prototype.destroy = function () {
                                this.target = null,
                                    this.ease = null,
                                    this.data = null,
                                    this.isTo = !0,
                                    this.type = 0,
                                    H.recover("tweenData", this);
                            },
                                t;
                        }();
                    },
                    e;
            }(),
            ut = function (e) {
                function o() {
                    this._transform = null,
                        this._tfChanged = !1,
                        this._x = 0,
                        this._y = 0,
                        this._width = 0,
                        this._height = 0,
                        this._repaint = 1,
                        this._mouseEnableState = 0,
                        this._zOrder = 0,
                        this._graphics = null,
                        this._renderType = 0,
                        this._optimizeScrollRect = !1,
                        this._texture = null,
                        this.mouseThrough = !1,
                        this.autoSize = !1,
                        this.hitTestPrior = !1,
                        this.viewport = null,
                        o.__super.call(this),
                        this._style = u.EMPTY;
                }
                n(o, "laya.display.Sprite", e);
                var h = o.prototype;
                return i.imps(h, {
                    "laya.display.ILayout": !0
                }),
                    h.createConchModel = function () {
                        return new ConchNode();
                    },
                    h.destroy = function (t) {
                        void 0 === t && (t = !0),
                            this._releaseMem(),
                            e.prototype.destroy.call(this, t),
                            this._style && this._style.destroy(),
                            this._transform && this._transform.destroy(),
                            this._transform = null,
                            this._style = null,
                            this._graphics = null;
                    },
                    h.updateZOrder = function () {
                        $.updateOrder(this._childs) && this.repaint();
                    },
                    h.reCache = function () {
                        this._$P.cacheCanvas && (this._$P.cacheCanvas.reCache = !0),
                            this._repaint = 1;
                    },
                    h.setBounds = function (t) {
                        this._set$P("uBounds", t);
                    },
                    h.getBounds = function () {
                        return this._$P.mBounds || this._set$P("mBounds", new I()),
                            I._getWrapRec(this._boundPointsToParent(), this._$P.mBounds);
                    },
                    h.getSelfBounds = function () {
                        return this._$P.uBounds ? this._$P.uBounds : (this._$P.mBounds || this._set$P("mBounds", new I()), I._getWrapRec(this._getBoundPointsM(!1), this._$P.mBounds));
                    },
                    h._boundPointsToParent = function (t) {
                        void 0 === t && (t = !1);
                        var e = 0,
                            i = 0;
                        this._style && (e = this._style._tf.translateX, i = this._style._tf.translateY, t = t || 0 !== this._style._tf.rotate, this._style.scrollRect && (e += this._style.scrollRect.x, i += this._style.scrollRect.y));
                        var s = this._getBoundPointsM(t);
                        if (!s || s.length < 1) return s;
                        if (8 != s.length && (s = t ? M.scanPList(s) : I._getWrapRec(s, I.TEMP)._getBoundPoints()), !this.transform) return $.transPointList(s, this._x - e, this._y - i),
                            s;
                        var n = T.TEMP,
                            a = 0,
                            r = s.length;
                        for (a = 0; a < r; a += 2) n.x = s[a],
                            n.y = s[a + 1],
                            this.toParentPoint(n),
                            s[a] = n.x,
                            s[a + 1] = n.y;
                        return s;
                    },
                    h.getGraphicBounds = function (t) {
                        return void 0 === t && (t = !1),
                            this._graphics ? this._graphics.getBounds(t) : I.TEMP.setTo(0, 0, 0, 0);
                    },
                    h._getBoundPointsM = function (t) {
                        if (void 0 === t && (t = !1), this._$P.uBounds) return this._$P.uBounds._getBoundPoints();
                        if (this._$P.temBM || this._set$P("temBM", []), this.scrollRect) {
                            var e = $.clearArray(this._$P.temBM),
                                i = I.TEMP;
                            return i.copyFrom(this.scrollRect),
                                $.concatArray(e, i._getBoundPoints()),
                                e;
                        }
                        for (var s, n, a, r = this._graphics ? this._graphics.getBoundPoints() : $.clearArray(this._$P.temBM), o = 0, h = (a = this._childs).length; o < h; o++)(s = a[o]) instanceof laya.display.Sprite && 1 == s.visible && (n = s._boundPointsToParent(t)) && (r = r ? $.concatArray(r, n) : n);
                        return r;
                    },
                    h.getStyle = function () {
                        return this._style === u.EMPTY && (this._style = new u()),
                            this._style;
                    },
                    h.setStyle = function (t) {
                        this._style = t;
                    },
                    h._adjustTransform = function () {
                        this._tfChanged = !1;
                        var t, e = this._style._tf,
                            i = e.scaleX,
                            s = e.scaleY;
                        if (e.rotate || 1 !== i || 1 !== s || e.skewX || e.skewY) {
                            (t = this._transform || (this._transform = C.create())).bTransform = !0;
                            var n = .0174532922222222 * (e.rotate - e.skewX),
                                a = .0174532922222222 * (e.rotate + e.skewY),
                                r = Math.cos(a),
                                o = Math.sin(a),
                                h = Math.sin(n),
                                l = Math.cos(n);
                            return t.a = i * r,
                                t.b = i * o,
                                t.c = -s * h,
                                t.d = s * l,
                                t.tx = t.ty = 0,
                                t;
                        }
                        return this._transform && this._transform.destroy(),
                            this._transform = null,
                            this._renderType &= -5,
                            t;
                    },
                    h.pos = function (t, e, i) {
                        if (void 0 === i && (i = !1), this._x !== t || this._y !== e) {
                            if (this.destroyed) return this;
                            if (i) {
                                this._x = t,
                                    this._y = e,
                                    this.conchModel && this.conchModel.pos(this._x, this._y);
                                var s = this._parent;
                                s && 0 === s._repaint && (s._repaint = 1, s.parentRepaint()),
                                    this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
                            } else this.x = t,
                                this.y = e;
                        }
                        return this;
                    },
                    h.pivot = function (t, e) {
                        return this.pivotX = t,
                            this.pivotY = e,
                            this;
                    },
                    h.size = function (t, e) {
                        return this.width = t,
                            this.height = e,
                            this;
                    },
                    h.scale = function (t, e, i) {
                        void 0 === i && (i = !1);
                        var s = this.getStyle(),
                            n = s._tf;
                        if (n.scaleX != t || n.scaleY != e) {
                            if (this.destroyed) return this;
                            if (i) {
                                s.setScale(t, e),
                                    this._tfChanged = !0,
                                    this.conchModel && this.conchModel.scale(t, e),
                                    this._renderType |= 4;
                                var a = this._parent;
                                a && 0 === a._repaint && (a._repaint = 1, a.parentRepaint());
                            } else this.scaleX = t,
                                this.scaleY = e;
                        }
                        return this;
                    },
                    h.skew = function (t, e) {
                        return this.skewX = t,
                            this.skewY = e,
                            this;
                    },
                    h.render = function (t, e, i) {
                        V.spriteCount++ ,
                            D.renders[this._renderType]._fun(this, t, e + this._x, i + this._y),
                            this._repaint = 0;
                    },
                    h.drawToCanvas = function (t, e, i, s) {
                        if (P.isConchNode) {
                            var n = yt.create("2D");
                            return new k(t, e, n).ctx.setCanvasType(1),
                                this.conchModel.drawToCanvas(n.source, i, s),
                                n;
                        }
                        return r.drawToCanvas(this, this._renderType, t, e, i, s);
                    },
                    h.customRender = function (t, e, i) {
                        this._renderType |= 1024;
                    },
                    h._applyFilters = function () {
                        if (!P.isWebGL) {
                            var t;
                            if ((t = this._$P.filters) && !(t.length < 1)) for (var e = 0,
                                i = t.length; e < i; e++) t[e].action.apply(this._$P.cacheCanvas);
                        }
                    },
                    h._isHaveGlowFilter = function () {
                        var t = 0,
                            e = 0;
                        if (this.filters) for (t = 0; t < this.filters.length; t++) if (8 == this.filters[t].type) return !0;
                        for (t = 0, e = this._childs.length; t < e; t++) if (this._childs[t]._isHaveGlowFilter()) return !0;
                        return !1;
                    },
                    h.localToGlobal = function (t, e) {
                        void 0 === e && (e = !1),
                            !0 === e && (t = new T(t.x, t.y));
                        for (var s = this; s && s != i.stage;) t = s.toParentPoint(t),
                            s = s.parent;
                        return t;
                    },
                    h.globalToLocal = function (t, e) {
                        void 0 === e && (e = !1),
                            e && (t = new T(t.x, t.y));
                        for (var s = this,
                            n = []; s && s != i.stage;) n.push(s),
                                s = s.parent;
                        for (var a = n.length - 1; a >= 0;) t = (s = n[a]).fromParentPoint(t),
                            a--;
                        return t;
                    },
                    h.toParentPoint = function (t) {
                        if (!t) return t;
                        t.x -= this.pivotX,
                            t.y -= this.pivotY,
                            this.transform && this._transform.transformPoint(t),
                            t.x += this._x,
                            t.y += this._y;
                        var e = this._style.scrollRect;
                        return e && (t.x -= e.x, t.y -= e.y),
                            t;
                    },
                    h.fromParentPoint = function (t) {
                        if (!t) return t;
                        t.x -= this._x,
                            t.y -= this._y;
                        var e = this._style.scrollRect;
                        return e && (t.x += e.x, t.y += e.y),
                            this.transform && this._transform.invertTransformPoint(t),
                            t.x += this.pivotX,
                            t.y += this.pivotY,
                            t;
                    },
                    h.on = function (t, i, s, n) {
                        return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, i, s, n, !1)) : e.prototype.on.call(this, t, i, s, n);
                    },
                    h.once = function (t, i, s, n) {
                        return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(t, i, s, n, !0)) : e.prototype.once.call(this, t, i, s, n);
                    },
                    h._$2__onDisplay = function () {
                        if (1 !== this._mouseEnableState) {
                            var t = this;
                            for (t = t.parent; t && 1 !== t._mouseEnableState && !t._getBit(2);) t.mouseEnabled = !0,
                                t._setBit(2, !0),
                                t = t.parent;
                        }
                    },
                    h.loadImage = function (t, e, i, s, n, a) {
                        var r = this;
                        return void 0 === e && (e = 0),
                            void 0 === i && (i = 0),
                            void 0 === s && (s = 0),
                            void 0 === n && (n = 0),
                            this.graphics.loadImage(t, e, i, s, n,
                                function (t) {
                                    r.destroyed || (r.size(e + (s || t.width), i + (n || t.height)), r.repaint(), a && a.runWith(t));
                                }),
                            this;
                    },
                    h.repaint = function () {
                        this.conchModel && this.conchModel.repaint && this.conchModel.repaint(),
                            0 === this._repaint && (this._repaint = 1, this.parentRepaint()),
                            this._$P && this._$P.maskParent && this._$P.maskParent.repaint();
                    },
                    h._needRepaint = function () {
                        return 0 !== this._repaint && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache;
                    },
                    h._childChanged = function (t) {
                        this._childs.length ? this._renderType |= 2048 : this._renderType &= -2049,
                            t && this._get$P("hasZorder") && i.timer.callLater(this, this.updateZOrder),
                            this.repaint();
                    },
                    h.parentRepaint = function () {
                        var t = this._parent;
                        t && 0 === t._repaint && (t._repaint = 1, t.parentRepaint());
                    },
                    h.startDrag = function (t, e, i, s, n, a, r) {
                        void 0 === e && (e = !1),
                            void 0 === i && (i = 0),
                            void 0 === s && (s = 300),
                            void 0 === a && (a = !1),
                            void 0 === r && (r = .92),
                            this._$P.dragging || this._set$P("dragging", new X()),
                            this._$P.dragging.start(this, t, e, i, s, n, a, r);
                    },
                    h.stopDrag = function () {
                        this._$P.dragging && this._$P.dragging.stop();
                    },
                    h._releaseMem = function () {
                        if (this._$P) {
                            var t = this._$P.cacheCanvas;
                            t && t.ctx && (H.recover("RenderContext", t.ctx), t.ctx.canvas.size(0, 0), t.ctx = null);
                            var e = this._$P._filterCache;
                            e && (e.destroy(), e.recycle(), this._set$P("_filterCache", null)),
                                this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", !1),
                                this._$P._isHaveGlowFilter = null;
                        }
                    },
                    h._setDisplay = function (t) {
                        t || this._releaseMem(),
                            e.prototype._setDisplay.call(this, t);
                    },
                    h.hitTestPoint = function (t, e) {
                        var i = this.globalToLocal(T.TEMP.setTo(t, e));
                        t = i.x,
                            e = i.y;
                        return (this._$P.hitArea ? this._$P.hitArea : this._width > 0 && this._height > 0 ? I.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds()).contains(t, e);
                    },
                    h.getMousePoint = function () {
                        return this.globalToLocal(T.TEMP.setTo(i.stage.mouseX, i.stage.mouseY));
                    },
                    h._getWords = function () {
                        return null;
                    },
                    h._addChildsToLayout = function (t) {
                        var e = this._getWords();
                        if (null == e && 0 == this._childs.length) return !1;
                        if (e) for (var i = 0,
                            s = e.length; i < s; i++) t.push(e[i]);
                        return this._childs.forEach(function (e, i, s) {
                            e._style._enableLayout() && e._addToLayout(t);
                        }),
                            !0;
                    },
                    h._addToLayout = function (t) {
                        this._style.absolute || (this._style.block ? t.push(this) : this._addChildsToLayout(t) && (this.x = this.y = 0));
                    },
                    h._isChar = function () {
                        return !1;
                    },
                    h._getCSSStyle = function () {
                        return this._style.getCSSStyle();
                    },
                    h._setAttributes = function (t, e) {
                        switch (t) {
                            case "x":
                                this.x = parseFloat(e);
                                break;

                            case "y":
                                this.y = parseFloat(e);
                                break;

                            case "width":
                                this.width = parseFloat(e);
                                break;

                            case "height":
                                this.height = parseFloat(e);
                                break;

                            default:
                                this[t] = e;
                        }
                    },
                    h._layoutLater = function () {
                        this.parent && this.parent._layoutLater();
                    },
                    a(0, h, "optimizeScrollRect",
                        function () {
                            return this._optimizeScrollRect;
                        },
                        function (t) {
                            this._optimizeScrollRect != t && (this._optimizeScrollRect = t, this.conchModel && this.conchModel.optimizeScrollRect(t));
                        }),
                    a(0, h, "customRenderEnable", null,
                        function (t) {
                            if (t && (this._renderType |= 1024, P.isConchNode)) {
                                o.CustomList.push(this);
                                var e = new yt("2d");
                                e._setContext(new CanvasRenderingContext2D()),
                                    this.customContext = new k(0, 0, e),
                                    e.context.setCanvasType && e.context.setCanvasType(2),
                                    this.conchModel.custom(e.context);
                            }
                        }),
                    a(0, h, "cacheAsBitmap",
                        function () {
                            return "none" !== this.cacheAs;
                        },
                        function (t) {
                            this.cacheAs = t ? this._$P.hasFilter ? "none" : "normal" : "none";
                        }),
                    a(0, h, "cacheAs",
                        function () {
                            return null == this._$P.cacheCanvas ? "none" : this._$P.cacheCanvas.type;
                        },
                        function (t) {
                            var e = this._$P.cacheCanvas;
                            if (t !== (e ? e.type : "none")) {
                                if ("none" !== t) this._getBit(1) || this._setUpNoticeType(1),
                                    e || (e = this._set$P("cacheCanvas", H.getItemByClass("cacheCanvas", Object))),
                                    e.type = t,
                                    e.reCache = !0,
                                    this._renderType |= 16,
                                    "bitmap" == t && this.conchModel && this.conchModel.cacheAs(1),
                                    this._set$P("cacheForFilters", !1);
                                else if (this._$P._mask);
                                else if (this._$P.hasFilter) this._set$P("cacheForFilters", !0);
                                else {
                                    if (e) {
                                        var i = e;
                                        i && i.ctx && (H.recover("RenderContext", i.ctx), i.ctx.canvas.size(0, 0), i.ctx = null),
                                            H.recover("cacheCanvas", e);
                                    }
                                    this._$P.cacheCanvas = null,
                                        this._renderType &= -17,
                                        this.conchModel && this.conchModel.cacheAs(0);
                                }
                                this.repaint();
                            }
                        }),
                    a(0, h, "zOrder",
                        function () {
                            return this._zOrder;
                        },
                        function (t) {
                            this._zOrder != t && (this._zOrder = t, this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(t), this._parent && (t && this._parent._set$P("hasZorder", !0), i.timer.callLater(this._parent, this.updateZOrder)));
                        }),
                    a(0, h, "rotation",
                        function () {
                            return this._style._tf.rotate;
                        },
                        function (t) {
                            var e = this.getStyle();
                            if (e._tf.rotate !== t) {
                                e.setRotate(t),
                                    this._tfChanged = !0,
                                    this.conchModel && this.conchModel.rotate(t),
                                    this._renderType |= 4;
                                var i = this._parent;
                                i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
                            }
                        }),
                    a(0, h, "width",
                        function () {
                            return this.autoSize ? this.getSelfBounds().width : this._width;
                        },
                        function (t) {
                            this._width !== t && (this._width = t, this.conchModel && this.conchModel.size(t, this._height), this.repaint());
                        }),
                    a(0, h, "x",
                        function () {
                            return this._x;
                        },
                        function (t) {
                            if (this._x !== t) {
                                if (this.destroyed) return;
                                this._x = t,
                                    this.conchModel && this.conchModel.pos(t, this._y);
                                var e = this._parent;
                                e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()),
                                    this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
                            }
                        }),
                    a(0, h, "globalScaleY",
                        function () {
                            for (var t = 1,
                                e = this; e && e !== i.stage;) t *= e.scaleY,
                                    e = e.parent;
                            return t;
                        }),
                    a(0, h, "hitArea",
                        function () {
                            return this._$P.hitArea;
                        },
                        function (t) {
                            this._set$P("hitArea", t);
                        }),
                    a(0, h, "staticCache",
                        function () {
                            return this._$P.staticCache;
                        },
                        function (t) {
                            this._set$P("staticCache", t),
                                t || this.reCache();
                        }),
                    a(0, h, "texture",
                        function () {
                            return this._texture;
                        },
                        function (t) {
                            this._texture != t && (this._texture = t, this.graphics.cleanByTexture(t, 0, 0));
                        }),
                    a(0, h, "y",
                        function () {
                            return this._y;
                        },
                        function (t) {
                            if (this._y !== t) {
                                if (this.destroyed) return;
                                this._y = t,
                                    this.conchModel && this.conchModel.pos(this._x, t);
                                var e = this._parent;
                                e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()),
                                    this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
                            }
                        }),
                    a(0, h, "height",
                        function () {
                            return this.autoSize ? this.getSelfBounds().height : this._height;
                        },
                        function (t) {
                            this._height !== t && (this._height = t, this.conchModel && this.conchModel.size(this._width, t), this.repaint());
                        }),
                    a(0, h, "blendMode",
                        function () {
                            return this._style.blendMode;
                        },
                        function (t) {
                            this.getStyle().blendMode = t,
                                this.conchModel && this.conchModel.blendMode(t),
                                t && "source-over" != t ? this._renderType |= 8 : this._renderType &= -9,
                                this.parentRepaint();
                        }),
                    a(0, h, "scaleX",
                        function () {
                            return this._style._tf.scaleX;
                        },
                        function (t) {
                            var e = this.getStyle();
                            if (e._tf.scaleX !== t) {
                                e.setScaleX(t),
                                    this._tfChanged = !0,
                                    this.conchModel && this.conchModel.scale(t, e._tf.scaleY),
                                    this._renderType |= 4;
                                var i = this._parent;
                                i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
                            }
                        }),
                    a(0, h, "scaleY",
                        function () {
                            return this._style._tf.scaleY;
                        },
                        function (t) {
                            var e = this.getStyle();
                            if (e._tf.scaleY !== t) {
                                e.setScaleY(t),
                                    this._tfChanged = !0,
                                    this.conchModel && this.conchModel.scale(e._tf.scaleX, t),
                                    this._renderType |= 4;
                                var i = this._parent;
                                i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
                            }
                        }),
                    a(0, h, "stage",
                        function () {
                            return i.stage;
                        }),
                    a(0, h, "skewX",
                        function () {
                            return this._style._tf.skewX;
                        },
                        function (t) {
                            var e = this.getStyle();
                            if (e._tf.skewX !== t) {
                                e.setSkewX(t),
                                    this._tfChanged = !0,
                                    this.conchModel && this.conchModel.skew(t, e._tf.skewY),
                                    this._renderType |= 4;
                                var i = this._parent;
                                i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
                            }
                        }),
                    a(0, h, "scrollRect",
                        function () {
                            return this._style.scrollRect;
                        },
                        function (t) {
                            this.getStyle().scrollRect = t,
                                this.repaint(),
                                t ? (this._renderType |= 128, this.conchModel && this.conchModel.scrollRect(t.x, t.y, t.width, t.height)) : (this._renderType &= -129, this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(64) : this.conchModel.removeType(128)));
                        }),
                    a(0, h, "skewY",
                        function () {
                            return this._style._tf.skewY;
                        },
                        function (t) {
                            var e = this.getStyle();
                            if (e._tf.skewY !== t) {
                                e.setSkewY(t),
                                    this._tfChanged = !0,
                                    this.conchModel && this.conchModel.skew(e._tf.skewX, t),
                                    this._renderType |= 4;
                                var i = this._parent;
                                i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
                            }
                        }),
                    a(0, h, "transform",
                        function () {
                            return this._tfChanged ? this._adjustTransform() : this._transform;
                        },
                        function (t) {
                            this._tfChanged = !1,
                                this._transform = t,
                                t && (this._x = t.tx, this._y = t.ty, t.tx = t.ty = 0, this.conchModel && this.conchModel.transform(t.a, t.b, t.c, t.d, this._x, this._y)),
                                t ? this._renderType |= 4 : (this._renderType &= -5, this.conchModel && this.conchModel.removeType(4)),
                                this.parentRepaint();
                        }),
                    a(0, h, "pivotX",
                        function () {
                            return this._style._tf.translateX;
                        },
                        function (t) {
                            this.getStyle().setTranslateX(t),
                                this.conchModel && this.conchModel.pivot(t, this._style._tf.translateY),
                                this.repaint();
                        }),
                    a(0, h, "pivotY",
                        function () {
                            return this._style._tf.translateY;
                        },
                        function (t) {
                            this.getStyle().setTranslateY(t),
                                this.conchModel && this.conchModel.pivot(this._style._tf.translateX, t),
                                this.repaint();
                        }),
                    a(0, h, "alpha",
                        function () {
                            return this._style.alpha;
                        },
                        function (t) {
                            this._style && this._style.alpha !== t && (t = t < 0 ? 0 : t > 1 ? 1 : t, this.getStyle().alpha = t, this.conchModel && this.conchModel.alpha(t), 1 !== t ? this._renderType |= 2 : this._renderType &= -3, this.parentRepaint());
                        }),
                    a(0, h, "visible",
                        function () {
                            return this._style.visible;
                        },
                        function (t) {
                            this._style && this._style.visible !== t && (this.getStyle().visible = t, this.conchModel && this.conchModel.visible(t), this.parentRepaint());
                        }),
                    a(0, h, "graphics",
                        function () {
                            return this._graphics || (this.graphics = r.createGraphics());
                        },
                        function (t) {
                            this._graphics && (this._graphics._sp = null),
                                this._graphics = t,
                                t ? (this._renderType &= -2, this._renderType |= 512, t._sp = this, this.conchModel && this.conchModel.graphics(this._graphics)) : (this._renderType &= -513, this._renderType &= -2, this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(256) : this.conchModel.removeType(512))),
                                this.repaint();
                        }),
                    a(0, h, "filters",
                        function () {
                            return this._$P.filters;
                        },
                        function (t) {
                            t && 0 === t.length && (t = null),
                                this._$P.filters != t && (this._set$P("filters", t ? t.slice() : null), P.isConchApp && (this.conchModel && (o.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(16) : this.conchModel.removeType(32)), this._$P.filters && 1 == this._$P.filters.length && this._$P.filters[0].callNative(this)), P.isWebGL && (t && t.length ? this._renderType |= 32 : this._renderType &= -33), t && t.length > 0 ? (this._getBit(1) || this._setUpNoticeType(1), P.isWebGL && 1 == t.length && t[0] instanceof laya.filters.ColorFilter || ("bitmap" != this.cacheAs && (P.isConchNode || (this.cacheAs = "bitmap"), this._set$P("cacheForFilters", !0)), this._set$P("hasFilter", !0))) : (this._set$P("hasFilter", !1), this._$P.cacheForFilters && "bitmap" == this.cacheAs && (this.cacheAs = "none")), this.repaint());
                        }),
                    a(0, h, "parent", e.prototype._$get_parent,
                        function (t) {
                            i.superSet(J, this, "parent", t),
                                t && this._getBit(2) && this._$2__onDisplay();
                        }),
                    a(0, h, "mask",
                        function () {
                            return this._$P._mask;
                        },
                        function (t) {
                            t && this.mask && this.mask._$P.maskParent || (t ? (this.cacheAs = "bitmap", this._set$P("_mask", t), t._set$P("maskParent", this)) : (this.mask && this.mask._set$P("maskParent", null), this._set$P("_mask", t), this.cacheAs = "none"), this.conchModel && this.conchModel.mask(t ? t.conchModel : null), this._renderType |= 64, this.parentRepaint());
                        }),
                    a(0, h, "mouseEnabled",
                        function () {
                            return this._mouseEnableState > 1;
                        },
                        function (t) {
                            this._mouseEnableState = t ? 2 : 1;
                        }),
                    a(0, h, "globalScaleX",
                        function () {
                            for (var t = 1,
                                e = this; e && e !== i.stage;) t *= e.scaleX,
                                    e = e.parent;
                            return t;
                        }),
                    a(0, h, "mouseX",
                        function () {
                            return this.getMousePoint().x;
                        }),
                    a(0, h, "mouseY",
                        function () {
                            return this.getMousePoint().y;
                        }),
                    o.fromImage = function (t) {
                        return new o().loadImage(t);
                    },
                    o.CustomList = [],
                    s(o, ["RUNTIMEVERION",
                        function () {
                            return this.RUNTIMEVERION = t.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : "";
                        }]),
                    o;
            }(J),
            dt = function (t) {
                function e(t) {
                    this._audio = null,
                        this._onEnd = null,
                        this._resumePlay = null,
                        e.__super.call(this),
                        this._onEnd = $.bind(this.__onEnd, this),
                        this._resumePlay = $.bind(this.__resumePlay, this),
                        t.addEventListener("ended", this._onEnd),
                        this._audio = t;
                }
                n(e, "laya.media.h5audio.AudioSoundChannel", it);
                var s = e.prototype;
                return s.__onEnd = function () {
                    if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null),
                        this.stop(),
                        void this.event("complete");
                    this.loops > 0 && this.loops-- ,
                        this.startTime = 0,
                        this.play();
                },
                    s.__resumePlay = function () {
                        this._audio && this._audio.removeEventListener("canplay", this._resumePlay);
                        try {
                            this._audio.currentTime = this.startTime,
                                O.container.appendChild(this._audio),
                                this._audio.play();
                        } catch (t) {
                            this.event("error");
                        }
                    },
                    s.play = function () {
                        this.isStopped = !1;
                        try {
                            this._audio.playbackRate = L.playbackRate,
                                this._audio.currentTime = this.startTime;
                        } catch (t) {
                            return void this._audio.addEventListener("canplay", this._resumePlay);
                        }
                        L.addChannel(this),
                            O.container.appendChild(this._audio),
                            "play" in this._audio && this._audio.play();
                    },
                    s.stop = function () {
                        this.isStopped = !0,
                            L.removeChannel(this),
                            this.completeHandler = null,
                            this._audio && ("pause" in this._audio && P.isConchApp && this._audio.stop(), this._audio.pause(), this._audio.removeEventListener("ended", this._onEnd), this._audio.removeEventListener("canplay", this._resumePlay), O.onIE || this._audio != et._musicAudio && H.recover("audio:" + this.url, this._audio), O.removeElement(this._audio), this._audio = null);
                    },
                    s.pause = function () {
                        this.isStopped = !0,
                            L.removeChannel(this),
                            "pause" in this._audio && this._audio.pause();
                    },
                    s.resume = function () {
                        this._audio && (this.isStopped = !1, L.addChannel(this), "play" in this._audio && this._audio.play());
                    },
                    a(0, s, "position",
                        function () {
                            return this._audio ? this._audio.currentTime : 0;
                        }),
                    a(0, s, "duration",
                        function () {
                            return this._audio ? this._audio.duration : 0;
                        }),
                    a(0, s, "volume",
                        function () {
                            return this._audio ? this._audio.volume : 1;
                        },
                        function (t) {
                            this._audio && (this._audio.volume = t);
                        }),
                    e;
            }(),
            _t = function (t) {
                function e() {
                    this.audioBuffer = null,
                        this.gain = null,
                        this.bufferSource = null,
                        this._currentTime = 0,
                        this._volume = 1,
                        this._startTime = 0,
                        this._pauseTime = 0,
                        this._onPlayEnd = null,
                        this.context = nt.ctx,
                        e.__super.call(this),
                        this._onPlayEnd = $.bind(this.__onPlayEnd, this),
                        this.context.createGain ? this.gain = this.context.createGain() : this.gain = this.context.createGainNode();
                }
                n(e, "laya.media.webaudio.WebAudioSoundChannel", it);
                var s = e.prototype;
                return s.play = function () {
                    if (L.addChannel(this), this.isStopped = !1, this._clearBufferSource(), this.audioBuffer) {
                        var t = this.context,
                            e = this.gain,
                            i = t.createBufferSource();
                        this.bufferSource = i,
                            i.buffer = this.audioBuffer,
                            i.connect(e),
                            e && e.disconnect(),
                            e.connect(t.destination),
                            i.onended = this._onPlayEnd,
                            this.startTime >= this.duration && (this.startTime = 0),
                            this._startTime = O.now(),
                            this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, 0) : this.gain.gain.value = this._volume,
                            0 == this.loops && (i.loop = !0),
                            i.playbackRate.setTargetAtTime ? i.playbackRate.setTargetAtTime(L.playbackRate, this.context.currentTime, 0) : i.playbackRate.value = L.playbackRate,
                            i.start(0, this.startTime),
                            this._currentTime = 0;
                    }
                },
                    s.__onPlayEnd = function () {
                        if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null),
                            this.stop(),
                            void this.event("complete");
                        this.loops > 0 && this.loops-- ,
                            this.startTime = 0,
                            this.play();
                    },
                    s._clearBufferSource = function () {
                        if (this.bufferSource) {
                            var t = this.bufferSource;
                            t.stop ? t.stop(0) : t.noteOff(0),
                                t.disconnect(0),
                                t.onended = null,
                                e._tryCleanFailed || this._tryClearBuffer(t),
                                this.bufferSource = null;
                        }
                    },
                    s._tryClearBuffer = function (t) {
                        if (O.onMac) try {
                            t.buffer = nt._miniBuffer;
                        } catch (t) {
                            e._tryCleanFailed = !0;
                        } else try {
                            t.buffer = null;
                        } catch (t) {
                            e._tryCleanFailed = !0;
                        }
                    },
                    s.stop = function () {
                        this._clearBufferSource(),
                            this.audioBuffer = null,
                            this.gain && this.gain.disconnect(),
                            this.isStopped = !0,
                            L.removeChannel(this),
                            this.completeHandler = null,
                            L.autoReleaseSound && i.timer.once(5e3, null, L.disposeSoundIfNotUsed, [this.url], !1);
                    },
                    s.pause = function () {
                        this.isStopped || (this._pauseTime = this.position),
                            this._clearBufferSource(),
                            this.gain && this.gain.disconnect(),
                            this.isStopped = !0,
                            L.removeChannel(this),
                            L.autoReleaseSound && i.timer.once(5e3, null, L.disposeSoundIfNotUsed, [this.url], !1);
                    },
                    s.resume = function () {
                        this.startTime = this._pauseTime,
                            this.play();
                    },
                    a(0, s, "position",
                        function () {
                            return this.bufferSource ? (O.now() - this._startTime) / 1e3 + this.startTime : 0;
                        }),
                    a(0, s, "duration",
                        function () {
                            return this.audioBuffer ? this.audioBuffer.duration : 0;
                        }),
                    a(0, s, "volume",
                        function () {
                            return this._volume;
                        },
                        function (t) {
                            this.isStopped || (this._volume = t, this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(t, this.context.currentTime, 0) : this.gain.gain.value = t);
                        }),
                    e._tryCleanFailed = !1,
                    e;
            }(),
            pt = function (t) {
                function e() {
                    e.__super.call(this),
                        this._w = 0,
                        this._h = 0;
                }
                n(e, "laya.resource.Bitmap", ht);
                var i = e.prototype;
                return a(0, i, "width",
                    function () {
                        return this._w;
                    }),
                    a(0, i, "height",
                        function () {
                            return this._h;
                        }),
                    a(0, i, "source",
                        function () {
                            return this._source;
                        }),
                    e;
            }(),
            ft = function (t) {
                function e() {
                    this.loop = !1,
                        this.wrapMode = 0,
                        this._index = 0,
                        this._count = 0,
                        this._isPlaying = !1,
                        this._labels = null,
                        this._isReverse = !1,
                        this._frameRateChanged = !1,
                        this._controlNode = null,
                        this._actionName = null,
                        e.__super.call(this),
                        this._interval = o.animationInterval,
                        this._setUpNoticeType(1);
                }
                n(e, "laya.display.AnimationPlayerBase", t);
                var i = e.prototype;
                return i.play = function (t, e, i, s) {
                    void 0 === t && (t = 0),
                        void 0 === e && (e = !0),
                        void 0 === i && (i = ""),
                        void 0 === s && (s = !0),
                        this._isPlaying = !0,
                        this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
                        this.loop = e,
                        this._actionName = i,
                        this._isReverse = 1 == this.wrapMode,
                        this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
                },
                    i._getFrameByLabel = function (t) {
                        var e = 0;
                        for (e = 0; e < this._count; e++) if (this._labels[e] && this._labels[e].indexOf(t) >= 0) return e;
                        return 0;
                    },
                    i._frameLoop = function () {
                        if (this._isReverse) {
                            if (this._index-- , this._index < 0) {
                                if (!this.loop) return this._index = 0,
                                    this.stop(),
                                    void this.event("complete");
                                2 == this.wrapMode ? (this._index = this._count > 0 ? 1 : 0, this._isReverse = !1) : this._index = this._count - 1,
                                    this.event("complete");
                            }
                        } else if (this._index++ , this._index >= this._count) {
                            if (!this.loop) return this._index-- ,
                                this.stop(),
                                void this.event("complete");
                            2 == this.wrapMode ? (this._index = this._count - 2 >= 0 ? this._count - 2 : 0, this._isReverse = !0) : this._index = 0,
                                this.event("complete");
                        }
                        this.index = this._index;
                    },
                    i._setControlNode = function (t) {
                        this._controlNode && (this._controlNode.off("display", this, this._checkResumePlaying), this._controlNode.off("undisplay", this, this._checkResumePlaying)),
                            this._controlNode = t,
                            t && t != this && (t.on("display", this, this._checkResumePlaying), t.on("undisplay", this, this._checkResumePlaying));
                    },
                    i._setDisplay = function (e) {
                        t.prototype._setDisplay.call(this, e),
                            this._checkResumePlaying();
                    },
                    i._checkResumePlaying = function () {
                        this._isPlaying && (this._controlNode.displayedInStage ? this.play(this._index, this.loop, this._actionName) : this.clearTimer(this, this._frameLoop));
                    },
                    i.stop = function () {
                        this._isPlaying = !1,
                            this.clearTimer(this, this._frameLoop);
                    },
                    i.addLabel = function (t, e) {
                        this._labels || (this._labels = {}),
                            this._labels[e] || (this._labels[e] = []),
                            this._labels[e].push(t);
                    },
                    i.removeLabel = function (t) {
                        if (t) {
                            if (this._labels) for (var e in this._labels) this._removeLabelFromLabelList(this._labels[e], t);
                        } else this._labels = null;
                    },
                    i._removeLabelFromLabelList = function (t, e) {
                        if (t) for (var i = t.length - 1; i >= 0; i--) t[i] == e && t.splice(i, 1);
                    },
                    i.gotoAndStop = function (t) {
                        this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
                            this.stop();
                    },
                    i._displayToIndex = function (t) { },
                    i.clear = function () {
                        this.stop(),
                            this._labels = null;
                    },
                    a(0, i, "interval",
                        function () {
                            return this._interval;
                        },
                        function (t) {
                            this._interval != t && (this._frameRateChanged = !0, this._interval = t, this._isPlaying && t > 0 && this.timerLoop(t, this, this._frameLoop, null, !0, !0));
                        }),
                    a(0, i, "isPlaying",
                        function () {
                            return this._isPlaying;
                        }),
                    a(0, i, "index",
                        function () {
                            return this._index;
                        },
                        function (t) {
                            if (this._index = t, this._displayToIndex(t), this._labels && this._labels[t]) for (var e = this._labels[t], i = 0, s = e.length; i < s; i++) this.event("label", e[i]);
                        }),
                    a(0, i, "count",
                        function () {
                            return this._count;
                        }),
                    e.WRAP_POSITIVE = 0,
                    e.WRAP_REVERSE = 1,
                    e.WRAP_PINGPONG = 2,
                    e;
            }(ut),
            mt = function (t) {
                function e() {
                    this._clipPoint = null,
                        this._currBitmapFont = null,
                        this._text = null,
                        this._isChanged = !1,
                        this._textWidth = 0,
                        this._textHeight = 0,
                        this._lines = [],
                        this._lineWidths = [],
                        this._startX = NaN,
                        this._startY = NaN,
                        this._lastVisibleLineIndex = -1,
                        this._words = null,
                        this._charSize = {},
                        this.underline = !1,
                        this._underlineColor = null,
                        e.__super.call(this),
                        this.overflow = e.VISIBLE,
                        this._style = new tt(this),
                        this._style.wordWrap = !1;
                }
                n(e, "laya.display.Text", t);
                var r = e.prototype;
                return r.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._lines = null,
                        this._words && (this._words.length = 0, this._words = null);
                },
                    r._getBoundPointsM = function (t) {
                        void 0 === t && (t = !1);
                        var e = I.TEMP;
                        return e.setTo(0, 0, this.width, this.height),
                            e._getBoundPoints();
                    },
                    r.getGraphicBounds = function (t) {
                        void 0 === t && (t = !1);
                        var e = I.TEMP;
                        return e.setTo(0, 0, this.width, this.height),
                            e;
                    },
                    r._getCSSStyle = function () {
                        return this._style;
                    },
                    r.lang = function (t, i, s, n, a, r, o, h, l, c, u) {
                        if (t = e.langPacks && e.langPacks[t] ? e.langPacks[t] : t, arguments.length < 2) this._text = t;
                        else {
                            for (var d = 0,
                                _ = arguments.length; d < _; d++) t = t.replace("{" + d + "}", arguments[d + 1]);
                            this._text = t;
                        }
                    },
                    r._isPassWordMode = function () {
                        var t = this._style.password;
                        return "prompt" in this && this.prompt == this._text && (t = !1),
                            t;
                    },
                    r._getPassWordTxt = function (t) {
                        var e;
                        e = "";
                        for (var i = t.length; i > 0; i--) e += "●";
                        return e;
                    },
                    r.renderText = function (t, e) {
                        var i = this.graphics;
                        i.clear(!0);
                        var s = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + (O.onIPhone ? laya.display.Text._fontFamilyMap[this.font] || this.font : this.font);
                        O.context.font = s;
                        var n = this.padding,
                            a = n[3],
                            r = "left",
                            o = this._lines,
                            h = this.leading + this._charSize.height,
                            l = this._currBitmapFont;
                        l && (h = this.leading + l.getMaxHeight());
                        var c = n[0];
                        if (!l && this._width > 0 && this._textWidth <= this._width && ("right" == this.align ? (r = "right", a = this._width - n[1]) : "center" == this.align && (r = "center", a = .5 * this._width + n[3] - n[1])), this._height > 0) {
                            var u = this._textHeight > this._height ? "top" : this.valign;
                            "middle" === u ? c = .5 * (this._height - e * h) + n[0] - n[2] : "bottom" === u && (c = this._height - e * h - n[2]);
                        }
                        var d = this._style;
                        if (l && l.autoScaleSize) var _ = l.fontSize / this.fontSize;
                        if (this._clipPoint) if (i.save(), l && l.autoScaleSize) {
                            var p = 0,
                                f = 0;
                            p = this._width ? this._width - n[3] - n[1] : this._textWidth,
                                f = this._height ? this._height - n[0] - n[2] : this._textHeight,
                                p *= _,
                                f *= _,
                                i.clipRect(n[3], n[0], p, f);
                        } else i.clipRect(n[3], n[0], this._width ? this._width - n[3] - n[1] : this._textWidth, this._height ? this._height - n[0] - n[2] : this._textHeight);
                        var m = d.password;
                        "prompt" in this && this.prompt == this._text && (m = !1);
                        for (var g = 0,
                            v = 0,
                            y = Math.min(this._lines.length, e + t) || 1, b = t; b < y; b++) {
                            var x, w = o[b];
                            if (m) {
                                var M = w.length;
                                w = "";
                                for (var S = M; S > 0; S--) w += "●";
                            }
                            if (g = a - (this._clipPoint ? this._clipPoint.x : 0), v = c + h * b - (this._clipPoint ? this._clipPoint.y : 0), this.underline && this.drawUnderline(r, g, v, b), l) {
                                var C = this.width;
                                l.autoScaleSize && (C = this.width * _),
                                    l.drawText(w, this, g, v, this.align, C);
                            } else P.isWebGL ? (this._words || (this._words = []), (x = this._words.length > b - t ? this._words[b - t] : new Z()).setText(w)) : x = w,
                                d.stroke ? i.fillBorderText(x, g, v, s, this.color, d.strokeColor, d.stroke, r) : i.fillText(x, g, v, s, this.color, r);
                        }
                        if (l && l.autoScaleSize) {
                            var T = 1 / _;
                            this.scale(T, T);
                        }
                        this._clipPoint && i.restore(),
                            this._startX = a,
                            this._startY = c;
                    },
                    r.drawUnderline = function (t, e, i, s) {
                        var n = this._lineWidths[s];
                        switch (t) {
                            case "center":
                                e -= n / 2;
                                break;

                            case "right":
                                e -= n;
                        }
                        i += this._charSize.height,
                            this._graphics.drawLine(e, i, e + n, i, this.underlineColor || this.color, 1);
                    },
                    r.typeset = function () {
                        if (this._isChanged = !1, !this._text) return this._clipPoint = null,
                            this._textWidth = this._textHeight = 0,
                            void this.graphics.clear(!0);
                        O.context.font = this._getCSSStyle().font,
                            this._lines.length = 0,
                            this._lineWidths.length = 0,
                            this._isPassWordMode() ? this.parseLines(this._getPassWordTxt(this._text)) : this.parseLines(this._text),
                            this.evalTextSize(),
                            this.checkEnabledViewportOrNot() ? this._clipPoint || (this._clipPoint = new T(0, 0)) : this._clipPoint = null;
                        var t = this._lines.length;
                        if (this.overflow != e.VISIBLE) {
                            var i = this.overflow == e.HIDDEN ? Math.floor : Math.ceil;
                            t = Math.min(t, i((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height)));
                        }
                        var s = this.scrollY / (this._charSize.height + this.leading) | 0;
                        this.renderText(s, t),
                            this.repaint();
                    },
                    r.evalTextSize = function () {
                        var t = NaN,
                            e = NaN;
                        t = Math.max.apply(this, this._lineWidths),
                            e = this._currBitmapFont ? this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2] : this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2],
                            t == this._textWidth && e == this._textHeight || (this._textWidth = t, this._textHeight = e, this._width && this._height || this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight));
                    },
                    r.checkEnabledViewportOrNot = function () {
                        return this.overflow == e.SCROLL && (this._width > 0 && this._textWidth > this._width || this._height > 0 && this._textHeight > this._height);
                    },
                    r.changeText = function (t) {
                        this._text !== t && (this.lang(t + ""), this._graphics && this._graphics.replaceText(this._text) || this.typeset());
                    },
                    r.parseLines = function (t) {
                        var i = this.wordWrap || this.overflow == e.HIDDEN;
                        if (i) var s = this.getWordWrapWidth();
                        if (this._currBitmapFont) this._charSize.width = this._currBitmapFont.getMaxWidth(),
                            this._charSize.height = this._currBitmapFont.getMaxHeight();
                        else {
                            var n = O.context.measureText(e._testWord);
                            this._charSize.width = n.width,
                                this._charSize.height = n.height || this.fontSize;
                        }
                        for (var a = t.replace(/\r\n/g, "\n").split("\n"), r = 0, o = a.length; r < o; r++) {
                            var h = a[r];
                            i ? this.parseLine(h, s) : (this._lineWidths.push(this.getTextWidth(h)), this._lines.push(h));
                        }
                    },
                    r.parseLine = function (t, i) {
                        O.context;
                        var s, n = this._lines,
                            a = 0,
                            r = NaN,
                            o = NaN,
                            h = 0;
                        if ((r = this.getTextWidth(t)) <= i) return n.push(t),
                            void this._lineWidths.push(r);
                        r = this._charSize.width,
                            0 == (a = Math.floor(i / r)) && (a = 1),
                            o = r = this.getTextWidth(t.substring(0, a));
                        for (var l = a,
                            c = t.length; l < c; l++) if (r = this.getTextWidth(t.charAt(l)), (o += r) > i) if (this.wordWrap) {
                                var u = t.substring(h, l);
                                if (u.charCodeAt(u.length - 1) < 255 ? (s = /(?:\w|-)+$/.exec(u)) && (l = s.index + h, 0 == s.index ? l += u.length : u = t.substring(h, l)) : e.RightToLeft && (s = /([\u0600-\u06FF])+$/.exec(u)) && (l = s.index + h, 0 == s.index ? l += u.length : u = t.substring(h, l)), n.push(u), this._lineWidths.push(o - r), h = l, !(l + a < c)) {
                                    n.push(t.substring(h, c)),
                                        this._lineWidths.push(this.getTextWidth(n[n.length - 1])),
                                        h = -1;
                                    break;
                                }
                                l += a,
                                    o = r = this.getTextWidth(t.substring(h, l)),
                                    l--;
                            } else if (this.overflow == e.HIDDEN) return n.push(t.substring(0, l)),
                                void this._lineWidths.push(this.getTextWidth(n[n.length - 1]));
                        this.wordWrap && -1 != h && (n.push(t.substring(h, c)), this._lineWidths.push(this.getTextWidth(n[n.length - 1])));
                    },
                    r.getTextWidth = function (t) {
                        return this._currBitmapFont ? this._currBitmapFont.getTextWidth(t) : O.context.measureText(t).width;
                    },
                    r.getWordWrapWidth = function () {
                        var t = this.padding,
                            e = NaN;
                        return (e = this._currBitmapFont && this._currBitmapFont.autoScaleSize ? this._width * (this._currBitmapFont.fontSize / this.fontSize) : this._width) <= 0 && (e = this.wordWrap ? 100 : O.width),
                            e <= 0 && (e = 100),
                            e - t[3] - t[1];
                    },
                    r.getCharPoint = function (t, e) {
                        this._isChanged && i.timer.runCallLater(this, this.typeset);
                        for (var s = 0,
                            n = this._lines,
                            a = 0,
                            r = 0,
                            o = n.length; r < o; r++) {
                            if (s += n[r].length, t < s) {
                                var h = r;
                                break;
                            }
                            a = s;
                        }
                        var l = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + this.font;
                        O.context.font = l;
                        var c = this.getTextWidth(this._text.substring(a, t));
                        return (e || new T()).setTo(this._startX + c - (this._clipPoint ? this._clipPoint.x : 0), this._startY + h * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0));
                    },
                    a(0, r, "width",
                        function () {
                            return this._width ? this._width : this.textWidth + this.padding[1] + this.padding[3];
                        },
                        function (t) {
                            t != this._width && (i.superSet(ut, this, "width", t), this.isChanged = !0);
                        }),
                    a(0, r, "textWidth",
                        function () {
                            return this._isChanged && i.timer.runCallLater(this, this.typeset),
                                this._textWidth;
                        }),
                    a(0, r, "height",
                        function () {
                            return this._height ? this._height : this.textHeight + this.padding[0] + this.padding[2];
                        },
                        function (t) {
                            t != this._height && (i.superSet(ut, this, "height", t), this.isChanged = !0);
                        }),
                    a(0, r, "textHeight",
                        function () {
                            return this._isChanged && i.timer.runCallLater(this, this.typeset),
                                this._textHeight;
                        }),
                    a(0, r, "padding",
                        function () {
                            return this._getCSSStyle().padding;
                        },
                        function (t) {
                            this._getCSSStyle().padding = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "bold",
                        function () {
                            return this._getCSSStyle().bold;
                        },
                        function (t) {
                            this._getCSSStyle().bold = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "text",
                        function () {
                            return this._text || "";
                        },
                        function (t) {
                            this._text !== t && (this.lang(t + ""), this.isChanged = !0, this.event("change"));
                        }),
                    a(0, r, "color",
                        function () {
                            return this._getCSSStyle().color;
                        },
                        function (t) {
                            this._getCSSStyle().color != t && (this._getCSSStyle().color = t, !this._isChanged && this._graphics ? this._graphics.replaceTextColor(this.color) : this.isChanged = !0);
                        }),
                    a(0, r, "font",
                        function () {
                            return this._getCSSStyle().fontFamily;
                        },
                        function (t) {
                            this._currBitmapFont && (this._currBitmapFont = null, this.scale(1, 1)),
                                e._bitmapFonts && e._bitmapFonts[t] && (this._currBitmapFont = e._bitmapFonts[t]),
                                this._getCSSStyle().fontFamily = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "fontSize",
                        function () {
                            return this._getCSSStyle().fontSize;
                        },
                        function (t) {
                            this._getCSSStyle().fontSize = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "italic",
                        function () {
                            return this._getCSSStyle().italic;
                        },
                        function (t) {
                            this._getCSSStyle().italic = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "align",
                        function () {
                            return this._getCSSStyle().align;
                        },
                        function (t) {
                            this._getCSSStyle().align = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "valign",
                        function () {
                            return this._getCSSStyle().valign;
                        },
                        function (t) {
                            this._getCSSStyle().valign = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "wordWrap",
                        function () {
                            return this._getCSSStyle().wordWrap;
                        },
                        function (t) {
                            this._getCSSStyle().wordWrap = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "leading",
                        function () {
                            return this._getCSSStyle().leading;
                        },
                        function (t) {
                            this._getCSSStyle().leading = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "bgColor",
                        function () {
                            return this._getCSSStyle().backgroundColor;
                        },
                        function (t) {
                            this._getCSSStyle().backgroundColor = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "borderColor",
                        function () {
                            return this._getCSSStyle().borderColor;
                        },
                        function (t) {
                            this._getCSSStyle().borderColor = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "stroke",
                        function () {
                            return this._getCSSStyle().stroke;
                        },
                        function (t) {
                            this._getCSSStyle().stroke = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "strokeColor",
                        function () {
                            return this._getCSSStyle().strokeColor;
                        },
                        function (t) {
                            this._getCSSStyle().strokeColor = t,
                                this.isChanged = !0;
                        }),
                    a(0, r, "isChanged", null,
                        function (t) {
                            this._isChanged !== t && (this._isChanged = t, t && i.timer.callLater(this, this.typeset));
                        }),
                    a(0, r, "scrollX",
                        function () {
                            return this._clipPoint ? this._clipPoint.x : 0;
                        },
                        function (t) {
                            if (!(this.overflow != e.SCROLL || this.textWidth < this._width) && this._clipPoint) {
                                t = t < this.padding[3] ? this.padding[3] : t;
                                var i = this._textWidth - this._width;
                                t = t > i ? i : t;
                                var s = this._height / (this._charSize.height + this.leading) | 1;
                                this._clipPoint.x = t,
                                    this.renderText(this._lastVisibleLineIndex, s);
                            }
                        }),
                    a(0, r, "scrollY",
                        function () {
                            return this._clipPoint ? this._clipPoint.y : 0;
                        },
                        function (t) {
                            if (!(this.overflow != e.SCROLL || this.textHeight < this._height) && this._clipPoint) {
                                t = t < this.padding[0] ? this.padding[0] : t;
                                var i = this._textHeight - this._height,
                                    s = (t = t > i ? i : t) / (this._charSize.height + this.leading) | 0;
                                this._lastVisibleLineIndex = s;
                                var n = 1 + (this._height / (this._charSize.height + this.leading) | 0);
                                this._clipPoint.y = t,
                                    this.renderText(s, n);
                            }
                        }),
                    a(0, r, "maxScrollX",
                        function () {
                            return this.textWidth < this._width ? 0 : this._textWidth - this._width;
                        }),
                    a(0, r, "maxScrollY",
                        function () {
                            return this.textHeight < this._height ? 0 : this._textHeight - this._height;
                        }),
                    a(0, r, "lines",
                        function () {
                            return this._isChanged && this.typeset(),
                                this._lines;
                        }),
                    a(0, r, "underlineColor",
                        function () {
                            return this._underlineColor;
                        },
                        function (t) {
                            this._underlineColor = t,
                                this._isChanged = !0,
                                this.typeset();
                        }),
                    e.registerBitmapFont = function (t, i) {
                        e._bitmapFonts || (e._bitmapFonts = {}),
                            e._bitmapFonts[t] = i;
                    },
                    e.unregisterBitmapFont = function (t, i) {
                        if (void 0 === i && (i = !0), e._bitmapFonts && e._bitmapFonts[t]) {
                            var s = e._bitmapFonts[t];
                            i && s.destroy(),
                                delete e._bitmapFonts[t];
                        }
                    },
                    e.setTextRightToLeft = function () {
                        var t; (t = O.canvas.source.style).display = "none",
                            t.position = "absolute",
                            t.direction = "rtl",
                            P._mainCanvas.source.style.direction = "rtl",
                            laya.display.Text.RightToLeft = !0,
                            O.document.body.appendChild(O.canvas.source);
                    },
                    e.supportFont = function (t) {
                        O.context.font = "10px sans-serif";
                        var e = O.context.measureText("abcji").width;
                        O.context.font = "10px " + t;
                        var i = O.context.measureText("abcji").width;
                        return console.log(e, i),
                            e !== i;
                    },
                    e._testWord = "游",
                    e.langPacks = null,
                    e.VISIBLE = "visible",
                    e.SCROLL = "scroll",
                    e.HIDDEN = "hidden",
                    e.CharacterCache = !0,
                    e.RightToLeft = !1,
                    e._bitmapFonts = null,
                    s(e, ["_fontFamilyMap",
                        function () {
                            return this._fontFamilyMap = {
                                "报隶": "报隶-简",
                                "黑体": "黑体-简",
                                "楷体": "楷体-简",
                                "兰亭黑": "兰亭黑-简",
                                "隶变": "隶变-简",
                                "凌慧体": "凌慧体-简",
                                "翩翩体": "翩翩体-简",
                                "苹方": "苹方-简",
                                "手札体": "手札体-简",
                                "宋体": "宋体-简",
                                "娃娃体": "娃娃体-简",
                                "魏碑": "魏碑-简",
                                "行楷": "行楷-简",
                                "雅痞": "雅痞-简",
                                "圆体": "圆体-简"
                            };
                        }]),
                    e;
            }(ut),
            gt = function (t) {
                function e() {
                    this.focus = null,
                        this.designWidth = 0,
                        this.designHeight = 0,
                        this.canvasRotation = !1,
                        this.canvasDegree = 0,
                        this.renderingEnabled = !0,
                        this.screenAdaptationEnabled = !0,
                        this._screenMode = "none",
                        this._scaleMode = "noscale",
                        this._alignV = "top",
                        this._alignH = "left",
                        this._bgColor = "black",
                        this._mouseMoveTime = 0,
                        this._renderCount = 0,
                        this._frameStartTime = NaN,
                        this._isFocused = !1,
                        this._isVisibility = !1,
                        this._scenes = null,
                        this._frameRate = "fast",
                        e.__super.call(this),
                        this.offset = new T(),
                        this._canvasTransform = new C(),
                        this._previousOrientation = O.window.orientation;
                    var t = this;
                    this.transform = C.create(),
                        this._scenes = [],
                        this.mouseEnabled = !0,
                        this.hitTestPrior = !0,
                        this.autoSize = !1,
                        this._displayedInStage = !0,
                        this._isFocused = !0,
                        this._isVisibility = !0;
                    var i = O.window,
                        s = this;
                    i.addEventListener("focus",
                        function () {
                            t._isFocused = !0,
                                s.event("focus"),
                                s.event("focuschange");
                        }),
                        i.addEventListener("blur",
                            function () {
                                t._isFocused = !1,
                                    s.event("blur"),
                                    s.event("focuschange"),
                                    s._isInputting() && (xt.inputElement.target.focus = !1);
                            });
                    var n = "visibilityState",
                        a = "visibilitychange",
                        r = i.document;
                    void 0 !== r.hidden ? (a = "visibilitychange", n = "visibilityState") : void 0 !== r.mozHidden ? (a = "mozvisibilitychange", n = "mozVisibilityState") : void 0 !== r.msHidden ? (a = "msvisibilitychange", n = "msVisibilityState") : void 0 !== r.webkitHidden && (a = "webkitvisibilitychange", n = "webkitVisibilityState"),
                        i.document.addEventListener(a,
                            function () {
                                "hidden" == O.document[n] ? s._setStageVisible(!1) : s._setStageVisible(!0);
                            }),
                        i.document.addEventListener("qbrowserVisibilityChange",
                            function (t) {
                                s._setStageVisible(!t.hidden);
                            }),
                        i.addEventListener("resize",
                            function () {
                                var e = O.window.orientation;
                                null != e && e != t._previousOrientation && s._isInputting() && (xt.inputElement.target.focus = !1),
                                    t._previousOrientation = e,
                                    s._isInputting() || s._resetCanvas();
                            }),
                        i.addEventListener("orientationchange",
                            function (t) {
                                s._resetCanvas();
                            }),
                        this.on("mousemove", this, this._onmouseMove),
                        O.onMobile && this.on("mousedown", this, this._onmouseMove);
                }
                n(e, "laya.display.Stage", t);
                var o = e.prototype;
                return o._setStageVisible = function (t) {
                    this._isVisibility != t && (this._isVisibility = t, this._isVisibility || this._isInputting() && (xt.inputElement.target.focus = !1), this.event("visibilitychange"));
                },
                    o._isInputting = function () {
                        return O.onMobile && xt.isInputting;
                    },
                    o._changeCanvasSize = function () {
                        this.setScreenSize(O.clientWidth * O.pixelRatio, O.clientHeight * O.pixelRatio);
                    },
                    o._resetCanvas = function () {
                        if (this.screenAdaptationEnabled) {
                            var t = P._mainCanvas;
                            t.source.style;
                            t.size(1, 1),
                                i.timer.once(100, this, this._changeCanvasSize);
                        }
                    },
                    o.setScreenSize = function (t, e) {
                        var i = !1;
                        if ("none" !== this._screenMode) {
                            if (i = (t / e < 1 ? "vertical" : "horizontal") !== this._screenMode) {
                                var s = e;
                                e = t,
                                    t = s;
                            }
                        }
                        this.canvasRotation = i;
                        var n = P._mainCanvas,
                            a = n.source.style,
                            o = this._canvasTransform.identity(),
                            h = this._scaleMode,
                            l = t / this.designWidth,
                            c = e / this.designHeight,
                            u = this.designWidth,
                            d = this.designHeight,
                            _ = t,
                            p = e,
                            f = O.pixelRatio;
                        switch (this._width = this.designWidth, this._height = this.designHeight, h) {
                            case "noscale":
                                l = c = 1,
                                    _ = this.designWidth,
                                    p = this.designHeight;
                                break;

                            case "showall":
                                l = c = Math.min(l, c),
                                    u = _ = Math.round(this.designWidth * l),
                                    d = p = Math.round(this.designHeight * c);
                                break;

                            case "noborder":
                                l = c = Math.max(l, c),
                                    _ = Math.round(this.designWidth * l),
                                    p = Math.round(this.designHeight * c);
                                break;

                            case "full":
                                l = c = 1,
                                    this._width = u = t,
                                    this._height = d = e;
                                break;

                            case "fixedwidth":
                                c = l,
                                    this._height = d = Math.round(e / l);
                                break;

                            case "fixedheight":
                                l = c,
                                    this._width = u = Math.round(t / c);
                                break;

                            case "fixedauto":
                                t / e < this.designWidth / this.designHeight ? (c = l, this._height = d = Math.round(e / l)) : (l = c, this._width = u = Math.round(t / c));
                        }
                        this.conchModel && this.conchModel.size(this._width, this._height),
                            l *= this.scaleX,
                            c *= this.scaleY,
                            1 === l && 1 === c ? this.transform.identity() : (this.transform.a = this._formatData(l / (_ / u)), this.transform.d = this._formatData(c / (p / d)), this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d)),
                            n.size(u, d),
                            r.changeWebGLSize(u, d),
                            o.scale(_ / u / f, p / d / f),
                            "left" === this._alignH ? this.offset.x = 0 : "right" === this._alignH ? this.offset.x = (t - _) / f : this.offset.x = .5 * (t - _) / f,
                            "top" === this._alignV ? this.offset.y = 0 : "bottom" === this._alignV ? this.offset.y = (e - p) / f : this.offset.y = .5 * (e - p) / f,
                            this.offset.x = Math.round(this.offset.x),
                            this.offset.y = Math.round(this.offset.y),
                            o.translate(this.offset.x, this.offset.y),
                            this.canvasDegree = 0,
                            i && ("horizontal" === this._screenMode ? (o.rotate(Math.PI / 2), o.translate(e / f, 0), this.canvasDegree = 90) : (o.rotate(- Math.PI / 2), o.translate(0, t / f), this.canvasDegree = -90)),
                            o.a = this._formatData(o.a),
                            o.d = this._formatData(o.d),
                            o.tx = this._formatData(o.tx),
                            o.ty = this._formatData(o.ty),
                            a.transformOrigin = a.webkitTransformOrigin = a.msTransformOrigin = a.mozTransformOrigin = a.oTransformOrigin = "0px 0px 0px",
                            a.transform = a.webkitTransform = a.msTransform = a.mozTransform = a.oTransform = "matrix(" + o.toString() + ")",
                            o.translate(parseInt(a.left) || 0, parseInt(a.top) || 0),
                            this.visible = !0,
                            this._repaint = 1,
                            this.event("resize");
                    },
                    o._formatData = function (t) {
                        return Math.abs(t) < 1e-6 ? 0 : Math.abs(1 - t) < .001 ? t > 0 ? 1 : -1 : t;
                    },
                    o.getMousePoint = function () {
                        return T.TEMP.setTo(this.mouseX, this.mouseY);
                    },
                    o.repaint = function () {
                        this._repaint = 1;
                    },
                    o.parentRepaint = function () { },
                    o._loop = function () {
                        return this.render(P.context, 0, 0),
                            !0;
                    },
                    o._onmouseMove = function (t) {
                        this._mouseMoveTime = O.now();
                    },
                    o.getTimeFromFrameStart = function () {
                        return O.now() - this._frameStartTime;
                    },
                    o.render = function (e, s, n) {
                        if ("sleep" === this._frameRate && !P.isConchApp) {
                            var a = O.now();
                            if (!(a - this._frameStartTime >= 1e3)) return;
                            this._frameStartTime = a;
                        }
                        if (this._renderCount++ , P.isFlash && this.repaint(), this._style.visible) {
                            this._frameStartTime = O.now();
                            var o = "slow" !== ("mouse" === this._frameRate ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast" : "slow" : this._frameRate),
                                h = this._renderCount % 2 == 0;
                            if (V.renderSlow = !o, o || h || P.isConchApp) {
                                V.loopCount++ ,
                                    v.instance.runEvent(),
                                    i.timer._update(),
                                    r.update3DLoop();
                                var l, c = 0,
                                    u = 0;
                                if (P.isConchNode) for (c = 0, u = this._scenes.length; c < u; c++)(l = this._scenes[c]) && l._updateSceneConch();
                                else for (c = 0, u = this._scenes.length; c < u; c++)(l = this._scenes[c]) && l._updateScene();
                                if (P.isConchNode) {
                                    var d = ut.CustomList;
                                    for (c = 0, u = d.length; c < u; c++) {
                                        var _ = d[c];
                                        _.customRender(_.customContext, 0, 0);
                                    }
                                    return;
                                }
                            }
                            P.isConchNode || !this.renderingEnabled || !o && h || (P.isWebGL ? (e.clear(), t.prototype.render.call(this, e, s, n), V._show && V._sp && V._sp.render(e, s, n), r.clear(this._bgColor), r.beginFlush(), e.flush(), r.endFinish(), j.instance && j.getInstance().endDispose()) : (r.clear(this._bgColor), t.prototype.render.call(this, e, s, n), V._show && V._sp && V._sp.render(e, s, n)));
                        } else this._renderCount % 5 == 0 && (V.loopCount++ , v.instance.runEvent(), i.timer._update());
                    },
                    o._requestFullscreen = function () {
                        var t = O.document.documentElement;
                        t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen();
                    },
                    o._fullScreenChanged = function () {
                        i.stage.event("fullscreenchange");
                    },
                    o.exitFullscreen = function () {
                        var t = O.document;
                        t.exitFullscreen ? t.exitFullscreen() : t.mozCancelFullScreen ? t.mozCancelFullScreen() : t.webkitExitFullscreen && t.webkitExitFullscreen();
                    },
                    a(0, o, "clientScaleX",
                        function () {
                            return this._transform ? this._transform.getScaleX() : 1;
                        }),
                    a(0, o, "desginHeight",
                        function () {
                            return console.debug("desginHeight已经弃用，请使用designHeight代替"),
                                this.designHeight;
                        }),
                    a(0, o, "frameRate",
                        function () {
                            return this._frameRate;
                        },
                        function (t) {
                            if (this._frameRate = t, P.isConchApp) switch (this._frameRate) {
                                case "slow":
                                    O.window.conch && O.window.conchConfig.setSlowFrame && O.window.conchConfig.setSlowFrame(!0);
                                    break;

                                case "fast":
                                    O.window.conch && O.window.conchConfig.setSlowFrame && O.window.conchConfig.setSlowFrame(!1);
                                    break;

                                case "mouse":
                                    O.window.conch && O.window.conchConfig.setMouseFrame && O.window.conchConfig.setMouseFrame(2e3);
                                    break;

                                case "sleep":
                                    O.window.conch && O.window.conchConfig.setLimitFPS && O.window.conchConfig.setLimitFPS(1);
                                    break;

                                default:
                                    throw new Error("Stage:frameRate invalid.");
                            }
                        }),
                    a(0, o, "clientScaleY",
                        function () {
                            return this._transform ? this._transform.getScaleY() : 1;
                        }),
                    a(0, o, "width", t.prototype._$get_width,
                        function (t) {
                            this.designWidth = t,
                                i.superSet(ut, this, "width", t),
                                i.timer.callLater(this, this._changeCanvasSize);
                        }),
                    a(0, o, "alignH",
                        function () {
                            return this._alignH;
                        },
                        function (t) {
                            this._alignH = t,
                                i.timer.callLater(this, this._changeCanvasSize);
                        }),
                    a(0, o, "isFocused",
                        function () {
                            return this._isFocused;
                        }),
                    a(0, o, "height", t.prototype._$get_height,
                        function (t) {
                            this.designHeight = t,
                                i.superSet(ut, this, "height", t),
                                i.timer.callLater(this, this._changeCanvasSize);
                        }),
                    a(0, o, "transform",
                        function () {
                            return this._tfChanged && this._adjustTransform(),
                                this._transform = this._transform || C.create();
                        },
                        t.prototype._$set_transform),
                    a(0, o, "isVisibility",
                        function () {
                            return this._isVisibility;
                        }),
                    a(0, o, "desginWidth",
                        function () {
                            return console.debug("desginWidth已经弃用，请使用designWidth代替"),
                                this.designWidth;
                        }),
                    a(0, o, "scaleMode",
                        function () {
                            return this._scaleMode;
                        },
                        function (t) {
                            this._scaleMode = t,
                                i.timer.callLater(this, this._changeCanvasSize);
                        }),
                    a(0, o, "alignV",
                        function () {
                            return this._alignV;
                        },
                        function (t) {
                            this._alignV = t,
                                i.timer.callLater(this, this._changeCanvasSize);
                        }),
                    a(0, o, "bgColor",
                        function () {
                            return this._bgColor;
                        },
                        function (t) {
                            this._bgColor = t,
                                this.conchModel && this.conchModel.bgColor(t),
                                P.isWebGL && (t ? e._wgColor = W.create(t)._color : O.onMiniGame || (e._wgColor = null)),
                                O.onLimixiu ? e._wgColor = W.create(t)._color : P.canvas.style.background = t || "none";
                        }),
                    a(0, o, "mouseX",
                        function () {
                            return Math.round(v.instance.mouseX / this.clientScaleX);
                        }),
                    a(0, o, "mouseY",
                        function () {
                            return Math.round(v.instance.mouseY / this.clientScaleY);
                        }),
                    a(0, o, "screenMode",
                        function () {
                            return this._screenMode;
                        },
                        function (t) {
                            this._screenMode = t;
                        }),
                    a(0, o, "visible", t.prototype._$get_visible,
                        function (t) {
                            if (this.visible !== t) {
                                i.superSet(ut, this, "visible", t);
                                P._mainCanvas.source.style.visibility = t ? "visible" : "hidden";
                            }
                        }),
                    a(0, o, "fullScreenEnabled", null,
                        function (t) {
                            var e = O.document,
                                i = P.canvas;
                            t ? (i.addEventListener("mousedown", this._requestFullscreen), i.addEventListener("touchstart", this._requestFullscreen), e.addEventListener("fullscreenchange", this._fullScreenChanged), e.addEventListener("mozfullscreenchange", this._fullScreenChanged), e.addEventListener("webkitfullscreenchange", this._fullScreenChanged), e.addEventListener("msfullscreenchange", this._fullScreenChanged)) : (i.removeEventListener("mousedown", this._requestFullscreen), i.removeEventListener("touchstart", this._requestFullscreen), e.removeEventListener("fullscreenchange", this._fullScreenChanged), e.removeEventListener("mozfullscreenchange", this._fullScreenChanged), e.removeEventListener("webkitfullscreenchange", this._fullScreenChanged), e.removeEventListener("msfullscreenchange", this._fullScreenChanged));
                        }),
                    e.SCALE_NOSCALE = "noscale",
                    e.SCALE_EXACTFIT = "exactfit",
                    e.SCALE_SHOWALL = "showall",
                    e.SCALE_NOBORDER = "noborder",
                    e.SCALE_FULL = "full",
                    e.SCALE_FIXED_WIDTH = "fixedwidth",
                    e.SCALE_FIXED_HEIGHT = "fixedheight",
                    e.SCALE_FIXED_AUTO = "fixedauto",
                    e.ALIGN_LEFT = "left",
                    e.ALIGN_RIGHT = "right",
                    e.ALIGN_CENTER = "center",
                    e.ALIGN_TOP = "top",
                    e.ALIGN_MIDDLE = "middle",
                    e.ALIGN_BOTTOM = "bottom",
                    e.SCREEN_NONE = "none",
                    e.SCREEN_HORIZONTAL = "horizontal",
                    e.SCREEN_VERTICAL = "vertical",
                    e.FRAME_FAST = "fast",
                    e.FRAME_SLOW = "slow",
                    e.FRAME_MOUSE = "mouse",
                    e.FRAME_SLEEP = "sleep",
                    e.FRAME_MOUSE_THREDHOLD = 2e3,
                    s(e, ["_wgColor",
                        function () {
                            return this._wgColor = [0, 0, 0, 1];
                        }]),
                    e;
            }(ut),
            vt = (function (t) {
                function e() {
                    this.url = null,
                        this._channel = null,
                        this._tar = null,
                        this._playEvents = null,
                        this._stopEvents = null,
                        e.__super.call(this),
                        this.visible = !1,
                        this.on("added", this, this._onParentChange),
                        this.on("removed", this, this._onParentChange);
                }
                n(e, "laya.media.SoundNode", ut);
                var i = e.prototype;
                i._onParentChange = function () {
                    this.target = this.parent;
                },
                    i.play = function (t, e) {
                        void 0 === t && (t = 1),
                            isNaN(t) && (t = 1),
                            this.url && (this.stop(), this._channel = L.playSound(this.url, t, e));
                    },
                    i.stop = function () {
                        this._channel && !this._channel.isStopped && this._channel.stop(),
                            this._channel = null;
                    },
                    i._setPlayAction = function (t, e, i, s) {
                        void 0 === s && (s = !0),
                            this[i] && t && (s ? t.on(e, this, this[i]) : t.off(e, this, this[i]));
                    },
                    i._setPlayActions = function (t, e, i, s) {
                        if (void 0 === s && (s = !0), t && e) {
                            var n = e.split(","),
                                a = 0,
                                r = 0;
                            for (r = n.length, a = 0; a < r; a++) this._setPlayAction(t, n[a], i, s);
                        }
                    },
                    a(0, i, "playEvent", null,
                        function (t) {
                            this._playEvents = t,
                                t && this._tar && this._setPlayActions(this._tar, t, "play");
                        }),
                    a(0, i, "target", null,
                        function (t) {
                            this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !1), this._setPlayActions(this._tar, this._stopEvents, "stop", !1)),
                                this._tar = t,
                                this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !0), this._setPlayActions(this._tar, this._stopEvents, "stop", !0));
                        }),
                    a(0, i, "stopEvent", null,
                        function (t) {
                            this._stopEvents = t,
                                t && this._tar && this._setPlayActions(this._tar, t, "stop");
                        });
            }(),
                function (t) {
                    function e() {
                        this._src = null,
                            this._onload = null,
                            this._onerror = null,
                            e.__super.call(this);
                    }
                    n(e, "laya.resource.FileBitmap", pt);
                    var i = e.prototype;
                    return a(0, i, "src",
                        function () {
                            return this._src;
                        },
                        function (t) {
                            this._src = t;
                        }),
                        a(0, i, "onload", null,
                            function (t) { }),
                        a(0, i, "onerror", null,
                            function (t) { }),
                        e;
                }()),
            yt = function (t) {
                function e(t, i) {
                    this._is2D = !1,
                        e.__super.call(this);
                    var s = this;
                    if (this._source = this, "2D" === t || "AUTO" === t && !P.isWebGL) {
                        this._is2D = !0,
                            this._source = i || O.createElement("canvas"),
                            this._w = this._source.width,
                            this._h = this._source.height;
                        var n = this;
                        n.getContext = function (t, e) {
                            if (s._ctx) return s._ctx;
                            var i = s._ctx = s._source.getContext(t, e);
                            return i && (i._canvas = n, P.isFlash || O.onLimixiu || (i.size = function (t, e) { })),
                                i;
                        };
                    }
                    this.lock = !0;
                }
                n(e, "laya.resource.HTMLCanvas", pt);
                var i = e.prototype;
                return i.clear = function () {
                    this._ctx && this._ctx.clear();
                },
                    i.destroy = function () {
                        this._ctx && this._ctx.destroy(),
                            this._ctx = null,
                            laya.resource.Resource.prototype.destroy.call(this);
                    },
                    i.release = function () { },
                    i._setContext = function (t) {
                        this._ctx = t;
                    },
                    i.getContext = function (t, i) {
                        return this._ctx ? this._ctx : this._ctx = e._createContext(this);
                    },
                    i.getMemSize = function () {
                        return 0;
                    },
                    i.size = function (t, e) {
                        (this._w != t || this._h != e || this._source && (this._source.width != t || this._source.height != e)) && (this._w = t, this._h = e, this.memorySize = this._w * this._h * 4, this._ctx && this._ctx.size(t, e), this._source && (this._source.height = e, this._source.width = t));
                    },
                    i.getCanvas = function () {
                        return this._source;
                    },
                    i.toBase64 = function (t, e, i) {
                        if (this._source) if (P.isConchApp && this._source.toBase64) this._source.toBase64(t, e, i);
                        else {
                            var s = this._source.toDataURL(t, e);
                            i.call(this, s);
                        }
                    },
                    a(0, i, "context",
                        function () {
                            return this._ctx;
                        }),
                    a(0, i, "asBitmap", null,
                        function (t) { }),
                    e.create = function (t, i) {
                        return new e(t, i);
                    },
                    e.TYPE2D = "2D",
                    e.TYPE3D = "3D",
                    e.TYPEAUTO = "AUTO",
                    e._createContext = null,
                    e;
            }(),
            bt = (function (t) {
                function e(t, i, s, n, a, r, o, h) {
                    throw e.__super.call(this),
                    new Error("不允许new！");
                }
                n(e, "laya.resource.HTMLSubImage", pt),
                    e.create = function (t, i, s, n, a, r, o, h) {
                        return void 0 === h && (h = !1),
                            new e(t, i, s, n, a, r, o, h);
                    };
            }(),
                function (t) {
                    function e() {
                        this._frames = null,
                            this._url = null,
                            e.__super.call(this),
                            this._setControlNode(this);
                    }
                    n(e, "laya.display.Animation", t);
                    var s = e.prototype;
                    s.destroy = function (t) {
                        void 0 === t && (t = !0),
                            this.stop(),
                            laya.display.Sprite.prototype.destroy.call(this, t),
                            this._frames = null,
                            this._labels = null;
                    },
                        s.play = function (t, e, i, s) {
                            void 0 === t && (t = 0),
                                void 0 === e && (e = !0),
                                void 0 === i && (i = ""),
                                void 0 === s && (s = !0),
                                i && this._setFramesFromCache(i, s),
                                this._isPlaying = !0,
                                this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
                                this.loop = e,
                                this._actionName = i,
                                this._isReverse = 1 == this.wrapMode,
                                this._frames && this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
                        },
                        s._setFramesFromCache = function (t, i) {
                            if (void 0 === i && (i = !1), this._url && (t = this._url + "#" + t), t && e.framesMap[t]) {
                                var s;
                                return (s = e.framesMap[t]) instanceof Array ? (this._frames = e.framesMap[t], this._count = this._frames.length) : (s.nodeRoot && (e.framesMap[t] = this._parseGraphicAnimationByData(s), s = e.framesMap[t]), this._frames = s.frames, this._count = this._frames.length, this._frameRateChanged || (this._interval = s.interval), this._labels = this._copyLabels(s.labels)),
                                    !0;
                            }
                            return i && console.log("ani not found:", t),
                                !1;
                        },
                        s._copyLabels = function (t) {
                            if (!t) return null;
                            var e;
                            e = {};
                            var i;
                            for (i in t) e[i] = $.copyArray([], t[i]);
                            return e;
                        },
                        s._frameLoop = function () {
                            this._style.visible && this._style.alpha > .01 && t.prototype._frameLoop.call(this);
                        },
                        s._displayToIndex = function (t) {
                            this._frames && (this.graphics = this._frames[t]);
                        },
                        s.clear = function () {
                            this.stop(),
                                this.graphics = null,
                                this._frames = null,
                                this._labels = null;
                        },
                        s.loadImages = function (t, i) {
                            return void 0 === i && (i = ""),
                                this._url = "",
                                this._setFramesFromCache(i) || (this.frames = e.framesMap[i] ? e.framesMap[i] : e.createFrames(t, i)),
                                this;
                        },
                        s.loadAtlas = function (t, s, n) {
                            function a(i) {
                                t === i && (r.frames = e.framesMap[n] ? e.framesMap[n] : e.createFrames(t, n), s && s.run());
                            }
                            void 0 === n && (n = ""),
                                this._url = "";
                            var r = this;
                            return r._setFramesFromCache(n) || (rt.getAtlas(t) ? a(t) : i.loader.load(t, l.create(null, a, [t]), null, "atlas")),
                                this;
                        },
                        s.loadAnimation = function (t, e, s) {
                            this._url = t;
                            return this._actionName || (this._actionName = ""),
                                this._setFramesFromCache("") ? (this._setFramesFromCache(this._actionName, !0), this.index = 0, e && e.run()) : !s || rt.getAtlas(s) ? this._loadAnimationData(t, e, s) : i.loader.load(s, l.create(this, this._loadAnimationData, [t, e, s]), null, "atlas"),
                                this;
                        },
                        s._loadAnimationData = function (t, s, n) {
                            function a(i) {
                                if (rt.getRes(i) && t === i) {
                                    var n;
                                    if (e.framesMap[t + "#"]) o._setFramesFromCache(r._actionName, !0),
                                        r.index = 0,
                                        r._checkResumePlaying();
                                    else {
                                        var a = o._parseGraphicAnimation(rt.getRes(t));
                                        if (!a) return;
                                        var h, l = a.animationList,
                                            c = 0,
                                            u = l.length;
                                        for (c = 0; c < u; c++) n = l[c],
                                            e.framesMap[t + "#" + n.name] = n,
                                            h || (h = n);
                                        h && (e.framesMap[t + "#"] = h, o._setFramesFromCache(r._actionName, !0), r.index = 0),
                                            r._checkResumePlaying();
                                    }
                                    s && s.run();
                                }
                            }
                            var r = this;
                            if (!n || rt.getAtlas(n)) {
                                var o = this;
                                rt.getRes(t) ? a(t) : i.loader.load(t, l.create(null, a, [t]), null, "json"),
                                    rt.clearRes(t);
                            } else console.warn("atlas load fail:" + n);
                        },
                        s._parseGraphicAnimation = function (t) {
                            return Mt.parseAnimationData(t);
                        },
                        s._parseGraphicAnimationByData = function (t) {
                            return Mt.parseAnimationByData(t);
                        },
                        a(0, s, "frames",
                            function () {
                                return this._frames;
                            },
                            function (t) {
                                this._frames = t,
                                    t && (this._count = t.length, this._isPlaying ? this.play(this._index, this.loop, this._actionName) : this.index = this._index);
                            }),
                        a(0, s, "autoPlay", null,
                            function (t) {
                                t ? this.play() : this.stop();
                            }),
                        a(0, s, "source", null,
                            function (t) {
                                t.indexOf(".ani") > -1 ? this.loadAnimation(t) : t.indexOf(".json") > -1 || t.indexOf("als") > -1 || t.indexOf("atlas") > -1 ? this.loadAtlas(t) : this.loadImages(t.split(","));
                            }),
                        a(0, s, "autoAnimation", null,
                            function (t) {
                                this.play(0, !0, t, !1);
                            }),
                        e.createFrames = function (t, i) {
                            var s, n, a = 0,
                                o = 0;
                            if ("string" == typeof t) {
                                var h = rt.getAtlas(t);
                                if (h && h.length) for (s = [], a = 0, o = h.length; a < o; a++)(n = new r.createGraphics()).drawTexture(rt.getRes(h[a]), 0, 0),
                                    s.push(n);
                            } else if (t instanceof Array) for (s = [], a = 0, o = t.length; a < o; a++)(n = new r.createGraphics()).loadImage(t[a], 0, 0),
                                s.push(n);
                            return i && (e.framesMap[i] = s),
                                s;
                        },
                        e.clearCache = function (t) {
                            var i, s = e.framesMap,
                                n = t + "#";
                            for (i in s) i !== t && 0 != i.indexOf(n) || delete e.framesMap[i];
                        },
                        e.framesMap = {};
                }(ft),
                function (t) {
                    function e() {
                        this._targetDic = null,
                            this._animationData = null,
                            this._animationNewFrames = null,
                            e.__super.call(this),
                            null == e._sortIndexFun && (e._sortIndexFun = S.sortByKey("index", !1, !0));
                    }
                    n(e, "laya.display.FrameAnimation", t);
                    var i = e.prototype;
                    return i._setUp = function (t, e) {
                        this._labels = null,
                            this._animationNewFrames = null,
                            this._targetDic = t,
                            this._animationData = e,
                            this.interval = 1e3 / e.frameRate,
                            e.parsed ? (this._count = e.count, this._labels = e.labels, this._animationNewFrames = e.animationNewFrames) : (this._animationNewFrames = [], this._calculateDatas()),
                            e.parsed = !0,
                            e.labels = this._labels,
                            e.count = this._count,
                            e.animationNewFrames = this._animationNewFrames;
                    },
                        i.clear = function () {
                            t.prototype.clear.call(this),
                                this._targetDic = null,
                                this._animationData = null;
                        },
                        i._displayToIndex = function (t) {
                            if (this._animationData) {
                                t < 0 && (t = 0),
                                    t > this._count && (t = this._count);
                                var e = this._animationData.nodes,
                                    i = 0,
                                    s = e.length;
                                for (i = 0; i < s; i++) this._displayNodeToFrame(e[i], t);
                            }
                        },
                        i._displayNodeToFrame = function (t, e, i) {
                            i || (i = this._targetDic);
                            var s = i[t.target];
                            if (s) {
                                var n, a, r, o = t.frames,
                                    h = t.keys,
                                    l = 0,
                                    c = h.length;
                                for (l = 0; l < c; l++) r = (a = o[n = h[l]]).length > e ? a[e] : a[a.length - 1],
                                    s[n] = r;
                            }
                        },
                        i._calculateDatas = function () {
                            if (this._animationData) {
                                var t, e = this._animationData.nodes,
                                    i = 0,
                                    s = e.length;
                                for (this._count = 0, i = 0; i < s; i++) t = e[i],
                                    this._calculateNodeKeyFrames(t);
                                this._count += 1;
                            }
                        },
                        i._calculateNodeKeyFrames = function (t) {
                            var i, s, n = t.keyframes,
                                a = t.target;
                            t.frames || (t.frames = {}),
                                t.keys ? t.keys.length = 0 : t.keys = [],
                                t.initValues || (t.initValues = {});
                            for (i in n) s = n[i],
                                t.frames[i] || (t.frames[i] = []),
                                this._targetDic && this._targetDic[a] && (t.initValues[i] = this._targetDic[a][i]),
                                s.sort(e._sortIndexFun),
                                t.keys.push(i),
                                this._calculateNodePropFrames(s, t.frames[i], i, a);
                        },
                        i.resetToInitState = function () {
                            if (this._targetDic && this._animationData) {
                                var t, e, i = this._animationData.nodes,
                                    s = 0,
                                    n = i.length;
                                for (s = 0; s < n; s++) if (t = i[s], e = t.initValues) {
                                    var a = this._targetDic[t.target];
                                    if (a) {
                                        var r;
                                        for (r in e) a[r] = e[r];
                                    }
                                }
                            }
                        },
                        i._calculateNodePropFrames = function (t, e, i, s) {
                            var n = 0,
                                a = t.length - 1;
                            for (e.length = t[a].index + 1, n = 0; n < a; n++) this._dealKeyFrame(t[n]),
                                this._calculateFrameValues(t[n], t[n + 1], e);
                            0 == a && (e[0] = t[0].value, this._animationNewFrames && (this._animationNewFrames[t[0].index] = !0)),
                                this._dealKeyFrame(t[n]);
                        },
                        i._dealKeyFrame = function (t) {
                            t.label && "" != t.label && this.addLabel(t.label, t.index);
                        },
                        i._calculateFrameValues = function (t, e, i) {
                            var s, n = 0,
                                a = t.index,
                                r = e.index,
                                o = t.value,
                                h = e.value - t.value,
                                l = r - a;
                            if (r > this._count && (this._count = r), t.tween) for (null == (s = z[t.tweenMethod]) && (s = z.linearNone), n = a; n < r; n++) i[n] = s(n - a, o, h, l),
                                this._animationNewFrames && (this._animationNewFrames[n] = !0);
                            else for (n = a; n < r; n++) i[n] = o;
                            this._animationNewFrames && (this._animationNewFrames[t.index] = !0, this._animationNewFrames[e.index] = !0),
                                i[e.index] = e.value;
                        },
                        e._sortIndexFun = null,
                        e;
                }(ft)),
            xt = function (t) {
                function e() {
                    this._focus = !1,
                        this._multiline = !1,
                        this._editable = !0,
                        this._restrictPattern = null,
                        this._type = "text",
                        this._prompt = "",
                        this._promptColor = "#A9A9A9",
                        this._originColor = "#000000",
                        this._content = "",
                        e.__super.call(this),
                        this._maxChars = 1e5,
                        this._width = 100,
                        this._height = 20,
                        this.multiline = !1,
                        this.overflow = mt.SCROLL,
                        this.on("mousedown", this, this._onMouseDown),
                        this.on("undisplay", this, this._onUnDisplay);
                }
                n(e, "laya.display.Input", t);
                var r = e.prototype;
                return r.setSelection = function (t, e) {
                    this.focus = !0,
                        laya.display.Input.inputElement.selectionStart = t,
                        laya.display.Input.inputElement.selectionEnd = e;
                },
                    r._onUnDisplay = function (t) {
                        this.focus = !1;
                    },
                    r._onMouseDown = function (t) {
                        this.focus = !0;
                    },
                    r._syncInputTransform = function () {
                        var t = this.nativeInput,
                            s = $.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]),
                            n = this._width - this.padding[1] - this.padding[3],
                            a = this._height - this.padding[0] - this.padding[2];
                        P.isConchApp ? (t.setScale(s.scaleX, s.scaleY), t.setSize(n, a), t.setPos(s.x, s.y)) : (e.inputContainer.style.transform = e.inputContainer.style.webkitTransform = "scale(" + s.scaleX + "," + s.scaleY + ") rotate(" + i.stage.canvasDegree + "deg)", t.style.width = n + "px", t.style.height = a + "px", e.inputContainer.style.left = s.x + "px", e.inputContainer.style.top = s.y + "px");
                    },
                    r.select = function () {
                        this.nativeInput.select();
                    },
                    r._setInputMethod = function () {
                        e.input.parentElement && e.inputContainer.removeChild(e.input),
                            e.area.parentElement && e.inputContainer.removeChild(e.area),
                            e.inputElement = this._multiline ? e.area : e.input,
                            e.inputContainer.appendChild(e.inputElement),
                            mt.RightToLeft && (e.inputElement.style.direction = "rtl");
                    },
                    r._focusIn = function () {
                        laya.display.Input.isInputting = !0;
                        var t = this.nativeInput;
                        this._focus = !0;
                        var e = t.style;
                        e.whiteSpace = this.wordWrap ? "pre-wrap" : "nowrap",
                            this._setPromptColor(),
                            t.readOnly = !this._editable,
                            P.isConchApp && (t.setType(this._type), t.setForbidEdit(!this._editable)),
                            t.maxLength = this._maxChars;
                        this.padding;
                        if (t.type = this._type, t.value = this._content, t.placeholder = this._prompt, i.stage.off("keydown", this, this._onKeyDown), i.stage.on("keydown", this, this._onKeyDown), i.stage.focus = this, this.event("focus"), O.onPC && t.focus(), !O.onMiniGame) {
                            this._text;
                            this._text = null;
                        }
                        this.typeset(),
                            t.setColor(this._originColor),
                            t.setFontSize(this.fontSize),
                            t.setFontFace(O.onIPhone ? mt._fontFamilyMap[this.font] || this.font : this.font),
                            P.isConchApp && t.setMultiAble && t.setMultiAble(this._multiline),
                            e.lineHeight = this.leading + this.fontSize + "px",
                            e.fontStyle = this.italic ? "italic" : "normal",
                            e.fontWeight = this.bold ? "bold" : "normal",
                            e.textAlign = this.align,
                            e.padding = "0 0",
                            this._syncInputTransform(),
                            !P.isConchApp && O.onPC && i.timer.frameLoop(1, this, this._syncInputTransform);
                    },
                    r._setPromptColor = function () {
                        (e.promptStyleDOM = O.getElementById("promptStyle")) || ((e.promptStyleDOM = O.createElement("style")).setAttribute("id", "promptStyle"), O.document.head.appendChild(e.promptStyleDOM)),
                            e.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:" + this._promptColor + "}input:-moz-placeholder, textarea:-moz-placeholder {color:" + this._promptColor + "}input::-moz-placeholder, textarea::-moz-placeholder {color:" + this._promptColor + "}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:" + this._promptColor + "}";
                    },
                    r._focusOut = function () {
                        laya.display.Input.isInputting = !1,
                            this._focus = !1,
                            this._text = null,
                            this._content = this.nativeInput.value,
                            this._content ? (i.superSet(mt, this, "text", this._content), i.superSet(mt, this, "color", this._originColor)) : (i.superSet(mt, this, "text", this._prompt), i.superSet(mt, this, "color", this._promptColor)),
                            i.stage.off("keydown", this, this._onKeyDown),
                            i.stage.focus = null,
                            this.event("blur"),
                            P.isConchApp && this.nativeInput.blur(),
                            O.onPC && i.timer.clear(this, this._syncInputTransform);
                    },
                    r._onKeyDown = function (t) {
                        13 === t.keyCode && (O.onMobile && !this._multiline && (this.focus = !1), this.event("enter"));
                    },
                    r.changeText = function (e) {
                        this._content = e,
                            this._focus ? (this.nativeInput.value = e || "", this.event("change")) : t.prototype.changeText.call(this, e);
                    },
                    a(0, r, "color", t.prototype._$get_color,
                        function (t) {
                            this._focus && this.nativeInput.setColor(t),
                                i.superSet(mt, this, "color", this._content ? t : this._promptColor),
                                this._originColor = t;
                        }),
                    a(0, r, "inputElementYAdjuster",
                        function () {
                            return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"),
                                0;
                        },
                        function (t) {
                            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
                        }),
                    a(0, r, "multiline",
                        function () {
                            return this._multiline;
                        },
                        function (t) {
                            this._multiline = t,
                                this.valign = t ? "top" : "middle";
                        }),
                    a(0, r, "maxChars",
                        function () {
                            return this._maxChars;
                        },
                        function (t) {
                            t <= 0 && (t = 1e5),
                                this._maxChars = t;
                        }),
                    a(0, r, "text",
                        function () {
                            return this._focus ? this.nativeInput.value : this._content || "";
                        },
                        function (t) {
                            i.superSet(mt, this, "color", this._originColor),
                                t += "",
                                this._focus ? (this.nativeInput.value = t || "", this.event("change")) : (this._multiline || (t = t.replace(/\r?\n/g, "")), this._content = t, t ? i.superSet(mt, this, "text", t) : (i.superSet(mt, this, "text", this._prompt), i.superSet(mt, this, "color", this.promptColor)));
                        }),
                    a(0, r, "nativeInput",
                        function () {
                            return this._multiline ? e.area : e.input;
                        }),
                    a(0, r, "prompt",
                        function () {
                            return this._prompt;
                        },
                        function (t) {
                            !this._text && t && i.superSet(mt, this, "color", this._promptColor),
                                this.promptColor = this._promptColor,
                                this._text ? i.superSet(mt, this, "text", this._text == this._prompt ? t : this._text) : i.superSet(mt, this, "text", t),
                                this._prompt = mt.langPacks && mt.langPacks[t] ? mt.langPacks[t] : t;
                        }),
                    a(0, r, "focus",
                        function () {
                            return this._focus;
                        },
                        function (t) {
                            var i = this.nativeInput;
                            this._focus !== t && (t ? (i.target ? i.target._focusOut() : this._setInputMethod(), i.target = this, this._focusIn()) : (i.target = null, this._focusOut(), O.document.body.scrollTop = 0, i.blur(), P.isConchApp ? i.setPos(- 1e4, -1e4) : e.inputContainer.contains(i) && e.inputContainer.removeChild(i)));
                        }),
                    a(0, r, "restrict",
                        function () {
                            return this._restrictPattern ? this._restrictPattern.source : "";
                        },
                        function (t) {
                            t ? ((t = "[^" + t + "]").indexOf("^^") > -1 && (t = t.replace("^^", "")), this._restrictPattern = new RegExp(t, "g")) : this._restrictPattern = null;
                        }),
                    a(0, r, "editable",
                        function () {
                            return this._editable;
                        },
                        function (t) {
                            this._editable = t,
                                P.isConchApp && e.input.setForbidEdit(!t);
                        }),
                    a(0, r, "promptColor",
                        function () {
                            return this._promptColor;
                        },
                        function (t) {
                            this._promptColor = t,
                                this._content || i.superSet(mt, this, "color", t);
                        }),
                    a(0, r, "type",
                        function () {
                            return this._type;
                        },
                        function (t) {
                            this._getCSSStyle().password = "password" == t,
                                this._type = t,
                                P.isConchApp && this.nativeInput.setType(t);
                        }),
                    a(0, r, "inputElementXAdjuster",
                        function () {
                            return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"),
                                0;
                        },
                        function (t) {
                            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
                        }),
                    a(0, r, "asPassword",
                        function () {
                            return this._getCSSStyle().password;
                        },
                        function (t) {
                            this._getCSSStyle().password = t,
                                this._type = "password",
                                console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'),
                                this.isChanged = !0;
                        }),
                    e.__init__ = function () {
                        e._createInputElement(),
                            O.onMobile && P.canvas.addEventListener(e.IOS_IFRAME ? O.onMiniGame ? "touchend" : "click" : "touchend", e._popupInputMethod);
                    },
                    e._popupInputMethod = function (t) {
                        if (laya.display.Input.isInputting) {
                            laya.display.Input.inputElement.focus();
                        }
                    },
                    e._createInputElement = function () {
                        e._initInput(e.area = O.createElement("textarea")),
                            e._initInput(e.input = O.createElement("input")),
                            (e.inputContainer = O.createElement("div")).style.position = "absolute",
                            e.inputContainer.style.zIndex = 1e5,
                            O.container.appendChild(e.inputContainer),
                            e.inputContainer.setPos = function (t, i) {
                                e.inputContainer.style.left = t + "px",
                                    e.inputContainer.style.top = i + "px";
                            };
                    },
                    e._initInput = function (t) {
                        var i = t.style;
                        i.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;",
                            i.resize = "none",
                            i.backgroundColor = "transparent",
                            i.border = "none",
                            i.outline = "none",
                            i.zIndex = 1,
                            t.addEventListener("input", e._processInputting),
                            t.addEventListener("mousemove", e._stopEvent),
                            t.addEventListener("mousedown", e._stopEvent),
                            t.addEventListener("touchmove", e._stopEvent),
                            t.setFontFace = function (e) {
                                t.style.fontFamily = e;
                            },
                            P.isConchApp || (t.setColor = function (e) {
                                t.style.color = e;
                            },
                                t.setFontSize = function (e) {
                                    t.style.fontSize = e + "px";
                                });
                    },
                    e._processInputting = function (t) {
                        var e = laya.display.Input.inputElement.target;
                        if (e) {
                            var i = laya.display.Input.inputElement.value;
                            e._restrictPattern && (i = i.replace(/\u2006|\x27/g, ""), e._restrictPattern.test(i) && (i = i.replace(e._restrictPattern, ""), laya.display.Input.inputElement.value = i)),
                                e._text = i,
                                e.event("input");
                        }
                    },
                    e._stopEvent = function (t) {
                        "touchmove" == t.type && t.preventDefault(),
                            t.stopPropagation && t.stopPropagation();
                    },
                    e.TYPE_TEXT = "text",
                    e.TYPE_PASSWORD = "password",
                    e.TYPE_EMAIL = "email",
                    e.TYPE_URL = "url",
                    e.TYPE_NUMBER = "number",
                    e.TYPE_RANGE = "range",
                    e.TYPE_DATE = "date",
                    e.TYPE_MONTH = "month",
                    e.TYPE_WEEK = "week",
                    e.TYPE_TIME = "time",
                    e.TYPE_DATE_TIME = "datetime",
                    e.TYPE_DATE_TIME_LOCAL = "datetime-local",
                    e.TYPE_SEARCH = "search",
                    e.input = null,
                    e.area = null,
                    e.inputElement = null,
                    e.inputContainer = null,
                    e.confirmButton = null,
                    e.promptStyleDOM = null,
                    e.inputHeight = 45,
                    e.isInputting = !1,
                    e.stageMatrix = null,
                    s(e, ["IOS_IFRAME",
                        function () {
                            return this.IOS_IFRAME = O.onIOS && O.window.top != O.window.self;
                        }]),
                    e;
            }(mt),
            wt = function (t) {
                function e(t, i) {
                    this._recreateLock = !1,
                        this._needReleaseAgain = !1,
                        this._enableMerageInAtlas = !0,
                        e.__super.call(this),
                        this._init_(t, i);
                }
                n(e, "laya.resource.HTMLImage", vt);
                var i = e.prototype;
                return i._init_ = function (t, e) {
                    this._src = t,
                        this._source = new O.window.Image(),
                        e && (e.onload && (this.onload = e.onload), e.onerror && (this.onerror = e.onerror), e.onCreate && e.onCreate(this)),
                        0 != t.indexOf("data:image") && (this._source.crossOrigin = ""),
                        t && (this._source.src = t);
                },
                    i.recreateResource = function () {
                        var t = this;
                        if ("" === this._src) throw new Error("src no null！");
                        if (this._needReleaseAgain = !1, this._source) {
                            if (this._recreateLock) return;
                            this.memorySize = this._w * this._h * 4,
                                this._recreateLock = !1,
                                this.completeCreate();
                        } else {
                            this._recreateLock = !0;
                            var e = this;
                            this._source = new O.window.Image(),
                                this._source.crossOrigin = "",
                                this._source.onload = function () {
                                    if (e._needReleaseAgain) return e._needReleaseAgain = !1,
                                        e._source.onload = null,
                                        void (e._source = null);
                                    e._source.onload = null,
                                        e.memorySize = t._w * t._h * 4,
                                        e._recreateLock = !1,
                                        e.completeCreate();
                                },
                                this._source.src = this._src;
                        }
                    },
                    i.disposeResource = function () {
                        this._recreateLock && (this._needReleaseAgain = !0),
                            this._source && (this._source = null, this.memorySize = 0);
                    },
                    i.onresize = function () {
                        this._w = this._source.width,
                            this._h = this._source.height;
                    },
                    a(0, i, "onload", null,
                        function (t) {
                            var e = this;
                            this._onload = t,
                                this._source && (this._source.onload = null != this._onload ?
                                    function () {
                                        e.onresize(),
                                            e._onload();
                                    } : null);
                        }),
                    a(0, i, "onerror", null,
                        function (t) {
                            var e = this;
                            this._onerror = t,
                                this._source && (this._source.onerror = null != this._onerror ?
                                    function () {
                                        e._onerror();
                                    } : null);
                        }),
                    a(0, i, "enableMerageInAtlas",
                        function () {
                            return this._enableMerageInAtlas;
                        },
                        function (t) {
                            this._enableMerageInAtlas = t,
                                P.isConchApp && this._source && (this._source.enableMerageInAtlas = t);
                        }),
                    e.create = function (t, i) {
                        return new e(t, i);
                    },
                    e;
            }(),
            Mt = (function (t) {
                function e() {
                    this._target = null,
                        this._playEvents = null,
                        this._initData = {},
                        this._aniKeys = null,
                        this._effectClass = null,
                        e.__super.call(this);
                }
                n(e, "laya.display.EffectAnimation", t);
                var i = e.prototype;
                i._onOtherBegin = function (t) {
                    t != this && this.stop();
                },
                    i.addEvent = function () {
                        this._target && this._playEvents && (this._setControlNode(this._target), this._target.on(this._playEvents, this, this._onPlayAction));
                    },
                    i._onPlayAction = function () {
                        this.play(0, !1);
                    },
                    i.play = function (t, e, i, s) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = !0),
                            void 0 === i && (i = ""),
                            void 0 === s && (s = !0),
                            this._target && (this._target.event("effectanimationbegin", [this]), this._recordInitData(), laya.display.AnimationPlayerBase.prototype.play.call(this, t, e, i, s));
                    },
                    i._recordInitData = function () {
                        if (this._aniKeys) {
                            var t = 0,
                                e = 0;
                            e = this._aniKeys.length;
                            var i;
                            for (t = 0; t < e; t++) i = this._aniKeys[t],
                                this._initData[i] = this._target[i];
                        }
                    },
                    i._displayToIndex = function (t) {
                        if (this._animationData) {
                            t < 0 && (t = 0),
                                t > this._count && (t = this._count);
                            var e = this._animationData.nodes,
                                i = 0,
                                s = e.length;
                            for (s = s > 1 ? 1 : s, i = 0; i < s; i++) this._displayNodeToFrame(e[i], t);
                        }
                    },
                    i._displayNodeToFrame = function (t, e, i) {
                        if (this._target) {
                            var s;
                            s = this._target;
                            var n, a, r, o, h = t.frames,
                                l = t.keys,
                                c = 0,
                                u = l.length;
                            o = t.secondFrames;
                            var d, _, p, f, m = 0;
                            for (c = 0; c < u; c++) a = h[n = l[c]],
                                -1 == (m = o[n]) ? r = this._initData[n] : e < m ? (p = (_ = t.keyframes[n])[0]).tween ? (null == (d = z[p.tweenMethod]) && (d = z.linearNone), f = _[1], r = d(e, this._initData[n], f.value - this._initData[n], f.index)) : r = this._initData[n] : r = a.length > e ? a[e] : a[a.length - 1],
                                s[n] = r;
                        }
                    },
                    i._calculateNodeKeyFrames = function (e) {
                        t.prototype._calculateNodeKeyFrames.call(this, e);
                        var i, s, n, a = e.keyframes;
                        e.target;
                        n = {},
                            e.secondFrames = n;
                        for (i in a) (s = a[i]).length <= 1 ? n[i] = -1 : n[i] = s[1].index;
                    },
                    a(0, i, "target",
                        function () {
                            return this._target;
                        },
                        function (t) {
                            this._target && this._target.off("effectanimationbegin", this, this._onOtherBegin),
                                this._target = t,
                                this._target && this._target.on("effectanimationbegin", this, this._onOtherBegin),
                                this.addEvent();
                        }),
                    a(0, i, "playEvent", null,
                        function (t) {
                            this._playEvents = t,
                                t && this.addEvent();
                        }),
                    a(0, i, "effectData", null,
                        function (t) {
                            if (t) {
                                var e; (e = t.animations) && e[0] && (this._setUp({},
                                    e[0]), e[0].nodes && e[0].nodes[0] && (this._aniKeys = e[0].nodes[0].keys));
                            }
                        }),
                    a(0, i, "effectClass", null,
                        function (t) {
                            if (this._effectClass = U.getClass(t), this._effectClass) {
                                var e;
                                if (e = this._effectClass.uiView) {
                                    var i; (i = e.animations) && i[0] && (this._setUp({},
                                        i[0]), i[0].nodes && i[0].nodes[0] && (this._aniKeys = i[0].nodes[0].keys));
                                }
                            }
                        }),
                    e.EffectAnimationBegin = "effectanimationbegin";
            }(bt),
                function (t) {
                    function e() {
                        this.animationList = null,
                            this.animationDic = null,
                            this._nodeList = null,
                            this._nodeDefaultProps = null,
                            this._gList = null,
                            this._nodeIDAniDic = {},
                            this._rootNode = null,
                            this._nodeGDic = null,
                            e.__super.call(this);
                    }
                    var i;
                    n(e, "laya.utils.GraphicAnimation", t);
                    var a = e.prototype;
                    return a._parseNodeList = function (t) {
                        this._nodeList || (this._nodeList = []),
                            this._nodeDefaultProps[t.compId] = t.props,
                            t.compId && this._nodeList.push(t.compId);
                        var e = t.child;
                        if (e) {
                            var i = 0,
                                s = e.length;
                            for (i = 0; i < s; i++) this._parseNodeList(e[i]);
                        }
                    },
                        a._calGraphicData = function (t) {
                            if (this._setUp(null, t), this._createGraphicData(), this._nodeIDAniDic) {
                                var e;
                                for (e in this._nodeIDAniDic) this._nodeIDAniDic[e] = null;
                            }
                        },
                        a._createGraphicData = function () {
                            var t = [],
                                e = 0,
                                i = this.count,
                                s = this._animationNewFrames;
                            s || (s = []);
                            var n;
                            for (e = 0; e < i; e++) !s[e] && n || (n = this._createFrameGraphic(e)),
                                t.push(n);
                            this._gList = t;
                        },
                        a._createFrameGraphic = function (t) {
                            var i = r.createGraphics();
                            return e._rootMatrix || (e._rootMatrix = new C()),
                                this._updateNodeGraphic(this._rootNode, t, e._rootMatrix, i),
                                i;
                        },
                        a._updateNodeGraphic = function (t, e, i, s, n) {
                            void 0 === n && (n = 1);
                            var a, r = (a = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId])).alpha * n;
                            if (!(r < .01)) {
                                a.resultTransform || (a.resultTransform = C.create());
                                var o;
                                o = a.resultTransform,
                                    C.mul(a.transform, i, o);
                                var h;
                                a.skin && (h = this._getTextureByUrl(a.skin)) && (o._checkTransform() ? (s.drawTexture(h, 0, 0, a.width, a.height, o, r), a.resultTransform = null) : s.drawTexture(h, o.tx, o.ty, a.width, a.height, null, r));
                                var l;
                                if (l = t.child) {
                                    var c = 0,
                                        u = 0;
                                    for (u = l.length, c = 0; c < u; c++) this._updateNodeGraphic(l[c], e, o, s, r);
                                }
                            }
                        },
                        a._updateNoChilds = function (t, e) {
                            if (t.skin) {
                                var i = this._getTextureByUrl(t.skin);
                                if (i) {
                                    var s = t.transform;
                                    s._checkTransform(); !s.bTransform ? e.drawTexture(i, s.tx, s.ty, t.width, t.height, null, t.alpha) : e.drawTexture(i, 0, 0, t.width, t.height, s.clone(), t.alpha);
                                }
                            }
                        },
                        a._updateNodeGraphic2 = function (t, e, i) {
                            var s;
                            if (s = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]), t.child) {
                                var n = s.transform;
                                n._checkTransform();
                                var a = !1,
                                    r = !1;
                                r = (a = !n.bTransform) && (0 != n.tx || 0 != n.ty);
                                var o = !1; (o = n.bTransform || 1 != s.alpha) && i.save(),
                                    1 != s.alpha && i.alpha(s.alpha),
                                    a ? r && i.translate(n.tx, n.ty) : i.transform(n.clone());
                                var h;
                                h = t.child;
                                var l;
                                if (s.skin && (l = this._getTextureByUrl(s.skin)) && i.drawTexture(l, 0, 0, s.width, s.height), h) {
                                    var c = 0,
                                        u = 0;
                                    for (u = h.length, c = 0; c < u; c++) this._updateNodeGraphic2(h[c], e, i);
                                }
                                o ? i.restore() : a ? r && i.translate(- n.tx, -n.ty) : i.transform(n.clone().invert());
                            } else this._updateNoChilds(s, i);
                        },
                        a._calculateNodeKeyFrames = function (e) {
                            t.prototype._calculateNodeKeyFrames.call(this, e),
                                this._nodeIDAniDic[e.target] = e;
                        },
                        a.getNodeDataByID = function (t) {
                            return this._nodeIDAniDic[t];
                        },
                        a._getParams = function (t, i, s, n) {
                            var a = e._temParam;
                            a.length = i.length;
                            var r = 0,
                                o = i.length;
                            for (r = 0; r < o; r++) a[r] = this._getObjVar(t, i[r][0], s, i[r][1], n);
                            return a;
                        },
                        a._getObjVar = function (t, e, i, s, n) {
                            if (t.hasOwnProperty(e)) {
                                var a = t[e];
                                return i >= a.length && (i = a.length - 1),
                                    t[e][i];
                            }
                            return n.hasOwnProperty(e) ? n[e] : s;
                        },
                        a._getNodeGraphicData = function (t, s, n) {
                            n || (n = i.create()),
                                n.transform ? n.transform.identity() : n.transform = C.create();
                            var a = this.getNodeDataByID(t);
                            if (!a) return n;
                            var r = a.frames,
                                o = this._getParams(r, e._drawTextureCmd, s, this._nodeDefaultProps[t]),
                                h = o[0],
                                l = NaN,
                                c = NaN,
                                u = o[5],
                                d = o[6],
                                _ = o[13],
                                p = o[14],
                                f = o[7],
                                m = o[8],
                                g = o[9],
                                v = o[11],
                                y = o[12];
                            l = o[3],
                                c = o[4],
                                0 != l && 0 != c || (h = null),
                                -1 == l && (l = 0),
                                -1 == c && (c = 0);
                            var b;
                            n.skin = h,
                                n.width = l,
                                n.height = c,
                                h && ((b = this._getTextureByUrl(h)) ? (l || (l = b.sourceWidth), c || (c = b.sourceHeight)) : console.warn("lost skin:", h, ",you may load pics first")),
                                n.alpha = o[10];
                            var x;
                            x = n.transform,
                                0 != _ && (u = _ * l),
                                0 != p && (d = p * c),
                                0 == u && 0 == d || x.translate(- u, -d);
                            var w = null;
                            if (g || 1 !== f || 1 !== m || v || y) {
                                (w = e._tempMt).identity(),
                                    w.bTransform = !0;
                                var M = .0174532922222222 * (g - v),
                                    S = .0174532922222222 * (g + y),
                                    T = Math.cos(S),
                                    I = Math.sin(S),
                                    L = Math.sin(M),
                                    E = Math.cos(M);
                                w.a = f * T,
                                    w.b = f * I,
                                    w.c = -m * L,
                                    w.d = m * E,
                                    w.tx = w.ty = 0;
                            }
                            return w && (x = C.mul(x, w, x)),
                                x.translate(o[1], o[2]),
                                n;
                        },
                        a._getTextureByUrl = function (t) {
                            return rt.getRes(t);
                        },
                        a.setAniData = function (t, i) {
                            if (t.animations) {
                                this._nodeDefaultProps = {},
                                    this._nodeGDic = {},
                                    this._nodeList && (this._nodeList.length = 0),
                                    this._rootNode = t,
                                    this._parseNodeList(t);
                                var s, n = {},
                                    a = [],
                                    r = t.animations,
                                    o = 0,
                                    h = r.length;
                                for (o = 0; o < h; o++) if (s = r[o], this._labels = null, (!i || i == s.name) && s) {
                                    try {
                                        this._calGraphicData(s);
                                    } catch (t) {
                                        console.warn("parse animation fail:" + s.name + ",empty animation created"),
                                            this._gList = [];
                                    }
                                    var l = {};
                                    l.interval = 1e3 / s.frameRate,
                                        l.frames = this._gList,
                                        l.labels = this._labels,
                                        l.name = s.name,
                                        a.push(l),
                                        n[s.name] = l;
                                }
                                this.animationList = a,
                                    this.animationDic = n;
                            }
                            e._temParam.length = 0;
                        },
                        a.parseByData = function (t) {
                            var e, i;
                            e = t.nodeRoot,
                                i = t.aniO,
                                delete t.nodeRoot,
                                delete t.aniO,
                                this._nodeDefaultProps = {},
                                this._nodeGDic = {},
                                this._nodeList && (this._nodeList.length = 0),
                                this._rootNode = e,
                                this._parseNodeList(e),
                                this._labels = null;
                            try {
                                this._calGraphicData(i);
                            } catch (t) {
                                console.warn("parse animation fail:" + i.name + ",empty animation created"),
                                    this._gList = [];
                            }
                            var s = t;
                            return s.interval = 1e3 / i.frameRate,
                                s.frames = this._gList,
                                s.labels = this._labels,
                                s.name = i.name,
                                s;
                        },
                        a.setUpAniData = function (t) {
                            if (t.animations) {
                                var e, i = {},
                                    s = [],
                                    n = t.animations,
                                    a = 0,
                                    r = n.length;
                                for (a = 0; a < r; a++) if (e = n[a]) {
                                    var o = {};
                                    o.name = e.name,
                                        o.aniO = e,
                                        o.nodeRoot = t,
                                        s.push(o),
                                        i[e.name] = o;
                                }
                                this.animationList = s,
                                    this.animationDic = i;
                            }
                        },
                        a._clear = function () {
                            if (this.animationList = null, this.animationDic = null, this._gList = null, this._nodeGDic) {
                                var t, e;
                                for (t in this._nodeGDic) (e = this._nodeGDic[t]) && e.recover();
                            }
                            this._nodeGDic = null;
                        },
                        e.parseAnimationByData = function (t) {
                            e._I || (e._I = new e());
                            var i;
                            return i = e._I.parseByData(t),
                                e._I._clear(),
                                i;
                        },
                        e.parseAnimationData = function (t) {
                            e._I || (e._I = new e()),
                                e._I.setUpAniData(t);
                            var i;
                            return i = {},
                                i.animationList = e._I.animationList,
                                i.animationDic = e._I.animationDic,
                                e._I._clear(),
                                i;
                        },
                        e._drawTextureCmd = [["skin", null], ["x", 0], ["y", 0], ["width", -1], ["height", -1], ["pivotX", 0], ["pivotY", 0], ["scaleX", 1], ["scaleY", 1], ["rotation", 0], ["alpha", 1], ["skewX", 0], ["skewY", 0], ["anchorX", 0], ["anchorY", 0]],
                        e._temParam = [],
                        e._I = null,
                        e._rootMatrix = null,
                        s(e, ["_tempMt",
                            function () {
                                return this._tempMt = new C();
                            }]),
                        e.__init$ = function () {
                            i = function () {
                                function t() {
                                    this.skin = null,
                                        this.transform = null,
                                        this.resultTransform = null,
                                        this.width = NaN,
                                        this.height = NaN,
                                        this.alpha = 1;
                                }
                                n(t, "");
                                return t.prototype.recover = function () {
                                    this.skin = null,
                                        this.width = 0,
                                        this.height = 0,
                                        this.alpha = 1,
                                        this.transform && (this.transform.destroy(), this.transform = null),
                                        this.resultTransform && (this.resultTransform.destroy(), this.resultTransform = null),
                                        H.recover("GraphicNode", this);
                                },
                                    t.create = function () {
                                        return H.getItemByClass("GraphicNode", t);
                                    },
                                    t;
                            }();
                        },
                        e;
                }(bt));
        i.__init([h, ot, P, O, K, E, ct, Mt]);
    }(window, document, Laya),
    function (t, e, i) {
        i.un,
            i.uns,
            i.static;
        var s = i.class;
        i.getset,
            i.__newvec;
        new (function () {
            function t() { }
            return s(t, "LayaMain"),
                t;
        }())();
    }(window, document, Laya),
    "function" == typeof define && define.amd && define("laya.core", ["require", "exports"],
        function (t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            for (var i in Laya) {
                var s = Laya[i];
                s && s.__isclass && (e[i] = s);
            }
        }),
    function (t, e, i) {
        i.un,
            i.uns;
        var s = i.static,
            n = i.class,
            a = i.getset,
            r = (i.__newvec, laya.utils.Browser),
            o = (laya.events.Event, laya.events.EventDispatcher),
            h = laya.resource.HTMLImage,
            l = laya.utils.Handler,
            c = laya.display.Input,
            u = laya.net.Loader,
            d = laya.net.LocalStorage,
            _ = (laya.maths.Matrix, laya.renders.Render),
            p = laya.utils.RunDriver,
            f = laya.media.SoundChannel,
            m = laya.media.SoundManager,
            g = laya.net.URL,
            v = laya.utils.Utils,
            y = function () {
                function e() { }
                return n(e, "laya.wx.mini.MiniAdpter"),
                    e.getJson = function (t) {
                        return JSON.parse(t);
                    },
                    e.init = function (s, n) {
                        void 0 === s && (s = !1),
                            void 0 === n && (n = !1),
                            e._inited || (e._inited = !0, (e.window = t).navigator.userAgent.indexOf("MiniGame") < 0 || (e.isZiYu = n, e.isPosMsgYu = s, e.EnvConfig = {},
                                e.isZiYu || (b.setNativeFileDir("/layaairGame"), b.existDir(b.fileNativeDir, l.create(e, e.onMkdirCallBack))), e.systemInfo = wx.getSystemInfoSync(), e.window.focus = function () { },
                                i.getUrlPath = function () { },
                                e.window.logtime = function (t) { },
                                e.window.alertTimeLog = function (t) { },
                                e.window.resetShareInfo = function () { },
                                e.window.CanvasRenderingContext2D = function () { },
                                e.window.CanvasRenderingContext2D.prototype = e.window.wx.createCanvas().getContext("2d").__proto__, e.window.document.body.appendChild = function () { },
                                e.EnvConfig.pixelRatioInt = 0, p.getPixelRatio = e.pixelRatio, e._preCreateElement = r.createElement, r.createElement = e.createElement, p.createShaderCondition = e.createShaderCondition, v.parseXMLFromString = e.parseXMLFromString, c._createInputElement = w._createInputElement, e.EnvConfig.load = u.prototype.load, u.prototype.load = S.prototype.load, u.prototype._loadImage = x.prototype._loadImage, M.__init__(), d._baseClass = M));
                    },
                    e.getUrlEncode = function (t, e) {
                        return - 1 != t.indexOf(".fnt") ? "utf8" : "arraybuffer" == e ? "" : "ascii";
                    },
                    e.downLoadFile = function (t, e, i, s) {
                        void 0 === e && (e = ""),
                            void 0 === s && (s = "ascii");
                        b.getFileInfo(t) ? null != i && i.runWith([0]) : b.downLoadFile(t, e, i, s);
                    },
                    e.remove = function (t, e) {
                        b.deleteFile("", t, e, "", 0);
                    },
                    e.removeAll = function () {
                        b.deleteAll();
                    },
                    e.hasNativeFile = function (t) {
                        return b.isLocalNativeFile(t);
                    },
                    e.getFileInfo = function (t) {
                        return b.getFileInfo(t);
                    },
                    e.getFileList = function () {
                        return b.filesListObj;
                    },
                    e.exitMiniProgram = function () {
                        e.window.wx.exitMiniProgram();
                    },
                    e.onMkdirCallBack = function (t, e) {
                        t || (b.filesListObj = JSON.parse(e.data));
                    },
                    e.pixelRatio = function () {
                        if (!e.EnvConfig.pixelRatioInt) try {
                            return e.EnvConfig.pixelRatioInt = e.systemInfo.pixelRatio,
                                e.systemInfo.pixelRatio;
                        } catch (t) { }
                        return e.EnvConfig.pixelRatioInt;
                    },
                    e.createElement = function (i) {
                        if ("canvas" == i) {
                            var s;
                            return 1 == e.idx ? e.isZiYu ? (s = sharedCanvas).style = {} : s = t.canvas : s = t.wx.createCanvas(),
                                e.idx++ ,
                                s;
                        }
                        if ("textarea" == i || "input" == i) return e.onCreateInput(i);
                        if ("div" == i) {
                            var n = e._preCreateElement(i);
                            return n.contains = function (t) {
                                return null;
                            },
                                n.removeChild = function (t) { },
                                n;
                        }
                        return e._preCreateElement(i);
                    },
                    e.onCreateInput = function (t) {
                        var i = e._preCreateElement(t);
                        return i.focus = w.wxinputFocus,
                            i.blur = w.wxinputblur,
                            i.style = {},
                            i.value = 0,
                            i.parentElement = {},
                            i.placeholder = {},
                            i.type = {},
                            i.setColor = function (t) { },
                            i.setType = function (t) { },
                            i.setFontFace = function (t) { },
                            i.addEventListener = function (t) { },
                            i.contains = function (t) {
                                return null;
                            },
                            i.removeChild = function (t) { },
                            i;
                    },
                    e.createShaderCondition = function (t) {
                        var e = this;
                        return function () {
                            return e[t.replace("this.", "")];
                        };
                    },
                    e.EnvConfig = null,
                    e.window = null,
                    e._preCreateElement = null,
                    e._inited = !1,
                    e.systemInfo = null,
                    e.isZiYu = !1,
                    e.isPosMsgYu = !1,
                    e.autoCacheFile = !0,
                    e.minClearSize = 5242880,
                    e.parseXMLFromString = function (e) {
                        var i;
                        e = e.replace(/>\s+</g, "><");
                        try {
                            i = new t.Parser.DOMParser().parseFromString(e, "text/xml");
                        } catch (t) {
                            throw "需要引入xml解析库文件";
                        }
                        return i;
                    },
                    e.idx = 1,
                    s(e, ["nativefiles",
                        function () {
                            return this.nativefiles = ["layaNativeDir", "wxlocal"];
                        }]),
                    e;
            }(),
            b = function () {
                function t() { }
                return n(t, "laya.wx.mini.MiniFileMgr"),
                    t.isLocalNativeFile = function (t) {
                        for (var e = 0,
                            i = y.nativefiles.length; e < i; e++) if (- 1 != t.indexOf(y.nativefiles[e])) return !0;
                        return !1;
                    },
                    t.getFileInfo = function (e) {
                        var i = e.split("?")[0],
                            s = t.filesListObj[i];
                        return null == s ? null : s;
                    },
                    t.read = function (e, i, s, n, a, r) {
                        void 0 === i && (i = "ascill"),
                            void 0 === n && (n = ""),
                            void 0 === a && (a = !1),
                            void 0 === r && (r = "");
                        var o;
                        o = "" == n || -1 == n.indexOf("http://") && -1 == n.indexOf("https://") ? e : t.getFileNativePath(e),
                            t.fs.readFile({
                                filePath: o,
                                encoding: i,
                                success: function (t) {
                                    null != s && s.runWith([0, t]);
                                },
                                fail: function (e) {
                                    e && "" != n ? t.downFiles(n, i, s, n, a, r) : null != s && s.runWith([1]);
                                }
                            });
                    },
                    t.downFiles = function (e, i, s, n, a, r) {
                        void 0 === i && (i = "ascii"),
                            void 0 === n && (n = ""),
                            void 0 === a && (a = !1),
                            void 0 === r && (r = "");
                        t.wxdown({
                            url: e,
                            success: function (e) {
                                200 === e.statusCode && t.readFile(e.tempFilePath, i, s, n, a, r);
                            },
                            fail: function (t) {
                                null != s && s.runWith([1, t]);
                            }
                        }).onProgressUpdate(function (t) {
                            null != s && s.runWith([2, t.progress]);
                        });
                    },
                    t.readFile = function (e, i, s, n, a, r) {
                        void 0 === i && (i = "ascill"),
                            void 0 === n && (n = ""),
                            void 0 === a && (a = !1),
                            void 0 === r && (r = ""),
                            t.fs.readFile({
                                filePath: e,
                                encoding: i,
                                success: function (r) {
                                    - 1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? (y.autoCacheFile || a) && t.copyFile(e, n, s, i) : null != s && s.runWith([0, r]);
                                },
                                fail: function (t) {
                                    t && null != s && s.runWith([1, t]);
                                }
                            });
                    },
                    t.downOtherFiles = function (e, i, s, n) {
                        void 0 === s && (s = ""),
                            void 0 === n && (n = !1),
                            t.wxdown({
                                url: e,
                                success: function (e) {
                                    200 === e.statusCode && ((y.autoCacheFile || n) && -1 == s.indexOf("wx.qlogo.cn") ? t.copyFile(e.tempFilePath, s, i) : null != i && i.runWith([0, e.tempFilePath]));
                                },
                                fail: function (t) {
                                    null != i && i.runWith([1, t]);
                                }
                            });
                    },
                    t.downLoadFile = function (e, i, s, n) {
                        void 0 === i && (i = ""),
                            void 0 === n && (n = "ascii"),
                            "image" == i || "sound" == i ? t.downOtherFiles(e, s, e, !0) : t.downFiles(e, n, s, e, !0, i);
                    },
                    t.copyFile = function (e, i, s, n) {
                        void 0 === n && (n = "");
                        var a = e.split("/"),
                            r = a[a.length - 1],
                            o = (i.split("?")[0], t.getFileInfo(i)),
                            h = t.getFileNativePath(r),
                            l = t.getCacheUseSize();
                        o ? o.readyUrl != i ? t.fs.getFileInfo({
                            filePath: e,
                            success: function (e) {
                                l + 4194304 + e.size >= 52428800 && (e.size > y.minClearSize && (y.minClearSize = e.size), t.onClearCacheRes()),
                                    t.deleteFile(r, i, s, n, e.size);
                            },
                            fail: function (t) {
                                null != s && s.runWith([1, t]);
                            }
                        }) : null != s && s.runWith([0]) : t.fs.getFileInfo({
                            filePath: e,
                            success: function (a) {
                                l + 4194304 + a.size >= 52428800 && (a.size > y.minClearSize && (y.minClearSize = a.size), t.onClearCacheRes()),
                                    t.fs.copyFile({
                                        srcPath: e,
                                        destPath: h,
                                        success: function (e) {
                                            t.onSaveFile(i, r, !0, n, s, a.size);
                                        },
                                        fail: function (t) {
                                            null != s && s.runWith([1, t]);
                                        }
                                    });
                            },
                            fail: function (t) {
                                null != s && s.runWith([1, t]);
                            }
                        });
                    },
                    t.onClearCacheRes = function () {
                        var e = y.minClearSize,
                            i = [];
                        for (var s in t.filesListObj) i.push(t.filesListObj[s]);
                        t.sortOn(i, "time", 16);
                        for (var n = 0,
                            a = 1,
                            r = i.length; a < r; a++) {
                            var o = i[a];
                            if (n >= e) break;
                            n += o.size,
                                t.deleteFile("", o.readyUrl);
                        }
                    },
                    t.sortOn = function (t, e, i) {
                        return void 0 === i && (i = 0),
                            16 == i ? t.sort(function (t, i) {
                                return t[e] - i[e];
                            }) : 18 == i ? t.sort(function (t, i) {
                                return i[e] - t[e];
                            }) : t.sort(function (t, i) {
                                return t[e] - i[e];
                            });
                    },
                    t.getFileNativePath = function (t) {
                        return laya.wx.mini.MiniFileMgr.fileNativeDir + "/" + t;
                    },
                    t.deleteFile = function (e, i, s, n, a) {
                        void 0 === i && (i = ""),
                            void 0 === n && (n = ""),
                            void 0 === a && (a = 0);
                        var r = t.getFileInfo(i),
                            o = t.getFileNativePath(r.md5);
                        t.fs.unlink({
                            filePath: o,
                            success: function (r) {
                                var o = "" != e;
                                if ("" != e) {
                                    var h = t.getFileNativePath(e);
                                    t.fs.copyFile({
                                        srcPath: e,
                                        destPath: h,
                                        success: function (a) {
                                            t.onSaveFile(i, e, o, n, s, a.size);
                                        },
                                        fail: function (t) {
                                            null != s && s.runWith([1, t]);
                                        }
                                    });
                                } else t.onSaveFile(i, e, o, n, s, a);
                            },
                            fail: function (t) { }
                        });
                    },
                    t.deleteAll = function () {
                        var e = [];
                        for (var i in t.filesListObj) e.push(t.filesListObj[i]);
                        for (var s = 1,
                            n = e.length; s < n; s++) {
                            var a = e[s];
                            t.deleteFile("", a.readyUrl);
                        }
                    },
                    t.onSaveFile = function (e, i, s, n, a, o) {
                        void 0 === s && (s = !0),
                            void 0 === n && (n = ""),
                            void 0 === o && (o = 0);
                        var h = e.split("?")[0];
                        if (null == t.filesListObj.fileUsedSize && (t.filesListObj.fileUsedSize = 0), s) {
                            t.getFileNativePath(i);
                            t.filesListObj[h] = {
                                md5: i,
                                readyUrl: e,
                                size: o,
                                times: r.now(),
                                encoding: n
                            },
                                t.filesListObj.fileUsedSize = parseInt(t.filesListObj.fileUsedSize) + o,
                                t.writeFilesList(h, JSON.stringify(t.filesListObj), !0),
                                null != a && a.runWith([0]);
                        } else if (t.filesListObj[h]) {
                            var l = parseInt(t.filesListObj[h].size);
                            t.filesListObj.fileUsedSize = parseInt(t.filesListObj.fileUsedSize) - l,
                                delete t.filesListObj[h],
                                t.writeFilesList(h, JSON.stringify(t.filesListObj), !1),
                                null != a && a.runWith([0]);
                        }
                    },
                    t.writeFilesList = function (e, i, s) {
                        var n = t.fileNativeDir + "/" + t.fileListName;
                        t.fs.writeFile({
                            filePath: n,
                            encoding: "utf8",
                            data: i,
                            success: function (t) { },
                            fail: function (t) { }
                        }),
                            !y.isZiYu && y.isPosMsgYu && wx.postMessage({
                                url: e,
                                data: t.filesListObj[e],
                                isLoad: "filenative",
                                isAdd: s
                            });
                    },
                    t.getCacheUseSize = function () {
                        return t.filesListObj && t.filesListObj.fileUsedSize ? t.filesListObj.fileUsedSize : 0;
                    },
                    t.existDir = function (e, i) {
                        t.fs.mkdir({
                            dirPath: e,
                            success: function (t) {
                                null != i && i.runWith([0, {
                                    data: JSON.stringify({})
                                }]);
                            },
                            fail: function (e) {
                                - 1 != e.errMsg.indexOf("file already exists") ? t.readSync(t.fileListName, "utf8", i) : null != i && i.runWith([1, e]);
                            }
                        });
                    },
                    t.readSync = function (e, i, s, n) {
                        void 0 === i && (i = "ascill"),
                            void 0 === n && (n = "");
                        var a, r = t.getFileNativePath(e);
                        try {
                            a = t.fs.readFileSync(r, i),
                                null != s && s.runWith([0, {
                                    data: a
                                }]);
                        } catch (t) {
                            null != s && s.runWith([1]);
                        }
                    },
                    t.setNativeFileDir = function (e) {
                        t.fileNativeDir = wx.env.USER_DATA_PATH + e;
                    },
                    t.filesListObj = {},
                    t.fileNativeDir = null,
                    t.fileListName = "layaairfiles.txt",
                    t.ziyuFileData = {},
                    t.loadPath = "",
                    t.DESCENDING = 2,
                    t.NUMERIC = 16,
                    s(t, ["fs",
                        function () {
                            return this.fs = wx.getFileSystemManager();
                        },
                        "wxdown",
                        function () {
                            return this.wxdown = wx.downloadFile;
                        }]),
                    t;
            }(),
            x = function () {
                function t() { }
                n(t, "laya.wx.mini.MiniImage");
                return t.prototype._loadImage = function (e) {
                    if (y.isZiYu) t.onCreateImage(e, this, !0);
                    else {
                        var i = !1;
                        if (b.isLocalNativeFile(e)) {
                            if (- 1 != e.indexOf("http://") || -1 != e.indexOf("https://")) if ("" != b.loadPath) e = e.split(b.loadPath)[1];
                            else {
                                var s = "" != g.rootPath ? g.rootPath : g.basePath;
                                "" != s && (e = e.split(s)[1]);
                            }
                        } else i = !0,
                            e = g.formatURL(e);
                        b.getFileInfo(e) ? t.onCreateImage(e, this, !i) : -1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? y.isZiYu ? t.onCreateImage(e, this, !0) : b.downOtherFiles(e, new l(t, t.onDownImgCallBack, [e, this]), e) : t.onCreateImage(e, this, !0);
                    }
                },
                    t.onDownImgCallBack = function (e, i, s, n) {
                        void 0 === n && (n = ""),
                            s ? i.onError(null) : t.onCreateImage(e, i, !1, n);
                    },
                    t.onCreateImage = function (t, e, i, s) {
                        function n() {
                            l.onload = null,
                                l.onerror = null,
                                delete e.imgCache[t];
                        }
                        void 0 === i && (i = !1),
                            void 0 === s && (s = "");
                        var a;
                        if (y.autoCacheFile) if (i) a = t;
                        else if ("" != s) a = s;
                        else {
                            var o = b.getFileInfo(t).md5;
                            a = b.getFileNativePath(o);
                        } else a = i ? t : s;
                        null == e.imgCache && (e.imgCache = {});
                        var l, c = function () {
                            n(),
                                e._url = g.formatURL(e._url),
                                e.onLoaded(l);
                        },
                            u = function () {
                                n(),
                                    e.event("error", "Load image failed");
                            };
                        "nativeimage" == e._type ? ((l = new r.window.Image()).crossOrigin = "", l.onload = c, l.onerror = u, l.src = a, e.imgCache[t] = l) : new h.create(a, {
                            onload: c,
                            onerror: u,
                            onCreate: function (i) {
                                l = i,
                                    e.imgCache[t] = i;
                            }
                        });
                    },
                    t;
            }(),
            w = function () {
                function e() { }
                return n(e, "laya.wx.mini.MiniInput"),
                    e._createInputElement = function () {
                        c._initInput(c.area = r.createElement("textarea")),
                            c._initInput(c.input = r.createElement("input")),
                            c.inputContainer = r.createElement("div"),
                            c.inputContainer.style.position = "absolute",
                            c.inputContainer.style.zIndex = 1e5,
                            r.container.appendChild(c.inputContainer),
                            c.inputContainer.setPos = function (t, e) {
                                c.inputContainer.style.left = t + "px",
                                    c.inputContainer.style.top = e + "px";
                            },
                            i.stage.on("resize", null, e._onStageResize),
                            wx.onWindowResize && wx.onWindowResize(function (e) {
                                t.dispatchEvent && t.dispatchEvent("resize");
                            }),
                            m._soundClass = C,
                            m._musicClass = C;
                        var s = y.systemInfo.model,
                            n = y.systemInfo.system; - 1 != s.indexOf("iPhone") && (r.onIPhone = !0, r.onIOS = !0, r.onIPad = !0, r.onAndriod = !1),
                                -1 == n.indexOf("Android") && -1 == n.indexOf("Adr") || (r.onAndriod = !0, r.onIPhone = !1, r.onIOS = !1, r.onIPad = !1);
                    },
                    e._onStageResize = function () {
                        i.stage._canvasTransform.identity().scale(r.width / _.canvas.width / p.getPixelRatio(), r.height / _.canvas.height / p.getPixelRatio());
                    },
                    e.wxinputFocus = function (t) {
                        var e = c.inputElement.target;
                        e && !e.editable || (y.window.wx.offKeyboardConfirm(), y.window.wx.offKeyboardInput(), y.window.wx.showKeyboard({
                            defaultValue: e.text,
                            maxLength: e.maxChars,
                            multiple: e.multiline,
                            confirmHold: !0,
                            confirmType: "done",
                            success: function (t) { },
                            fail: function (t) { }
                        }), y.window.wx.onKeyboardConfirm(function (t) {
                            var i = t ? t.value : "";
                            e.text = i,
                                e.event("input"),
                                laya.wx.mini.MiniInput.inputEnter();
                        }), y.window.wx.onKeyboardInput(function (t) {
                            var i = t ? t.value : "";
                            e.multiline || -1 == i.indexOf("\n") ? (e.text = i, e.event("input")) : laya.wx.mini.MiniInput.inputEnter();
                        }));
                    },
                    e.inputEnter = function () {
                        c.inputElement.target.focus = !1;
                    },
                    e.wxinputblur = function () {
                        e.hideKeyboard();
                    },
                    e.hideKeyboard = function () {
                        y.window.wx.offKeyboardConfirm(),
                            y.window.wx.offKeyboardInput(),
                            y.window.wx.hideKeyboard({
                                success: function (t) {
                                    console.log("隐藏键盘");
                                },
                                fail: function (t) {
                                    console.log("隐藏键盘出错:" + (t ? t.errMsg : ""));
                                }
                            });
                    },
                    e;
            }(),
            M = function () {
                function t() { }
                return n(t, "laya.wx.mini.MiniLocalStorage"),
                    t.__init__ = function () {
                        t.items = t;
                    },
                    t.setItem = function (t, e) {
                        wx.setStorageSync(t, e);
                    },
                    t.getItem = function (t) {
                        return wx.getStorageSync(t);
                    },
                    t.setJSON = function (e, i) {
                        t.setItem(e, i);
                    },
                    t.getJSON = function (e) {
                        return t.getItem(e);
                    },
                    t.removeItem = function (t) {
                        wx.removeStorageSync(t);
                    },
                    t.clear = function () {
                        wx.clearStorageSync();
                    },
                    t.getStorageInfoSync = function () {
                        try {
                            var t = wx.getStorageInfoSync();
                            return console.log(t.keys),
                                console.log(t.currentSize),
                                console.log(t.limitSize),
                                t;
                        } catch (t) { }
                        return null;
                    },
                    t.support = !0,
                    t.items = null,
                    t;
            }(),
            S = (function () {
                function t() { }
                n(t, "laya.wx.mini.MiniLocation"),
                    t.__init__ = function () {
                        y.window.navigator.geolocation.getCurrentPosition = t.getCurrentPosition,
                            y.window.navigator.geolocation.watchPosition = t.watchPosition,
                            y.window.navigator.geolocation.clearWatch = t.clearWatch;
                    },
                    t.getCurrentPosition = function (t, e, i) {
                        var s; (s = {}).success = function (e) {
                            null != t && t(e);
                        },
                            s.fail = e,
                            y.window.wx.getLocation(s);
                    },
                    t.watchPosition = function (e, s, n) {
                        t._curID++;
                        var a;
                        return a = {},
                            a.success = e,
                            a.error = s,
                            t._watchDic[t._curID] = a,
                            i.timer.loop(1e3, null, t._myLoop),
                            t._curID;
                    },
                    t.clearWatch = function (e) {
                        delete t._watchDic[e],
                            t._hasWatch() || i.timer.clear(null, t._myLoop);
                    },
                    t._hasWatch = function () {
                        var e;
                        for (e in t._watchDic) if (t._watchDic[e]) return !0;
                        return !1;
                    },
                    t._myLoop = function () {
                        t.getCurrentPosition(t._mySuccess, t._myError);
                    },
                    t._mySuccess = function (e) {
                        var i = {};
                        i.coords = e,
                            i.timestamp = r.now();
                        var s;
                        for (s in t._watchDic) t._watchDic[s].success && t._watchDic[s].success(i);
                    },
                    t._myError = function (e) {
                        var i;
                        for (i in t._watchDic) t._watchDic[i].error && t._watchDic[i].error(e);
                    },
                    t._watchDic = {},
                    t._curID = 0;
            }(),
                function (t) {
                    function e() {
                        e.__super.call(this);
                    }
                    n(e, "laya.wx.mini.MiniAccelerator", t);
                    var i = e.prototype;
                    i.on = function (i, s, n, a) {
                        return t.prototype.on.call(this, i, s, n, a),
                            e.startListen(this.onDeviceOrientationChange),
                            this;
                    },
                        i.off = function (i, s, n, a) {
                            return void 0 === a && (a = !1),
                                this.hasListener(i) || e.stopListen(),
                                t.prototype.off.call(this, i, s, n, a);
                        },
                        e.__init__ = function () {
                            try {
                                var t;
                                if (!(t = laya.device.motion.Accelerator)) return;
                                t.prototype.on = e.prototype.on,
                                    t.prototype.off = e.prototype.off;
                            } catch (t) { }
                        },
                        e.startListen = function (t) {
                            if (e._callBack = t, !e._isListening) {
                                e._isListening = !0;
                                try {
                                    wx.onAccelerometerChange(e.onAccelerometerChange);
                                } catch (t) { }
                            }
                        },
                        e.stopListen = function () {
                            e._isListening = !1;
                            try {
                                wx.stopAccelerometer({});
                            } catch (t) { }
                        },
                        e.onAccelerometerChange = function (t) {
                            var i; (i = {}).acceleration = t,
                                i.accelerationIncludingGravity = t,
                                i.rotationRate = {},
                                null != e._callBack && e._callBack(i);
                        },
                        e._isListening = !1,
                        e._callBack = null;
                }(o),
                function (t) {
                    function e() {
                        e.__super.call(this);
                    }
                    n(e, "laya.wx.mini.MiniLoader", o);
                    return e.prototype.load = function (t, i, s, n, a) {
                        void 0 === s && (s = !0),
                            void 0 === a && (a = !1);
                        if (this._url = t, 0 === t.indexOf("data:image") ? this._type = i = "image" : this._type = i || (i = this.getTypeFromUrl(t)), this._cache = s, this._data = null, !a && u.loadedMap[g.formatURL(t)]) return this._data = u.loadedMap[g.formatURL(t)],
                            this.event("progress", 1),
                            void this.event("complete", this._data);
                        if (null != u.parserMap[i]) return this._customParse = !0,
                            void (u.parserMap[i] instanceof laya.utils.Handler ? u.parserMap[i].runWith(this) : u.parserMap[i].call(null, this));
                        var r = y.getUrlEncode(t, i),
                            o = v.getFileExtension(t);
                        if (- 1 != e._fileTypeArr.indexOf(o)) y.EnvConfig.load.call(this, t, i, s, n, a);
                        else {
                            if (y.isZiYu && b.ziyuFileData[t]) {
                                var h = b.ziyuFileData[t];
                                return void this.onLoaded(h);
                            }
                            if (b.getFileInfo(t)) {
                                var c = b.getFileInfo(t);
                                c.encoding = null == c.encoding ? "ascii" : c.encoding,
                                    b.readFile(t, c.encoding, new l(e, e.onReadNativeCallBack, [r, t, i, s, n, a, this]), t);
                            } else {
                                if (b.isLocalNativeFile(t)) return void b.read(t, r, new l(e, e.onReadNativeCallBack, [r, t, i, s, n, a, this])); - 1 != (t = g.formatURL(t)).indexOf("http://") || -1 != t.indexOf("https://") ? y.EnvConfig.load.call(this, t, i, s, n, a) : b.readFile(t, r, new l(e, e.onReadNativeCallBack, [r, t, i, s, n, a, this]), t);
                            }
                        }
                    },
                        e.onReadNativeCallBack = function (t, e, i, s, n, a, r, o, h) {
                            if (void 0 === s && (s = !0), void 0 === a && (a = !1), void 0 === o && (o = 0), o) 1 == o && y.EnvConfig.load.call(r, e, i, s, n, a);
                            else {
                                var l;
                                l = "json" == i || "atlas" == i ? y.getJson(h.data) : "xml" == i ? v.parseXMLFromString(h.data) : h.data,
                                    !y.isZiYu && y.isPosMsgYu && "arraybuffer" != i && wx.postMessage({
                                        url: e,
                                        data: l,
                                        isLoad: "filedata"
                                    }),
                                    r.onLoaded(l);
                            }
                        },
                        s(e, ["_fileTypeArr",
                            function () {
                                return this._fileTypeArr = ["png", "jpg", "bmp", "jpeg", "gif"];
                            }]),
                        e;
                }()),
            C = function (t) {
                function e() {
                    this._sound = null,
                        this.url = null,
                        this.loaded = !1,
                        this.readyUrl = null,
                        e.__super.call(this);
                }
                n(e, "laya.wx.mini.MiniSound", o);
                var i = e.prototype;
                return i.load = function (t) {
                    t = g.formatURL(t),
                        this.url = t,
                        this.readyUrl = t,
                        e._audioCache[this.readyUrl] ? this.event("complete") : y.autoCacheFile && b.getFileInfo(t) ? this.onDownLoadCallBack(t, 0) : y.autoCacheFile ? b.downOtherFiles(t, l.create(this, this.onDownLoadCallBack, [t]), t) : this.onDownLoadCallBack(t, 0);
                },
                    i.onDownLoadCallBack = function (t, i) {
                        if (i) this.event("error");
                        else {
                            var s;
                            if (y.autoCacheFile) {
                                var n = b.getFileInfo(t).md5;
                                s = b.getFileNativePath(n),
                                    this._sound = e._createSound(),
                                    this._sound.src = this.url = s;
                            } else this._sound = e._createSound(),
                                this._sound.src = t;
                            this._sound.onCanplay(e.bindToThis(this.onCanPlay, this)),
                                this._sound.onError(e.bindToThis(this.onError, this));
                        }
                    },
                    i.onError = function (t) {
                        try {
                            console.log("-----1---------------minisound-----id:" + e._id),
                                console.log(t);
                        } catch (t) {
                            console.log("-----2---------------minisound-----id:" + e._id),
                                console.log(t);
                        }
                        this.event("error"),
                            this._sound.offError(null);
                    },
                    i.onCanPlay = function () {
                        this.loaded = !0,
                            this.event("complete"),
                            e._audioCache[this.readyUrl] = this,
                            this._sound.offCanplay(null);
                    },
                    i.play = function (t, i) {
                        void 0 === t && (t = 0),
                            void 0 === i && (i = 0);
                        var s;
                        if (this.url == m._tMusic ? (e._musicAudio || (e._musicAudio = e._createSound()), s = e._musicAudio) : s = e._audioCache[this.readyUrl] ? e._audioCache[this.readyUrl]._sound : e._createSound(), y.autoCacheFile && b.getFileInfo(this.url)) {
                            var n = b.getFileInfo(this.url).md5;
                            s.src = this.url = b.getFileNativePath(n);
                        } else s.src = this.url;
                        var a = new T(s, this);
                        return a.url = this.url,
                            a.loops = i,
                            a.loop = 0 === i,
                            a.startTime = t,
                            a.play(),
                            m.addChannel(a),
                            a;
                    },
                    i.dispose = function () {
                        var t = e._audioCache[this.readyUrl];
                        t && (t.src = "", t._sound && (t._sound.destroy(), t._sound = null, t = null), delete e._audioCache[this.readyUrl]);
                    },
                    a(0, i, "duration",
                        function () {
                            return this._sound.duration;
                        }),
                    e._createSound = function () {
                        return e._id++ ,
                            y.window.wx.createInnerAudioContext();
                    },
                    e.bindToThis = function (t, e) {
                        return t.bind(e);
                    },
                    e._musicAudio = null,
                    e._id = 0,
                    e._audioCache = {},
                    e;
            }(),
            T = function (t) {
                function e(t, i) {
                    this._audio = null,
                        this._onEnd = null,
                        this._miniSound = null,
                        e.__super.call(this),
                        this._audio = t,
                        this._miniSound = i,
                        this._onEnd = e.bindToThis(this.__onEnd, this),
                        t.onEnded(this._onEnd);
                }
                n(e, "laya.wx.mini.MiniSoundChannel", f);
                var s = e.prototype;
                return s.__onEnd = function () {
                    if (1 == this.loops) return this.completeHandler && (i.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null),
                        this.stop(),
                        void this.event("complete");
                    this.loops > 0 && this.loops-- ,
                        this.startTime = 0,
                        this.play();
                },
                    s.play = function () {
                        this.isStopped = !1,
                            m.addChannel(this),
                            this._audio.play();
                    },
                    s.stop = function () {
                        this.isStopped = !0,
                            m.removeChannel(this),
                            this.completeHandler = null,
                            this._audio && (this._audio.pause(), this._audio.offEnded(null), this._audio = null, this._miniSound = null, this._onEnd = null);
                    },
                    s.pause = function () {
                        this.isStopped = !0,
                            this._audio.pause();
                    },
                    s.resume = function () {
                        this._audio && (this.isStopped = !1, m.addChannel(this), this._audio.play());
                    },
                    a(0, s, "autoplay",
                        function () {
                            return this._audio.autoplay;
                        },
                        function (t) {
                            this._audio.autoplay = t;
                        }),
                    a(0, s, "position",
                        function () {
                            return this._audio ? this._audio.currentTime : 0;
                        }),
                    a(0, s, "duration",
                        function () {
                            return this._audio ? this._audio.duration : 0;
                        }),
                    a(0, s, "loop",
                        function () {
                            return this._audio.loop;
                        },
                        function (t) {
                            this._audio.loop = t;
                        }),
                    a(0, s, "volume",
                        function () {
                            return this._audio ? this._audio.volume : 1;
                        },
                        function (t) {
                            this._audio && (this._audio.volume = t);
                        }),
                    e.bindToThis = function (t, e) {
                        return t.bind(e);
                    },
                    e;
            }();
    }(window, document, Laya),
    "function" == typeof define && define.amd && define("laya.core", ["require", "exports"],
        function (t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            for (var i in Laya) {
                var s = Laya[i];
                s && s.__isclass && (e[i] = s);
            }
        }),
    function (t, e, i) {
        i.un,
            i.uns;
        var s = i.static,
            n = i.class,
            a = i.getset,
            r = i.__newvec,
            o = laya.maths.Arith,
            h = laya.maths.Bezier,
            l = laya.resource.Bitmap,
            c = laya.utils.Browser,
            u = laya.utils.Byte,
            d = laya.utils.Color,
            _ = (laya.filters.ColorFilter, i.Config),
            p = laya.resource.Context,
            f = (laya.events.Event, laya.filters.Filter),
            m = laya.display.Graphics,
            g = laya.resource.HTMLCanvas,
            v = (laya.utils.HTMLChar, laya.resource.HTMLImage),
            y = laya.resource.HTMLSubImage,
            b = (laya.utils.Handler, laya.net.Loader, laya.maths.Matrix),
            x = laya.maths.Point,
            w = laya.maths.Rectangle,
            M = laya.renders.Render,
            S = (laya.renders.RenderContext, laya.renders.RenderSprite),
            C = laya.resource.Resource,
            T = laya.resource.ResourceManager,
            I = laya.utils.RunDriver,
            L = laya.display.Sprite,
            E = laya.display.Stage,
            A = laya.utils.Stat,
            R = laya.utils.StringKey,
            P = (laya.display.css.Style, laya.system.System),
            k = laya.display.Text,
            D = laya.resource.Texture,
            B = (laya.display.css.TransformInfo, laya.net.URL, laya.utils.Utils),
            N = laya.utils.VectorGraphManager;
        laya.utils.WordText;
        i.interface("laya.webgl.shapes.IShape"),
            i.interface("laya.webgl.submit.ISubmit"),
            i.interface("laya.webgl.text.ICharSegment"),
            i.interface("laya.webgl.canvas.save.ISaveData"),
            i.interface("laya.webgl.resource.IMergeAtlasBitmap"),
            i.interface("laya.filters.IFilterActionGL", "laya.filters.IFilterAction");
        var O = function () {
            function t() { }
            n(t, "laya.filters.webgl.FilterActionGL");
            var e = t.prototype;
            return i.imps(e, {
                "laya.filters.IFilterActionGL": !0
            }),
                e.setValue = function (t) { },
                e.setValueMix = function (t) { },
                e.apply3d = function (t, e, i, s, n) {
                    return null;
                },
                e.apply = function (t) {
                    return null;
                },
                a(0, e, "typeMix",
                    function () {
                        return 0;
                    }),
                t;
        }(),
            G = function () {
                function t() { }
                return n(t, "laya.webgl.shader.ShaderValue"),
                    t;
            }(),
            F = function () {
                function t(t, e, s) {
                    this._atlasID = 0,
                        this._width = 0,
                        this._height = 0,
                        this._texCount = 0,
                        this._rowInfo = null,
                        this._cells = null,
                        this._failSize = new i(),
                        void 0 === t && (t = 0),
                        void 0 === e && (e = 0),
                        void 0 === s && (s = 0),
                        this._cells = null,
                        this._rowInfo = null,
                        this._init(t, e),
                        this._atlasID = s;
                }
                var e, i;
                n(t, "laya.webgl.atlas.AtlasGrid");
                var s = t.prototype;
                return s.getAltasID = function () {
                    return this._atlasID;
                },
                    s.setAltasID = function (t) {
                        t >= 0 && (this._atlasID = t);
                    },
                    s.addTex = function (t, e, i) {
                        var s = this._get(e, i);
                        return 0 == s.ret ? s : (this._fill(s.x, s.y, e, i, t), this._texCount++ , s);
                    },
                    s._release = function () {
                        null != this._cells && (this._cells.length = 0, this._cells = null),
                            this._rowInfo && (this._rowInfo.length = 0, this._rowInfo = null);
                    },
                    s._init = function (t, i) {
                        if (this._width = t, this._height = i, this._release(), 0 == this._width) return !1;
                        this._cells = new Uint8Array(this._width * this._height * 3),
                            this._rowInfo = r(this._height);
                        for (var s = 0; s < this._height; s++) this._rowInfo[s] = new e();
                        return this._clear(),
                            !0;
                    },
                    s._get = function (t, e) {
                        var i = new W();
                        if (t >= this._failSize.width && e >= this._failSize.height) return i;
                        for (var s = -1,
                            n = -1,
                            a = this._width,
                            r = this._height,
                            o = this._cells,
                            h = 0; h < r; h++) if (!(this._rowInfo[h].spaceCount < t)) for (var l = 0; l < a;) {
                                var c = 3 * (h * a + l);
                                if (0 != o[c] || o[c + 1] < t || o[c + 2] < e) l += o[c + 1];
                                else {
                                    s = l,
                                        n = h;
                                    for (var u = 0; u < t; u++) if (o[3 * u + c + 2] < e) {
                                        s = -1;
                                        break;
                                    }
                                    if (!(s < 0)) return i.ret = !0,
                                        i.x = s,
                                        i.y = n,
                                        i;
                                    l += o[c + 1];
                                }
                            }
                        return i;
                    },
                    s._fill = function (t, e, i, s, n) {
                        var a = this._width,
                            r = this._height;
                        this._check(t + i <= a && e + s <= r);
                        for (var o = e; o < s + e; ++o) {
                            this._check(this._rowInfo[o].spaceCount >= i),
                                this._rowInfo[o].spaceCount -= i;
                            for (var h = 0; h < i; h++) {
                                var l = 3 * (t + o * a + h);
                                this._check(0 == this._cells[l]),
                                    this._cells[l] = n,
                                    this._cells[l + 1] = i,
                                    this._cells[l + 2] = s;
                            }
                        }
                        if (t > 0) for (o = 0; o < s; ++o) {
                            var c = 0;
                            for (h = t - 1; h >= 0 && 0 == this._cells[3 * ((e + o) * a + h)]; --h, ++c);
                            for (h = c; h > 0; --h) this._cells[3 * ((e + o) * a + t - h) + 1] = h,
                                this._check(h > 0);
                        }
                        if (e > 0) for (h = t; h < t + i; ++h) {
                            for (c = 0, o = e - 1; o >= 0 && 0 == this._cells[3 * (h + o * a)]; --o, c++);
                            for (o = c; o > 0; --o) this._cells[3 * (h + (e - o) * a) + 2] = o,
                                this._check(o > 0);
                        }
                    },
                    s._check = function (t) {
                        0 == t && console.log("xtexMerger 错误啦");
                    },
                    s._clear = function () {
                        this._texCount = 0;
                        for (var t = 0; t < this._height; t++) this._rowInfo[t].spaceCount = this._width;
                        for (var e = 0; e < this._height; e++) for (var i = 0; i < this._width; i++) {
                            var s = 3 * (e * this._width + i);
                            this._cells[s] = 0,
                                this._cells[s + 1] = this._width - i,
                                this._cells[s + 2] = this._width - e;
                        }
                        this._failSize.width = this._width + 1,
                            this._failSize.height = this._height + 1;
                    },
                    t.__init$ = function () {
                        e = function () {
                            function t() {
                                this.spaceCount = 0;
                            }
                            return n(t, ""),
                                t;
                        }(),
                            i = function () {
                                function t() {
                                    this.width = 0,
                                        this.height = 0;
                                }
                                return n(t, ""),
                                    t;
                            }();
                    },
                    t;
            }(),
            U = function () {
                function t(t, e, i, s) {
                    this._currentAtlasCount = 0,
                        this._maxAtlaserCount = 0,
                        this._width = 0,
                        this._height = 0,
                        this._gridSize = 0,
                        this._gridNumX = 0,
                        this._gridNumY = 0,
                        this._init = !1,
                        this._curAtlasIndex = 0,
                        this._setAtlasParam = !1,
                        this._atlaserArray = null,
                        this._needGC = !1,
                        this._setAtlasParam = !0,
                        this._width = t,
                        this._height = e,
                        this._gridSize = i,
                        this._maxAtlaserCount = s,
                        this._gridNumX = t / i,
                        this._gridNumY = e / i,
                        this._curAtlasIndex = 0,
                        this._atlaserArray = [];
                }
                n(t, "laya.webgl.atlas.AtlasResourceManager");
                var e = t.prototype;
                return e.setAtlasParam = function (e, i, s, n) {
                    if (1 == this._setAtlasParam) return t._sid_ = 0,
                        this._width = e,
                        this._height = i,
                        this._gridSize = s,
                        this._maxAtlaserCount = n,
                        this._gridNumX = e / s,
                        this._gridNumY = i / s,
                        this._curAtlasIndex = 0,
                        this.freeAll(),
                        !0;
                    throw console.log("设置大图合集参数错误，只能在开始页面设置各种参数"),
                    -1;
                },
                    e.pushData = function (e) {
                        var i = e.bitmap,
                            s = -1,
                            n = null,
                            a = 0,
                            r = 0,
                            o = 0;
                        for (a = 0, r = this._atlaserArray.length; a < r && (o = (this._curAtlasIndex + a) % r, n = this._atlaserArray[o], -1 == (s = n.findBitmapIsExist(i))); a++);
                        if (- 1 != s) {
                            var h = n.InAtlasWebGLImagesOffsetValue[s];
                            return f = h[0],
                                m = h[1],
                                n.addToAtlas(e, f, m),
                                !0;
                        }
                        this._setAtlasParam = !1;
                        for (var l = Math.ceil((e.bitmap.width + 2) / this._gridSize), c = Math.ceil((e.bitmap.height + 2) / this._gridSize), u = !1, d = 0; d < 2; d++) {
                            var _ = this._maxAtlaserCount;
                            for (a = 0; a < _; a++) {
                                o = (this._curAtlasIndex + a) % _,
                                    this._atlaserArray.length - 1 >= o || this._atlaserArray.push(new It(this._gridNumX, this._gridNumY, this._width, this._height, t._sid_++));
                                var p = this._atlaserArray[o],
                                    f = 0,
                                    m = 0,
                                    g = p.addTex(1, l, c);
                                if (g.ret) {
                                    f = g.x * this._gridSize + 1,
                                        m = g.y * this._gridSize + 1,
                                        i.lock = !0,
                                        p.addToAtlasTexture(i, f, m),
                                        p.addToAtlas(e, f, m),
                                        u = !0,
                                        this._curAtlasIndex = o;
                                    break;
                                }
                            }
                            if (u) break;
                            this._atlaserArray.push(new It(this._gridNumX, this._gridNumY, this._width, this._height, t._sid_++)),
                                this._needGC = !0,
                                this.garbageCollection(),
                                this._curAtlasIndex = this._atlaserArray.length - 1;
                        }
                        return u || console.log(">>>AtlasManager pushData error"),
                            u;
                    },
                    e.addToAtlas = function (t) {
                        laya.webgl.atlas.AtlasResourceManager.instance.pushData(t);
                    },
                    e.garbageCollection = function () {
                        if (!0 === this._needGC) {
                            for (var t = this._atlaserArray.length - this._maxAtlaserCount,
                                e = 0; e < t; e++) this._atlaserArray[e].dispose(),
                                    console.log("AtlasResourceManager:Dispose the inner Atlas。");
                            console.log(">>>>altas garbageCollection =" + t),
                                this._atlaserArray.splice(0, t),
                                this._needGC = !1;
                        }
                        return !0;
                    },
                    e.freeAll = function () {
                        for (var t = 0,
                            e = this._atlaserArray.length; t < e; t++) this._atlaserArray[t].dispose();
                        this._atlaserArray.length = 0,
                            this._curAtlasIndex = 0;
                    },
                    e.getAtlaserCount = function () {
                        return this._atlaserArray.length;
                    },
                    e.getAtlaserByIndex = function (t) {
                        return this._atlaserArray[t];
                    },
                    a(1, t, "instance",
                        function () {
                            return t._Instance || (t._Instance = new t(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth, laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight, 16, laya.webgl.atlas.AtlasResourceManager.maxTextureCount)),
                                t._Instance;
                        }),
                    a(1, t, "enabled",
                        function () {
                            return _.atlasEnable;
                        }),
                    a(1, t, "atlasLimitWidth",
                        function () {
                            return t._atlasLimitWidth;
                        },
                        function (e) {
                            t._atlasLimitWidth = e;
                        }),
                    a(1, t, "atlasLimitHeight",
                        function () {
                            return t._atlasLimitHeight;
                        },
                        function (e) {
                            t._atlasLimitHeight = e;
                        }),
                    t._enable = function () {
                        _.atlasEnable = !0;
                    },
                    t._disable = function () {
                        _.atlasEnable = !1;
                    },
                    t.__init__ = function () {
                        t.atlasTextureWidth = 2048,
                            t.atlasTextureHeight = 2048,
                            t.maxTextureCount = 6,
                            t.atlasLimitWidth = 512,
                            t.atlasLimitHeight = 512;
                    },
                    t._atlasLimitWidth = 0,
                    t._atlasLimitHeight = 0,
                    t.gridSize = 16,
                    t.atlasTextureWidth = 0,
                    t.atlasTextureHeight = 0,
                    t.maxTextureCount = 0,
                    t._atlasRestore = 0,
                    t.BOARDER_TYPE_NO = 0,
                    t.BOARDER_TYPE_RIGHT = 1,
                    t.BOARDER_TYPE_LEFT = 2,
                    t.BOARDER_TYPE_BOTTOM = 4,
                    t.BOARDER_TYPE_TOP = 8,
                    t.BOARDER_TYPE_ALL = 15,
                    t._sid_ = 0,
                    t._Instance = null,
                    t;
            }(),
            W = function () {
                function t() {
                    this.x = 0,
                        this.y = 0,
                        this.ret = !1,
                        this.ret = !1,
                        this.x = 0,
                        this.y = 0;
                }
                return n(t, "laya.webgl.atlas.MergeFillInfo"),
                    t;
            }(),
            X = function () {
                function t() { }
                return n(t, "laya.webgl.canvas.BlendMode"),
                    t._init_ = function (e) {
                        t.fns = [t.BlendNormal, t.BlendAdd, t.BlendMultiply, t.BlendScreen, t.BlendOverlay, t.BlendLight, t.BlendMask, t.BlendDestinationOut],
                            t.targetFns = [t.BlendNormalTarget, t.BlendAddTarget, t.BlendMultiplyTarget, t.BlendScreenTarget, t.BlendOverlayTarget, t.BlendLightTarget, t.BlendMask, t.BlendDestinationOut];
                    },
                    t.BlendNormal = function (t) {
                        t.blendFunc(1, 771);
                    },
                    t.BlendAdd = function (t) {
                        t.blendFunc(1, 772);
                    },
                    t.BlendMultiply = function (t) {
                        t.blendFunc(774, 771);
                    },
                    t.BlendScreen = function (t) {
                        t.blendFunc(1, 1);
                    },
                    t.BlendOverlay = function (t) {
                        t.blendFunc(1, 769);
                    },
                    t.BlendLight = function (t) {
                        t.blendFunc(1, 1);
                    },
                    t.BlendNormalTarget = function (t) {
                        t.blendFunc(1, 771);
                    },
                    t.BlendAddTarget = function (t) {
                        t.blendFunc(1, 772);
                    },
                    t.BlendMultiplyTarget = function (t) {
                        t.blendFunc(774, 771);
                    },
                    t.BlendScreenTarget = function (t) {
                        t.blendFunc(1, 1);
                    },
                    t.BlendOverlayTarget = function (t) {
                        t.blendFunc(1, 769);
                    },
                    t.BlendLightTarget = function (t) {
                        t.blendFunc(1, 1);
                    },
                    t.BlendMask = function (t) {
                        t.blendFunc(0, 770);
                    },
                    t.BlendDestinationOut = function (t) {
                        t.blendFunc(0, 0);
                    },
                    t.activeBlendFunction = null,
                    t.NAMES = ["normal", "add", "multiply", "screen", "overlay", "light", "mask", "destination-out"],
                    t.TOINT = {
                        normal: 0,
                        add: 1,
                        multiply: 2,
                        screen: 3,
                        lighter: 1,
                        overlay: 4,
                        light: 5,
                        mask: 6,
                        "destination-out": 7
                    },
                    t.NORMAL = "normal",
                    t.ADD = "add",
                    t.MULTIPLY = "multiply",
                    t.SCREEN = "screen",
                    t.LIGHT = "light",
                    t.OVERLAY = "overlay",
                    t.DESTINATIONOUT = "destination-out",
                    t.fns = [],
                    t.targetFns = [],
                    t;
            }(),
            z = function () {
                function t(t) {
                    this._color = d.create("black"),
                        this.setValue(t);
                }
                n(t, "laya.webgl.canvas.DrawStyle");
                var e = t.prototype;
                return e.setValue = function (t) {
                    if (t) {
                        if ("string" == typeof t) return void (this._color = d.create(t));
                        if (t instanceof laya.utils.Color) return void (this._color = t);
                    }
                },
                    e.reset = function () {
                        this._color = d.create("black");
                    },
                    e.equal = function (t) {
                        return "string" == typeof t ? this._color.strColor === t : t instanceof laya.utils.Color && this._color.numColor === t.numColor;
                    },
                    e.toColorStr = function () {
                        return this._color.strColor;
                    },
                    t.create = function (e) {
                        if (e) {
                            var i;
                            if ("string" == typeof e ? i = d.create(e) : e instanceof laya.utils.Color && (i = e), i) return i._drawStyle || (i._drawStyle = new t(e));
                        }
                        return laya.webgl.canvas.DrawStyle.DEFAULT;
                    },
                    s(t, ["DEFAULT",
                        function () {
                            return this.DEFAULT = new t("#000000");
                        }]),
                    t;
            }(),
            Y = function () {
                function t() {
                    this._x = 0,
                        this._y = 0,
                        this.dirty = !1,
                        this.offset = 0,
                        this.count = 0,
                        this.geoStart = 0,
                        this.tempArray = [],
                        this.closePath = !1,
                        this.geomatrys = [];
                    bt.mainContext;
                    this.ib = Zt.create(35048),
                        this.vb = Jt.create(5);
                }
                n(t, "laya.webgl.canvas.Path");
                var e = t.prototype;
                return e.addPoint = function (t, e) {
                    this.tempArray.push(t, e);
                },
                    e.getEndPointX = function () {
                        return this.tempArray[this.tempArray.length - 2];
                    },
                    e.getEndPointY = function () {
                        return this.tempArray[this.tempArray.length - 1];
                    },
                    e.polygon = function (t, e, i, s, n, a) {
                        var r;
                        return this.geomatrys.push(this._curGeomatry = r = new Rt(t, e, i, s, n, a)),
                            s || (r.fill = !1),
                            void 0 == a && (r.borderWidth = 0),
                            r;
                    },
                    e.setGeomtry = function (t) {
                        this.geomatrys.push(this._curGeomatry = t);
                    },
                    e.drawLine = function (t, e, i, s, n) {
                        var a;
                        return this.closePath ? this.geomatrys.push(this._curGeomatry = a = new At(t, e, i, s, n)) : this.geomatrys.push(this._curGeomatry = a = new Et(t, e, i, s, n)),
                            a.fill = !1,
                            a;
                    },
                    e.update = function () {
                        var t = this.ib._byteLength,
                            e = this.geomatrys.length;
                        this.offset = t;
                        for (var i = this.geoStart; i < e; i++) this.geomatrys[i].getData(this.ib, this.vb, this.vb._byteLength / 20);
                        this.geoStart = e,
                            this.count = (this.ib._byteLength - t) / ft.BYTES_PIDX;
                    },
                    e.reset = function () {
                        this.vb.clear(),
                            this.ib.clear(),
                            this.offset = this.count = this.geoStart = 0,
                            this.geomatrys.length = 0;
                    },
                    e.recover = function () {
                        this._curGeomatry = null,
                            this.vb.destory(),
                            this.vb = null,
                            this.ib.destory(),
                            this.ib = null;
                    },
                    t;
            }(),
            H = function () {
                function t() { }
                n(t, "laya.webgl.canvas.save.SaveBase");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.canvas.save.ISaveData": !0
                }),
                    e.isSaveMark = function () {
                        return !1;
                    },
                    e.restore = function (e) {
                        this._dataObj[this._valueName] = this._value,
                            t._cache[t._cache._length++] = this,
                            this._newSubmit && (e._curSubmit = at.RENDERBASE, e._renderKey = 0);
                    },
                    t._createArray = function () {
                        var t = [];
                        return t._length = 0,
                            t;
                    },
                    t._init = function () {
                        var e = t._namemap = {};
                        return e[1] = "ALPHA",
                            e[2] = "fillStyle",
                            e[8] = "font",
                            e[256] = "lineWidth",
                            e[512] = "strokeStyle",
                            e[8192] = "_mergeID",
                            e[1024] = e[2048] = e[4096] = [],
                            e[16384] = "textBaseline",
                            e[32768] = "textAlign",
                            e[65536] = "_nBlendType",
                            e[1048576] = "shader",
                            e[2097152] = "filters",
                            e;
                    },
                    t.save = function (e, i, s, n) {
                        if ((e._saveMark._saveuse & i) !== i) {
                            e._saveMark._saveuse |= i;
                            var a = t._cache,
                                r = a._length > 0 ? a[--a._length] : new t();
                            r._value = s[r._valueName = t._namemap[i]],
                                r._dataObj = s,
                                r._newSubmit = n;
                            var o = e._save;
                            o[o._length++] = r;
                        }
                    },
                    t._cache = laya.webgl.canvas.save.SaveBase._createArray(),
                    t._namemap = t._init(),
                    t;
            }(),
            V = function () {
                function t() {
                    this._clipRect = new w();
                }
                n(t, "laya.webgl.canvas.save.SaveClipRect");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.canvas.save.ISaveData": !0
                }),
                    e.isSaveMark = function () {
                        return !1;
                    },
                    e.restore = function (e) {
                        e._clipRect = this._clipSaveRect,
                            t._cache[t._cache._length++] = this,
                            this._submitScissor.submitLength = e._submits._length - this._submitScissor.submitIndex,
                            e._curSubmit = at.RENDERBASE,
                            e._renderKey = 0;
                    },
                    t.save = function (e, i) {
                        if (131072 != (131072 & e._saveMark._saveuse)) {
                            e._saveMark._saveuse |= 131072;
                            var s = t._cache,
                                n = s._length > 0 ? s[--s._length] : new t();
                            n._clipSaveRect = e._clipRect,
                                e._clipRect = n._clipRect.copyFrom(e._clipRect),
                                n._submitScissor = i;
                            var a = e._save;
                            a[a._length++] = n;
                        }
                    },
                    s(t, ["_cache",
                        function () {
                            return this._cache = H._createArray();
                        }]),
                    t;
            }(),
            K = function () {
                function t() {
                    this._contextX = 0,
                        this._contextY = 0,
                        this._clipRect = new w(),
                        this._rect = new w(),
                        this._matrix = new b();
                }
                n(t, "laya.webgl.canvas.save.SaveClipRectStencil");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.canvas.save.ISaveData": !0
                }),
                    e.isSaveMark = function () {
                        return !1;
                    },
                    e.restore = function (e) {
                        ct.restore(e, this._rect, this._saveMatrix, this._contextX, this._contextY),
                            e._clipRect = this._clipSaveRect,
                            e._curMat = this._saveMatrix,
                            e._x = this._contextX,
                            e._y = this._contextY,
                            t._cache[t._cache._length++] = this,
                            e._curSubmit = at.RENDERBASE;
                    },
                    t.save = function (e, i, s, n, a, r, o, h, l, c) {
                        if (262144 != (262144 & e._saveMark._saveuse)) {
                            e._saveMark._saveuse |= 262144;
                            var u = t._cache,
                                d = u._length > 0 ? u[--u._length] : new t();
                            d._clipSaveRect = e._clipRect,
                                d._clipRect.setTo(o, h, l, c),
                                e._clipRect = d._clipRect,
                                d._rect.x = s,
                                d._rect.y = n,
                                d._rect.width = a,
                                d._rect.height = r,
                                d._contextX = e._x,
                                d._contextY = e._y,
                                d._saveMatrix = e._curMat,
                                e._curMat.copyTo(d._matrix),
                                e._curMat = d._matrix,
                                d._submitStencil = i;
                            var _ = e._save;
                            _[_._length++] = d;
                        }
                    },
                    s(t, ["_cache",
                        function () {
                            return this._cache = H._createArray();
                        }]),
                    t;
            }(),
            q = function () {
                function t() {
                    this._saveuse = 0;
                }
                n(t, "laya.webgl.canvas.save.SaveMark");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.canvas.save.ISaveData": !0
                }),
                    e.isSaveMark = function () {
                        return !0;
                    },
                    e.restore = function (e) {
                        e._saveMark = this._preSaveMark,
                            t._no[t._no._length++] = this;
                    },
                    t.Create = function (e) {
                        var i = t._no,
                            s = i._length > 0 ? i[--i._length] : new t();
                        return s._saveuse = 0,
                            s._preSaveMark = e._saveMark,
                            e._saveMark = s,
                            s;
                    },
                    s(t, ["_no",
                        function () {
                            return this._no = H._createArray();
                        }]),
                    t;
            }(),
            $ = function () {
                function t() {
                    this._matrix = new b();
                }
                n(t, "laya.webgl.canvas.save.SaveTransform");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.canvas.save.ISaveData": !0
                }),
                    e.isSaveMark = function () {
                        return !1;
                    },
                    e.restore = function (e) {
                        e._curMat = this._savematrix,
                            t._no[t._no._length++] = this;
                    },
                    t.save = function (e) {
                        var i = e._saveMark;
                        if (2048 != (2048 & i._saveuse)) {
                            i._saveuse |= 2048;
                            var s = t._no,
                                n = s._length > 0 ? s[--s._length] : new t();
                            n._savematrix = e._curMat,
                                e._curMat = e._curMat.copyTo(n._matrix);
                            var a = e._save;
                            a[a._length++] = n;
                        }
                    },
                    s(t, ["_no",
                        function () {
                            return this._no = H._createArray();
                        }]),
                    t;
            }(),
            j = function () {
                function t() { }
                n(t, "laya.webgl.canvas.save.SaveTranslate");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.canvas.save.ISaveData": !0
                }),
                    e.isSaveMark = function () {
                        return !1;
                    },
                    e.restore = function (e) {
                        e._curMat;
                        e._x = this._x,
                            e._y = this._y,
                            t._no[t._no._length++] = this;
                    },
                    t.save = function (e) {
                        var i = t._no,
                            s = i._length > 0 ? i[--i._length] : new t();
                        s._x = e._x,
                            s._y = e._y;
                        var n = e._save;
                        n[n._length++] = s;
                    },
                    s(t, ["_no",
                        function () {
                            return this._no = H._createArray();
                        }]),
                    t;
            }(),
            Q = function () {
                function t() {
                    this.target = null,
                        this.repaint = !1,
                        this._width = NaN,
                        this._height = NaN,
                        this._sp = null,
                        this._clipRect = new w();
                }
                n(t, "laya.webgl.resource.RenderTargetMAX");
                var e = t.prototype;
                return e.setSP = function (t) {
                    this._sp = t;
                },
                    e.size = function (t, e) {
                        var s = this;
                        this._width !== t || this._height !== e ? (this.repaint = !0, this._width = t, this._height = e, this.target ? this.target.size(t, e) : this.target = Nt.create(t, e), this.target.hasListener("recovered") || this.target.on("recovered", this,
                            function (t) {
                                i.timer.callLater(s._sp, s._sp.repaint);
                            })) : this.target.size(t, e);
                    },
                    e._flushToTarget = function (t, e) {
                        if (!e._destroy) {
                            var i = vt.worldScissorTest,
                                s = vt.worldClipRect;
                            vt.worldClipRect = this._clipRect,
                                this._clipRect.x = this._clipRect.y = 0,
                                this._clipRect.width = this._width,
                                this._clipRect.height = this._height,
                                vt.worldScissorTest = !1,
                                bt.mainContext.disable(3089);
                            var n = vt.worldAlpha,
                                a = vt.worldMatrix4,
                                r = vt.worldMatrix,
                                o = vt.worldFilters,
                                h = vt.worldShaderDefines;
                            if (vt.worldMatrix = b.EMPTY, vt.restoreTempArray(), vt.worldMatrix4 = vt.TEMPMAT4_ARRAY, vt.worldAlpha = 1, vt.worldFilters = null, vt.worldShaderDefines = null, Bt.activeShader = null, e.start(), _.showCanvasMark ? e.clear(0, 1, 0, .3) : e.clear(0, 0, 0, 0), t.flush(), e.end(), Bt.activeShader = null, vt.worldAlpha = n, vt.worldMatrix4 = a, vt.worldMatrix = r, vt.worldFilters = o, vt.worldShaderDefines = h, vt.worldScissorTest = i, i) {
                                var l = vt.height - s.y - s.height;
                                bt.mainContext.scissor(s.x, l, s.width, s.height),
                                    bt.mainContext.enable(3089);
                            }
                            vt.worldClipRect = s;
                        }
                    },
                    e.flush = function (t) {
                        this.repaint && (this._flushToTarget(t, this.target), this.repaint = !1);
                    },
                    e.drawTo = function (t, e, i, s, n) {
                        t.drawTexture(this.target.getTexture(), e, i, s, n, 0, 0);
                    },
                    e.destroy = function () {
                        this.target && (this.target.destroy(), this.target = null, this._sp = null);
                    },
                    t;
            }(),
            Z = function () {
                function t() {
                    this.ALPHA = 1,
                        this.shaderType = 0,
                        this.defines = new Lt();
                }
                n(t, "laya.webgl.shader.d2.Shader2D");
                return t.prototype.destroy = function () {
                    this.defines = null,
                        this.filters = null,
                        this.glTexture = null,
                        this.strokeStyle = null,
                        this.fillStyle = null;
                },
                    t.__init__ = function () {
                        qt.addInclude("parts/ColorFilter_ps_uniform.glsl", "uniform vec4 colorAlpha;\nuniform mat4 colorMat;"),
                            qt.addInclude("parts/ColorFilter_ps_logic.glsl", "mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n"),
                            qt.addInclude("parts/GlowFilter_ps_uniform.glsl", "uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;"),
                            qt.addInclude("parts/GlowFilter_ps_logic.glsl", "const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;"),
                            qt.addInclude("parts/BlurFilter_ps_logic.glsl", "gl_FragColor =   blur();\ngl_FragColor.w*=alpha;"),
                            qt.addInclude("parts/BlurFilter_ps_uniform.glsl", "uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}"),
                            qt.addInclude("parts/ColorAdd_ps_uniform.glsl", "uniform vec4 colorAdd;\n"),
                            qt.addInclude("parts/ColorAdd_ps_logic.glsl", "gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;");
                        var t, e;
                        t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",
                            e = 'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',
                            qt.preCompile2D(0, 1, t, e, null),
                            t = "attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}",
                            e = 'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}',
                            qt.preCompile2D(0, 2, t, e, null),
                            t = "attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}",
                            e = "precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}",
                            qt.preCompile2D(0, 4, t, e, null),
                            t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",
                            e = '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',
                            qt.preCompile2D(0, 256, t, e, null),
                            t = "attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}",
                            e = "precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}",
                            qt.preCompile2D(0, 512, t, e, null);
                    },
                    t;
            }(),
            J = function () {
                function t(t, e, i) {
                    this._value = 0,
                        this._name2int = t,
                        this._int2name = e,
                        this._int2nameMap = i;
                }
                n(t, "laya.webgl.shader.ShaderDefines");
                var e = t.prototype;
                return e.add = function (t) {
                    return "string" == typeof t && (t = this._name2int[t]),
                        this._value |= t,
                        this._value;
                },
                    e.addInt = function (t) {
                        return this._value |= t,
                            this._value;
                    },
                    e.remove = function (t) {
                        return "string" == typeof t && (t = this._name2int[t]),
                            this._value &= ~t,
                            this._value;
                    },
                    e.isDefine = function (t) {
                        return (this._value & t) === t;
                    },
                    e.getValue = function () {
                        return this._value;
                    },
                    e.setValue = function (t) {
                        this._value = t;
                    },
                    e.toNameDic = function () {
                        var e = this._int2nameMap[this._value];
                        return e || t._toText(this._value, this._int2name, this._int2nameMap);
                    },
                    t._reg = function (t, e, i, s) {
                        i[t] = e,
                            s[e] = t;
                    },
                    t._toText = function (t, e, i) {
                        var s = i[t];
                        if (s) return s;
                        for (var n = {},
                            a = 1,
                            r = 0; r < 32 && !((a = 1 << r) > t); r++) if (t & a) {
                                var o = e[a];
                                o && (n[o] = "");
                            }
                        return i[t] = n,
                            n;
                    },
                    t._toInt = function (t, e) {
                        for (var i = t.split("."), s = 0, n = 0, a = i.length; n < a; n++) {
                            var r = e[i[n]];
                            if (!r) throw new Error("Defines to int err:" + t + "/" + i[n]);
                            s |= r;
                        }
                        return s;
                    },
                    t;
            }(),
            tt = function () {
                function t() {
                    this.mVBBuffer = null,
                        this.mIBBuffer = null,
                        this.mVBData = null,
                        this.mIBData = null,
                        this.mEleNum = 0,
                        this.mTexture = null,
                        this.transform = null,
                        this._vs = null,
                        this._ps = null,
                        this._indexStart = -1,
                        this._verticles = null,
                        this._uvs = null,
                        this._tempMatrix = new b();
                }
                n(t, "laya.webgl.shader.d2.skinAnishader.SkinMesh");
                var e = t.prototype;
                return e.init = function (e, i, s) {
                    if (i) this._vs = i;
                    else {
                        this._vs = [];
                        var n = e.width,
                            a = e.height;
                        this._vs.push(0, 0, 0, 0, 1, 1, 1, 1),
                            this._vs.push(n, 0, 1, 0, 1, 1, 1, 1),
                            this._vs.push(n, a, 1, 1, 1, 1, 1, 1),
                            this._vs.push(0, a, 0, 1, 1, 1, 1, 1);
                    }
                    s ? this._ps = s : (t._defaultPS || (t._defaultPS = []).push(0, 1, 3, 3, 1, 2), this._ps = t._defaultPS),
                        this.mVBData = new Float32Array(this._vs),
                        this.mIBData = new Uint16Array(this._ps.length),
                        this.mIBData.start = -1,
                        this.mEleNum = this._ps.length,
                        this.mTexture = e;
                },
                    e.init2 = function (t, e, i, s, n) {
                        this.transform && (this.transform = null),
                            i ? this._ps = i : (this._ps = [], this._ps.push(0, 1, 3, 3, 1, 2)),
                            this._verticles = s,
                            this._uvs = n,
                            this.mEleNum = this._ps.length,
                            this.mTexture = t,
                            (M.isConchNode || M.isConchApp) && (this._initMyData(), this.mVBData = new Float32Array(this._vs));
                    },
                    e._initMyData = function () {
                        var e = 0,
                            i = 0,
                            s = 4 * this._verticles.length;
                        this._vs = t._tempVS;
                        var n = !1;
                        if (M.isConchNode || M.isConchApp ? (this._vs.length = s, n = !0) : this._vs.length < s && (this._vs.length = s, n = !0), t._tVSLen = s, n) for (; e < s;) this._vs[e] = this._verticles[i],
                            this._vs[e + 1] = this._verticles[i + 1],
                            this._vs[e + 2] = this._uvs[i],
                            this._vs[e + 3] = this._uvs[i + 1],
                            this._vs[e + 4] = 1,
                            this._vs[e + 5] = 1,
                            this._vs[e + 6] = 1,
                            this._vs[e + 7] = 1,
                            e += 8,
                            i += 2;
                        else for (; e < s;) this._vs[e] = this._verticles[i],
                            this._vs[e + 1] = this._verticles[i + 1],
                            this._vs[e + 2] = this._uvs[i],
                            this._vs[e + 3] = this._uvs[i + 1],
                            e += 8,
                            i += 2;
                    },
                    e.getData2 = function (e, i, s) {
                        this.mVBBuffer = e,
                            this.mIBBuffer = i,
                            this._initMyData(),
                            e.appendEx2(this._vs, Float32Array, t._tVSLen, 4),
                            this._indexStart = i._byteLength;
                        var n; (n = t._tempIB).length < this._ps.length && (n.length = this._ps.length);
                        for (var a = 0,
                            r = this._ps.length; a < r; a++) n[a] = this._ps[a] + s;
                        i.appendEx2(n, Uint16Array, this._ps.length, 2);
                    },
                    e.getData = function (t, e, i) {
                        if (this.mVBBuffer = t, this.mIBBuffer = e, t.append(this.mVBData), this._indexStart = e._byteLength, this.mIBData.start != i) {
                            for (var s = 0,
                                n = this._ps.length; s < n; s++) this.mIBData[s] = this._ps[s] + i;
                            this.mIBData.start = i;
                        }
                        e.append(this.mIBData);
                    },
                    e.render = function (t, e, i) {
                        if (M.isWebGL && this.mTexture) {
                            t._renderKey = 0,
                                t._shader2D.glTexture = null,
                                et.getInstance().addSkinMesh(this);
                            var s = at.createShape(t, this.mIBBuffer, this.mVBBuffer, this.mEleNum, this._indexStart, St.create(512, 0));
                            this.transform || (this.transform = b.EMPTY),
                                this.transform.translate(e, i),
                                b.mul(this.transform, t._curMat, this._tempMatrix),
                                this.transform.translate(- e, -i);
                            var n = s.shaderValue,
                                a = n.u_mmat2 || vt.getMatrArray();
                            vt.mat2MatArray(this._tempMatrix, a),
                                n.textureHost = this.mTexture,
                                n.offsetX = 0,
                                n.offsetY = 0,
                                n.u_mmat2 = a,
                                n.ALPHA = t._shader2D.ALPHA,
                                t._submits[t._submits._length++] = s;
                        } else M.isConchApp && this.mTexture && (this.transform || (this.transform = b.EMPTY), t.setSkinMesh && t.setSkinMesh(e, i, this._ps, this.mVBData, this.mEleNum, 0, this.mTexture, this.transform));
                    },
                    t._tempVS = [],
                    t._tempIB = [],
                    t._defaultPS = null,
                    t._tVSLen = 0,
                    t;
            }(),
            et = function () {
                function t() {
                    this.ib = null,
                        this.vb = null;
                    bt.mainContext;
                    this.ib = Zt.create(35048),
                        this.vb = Jt.create(8);
                }
                n(t, "laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer");
                var e = t.prototype;
                return e.addSkinMesh = function (t) {
                    t.getData2(this.vb, this.ib, this.vb._byteLength / 32);
                },
                    e.reset = function () {
                        this.vb.clear(),
                            this.ib.clear();
                    },
                    t.getInstance = function () {
                        return t.instance = t.instance || new t();
                    },
                    t.instance = null,
                    t;
            }(),
            it = function () {
                function t(t, e, i, s, n, a, r, o, h) {
                    this.r0 = 0,
                        this.fill = !0,
                        this.r1 = Math.PI / 2,
                        void 0 === h && (h = 0),
                        this.x = t,
                        this.y = e,
                        this.width = i,
                        this.height = s,
                        this.edges = n,
                        this.color = a,
                        this.borderWidth = r,
                        this.borderColor = o;
                }
                n(t, "laya.webgl.shapes.BasePoly");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.shapes.IShape": !0
                }),
                    e.getData = function (t, e, i) { },
                    e.rebuild = function (t) { },
                    e.setMatrix = function (t) { },
                    e.needUpdate = function (t) {
                        return !0;
                    },
                    e.sector = function (t, e, i) {
                        var s = this.x,
                            n = this.y,
                            a = this.edges,
                            r = (this.r1 - this.r0) / a,
                            o = this.width,
                            h = this.height,
                            l = this.color,
                            c = (l >> 16 & 255) / 255,
                            u = (l >> 8 & 255) / 255,
                            d = (255 & l) / 255;
                        t.push(s, n, c, u, d);
                        for (var _ = 0; _ < a + 1; _++) t.push(s + Math.sin(r * _ + this.r0) * o, n + Math.cos(r * _ + this.r0) * h),
                            t.push(c, u, d);
                        for (_ = 0; _ < a; _++) e.push(i, i + _ + 1, i + _ + 2);
                    },
                    e.createLine2 = function (t, e, i, s, n, a) {
                        var r, o, h, l, c, u, d, _, p, f, m, g, v, y, b, x, w, M, S, C, T = t.concat(),
                            I = n,
                            L = this.borderColor,
                            E = (L >> 16 & 255) / 255,
                            A = (L >> 8 & 255) / 255,
                            R = (255 & L) / 255,
                            P = T.length / 2,
                            k = s,
                            D = i / 2;
                        h = T[0],
                            l = T[1],
                            f = h - (c = T[2]),
                            p = (p = -(l - (u = T[3]))) / (C = Math.sqrt(p * p + f * f)) * D,
                            f = f / C * D,
                            I.push(h - p + this.x, l - f + this.y, E, A, R, h + p + this.x, l + f + this.y, E, A, R);
                        for (var B = 1; B < P - 1; B++) h = T[2 * (B - 1)],
                            l = T[2 * (B - 1) + 1],
                            c = T[2 * B],
                            u = T[2 * B + 1],
                            d = T[2 * (B + 1)],
                            _ = T[2 * (B + 1) + 1],
                            f = h - c,
                            g = c - d,
                            b = (- (p = (p = -(l - u)) / (C = Math.sqrt(p * p + f * f)) * D) + h) * (- (f = f / C * D) + u) - (- p + c) * (- f + l),
                            M = (- (m = (m = -(u - _)) / (C = Math.sqrt(m * m + g * g)) * D) + d) * (- (g = g / C * D) + u) - (- m + c) * (- g + _),
                            S = (v = -f + l - (- f + u)) * (w = -m + c - (- m + d)) - (x = -g + _ - (- g + u)) * (y = -p + c - (- p + h)),
                            Math.abs(S) < .1 ? (S += 10.1, I.push(c - p + this.x, u - f + this.y, E, A, R, c + p + this.x, u + f + this.y, E, A, R)) : (((r = (y * M - w * b) / S) - c) * (r - c) + ((o = (x * b - v * M) / S) - u) + (o - u), I.push(r + this.x, o + this.y, E, A, R, c - (r - c) + this.x, u - (o - u) + this.y, E, A, R));
                        h = T[T.length - 4],
                            l = T[T.length - 3],
                            f = h - (c = T[T.length - 2]),
                            p = (p = -(l - (u = T[T.length - 1]))) / (C = Math.sqrt(p * p + f * f)) * D,
                            f = f / C * D,
                            I.push(c - p + this.x, u - f + this.y, E, A, R, c + p + this.x, u + f + this.y, E, A, R);
                        var N = a;
                        for (B = 1; B < N; B++) e.push(k + 2 * (B - 1), k + 2 * (B - 1) + 1, k + 2 * B + 1, k + 2 * B + 1, k + 2 * B, k + 2 * (B - 1));
                        return I;
                    },
                    e.createLine = function (t, e, i, s) {
                        var n = t.concat(),
                            a = t,
                            r = this.borderColor,
                            o = (r >> 16 & 255) / 255,
                            h = (r >> 8 & 255) / 255,
                            l = (255 & r) / 255;
                        n.splice(0, 5);
                        var c, u, d, _, p, f, m, g, v, y, b, x, w, M, S, C, T, I, L, E, A = n.length / 5,
                            R = s,
                            P = i / 2;
                        d = n[0],
                            _ = n[1],
                            y = d - (p = n[5]),
                            v = (v = -(_ - (f = n[6]))) / (E = Math.sqrt(v * v + y * y)) * P,
                            y = y / E * P,
                            a.push(d - v, _ - y, o, h, l, d + v, _ + y, o, h, l);
                        for (var k = 1; k < A - 1; k++) d = n[5 * (k - 1)],
                            _ = n[5 * (k - 1) + 1],
                            p = n[5 * k],
                            f = n[5 * k + 1],
                            m = n[5 * (k + 1)],
                            g = n[5 * (k + 1) + 1],
                            y = d - p,
                            x = p - m,
                            S = (- (v = (v = -(_ - f)) / (E = Math.sqrt(v * v + y * y)) * P) + d) * (- (y = y / E * P) + f) - (- v + p) * (- y + _),
                            I = (- (b = (b = -(f - g)) / (E = Math.sqrt(b * b + x * x)) * P) + m) * (- (x = x / E * P) + f) - (- b + p) * (- x + g),
                            L = (w = -y + _ - (- y + f)) * (T = -b + p - (- b + m)) - (C = -x + g - (- x + f)) * (M = -v + p - (- v + d)),
                            Math.abs(L) < .1 ? (L += 10.1, a.push(p - v, f - y, o, h, l, p + v, f + y, o, h, l)) : (((c = (M * I - T * S) / L) - p) * (c - p) + ((u = (C * S - w * I) / L) - f) + (u - f), a.push(c, u, o, h, l, p - (c - p), f - (u - f), o, h, l));
                        d = n[n.length - 10],
                            _ = n[n.length - 9],
                            y = d - (p = n[n.length - 5]),
                            v = (v = -(_ - (f = n[n.length - 4]))) / (E = Math.sqrt(v * v + y * y)) * P,
                            y = y / E * P,
                            a.push(p - v, f - y, o, h, l, p + v, f + y, o, h, l);
                        var D = this.edges + 1;
                        for (k = 1; k < D; k++) e.push(R + 2 * (k - 1), R + 2 * (k - 1) + 1, R + 2 * k + 1, R + 2 * k + 1, R + 2 * k, R + 2 * (k - 1));
                        return a;
                    },
                    e.createLoopLine = function (t, e, i, s, n, a) {
                        var r = t.concat(),
                            o = n || t,
                            h = this.borderColor,
                            l = (h >> 16 & 255) / 255,
                            c = (h >> 8 & 255) / 255,
                            u = (255 & h) / 255;
                        r.splice(0, 5);
                        var d = [r[0], r[1]],
                            _ = [r[r.length - 5], r[r.length - 4]],
                            p = _[0] + .5 * (d[0] - _[0]),
                            f = _[1] + .5 * (d[1] - _[1]);
                        r.unshift(p, f, 0, 0, 0),
                            r.push(p, f, 0, 0, 0);
                        var m, g, v, y, b, x, w, M, S, C, T, I, L, E, A, R, P, k, D, B, N = r.length / 5,
                            O = s,
                            G = i / 2;
                        v = r[0],
                            y = r[1],
                            C = v - (b = r[5]),
                            S = (S = -(y - (x = r[6]))) / (B = Math.sqrt(S * S + C * C)) * G,
                            C = C / B * G,
                            o.push(v - S, y - C, l, c, u, v + S, y + C, l, c, u);
                        for (var F = 1; F < N - 1; F++) v = r[5 * (F - 1)],
                            y = r[5 * (F - 1) + 1],
                            b = r[5 * F],
                            x = r[5 * F + 1],
                            w = r[5 * (F + 1)],
                            M = r[5 * (F + 1) + 1],
                            C = v - b,
                            I = b - w,
                            A = (- (S = (S = -(y - x)) / (B = Math.sqrt(S * S + C * C)) * G) + v) * (- (C = C / B * G) + x) - (- S + b) * (- C + y),
                            k = (- (T = (T = -(x - M)) / (B = Math.sqrt(T * T + I * I)) * G) + w) * (- (I = I / B * G) + x) - (- T + b) * (- I + M),
                            D = (L = -C + y - (- C + x)) * (P = -T + b - (- T + w)) - (R = -I + M - (- I + x)) * (E = -S + b - (- S + v)),
                            Math.abs(D) < .1 ? (D += 10.1, o.push(b - S, x - C, l, c, u, b + S, x + C, l, c, u)) : (((m = (E * k - P * A) / D) - b) * (m - b) + ((g = (R * A - L * k) / D) - x) + (g - x), o.push(m, g, l, c, u, b - (m - b), x - (g - x), l, c, u));
                        a && (e = a);
                        var U = this.edges + 1;
                        for (F = 1; F < U; F++) e.push(O + 2 * (F - 1), O + 2 * (F - 1) + 1, O + 2 * F + 1, O + 2 * F + 1, O + 2 * F, O + 2 * (F - 1));
                        return e.push(O + 2 * (F - 1), O + 2 * (F - 1) + 1, O + 1, O + 1, O, O + 2 * (F - 1)),
                            o;
                    },
                    t;
            }(),
            st = function () {
                function t() { }
                return n(t, "laya.webgl.shapes.Earcut"),
                    t.earcut = function (e, i, s) {
                        s = s || 2;
                        var n = i && i.length,
                            a = n ? i[0] * s : e.length,
                            r = t.linkedList(e, 0, a, s, !0),
                            o = [];
                        if (!r) return o;
                        var h, l, c, u, d, _, p;
                        if (n && (r = t.eliminateHoles(e, i, r, s)), e.length > 80 * s) {
                            h = c = e[0],
                                l = u = e[1];
                            for (var f = s; f < a; f += s) d = e[f],
                                _ = e[f + 1],
                                d < h && (h = d),
                                _ < l && (l = _),
                                d > c && (c = d),
                                _ > u && (u = _);
                            p = 0 !== (p = Math.max(c - h, u - l)) ? 1 / p : 0;
                        }
                        return t.earcutLinked(r, o, s, h, l, p),
                            o;
                    },
                    t.linkedList = function (e, i, s, n, a) {
                        var r, o;
                        if (a === t.signedArea(e, i, s, n) > 0) for (r = i; r < s; r += n) o = t.insertNode(r, e[r], e[r + 1], o);
                        else for (r = s - n; r >= i; r -= n) o = t.insertNode(r, e[r], e[r + 1], o);
                        return o && t.equals(o, o.next) && (t.removeNode(o), o = o.next),
                            o;
                    },
                    t.filterPoints = function (e, i) {
                        if (!e) return e;
                        i || (i = e);
                        var s, n = e;
                        do {
                            if (s = !1, n.steiner || !t.equals(n, n.next) && 0 !== t.area(n.prev, n, n.next)) n = n.next;
                            else {
                                if (t.removeNode(n), (n = i = n.prev) === n.next) break;
                                s = !0;
                            }
                        } while (s || n !== i);
                        return i;
                    },
                    t.earcutLinked = function (e, i, s, n, a, r, o) {
                        if (e) {
                            !o && r && t.indexCurve(e, n, a, r);
                            for (var h, l, c = e; e.prev !== e.next;) if (h = e.prev, l = e.next, r ? t.isEarHashed(e, n, a, r) : t.isEar(e)) i.push(h.i / s),
                                i.push(e.i / s),
                                i.push(l.i / s),
                                t.removeNode(e),
                                e = l.next,
                                c = l.next;
                            else if ((e = l) === c) {
                                o ? 1 === o ? (e = t.cureLocalIntersections(e, i, s), t.earcutLinked(e, i, s, n, a, r, 2)) : 2 === o && t.splitEarcut(e, i, s, n, a, r) : t.earcutLinked(t.filterPoints(e, null), i, s, n, a, r, 1);
                                break;
                            }
                        }
                    },
                    t.isEar = function (e) {
                        var i = e.prev,
                            s = e,
                            n = e.next;
                        if (t.area(i, s, n) >= 0) return !1;
                        for (var a = e.next.next; a !== e.prev;) {
                            if (t.pointInTriangle(i.x, i.y, s.x, s.y, n.x, n.y, a.x, a.y) && t.area(a.prev, a, a.next) >= 0) return !1;
                            a = a.next;
                        }
                        return !0;
                    },
                    t.isEarHashed = function (e, i, s, n) {
                        var a = e.prev,
                            r = e,
                            o = e.next;
                        if (t.area(a, r, o) >= 0) return !1;
                        for (var h = a.x < r.x ? a.x < o.x ? a.x : o.x : r.x < o.x ? r.x : o.x, l = a.y < r.y ? a.y < o.y ? a.y : o.y : r.y < o.y ? r.y : o.y, c = a.x > r.x ? a.x > o.x ? a.x : o.x : r.x > o.x ? r.x : o.x, u = a.y > r.y ? a.y > o.y ? a.y : o.y : r.y > o.y ? r.y : o.y, d = t.zOrder(h, l, i, s, n), _ = t.zOrder(c, u, i, s, n), p = e.nextZ; p && p.z <= _;) {
                            if (p !== e.prev && p !== e.next && t.pointInTriangle(a.x, a.y, r.x, r.y, o.x, o.y, p.x, p.y) && t.area(p.prev, p, p.next) >= 0) return !1;
                            p = p.nextZ;
                        }
                        for (p = e.prevZ; p && p.z >= d;) {
                            if (p !== e.prev && p !== e.next && t.pointInTriangle(a.x, a.y, r.x, r.y, o.x, o.y, p.x, p.y) && t.area(p.prev, p, p.next) >= 0) return !1;
                            p = p.prevZ;
                        }
                        return !0;
                    },
                    t.cureLocalIntersections = function (e, i, s) {
                        var n = e;
                        do {
                            var a = n.prev,
                                r = n.next.next; !t.equals(a, r) && t.intersects(a, n, n.next, r) && t.locallyInside(a, r) && t.locallyInside(r, a) && (i.push(a.i / s), i.push(n.i / s), i.push(r.i / s), t.removeNode(n), t.removeNode(n.next), n = e = r), n = n.next;
                        } while (n !== e);
                        return n;
                    },
                    t.splitEarcut = function (e, i, s, n, a, r) {
                        var o = e;
                        do {
                            for (var h = o.next.next; h !== o.prev;) {
                                if (o.i !== h.i && t.isValidDiagonal(o, h)) {
                                    var l = t.splitPolygon(o, h);
                                    return o = t.filterPoints(o, o.next),
                                        l = t.filterPoints(l, l.next),
                                        t.earcutLinked(o, i, s, n, a, r),
                                        void t.earcutLinked(l, i, s, n, a, r);
                                }
                                h = h.next;
                            }
                            o = o.next;
                        } while (o !== e);
                    },
                    t.eliminateHoles = function (e, i, s, n) {
                        var a, r, o, h, l, c = [];
                        for (a = 0, r = i.length; a < r; a++) o = i[a] * n,
                            h = a < r - 1 ? i[a + 1] * n : e.length,
                            (l = t.linkedList(e, o, h, n, !1)) === l.next && (l.steiner = !0),
                            c.push(t.getLeftmost(l));
                        for (c.sort(t.compareX), a = 0; a < c.length; a++) t.eliminateHole(c[a], s),
                            s = t.filterPoints(s, s.next);
                        return s;
                    },
                    t.compareX = function (t, e) {
                        return t.x - e.x;
                    },
                    t.eliminateHole = function (e, i) {
                        if (i = t.findHoleBridge(e, i)) {
                            var s = t.splitPolygon(i, e);
                            t.filterPoints(s, s.next);
                        }
                    },
                    t.findHoleBridge = function (e, i) {
                        var s, n = i,
                            a = e.x,
                            r = e.y,
                            o = -1 / 0;
                        do {
                            if (r <= n.y && r >= n.next.y && n.next.y !== n.y) {
                                var h = n.x + (r - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
                                if (h <= a && h > o) {
                                    if (o = h, h === a) {
                                        if (r === n.y) return n;
                                        if (r === n.next.y) return n.next;
                                    }
                                    s = n.x < n.next.x ? n : n.next;
                                }
                            }
                            n = n.next;
                        } while (n !== i);
                        if (!s) return null;
                        if (a === o) return s.prev;
                        var l, c = s,
                            u = s.x,
                            d = s.y,
                            _ = 1 / 0;
                        for (n = s.next; n !== c;) a >= n.x && n.x >= u && a !== n.x && t.pointInTriangle(r < d ? a : o, r, u, d, r < d ? o : a, r, n.x, n.y) && ((l = Math.abs(r - n.y) / (a - n.x)) < _ || l === _ && n.x > s.x) && t.locallyInside(n, e) && (s = n, _ = l),
                            n = n.next;
                        return s;
                    },
                    t.indexCurve = function (e, i, s, n) {
                        var a = e;
                        do {
                            null === a.z && (a.z = t.zOrder(a.x, a.y, i, s, n)), a.prevZ = a.prev, a.nextZ = a.next, a = a.next;
                        } while (a !== e);
                        a.prevZ.nextZ = null,
                            a.prevZ = null,
                            t.sortLinked(a);
                    },
                    t.sortLinked = function (t) {
                        var e, i, s, n, a, r, o, h, l = 1;
                        do {
                            for (i = t, t = null, a = null, r = 0; i;) {
                                for (r++ , s = i, o = 0, e = 0; e < l && (o++ , s = s.nextZ); e++);
                                for (h = l; o > 0 || h > 0 && s;) 0 !== o && (0 === h || !s || i.z <= s.z) ? (n = i, i = i.nextZ, o--) : (n = s, s = s.nextZ, h--),
                                    a ? a.nextZ = n : t = n,
                                    n.prevZ = a,
                                    a = n;
                                i = s;
                            }
                            a.nextZ = null, l *= 2;
                        } while (r > 1);
                        return t;
                    },
                    t.zOrder = function (t, e, i, s, n) {
                        return t = 32767 * (t - i) * n,
                            e = 32767 * (e - s) * n,
                            t = 16711935 & (t | t << 8),
                            t = 252645135 & (t | t << 4),
                            t = 858993459 & (t | t << 2),
                            t = 1431655765 & (t | t << 1),
                            e = 16711935 & (e | e << 8),
                            e = 252645135 & (e | e << 4),
                            e = 858993459 & (e | e << 2),
                            e = 1431655765 & (e | e << 1),
                            t | e << 1;
                    },
                    t.getLeftmost = function (t) {
                        var e = t,
                            i = t;
                        do {
                            e.x < i.x && (i = e), e = e.next;
                        } while (e !== t);
                        return i;
                    },
                    t.pointInTriangle = function (t, e, i, s, n, a, r, o) {
                        return (n - r) * (e - o) - (t - r) * (a - o) >= 0 && (t - r) * (s - o) - (i - r) * (e - o) >= 0 && (i - r) * (a - o) - (n - r) * (s - o) >= 0;
                    },
                    t.isValidDiagonal = function (e, i) {
                        return e.next.i !== i.i && e.prev.i !== i.i && !t.intersectsPolygon(e, i) && t.locallyInside(e, i) && t.locallyInside(i, e) && t.middleInside(e, i);
                    },
                    t.area = function (t, e, i) {
                        return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y);
                    },
                    t.equals = function (t, e) {
                        return t.x === e.x && t.y === e.y;
                    },
                    t.intersects = function (e, i, s, n) {
                        return !!(t.equals(e, i) && t.equals(s, n) || t.equals(e, n) && t.equals(s, i)) || t.area(e, i, s) > 0 != t.area(e, i, n) > 0 && t.area(s, n, e) > 0 != t.area(s, n, i) > 0;
                    },
                    t.intersectsPolygon = function (e, i) {
                        var s = e;
                        do {
                            if (s.i !== e.i && s.next.i !== e.i && s.i !== i.i && s.next.i !== i.i && t.intersects(s, s.next, e, i)) return !0;
                            s = s.next;
                        } while (s !== e);
                        return !1;
                    },
                    t.locallyInside = function (e, i) {
                        return t.area(e.prev, e, e.next) < 0 ? t.area(e, i, e.next) >= 0 && t.area(e, e.prev, i) >= 0 : t.area(e, i, e.prev) < 0 || t.area(e, e.next, i) < 0;
                    },
                    t.middleInside = function (t, e) {
                        var i = t,
                            s = !1,
                            n = (t.x + e.x) / 2,
                            a = (t.y + e.y) / 2;
                        do {
                            i.y > a != i.next.y > a && i.next.y !== i.y && n < (i.next.x - i.x) * (a - i.y) / (i.next.y - i.y) + i.x && (s = !s), i = i.next;
                        } while (i !== t);
                        return s;
                    },
                    t.splitPolygon = function (t, e) {
                        var i = new nt(t.i, t.x, t.y),
                            s = new nt(e.i, e.x, e.y),
                            n = t.next,
                            a = e.prev;
                        return t.next = e,
                            e.prev = t,
                            i.next = n,
                            n.prev = i,
                            s.next = i,
                            i.prev = s,
                            a.next = s,
                            s.prev = a,
                            s;
                    },
                    t.insertNode = function (t, e, i, s) {
                        var n = new nt(t, e, i);
                        return s ? (n.next = s.next, n.prev = s, s.next.prev = n, s.next = n) : (n.prev = n, n.next = n),
                            n;
                    },
                    t.removeNode = function (t) {
                        t.next.prev = t.prev,
                            t.prev.next = t.next,
                            t.prevZ && (t.prevZ.nextZ = t.nextZ),
                            t.nextZ && (t.nextZ.prevZ = t.prevZ);
                    },
                    t.signedArea = function (t, e, i, s) {
                        for (var n = 0,
                            a = e,
                            r = i - s; a < i; a += s) n += (t[r] - t[a]) * (t[a + 1] + t[r + 1]),
                                r = a;
                        return n;
                    },
                    t;
            }(),
            nt = function () {
                function t(t, e, i) {
                    this.i = null,
                        this.x = null,
                        this.y = null,
                        this.prev = null,
                        this.next = null,
                        this.z = null,
                        this.prevZ = null,
                        this.nextZ = null,
                        this.steiner = null,
                        this.i = t,
                        this.x = e,
                        this.y = i,
                        this.prev = null,
                        this.next = null,
                        this.z = null,
                        this.prevZ = null,
                        this.nextZ = null,
                        this.steiner = !1;
                }
                return n(t, "laya.webgl.shapes.EarcutNode"),
                    t;
            }(),
            at = (function () {
                function t(t, e, i, s, n, a, r) {
                    this.lineWidth = t,
                        this.lineColor = e,
                        this.lineAlpha = i,
                        this.fillColor = s,
                        this.fillAlpha = n,
                        this.shape = r,
                        this.fill = a;
                }
                n(t, "laya.webgl.shapes.GeometryData");
                var e = t.prototype;
                e.clone = function () {
                    return new t(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.fill, this.shape);
                },
                    e.getIndexData = function () {
                        return null;
                    },
                    e.getVertexData = function () {
                        return null;
                    },
                    e.destroy = function () {
                        this.shape = null;
                    };
            }(),
                function () {
                    function t(t) {
                        if (t instanceof Float32Array) this.points = t;
                        else if (t instanceof Array) {
                            t.length;
                            this.points = new Float32Array(t);
                        }
                    }
                    n(t, "laya.webgl.shapes.Vertex");
                    var e = t.prototype;
                    i.imps(e, {
                        "laya.webgl.shapes.IShape": !0
                    }),
                        e.getData = function (t, e, i) { },
                        e.needUpdate = function (t) {
                            return !1;
                        },
                        e.rebuild = function (t) { },
                        e.setMatrix = function (t) { };
                }(),
                function () {
                    function t(t) {
                        void 0 === t && (t = 1e4),
                            this._renderType = t;
                    }
                    n(t, "laya.webgl.submit.Submit");
                    var e = t.prototype;
                    return i.imps(e, {
                        "laya.webgl.submit.ISubmit": !0
                    }),
                        e.releaseRender = function () {
                            var e = t._cache;
                            e[e._length++] = this,
                                this.shaderValue.release(),
                                this._vb = null;
                        },
                        e.getRenderType = function () {
                            return this._renderType;
                        },
                        e.renderSubmit = function () {
                            if (0 === this._numEle) return 1;
                            var t = this.shaderValue.textureHost;
                            if (t) {
                                var e = t.source;
                                if (!t.bitmap || !e) return 1;
                                this.shaderValue.texture = e;
                            }
                            this._vb.bind_upload(this._ib);
                            var i = bt.mainContext;
                            return this.shaderValue.upload(),
                                X.activeBlendFunction !== this._blendFn && (i.enable(3042), this._blendFn(i), X.activeBlendFunction = this._blendFn),
                                A.drawCall++ ,
                                A.trianglesFaces += this._numEle / 3,
                                i.drawElements(4, this._numEle, 5123, this._startIdx),
                                1;
                        },
                        t.__init__ = function () {
                            var e = t.RENDERBASE = new t(- 1);
                            e.shaderValue = new St(0, 0),
                                e.shaderValue.ALPHA = -1234;
                        },
                        t.createSubmit = function (e, i, s, n, a) {
                            var r = t._cache._length ? t._cache[--t._cache._length] : new t();
                            null == s && ((s = r._selfVb || (r._selfVb = Jt.create(- 1))).clear(), n = 0),
                                r._ib = i,
                                r._vb = s,
                                r._startIdx = n * ft.BYTES_PIDX,
                                r._numEle = 0;
                            var o = e._nBlendType;
                            r._blendFn = e._targets ? X.targetFns[o] : X.fns[o],
                                r.shaderValue = a,
                                r.shaderValue.setValue(e._shader2D);
                            var h = e._shader2D.filters;
                            return h && r.shaderValue.setFilters(h),
                                r;
                        },
                        t.createShape = function (e, i, s, n, a, r) {
                            var o = t._cache._length ? t._cache[--t._cache._length] : new t();
                            o._ib = i,
                                o._vb = s,
                                o._numEle = n,
                                o._startIdx = a,
                                o.shaderValue = r,
                                o.shaderValue.setValue(e._shader2D);
                            var h = e._nBlendType;
                            return o._blendFn = e._targets ? X.targetFns[h] : X.fns[h],
                                o;
                        },
                        t.TYPE_2D = 1e4,
                        t.TYPE_CANVAS = 10003,
                        t.TYPE_CMDSETRT = 10004,
                        t.TYPE_CUSTOM = 10005,
                        t.TYPE_BLURRT = 10006,
                        t.TYPE_CMDDESTORYPRERT = 10007,
                        t.TYPE_DISABLESTENCIL = 10008,
                        t.TYPE_OTHERIBVB = 10009,
                        t.TYPE_PRIMITIVE = 10010,
                        t.TYPE_RT = 10011,
                        t.TYPE_BLUR_RT = 10012,
                        t.TYPE_TARGET = 10013,
                        t.TYPE_CHANGE_VALUE = 10014,
                        t.TYPE_SHAPE = 10015,
                        t.TYPE_TEXTURE = 10016,
                        t.TYPE_FILLTEXTURE = 10017,
                        t.RENDERBASE = null,
                        t._cache = (t._cache = [], t._cache._length = 0, t._cache),
                        t;
                }()),
            rt = function () {
                function t() {
                    this.fun = null,
                        this.args = null;
                }
                n(t, "laya.webgl.submit.SubmitCMD");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.submit.ISubmit": !0
                }),
                    e.renderSubmit = function () {
                        return this.fun.apply(null, this.args),
                            1;
                    },
                    e.getRenderType = function () {
                        return 0;
                    },
                    e.releaseRender = function () {
                        var e = t._cache;
                        e[e._length++] = this;
                    },
                    t.create = function (e, i) {
                        var s = t._cache._length ? t._cache[--t._cache._length] : new t();
                        return s.fun = i,
                            s.args = e,
                            s;
                    },
                    t._cache = (t._cache = [], t._cache._length = 0, t._cache),
                    t;
            }(),
            ot = function () {
                function t() {
                    this.variables = {};
                }
                n(t, "laya.webgl.submit.SubmitCMDScope");
                var e = t.prototype;
                return e.getValue = function (t) {
                    return this.variables[t];
                },
                    e.addValue = function (t, e) {
                        return this.variables[t] = e;
                    },
                    e.setValue = function (t, e) {
                        return this.variables.hasOwnProperty(t) ? this.variables[t] = e : null;
                    },
                    e.clear = function () {
                        for (var t in this.variables) delete this.variables[t];
                    },
                    e.recycle = function () {
                        this.clear(),
                            t.POOL.push(this);
                    },
                    t.create = function () {
                        var e = t.POOL.pop();
                        return e || (e = new t()),
                            e;
                    },
                    t.POOL = [],
                    t;
            }(),
            ht = function () {
                function t() {
                    this.offset = 0,
                        this.startIndex = 0,
                        this._mat = b.create();
                }
                n(t, "laya.webgl.submit.SubmitOtherIBVB");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.submit.ISubmit": !0
                }),
                    e.releaseRender = function () {
                        var e = t._cache;
                        e[e._length++] = this;
                    },
                    e.getRenderType = function () {
                        return 10009;
                    },
                    e.renderSubmit = function () {
                        var e = this._shaderValue.textureHost;
                        if (e) {
                            var i = e.source;
                            if (!e.bitmap || !i) return 1;
                            this._shaderValue.texture = i;
                        }
                        this._vb.bind_upload(this._ib);
                        var s = vt.worldMatrix4,
                            n = b.TEMP;
                        b.mulPre(this._mat, s[0], s[1], s[4], s[5], s[12], s[13], n);
                        var a = vt.worldMatrix4 = t.tempMatrix4;
                        a[0] = n.a,
                            a[1] = n.b,
                            a[4] = n.c,
                            a[5] = n.d,
                            a[12] = n.tx,
                            a[13] = n.ty,
                            this._shader._offset = this.offset,
                            this._shaderValue.refresh(),
                            this._shader.upload(this._shaderValue),
                            this._shader._offset = 0;
                        var r = bt.mainContext;
                        return X.activeBlendFunction !== this._blendFn && (r.enable(3042), this._blendFn(r), X.activeBlendFunction = this._blendFn),
                            A.drawCall++ ,
                            A.trianglesFaces += this._numEle / 3,
                            r.drawElements(4, this._numEle, 5123, this.startIndex),
                            vt.worldMatrix4 = s,
                            Bt.activeShader = null,
                            1;
                    },
                    t.create = function (e, i, s, n, a, r, o, h, l) {
                        void 0 === l && (l = 0);
                        var c = t._cache._length ? t._cache[--t._cache._length] : new t();
                        c._ib = s,
                            c._vb = i,
                            c._numEle = n,
                            c._shader = a,
                            c._shaderValue = r;
                        var u = e._nBlendType;
                        switch (c._blendFn = e._targets ? X.targetFns[u] : X.fns[u], l) {
                            case 0:
                                c.offset = 0,
                                    c.startIndex = h / (ft.BYTES_PE * i.vertexStride) * 1.5,
                                    c.startIndex *= ft.BYTES_PIDX;
                                break;

                            case 1:
                                c.startIndex = o,
                                    c.offset = h;
                        }
                        return c;
                    },
                    t._cache = (t._cache = [], t._cache._length = 0, t._cache),
                    t.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                    t;
            }(),
            lt = function () {
                function t() {
                    this.submitIndex = 0,
                        this.submitLength = 0,
                        this.context = null,
                        this.clipRect = new w(),
                        this.screenRect = new w();
                }
                n(t, "laya.webgl.submit.SubmitScissor");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.submit.ISubmit": !0
                }),
                    e._scissor = function (t, e, i, s) {
                        var n = vt.worldMatrix4,
                            a = n[0],
                            r = n[5];
                        if (t = t * a + n[12], e = e * r + n[13], i *= a, s *= r, i < 1 || s < 1) return !1;
                        var o = t + i,
                            h = e + s;
                        t < 0 && (t = 0, i = o - t),
                            e < 0 && (e = 0, s = h - e);
                        var l = vt.worldClipRect;
                        if (t = Math.max(t, l.x), e = Math.max(e, l.y), i = Math.min(o, l.right) - t, s = Math.min(h, l.bottom) - e, i < 1 || s < 1) return !1;
                        var c = vt.worldScissorTest;
                        return this.screenRect.copyFrom(l),
                            l.x = t,
                            l.y = e,
                            l.width = i,
                            l.height = s,
                            vt.worldScissorTest = !0,
                            e = vt.height - e - s,
                            bt.mainContext.scissor(t, e, i, s),
                            bt.mainContext.enable(3089),
                            this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength),
                            c ? (e = vt.height - this.screenRect.y - this.screenRect.height, bt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height), bt.mainContext.enable(3089)) : (bt.mainContext.disable(3089), vt.worldScissorTest = !1),
                            l.copyFrom(this.screenRect),
                            !0;
                    },
                    e._scissorWithTagart = function (t, e, i, s) {
                        if (i < 1 || s < 1) return !1;
                        var n = t + i,
                            a = e + s;
                        t < 0 && (t = 0, i = n - t),
                            e < 0 && (e = 0, s = a - e);
                        var r = vt.worldClipRect;
                        if (t = Math.max(t, r.x), e = Math.max(e, r.y), i = Math.min(n, r.right) - t, s = Math.min(a, r.bottom) - e, i < 1 || s < 1) return !1;
                        var o = vt.worldScissorTest;
                        return this.screenRect.copyFrom(r),
                            vt.worldScissorTest = !0,
                            r.x = t,
                            r.y = e,
                            r.width = i,
                            r.height = s,
                            e = vt.height - e - s,
                            bt.mainContext.scissor(t, e, i, s),
                            bt.mainContext.enable(3089),
                            this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength),
                            o ? (e = vt.height - this.screenRect.y - this.screenRect.height, bt.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height), bt.mainContext.enable(3089)) : (bt.mainContext.disable(3089), vt.worldScissorTest = !1),
                            r.copyFrom(this.screenRect),
                            !0;
                    },
                    e.renderSubmit = function () {
                        return this.submitLength = Math.min(this.context._submits._length - 1, this.submitLength),
                            this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1 ? this.submitLength + 1 : (this.context._targets ? this._scissorWithTagart(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height) : this._scissor(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height), this.submitLength + 1);
                    },
                    e.getRenderType = function () {
                        return 0;
                    },
                    e.releaseRender = function () {
                        var e = t._cache;
                        e[e._length++] = this,
                            this.context = null;
                    },
                    t.create = function (e) {
                        var i = t._cache._length ? t._cache[--t._cache._length] : new t();
                        return i.context = e,
                            i;
                    },
                    t._cache = (t._cache = [], t._cache._length = 0, t._cache),
                    t;
            }(),
            ct = function () {
                function t() {
                    this.step = 0,
                        this.blendMode = null,
                        this.level = 0;
                }
                n(t, "laya.webgl.submit.SubmitStencil");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.submit.ISubmit": !0
                }),
                    e.renderSubmit = function () {
                        switch (this.step) {
                            case 1:
                                this.do1();
                                break;

                            case 2:
                                this.do2();
                                break;

                            case 3:
                                this.do3();
                                break;

                            case 4:
                                this.do4();
                                break;

                            case 5:
                                this.do5();
                                break;

                            case 6:
                                this.do6();
                                break;

                            case 7:
                                this.do7();
                                break;

                            case 8:
                                this.do8();
                        }
                        return 1;
                    },
                    e.getRenderType = function () {
                        return 0;
                    },
                    e.releaseRender = function () {
                        var e = t._cache;
                        e[e._length++] = this;
                    },
                    e.do1 = function () {
                        var t = bt.mainContext;
                        t.enable(2960),
                            t.clear(1024),
                            t.colorMask(!1, !1, !1, !1),
                            t.stencilFunc(514, this.level, 255),
                            t.stencilOp(7680, 7680, 7682);
                    },
                    e.do2 = function () {
                        var t = bt.mainContext;
                        t.stencilFunc(514, this.level + 1, 255),
                            t.colorMask(!0, !0, !0, !0),
                            t.stencilOp(7680, 7680, 7680);
                    },
                    e.do3 = function () {
                        var t = bt.mainContext;
                        t.colorMask(!0, !0, !0, !0),
                            t.stencilOp(7680, 7680, 7680),
                            t.clear(1024),
                            t.disable(2960);
                    },
                    e.do4 = function () {
                        var t = bt.mainContext;
                        0 == this.level && (t.enable(2960), t.clear(1024)),
                            t.colorMask(!1, !1, !1, !1),
                            t.stencilFunc(519, 0, 255),
                            t.stencilOp(7680, 7680, 7682);
                    },
                    e.do5 = function () {
                        var t = bt.mainContext;
                        t.stencilFunc(514, this.level, 255),
                            t.colorMask(!0, !0, !0, !0),
                            t.stencilOp(7680, 7680, 7680);
                    },
                    e.do6 = function () {
                        var t = bt.mainContext;
                        X.targetFns[X.TOINT[this.blendMode]](t);
                    },
                    e.do7 = function () {
                        var t = bt.mainContext;
                        t.colorMask(!1, !1, !1, !1),
                            t.stencilOp(7680, 7680, 7683);
                    },
                    e.do8 = function () {
                        var t = bt.mainContext;
                        t.colorMask(!0, !0, !0, !0),
                            t.stencilFunc(514, this.level, 255),
                            t.stencilOp(7680, 7680, 7680);
                    },
                    t.restore = function (e, i, s, n, a) {
                        var r;
                        if (e._renderKey = 0, t._mask > 0 && t._mask-- , 0 == t._mask) r = laya.webgl.submit.SubmitStencil.create(3),
                            e.addRenderObject(r),
                            e._curSubmit = at.RENDERBASE;
                        else {
                            r = laya.webgl.submit.SubmitStencil.create(7),
                                e.addRenderObject(r);
                            var o = e._vb;
                            o._byteLength;
                            if (mt.fillRectImgVb(o, null, i.x, i.y, i.width, i.height, D.DEF_UV, s, n, a, 0, 0)) {
                                e._shader2D.glTexture = null;
                                var h = e._curSubmit = at.createSubmit(e, e._ib, o, (o._byteLength - 64) / 32 * 3, St.create(2, 0));
                                h.shaderValue.ALPHA = 1,
                                    e._submits[e._submits._length++] = h,
                                    e._curSubmit._numEle += 6,
                                    e._curSubmit = at.RENDERBASE;
                            } else alert("clipRect calc stencil rect error");
                            r = laya.webgl.submit.SubmitStencil.create(8),
                                e.addRenderObject(r);
                        }
                    },
                    t.restore2 = function (e, i) {
                        var s;
                        e._renderKey = 0,
                            t._mask > 0 && t._mask-- ,
                            0 == t._mask ? (s = laya.webgl.submit.SubmitStencil.create(3), e.addRenderObject(s), e._curSubmit = at.RENDERBASE) : (s = laya.webgl.submit.SubmitStencil.create(7), e.addRenderObject(s), e._submits[e._submits._length++] = i, s = laya.webgl.submit.SubmitStencil.create(8), e.addRenderObject(s));
                    },
                    t.create = function (e) {
                        var i = t._cache._length ? t._cache[--t._cache._length] : new t();
                        return i.step = e,
                            5 == e && ++t._mask,
                            i.level = t._mask,
                            i;
                    },
                    t._cache = (t._cache = [], t._cache._length = 0, t._cache),
                    t._mask = 0,
                    t;
            }(),
            ut = function () {
                function t() {
                    this._renderType = 0,
                        this._vb = null,
                        this._ib = null,
                        this._startIdx = 0,
                        this._numEle = 0,
                        this.shaderValue = null,
                        this.blendType = 0,
                        this.proName = null,
                        this.scope = null;
                }
                n(t, "laya.webgl.submit.SubmitTarget");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.submit.ISubmit": !0
                }),
                    e.renderSubmit = function () {
                        this._vb.bind_upload(this._ib);
                        var t = this.scope.getValue(this.proName);
                        return t && (this.shaderValue.texture = t.source, this.shaderValue.strength && !this.shaderValue.blurInfo && (this.shaderValue.blurInfo = [t.width, t.height]), this.shaderValue.upload(), this.blend(), A.drawCall++ , A.trianglesFaces += this._numEle / 3, bt.mainContext.drawElements(4, this._numEle, 5123, this._startIdx)),
                            1;
                    },
                    e.blend = function () {
                        if (X.activeBlendFunction !== X.fns[this.blendType]) {
                            var t = bt.mainContext;
                            t.enable(3042),
                                X.fns[this.blendType](t),
                                X.activeBlendFunction = X.fns[this.blendType];
                        }
                    },
                    e.getRenderType = function () {
                        return 0;
                    },
                    e.releaseRender = function () {
                        var e = t._cache;
                        e[e._length++] = this;
                    },
                    t.create = function (e, i, s, n, a, r) {
                        var o = t._cache._length ? t._cache[--t._cache._length] : new t();
                        return o._ib = i,
                            o._vb = s,
                            o.proName = r,
                            o._startIdx = n * ft.BYTES_PIDX,
                            o._numEle = 0,
                            o.blendType = e._nBlendType,
                            o.shaderValue = a,
                            o.shaderValue.setValue(e._shader2D),
                            o;
                    },
                    t._cache = (t._cache = [], t._cache._length = 0, t._cache),
                    t;
            }(),
            dt = function () {
                function t() {
                    this._sourceStr = null;
                }
                n(t, "laya.webgl.text.CharSegment");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.webgl.text.ICharSegment": !0
                }),
                    e.textToSpit = function (t) {
                        this._sourceStr = t;
                    },
                    e.getChar = function (t) {
                        return this._sourceStr.charAt(t);
                    },
                    e.getCharCode = function (t) {
                        return this._sourceStr.charCodeAt(t);
                    },
                    e.length = function () {
                        return this._sourceStr.length;
                    },
                    t;
            }(),
            _t = function () {
                function t() { }
                var e;
                return n(t, "laya.webgl.text.DrawText"),
                    t.__init__ = function () {
                        t._charsTemp = new Array(),
                            t._drawValue = new e(),
                            t._charSeg = new dt();
                    },
                    t.customCharSeg = function (e) {
                        t._charSeg = e;
                    },
                    t.getChar = function (e, i, s) {
                        var n = Ht.createOneChar(e, s);
                        return - 1 != i && (t._charsCache[i] = n),
                            n;
                    },
                    t._drawSlow = function (e, i, s, n, a, r, o, h, l, c, u, d, _, p, f) {
                        var m, g, v = t._drawValue.value(r, h, l, c, _, p, f),
                            y = 0,
                            b = 0,
                            x = t._charsTemp,
                            w = 0,
                            M = NaN;
                        if (n) for (x.length = n.length, y = 0, b = n.length; y < b; y++) M = (g = n[y]).charNum + v.txtID,
                            x[y] = m = t._charsCache[M] || t.getChar(g.char, M, v),
                            m.active();
                        else {
                            var S = s instanceof laya.utils.WordText ? s.toString() : s;
                            if (k.CharacterCache) {
                                t._charSeg.textToSpit(S);
                                var C = t._charSeg.length();
                                for (x.length = C, y = 0, b = C; y < b; y++) M = t._charSeg.getCharCode(y) + v.txtID,
                                    x[y] = m = t._charsCache[M] || t.getChar(t._charSeg.getChar(y), M, v),
                                    m.active(),
                                    w += m.cw;
                            } else x.length = 0,
                                (m = t.getChar(S, -1, v)).active(),
                                w += m.cw,
                                x[0] = m;
                        }
                        var T = 0;
                        null !== o && "left" !== o && (T = -("center" == o ? w / 2 : w));
                        var I, L, E = NaN,
                            A = 0;
                        if (n) for (y = 0, b = x.length; y < b; y++)(m = x[y]).isSpace || (g = n[y], E = m.borderSize, I = m.texture, i._drawText(I, u + T + g.x * _ - E, d + g.y * p - E, I.width, I.height, a, 0, 0, 0, 0));
                        else {
                            for (y = 0, b = x.length; y < b; y++)(m = x[y]).isSpace || (E = m.borderSize, I = m.texture, i._drawText(I, u + T - E, d - E, I.width, I.height, a, 0, 0, 0, 0), e && ((L = e[A++]) || (L = e[A - 1] = []), L[0] = I, L[1] = T - E, L[2] = -E)),
                                T += m.cw;
                            e && (e.length = A);
                        }
                    },
                    t._drawFast = function (t, e, i, s, n) {
                        for (var a, r, o = 0,
                            h = t.length; o < h; o++)(a = (r = t[o])[0]).active(),
                                e._drawText(a, s + r[1], n + r[2], a.width, a.height, i, 0, 0, 0, 0);
                    },
                    t.drawText = function (e, s, n, a, r, o, h, l, c, u, d, p) {
                        if (void 0 === p && (p = 0), !(s && 0 === s.length || n && 0 === n.length)) {
                            var f = a.a,
                                m = a.d; (0 !== a.b || 0 !== a.c) && (f = m = 1);
                            var g = 1 !== f || 1 !== m;
                            if (g && i.stage.transform) {
                                var v = i.stage.transform;
                                g = v.a === f && v.d === m;
                            } else g = !1;
                            if (g) {
                                var y = (a = a.copyTo(Mt._tmpMatrix)).tx,
                                    b = a.ty;
                                a.scale(1 / f, 1 / m),
                                    a._checkTransform(),
                                    u *= f,
                                    d *= m,
                                    u += y - a.tx,
                                    d += b - a.ty;
                            } else f = m = 1;
                            if (n) t._drawSlow(null, e, s, n, a, r, o, h, l, c, u, d, f, m, p);
                            else {
                                if (null === s.toUpperCase) {
                                    var x = f + 1e5 * m,
                                        w = s;
                                    return void (w.changed || w.id !== x ? (w.id = x, w.changed = !1, t._drawSlow(w.save, e, s, n, a, r, o, h, l, c, u, d, f, m, p)) : t._drawFast(w.save, e, a, u, d));
                                }
                                var M = s + r.toString() + h + l + c + f + m + o,
                                    S = t._textsCache[M];
                                k.CharacterCache ? S ? t._drawFast(S, e, a, u, d) : (t._textsCache.__length || (t._textsCache.__length = 0), t._textsCache.__length > _.WebGLTextCacheCount && ((t._textsCache = {}).__length = 0, t._curPoolIndex = 0), t._textCachesPool[t._curPoolIndex] ? (S = t._textsCache[M] = t._textCachesPool[t._curPoolIndex], S.length = 0) : t._textCachesPool[t._curPoolIndex] = S = t._textsCache[M] = [], t._textsCache.__length++ , t._curPoolIndex++ , t._drawSlow(S, e, s, n, a, r, o, h, l, c, u, d, f, m, p)) : t._drawSlow(S, e, s, n, a, r, o, h, l, c, u, d, f, m, p);
                            }
                        }
                    },
                    t._charsTemp = null,
                    t._textCachesPool = [],
                    t._curPoolIndex = 0,
                    t._charsCache = {},
                    t._textsCache = {},
                    t._drawValue = null,
                    t.d = [],
                    t._charSeg = null,
                    t.__init$ = function () {
                        e = function () {
                            function t() { }
                            n(t, "");
                            return t.prototype.value = function (e, i, s, n, a, r, o) {
                                this.font = e,
                                    this.fillColor = i,
                                    this.borderColor = s,
                                    this.lineWidth = n,
                                    this.scaleX = a,
                                    this.scaleY = r,
                                    this.underLine = o;
                                var h = e.toString() + a + r + n + i + s + o;
                                return this.txtID = t._keymap[h],
                                    this.txtID || (this.txtID = 1e-7 * ++t._keymapCount, t._keymap[h] = this.txtID),
                                    this;
                            },
                                t.clear = function () {
                                    t._keymap = {},
                                        t._keymapCount = 1;
                                },
                                t._keymap = {},
                                t._keymapCount = 1,
                                t;
                        }();
                    },
                    t;
            }(),
            pt = function () {
                function t(e) {
                    this._index = 0,
                        this._size = 14,
                        this._italic = -2,
                        t._cache2 = t._cache2 || [],
                        this.setFont(e || "14px Arial");
                }
                n(t, "laya.webgl.text.FontInContext");
                var e = t.prototype;
                return e.setFont = function (e) {
                    var i = t._cache2[e];
                    if (i) this._words = i[0],
                        this._size = i[1];
                    else {
                        this._words = e.split(" ");
                        for (var s = 0,
                            n = this._words.length; s < n; s++) if (this._words[s].indexOf("px") > 0) {
                                this._index = s;
                                break;
                            }
                        this._size = parseInt(this._words[this._index]),
                            t._cache2[e] = [this._words, this._size];
                    }
                    this._text = null,
                        this._italic = -2;
                },
                    e.getItalic = function () {
                        return - 2 === this._italic && (this._italic = this.hasType("italic")),
                            this._italic;
                    },
                    e.hasType = function (t) {
                        for (var e = 0,
                            i = this._words.length; e < i; e++) if (this._words[e] === t) return e;
                        return - 1;
                    },
                    e.removeType = function (t) {
                        for (var e = 0,
                            i = this._words.length; e < i; e++) if (this._words[e] === t) {
                                this._words.splice(e, 1),
                                    this._index > e && this._index--;
                                break;
                            }
                        this._text = null,
                            this._italic = -2;
                    },
                    e.copyTo = function (t) {
                        return t._text = this._text,
                            t._size = this._size,
                            t._index = this._index,
                            t._words = this._words.slice(),
                            t._italic = -2,
                            t;
                    },
                    e.toString = function () {
                        return this._text ? this._text : this._text = this._words.join(" ");
                    },
                    a(0, e, "size",
                        function () {
                            return this._size;
                        },
                        function (t) {
                            this._size = t,
                                this._words[this._index] = t + "px",
                                this._text = null;
                        }),
                    t.create = function (e) {
                        var i = t._cache[e];
                        return i || (i = t._cache[e] = new t(e));
                    },
                    t.EMPTY = new t(),
                    t._cache = {},
                    t._cache2 = null,
                    t;
            }(),
            ft = function () {
                function t() { }
                return n(t, "laya.webgl.utils.CONST3D2D"),
                    t.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                    t.defaultMinusYMatrix4 = [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                    t.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
                    t._TMPARRAY = [],
                    t._OFFSETX = 0,
                    t._OFFSETY = 0,
                    s(t, ["BYTES_PE",
                        function () {
                            return this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT;
                        },
                        "BYTES_PIDX",
                        function () {
                            return this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT;
                        }]),
                    t;
            }(),
            mt = function () {
                function t() { }
                return n(t, "laya.webgl.utils.GlUtils"),
                    t.make2DProjection = function (t, e, i) {
                        return [2 / t, 0, 0, 0, 0, -2 / e, 0, 0, 0, 0, 2 / i, 0, -1, 1, 0, 1];
                    },
                    t.fillIBQuadrangle = function (t, e) {
                        if (e > 65535 / 4) throw Error("IBQuadrangle count:" + e + " must<:" + Math.floor(65535 / 4));
                        e = Math.floor(e),
                            t._resizeBuffer(6 * (e + 1) * 2, !1),
                            t.byteLength = t.bufferLength;
                        for (var i = t.getUint16Array(), s = 0, n = 0; n < e; n++) i[s++] = 4 * n,
                            i[s++] = 4 * n + 2,
                            i[s++] = 4 * n + 1,
                            i[s++] = 4 * n,
                            i[s++] = 4 * n + 3,
                            i[s++] = 4 * n + 2;
                        return t.setNeedUpload(),
                            !0;
                    },
                    t.expandIBQuadrangle = function (e, i) {
                        e.bufferLength >= 6 * i * 2 || t.fillIBQuadrangle(e, i);
                    },
                    t.mathCeilPowerOfTwo = function (t) {
                        return t-- ,
                            t |= t >> 1,
                            t |= t >> 2,
                            t |= t >> 4,
                            t |= t >> 8,
                            t |= t >> 16,
                            ++t;
                    },
                    t.fillQuadrangleImgVb = function (t, e, i, s, n, a, r, o) {
                        var h = 16 + (t._byteLength >> 2);
                        t.byteLength = h << 2;
                        var l = t.getFloat32Array();
                        l[(h -= 16) + 2] = n[0],
                            l[h + 3] = n[1],
                            l[h + 6] = n[2],
                            l[h + 7] = n[3],
                            l[h + 10] = n[4],
                            l[h + 11] = n[5],
                            l[h + 14] = n[6],
                            l[h + 15] = n[7];
                        var c = a.a,
                            u = a.b,
                            d = a.c,
                            _ = a.d;
                        if (1 !== c || 0 !== u || 0 !== d || 1 !== _) {
                            a.bTransform = !0;
                            var p = a.tx + r,
                                f = a.ty + o;
                            l[h] = (s[0] + e) * c + (s[1] + i) * d + p,
                                l[h + 1] = (s[0] + e) * u + (s[1] + i) * _ + f,
                                l[h + 4] = (s[2] + e) * c + (s[3] + i) * d + p,
                                l[h + 5] = (s[2] + e) * u + (s[3] + i) * _ + f,
                                l[h + 8] = (s[4] + e) * c + (s[5] + i) * d + p,
                                l[h + 9] = (s[4] + e) * u + (s[5] + i) * _ + f,
                                l[h + 12] = (s[6] + e) * c + (s[7] + i) * d + p,
                                l[h + 13] = (s[6] + e) * u + (s[7] + i) * _ + f;
                        } else a.bTransform = !1,
                            e += a.tx + r,
                            i += a.ty + o,
                            l[h] = e + s[0],
                            l[h + 1] = i + s[1],
                            l[h + 4] = e + s[2],
                            l[h + 5] = i + s[3],
                            l[h + 8] = e + s[4],
                            l[h + 9] = i + s[5],
                            l[h + 12] = e + s[6],
                            l[h + 13] = i + s[7];
                        return t._upload = !0,
                            !0;
                    },
                    t.fillTranglesVB = function (t, e, i, s, n, a, r) {
                        var o = (t._byteLength >> 2) + s.length;
                        t.byteLength = o << 2;
                        var h = t.getFloat32Array();
                        o -= s.length;
                        for (var l = s.length,
                            c = n.a,
                            u = n.b,
                            d = n.c,
                            _ = n.d,
                            p = 0; p < l; p += 4) if (h[o + p + 2] = s[p + 2], h[o + p + 3] = s[p + 3], 1 !== c || 0 !== u || 0 !== d || 1 !== _) {
                                n.bTransform = !0;
                                var f = n.tx + a,
                                    m = n.ty + r;
                                h[o + p] = (s[p] + e) * c + (s[p + 1] + i) * d + f,
                                    h[o + p + 1] = (s[p] + e) * u + (s[p + 1] + i) * _ + m;
                            } else n.bTransform = !1,
                                e += n.tx + a,
                                i += n.ty + r,
                                h[o + p] = e + s[p],
                                h[o + p + 1] = i + s[p + 1];
                        return t._upload = !0,
                            !0;
                    },
                    t.copyPreImgVb = function (t, e, i) {
                        var s = t._byteLength >> 2;
                        t.byteLength = s + 16 << 2;
                        for (var n = t.getFloat32Array(), a = 0, r = s - 16; a < 4; a++) n[s] = n[r] + e,
                            ++r,
                            n[++s] = n[r] + i,
                            ++r,
                            n[++s] = n[r],
                            ++r,
                            n[++s] = n[r],
                            ++s,
                            ++r;
                        t._upload = !0;
                    },
                    t.fillRectImgVb = function (t, e, i, s, n, a, r, o, h, l, c, u, d) {
                        void 0 === d && (d = !1);
                        var _, p, f, m, g, v, y, b, x, w, M, S, C, T, I, L, E = 1,
                            A = o.a,
                            R = o.b,
                            P = o.c,
                            k = o.d,
                            D = e && e.width < 99999999;
                        if (1 !== A || 0 !== R || 0 !== P || 1 !== k ? (o.bTransform = !0, 0 === R && 0 === P && (E = 23, x = n + i, w = a + s, _ = A * i + (M = o.tx + h), f = A * x + M, p = k * s + (S = o.ty + l), m = k * w + S)) : (E = 23, o.bTransform = !1, f = (_ = i + o.tx + h) + n, m = (p = s + o.ty + l) + a), D && (g = e.x, v = e.y, y = e.width + g, b = e.height + v), 1 !== E) {
                            if (Math.min(_, f) >= y) return !1;
                            if (Math.min(p, m) >= b) return !1;
                            if (Math.max(f, _) <= g) return !1;
                            if (Math.max(m, p) <= v) return !1;
                        }
                        var B = t._byteLength >> 2;
                        t.byteLength = B + 16 << 2;
                        var N = t.getFloat32Array();
                        switch (N[B + 2] = r[0], N[B + 3] = r[1], N[B + 6] = r[2], N[B + 7] = r[3], N[B + 10] = r[4], N[B + 11] = r[5], N[B + 14] = r[6], N[B + 15] = r[7], E) {
                            case 1:
                                M = o.tx + h,
                                    S = o.ty + l;
                                var O = A * i,
                                    G = P * s,
                                    F = k * s,
                                    U = R * i,
                                    W = A * (x = n + i),
                                    X = P * (w = a + s),
                                    z = k * w,
                                    Y = R * x;
                                d ? (C = O + G + M, I = Math.round(C) - C, T = F + U + S, L = Math.round(T) - T, N[B] = C + I, N[B + 1] = T + L, N[B + 4] = W + G + M + I, N[B + 5] = F + Y + S + L, N[B + 8] = W + X + M + I, N[B + 9] = z + Y + S + L, N[B + 12] = O + X + M + I, N[B + 13] = z + U + S + L) : (N[B] = O + G + M, N[B + 1] = F + U + S, N[B + 4] = W + G + M, N[B + 5] = F + Y + S, N[B + 8] = W + X + M, N[B + 9] = z + Y + S, N[B + 12] = O + X + M, N[B + 13] = z + U + S);
                                break;

                            case 23:
                                d ? (C = _ + c, I = Math.round(C) - C, T = p, L = Math.round(T) - T, N[B] = C + I, N[B + 1] = T + L, N[B + 4] = f + c + I, N[B + 5] = p + L, N[B + 8] = f + I, N[B + 9] = m + L, N[B + 12] = _ + I, N[B + 13] = m + L) : (N[B] = _ + c, N[B + 1] = p, N[B + 4] = f + c, N[B + 5] = p, N[B + 8] = f, N[B + 9] = m, N[B + 12] = _, N[B + 13] = m);
                        }
                        return t._upload = !0,
                            !0;
                    },
                    t.fillLineVb = function (e, i, s, n, a, r, o, h) {
                        var l = .5 * o,
                            c = t._fillLineArray,
                            u = -(n - r),
                            d = s - a,
                            _ = Math.sqrt(u * u + d * d);
                        u /= _,
                            d /= _,
                            u *= l,
                            d *= l,
                            c[0] = s - u,
                            c[1] = n - d,
                            c[4] = s + u,
                            c[5] = n + d,
                            c[8] = a + u,
                            c[9] = r + d,
                            c[12] = a - u,
                            c[13] = r - d,
                            h && h.transformPointArray(c, c);
                        var p = 16 + (e._byteLength >> 2);
                        return e.byteLength = p << 2,
                            e.insertData(c, p - 16),
                            !0;
                    },
                    t._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    t;
            }(),
            gt = (function () {
                function t() { }
                n(t, "laya.webgl.utils.MatirxArray"),
                    t.ArrayMul = function (e, i, s) {
                        if (e) if (i) for (var n = NaN,
                            a = NaN,
                            r = NaN,
                            o = NaN,
                            h = 0; h < 4; h++) n = e[h],
                                a = e[h + 4],
                                r = e[h + 8],
                                o = e[h + 12],
                                s[h] = n * i[0] + a * i[1] + r * i[2] + o * i[3],
                                s[h + 4] = n * i[4] + a * i[5] + r * i[6] + o * i[7],
                                s[h + 8] = n * i[8] + a * i[9] + r * i[10] + o * i[11],
                                s[h + 12] = n * i[12] + a * i[13] + r * i[14] + o * i[15];
                        else t.copyArray(e, s);
                        else t.copyArray(i, s);
                    },
                    t.copyArray = function (t, e) {
                        if (t && e) for (var i = 0; i < t.length; i++) e[i] = t[i];
                    };
            }(),
                function () {
                    function t(t, e, i) {
                        this._stride = 0,
                            this.vertNum = 0,
                            this.indexNum = 0,
                            this._applied = !1,
                            this._vb = null,
                            this._ib = null,
                            this._vao = null,
                            this._attribInfo = null,
                            this._quadNum = 0,
                            this.canReuse = !1,
                            this._stride = t,
                            this._vb = new Jt(t, 35048),
                            e && this._vb._resizeBuffer(e, !1),
                            this._ib = new Zt(),
                            i && this._ib._resizeBuffer(i, !1);
                    }
                    n(t, "laya.webgl.utils.Mesh2D");
                    var e = t.prototype;
                    return e.cloneWithNewVB = function () {
                        var e = new t(this._stride, 0, 0);
                        return e._ib = this._ib,
                            e._quadNum = this._quadNum,
                            e._attribInfo = this._attribInfo,
                            e;
                    },
                        e.cloneWithNewVBIB = function () {
                            var e = new t(this._stride, 0, 0);
                            return e._attribInfo = this._attribInfo,
                                e;
                        },
                        e.getVBW = function () {
                            return this._vb.setNeedUpload(),
                                this._vb;
                        },
                        e.getVBR = function () {
                            return this._vb;
                        },
                        e.getIBR = function () {
                            return this._ib;
                        },
                        e.getIBW = function () {
                            return this._ib.setNeedUpload(),
                                this._ib;
                        },
                        e.createQuadIB = function (t) {
                            this._quadNum = t,
                                this._ib._resizeBuffer(6 * t * 2, !1),
                                this._ib.byteLength = this._ib.bufferLength;
                            for (var e = this._ib.getUint16Array(), i = 0, s = 0, n = 0; n < t; n++) e[i++] = s,
                                e[i++] = s + 2,
                                e[i++] = s + 1,
                                e[i++] = s,
                                e[i++] = s + 3,
                                e[i++] = s + 2,
                                s += 4;
                            this._ib.setNeedUpload();
                        },
                        e.setAttributes = function (t) {
                            if (this._attribInfo = t, this._attribInfo.length % 3 != 0) throw "Mesh2D setAttributes error!";
                        },
                        e.getEleNum = function () {
                            return this._ib.getBuffer().byteLength / 2;
                        },
                        e.releaseMesh = function () { },
                        e.destroy = function () { },
                        e.clearVB = function () {
                            this._vb.clear();
                        },
                        t._gvaoid = 0,
                        t;
                }()),
            vt = function () {
                function t() { }
                return n(t, "laya.webgl.utils.RenderState2D"),
                    t.getMatrArray = function () {
                        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                    },
                    t.mat2MatArray = function (e, i) {
                        var s = e,
                            n = i;
                        return n[0] = s.a,
                            n[1] = s.b,
                            n[2] = t.EMPTYMAT4_ARRAY[2],
                            n[3] = t.EMPTYMAT4_ARRAY[3],
                            n[4] = s.c,
                            n[5] = s.d,
                            n[6] = t.EMPTYMAT4_ARRAY[6],
                            n[7] = t.EMPTYMAT4_ARRAY[7],
                            n[8] = t.EMPTYMAT4_ARRAY[8],
                            n[9] = t.EMPTYMAT4_ARRAY[9],
                            n[10] = t.EMPTYMAT4_ARRAY[10],
                            n[11] = t.EMPTYMAT4_ARRAY[11],
                            n[12] = s.tx,
                            n[13] = s.ty,
                            n[14] = t.EMPTYMAT4_ARRAY[14],
                            n[15] = t.EMPTYMAT4_ARRAY[15],
                            i;
                    },
                    t.restoreTempArray = function () {
                        t.TEMPMAT4_ARRAY[0] = 1,
                            t.TEMPMAT4_ARRAY[1] = 0,
                            t.TEMPMAT4_ARRAY[4] = 0,
                            t.TEMPMAT4_ARRAY[5] = 1,
                            t.TEMPMAT4_ARRAY[12] = 0,
                            t.TEMPMAT4_ARRAY[13] = 0;
                    },
                    t.clear = function () {
                        t.worldScissorTest = !1,
                            t.worldShaderDefines = null,
                            t.worldFilters = null,
                            t.worldAlpha = 1,
                            t.worldClipRect.x = t.worldClipRect.y = 0,
                            t.worldClipRect.width = t.width,
                            t.worldClipRect.height = t.height,
                            t.curRenderTarget = null;
                    },
                    t._MAXSIZE = 99999999,
                    t.EMPTYMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                    t.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                    t.worldMatrix4 = t.TEMPMAT4_ARRAY,
                    t.worldAlpha = 1,
                    t.worldScissorTest = !1,
                    t.worldFilters = null,
                    t.worldShaderDefines = null,
                    t.curRenderTarget = null,
                    t.width = 0,
                    t.height = 0,
                    s(t, ["worldMatrix",
                        function () {
                            return this.worldMatrix = new b();
                        },
                        "worldClipRect",
                        function () {
                            return this.worldClipRect = new w(0, 0, 99999999, 99999999);
                        }]),
                    t;
            }(),
            yt = function () {
                function t(t, i, s, n, a) {
                    function r(t) {
                        var i = [],
                            s = new e(i);
                        return o._compileToTree(s, t.split("\n"), 0, i, a),
                            s;
                    }
                    var o = this,
                        h = c.now();
                    this._VS = r(i),
                        this._PS = r(s),
                        this._nameMap = n,
                        c.now() - h > 2 && console.log("ShaderCompile use time:" + (c.now() - h) + "  size:" + i.length + "/" + s.length);
                }
                var e, i;
                n(t, "laya.webgl.utils.ShaderCompile");
                var a = t.prototype;
                return a._compileToTree = function (i, s, n, a, r) {
                    var o, h, l, c, u, d, _, p = 0,
                        f = 0,
                        m = 0,
                        g = 0;
                    for (f = n; f < s.length; f++) if (!((l = s[f]).length < 1) && 0 !== (p = l.indexOf("//"))) {
                        if (p >= 0 && (l = l.substr(0, p)), o = _ || new e(a), _ = null, o.text = l, o.noCompile = !0, (p = l.indexOf("#")) >= 0) {
                            for (c = "#", g = p + 1, m = l.length; g < m; g++) {
                                var v = l.charAt(g);
                                if (" " === v || "\t" === v || "?" === v) break;
                                c += v;
                            }
                            switch (o.name = c, c) {
                                case "#ifdef":
                                case "#ifndef":
                                    if (o.src = l, o.noCompile = null != l.match(/[!&|()=<>]/), o.noCompile ? console.log("function():Boolean{return " + l.substr(p + o.name.length) + "}") : (d = l.replace(/^\s*/, "").split(/\s+/), o.setCondition(d[1], "#ifdef" === c ? 1 : 2), o.text = "//" + o.text), o.setParent(i), i = o, r) for (d = l.substr(g).split(t._splitToWordExps3), g = 0; g < d.length; g++)(l = d[g]).length && (r[l] = !0);
                                    continue;

                                case "#if":
                                    if (o.src = l, o.noCompile = !0, o.setParent(i), i = o, r) for (d = l.substr(g).split(t._splitToWordExps3), g = 0; g < d.length; g++)(l = d[g]).length && "defined" != l && (r[l] = !0);
                                    continue;

                                case "#else":
                                    o.src = l,
                                        h = (i = i.parent).childs[i.childs.length - 1],
                                        o.noCompile = h.noCompile,
                                        o.noCompile || (o.condition = h.condition, o.conditionType = 1 == h.conditionType ? 2 : 1, o.text = "//" + o.text + " " + h.text + " " + o.conditionType),
                                        o.setParent(i),
                                        i = o;
                                    continue;

                                case "#endif":
                                    h = (i = i.parent).childs[i.childs.length - 1],
                                        o.noCompile = h.noCompile,
                                        o.noCompile || (o.text = "//" + o.text),
                                        o.setParent(i);
                                    continue;

                                case "#include":
                                    d = t.splitToWords(l, null);
                                    var y = t.includes[d[1]];
                                    if (!y) throw "ShaderCompile error no this include file:" + d[1];
                                    if ((p = d[0].indexOf("?")) < 0) {
                                        o.setParent(i),
                                            l = y.getWith("with" == d[2] ? d[3] : null),
                                            this._compileToTree(o, l.split("\n"), 0, a, r),
                                            o.text = "";
                                        continue;
                                    }
                                    o.setCondition(d[0].substr(p + 1), 1),
                                        o.text = y.getWith("with" == d[2] ? d[3] : null);
                                    break;

                                case "#import":
                                    u = (d = t.splitToWords(l, null))[1],
                                        a.push({
                                            node: o,
                                            file: t.includes[u],
                                            ofs: o.text.length
                                        });
                                    continue;
                            }
                        } else {
                            if ((h = i.childs[i.childs.length - 1]) && !h.name) {
                                a.length > 0 && t.splitToWords(l, h),
                                    _ = o,
                                    h.text += "\n" + l;
                                continue;
                            }
                            a.length > 0 && t.splitToWords(l, o);
                        }
                        o.setParent(i);
                    }
                },
                    a.createShader = function (t, e, i) {
                        var s = {},
                            n = "";
                        if (t) for (var a in t) n += "#define " + a + "\n",
                            s[a] = !0;
                        var r = this._VS.toscript(s, []),
                            o = this._PS.toscript(s, []);
                        return (i || qt.create)(n + r.join("\n"), n + o.join("\n"), e, this._nameMap);
                    },
                    t._parseOne = function (e, i, s, n, a, r) {
                        var o = {
                            type: t.shaderParamsMap[s[n + 1]],
                            name: s[n + 2],
                            size: isNaN(parseInt(s[n + 3])) ? 1 : parseInt(s[n + 3])
                        };
                        return r && ("attribute" == a ? e.push(o) : i.push(o)),
                            ":" == s[n + 3] && (o.type = s[n + 4], n += 2),
                            n += 2;
                    },
                    t.addInclude = function (e, s) {
                        if (!s || 0 === s.length) throw new Error("add shader include file err:" + e);
                        if (t.includes[e]) throw new Error("add shader include file err, has add:" + e);
                        t.includes[e] = new i(s);
                    },
                    t.preGetParams = function (e, i) {
                        var s = [e, i],
                            n = {},
                            a = [],
                            r = [],
                            o = {},
                            h = [];
                        n.attributes = a,
                            n.uniforms = r,
                            n.defines = o;
                        for (var l = 0,
                            c = 0,
                            u = 0; u < 2; u++) {
                            s[u] = s[u].replace(t._removeAnnotation, "");
                            var d, _ = s[u].match(t._reg);
                            for (l = 0, c = _.length; l < c; l++) {
                                var p = _[l];
                                if ("attribute" == p || "uniform" == p) l = t._parseOne(a, r, _, l, p, !0);
                                else {
                                    if ("#define" == p) {
                                        h[p = _[++l]] = 1;
                                        continue;
                                    }
                                    if ("#ifdef" == p) {
                                        o[d = _[++l]] = o[d] || [];
                                        for (l++; l < c; l++) if ("attribute" == (p = _[l]) || "uniform" == p) l = t._parseOne(a, r, _, l, p, h[d]);
                                        else if ("#else" == p) for (l++; l < c; l++) if ("attribute" == (p = _[l]) || "uniform" == p) l = t._parseOne(a, r, _, l, p, !h[d]);
                                        else if ("#endif" == p) break;
                                    }
                                }
                            }
                        }
                        return n;
                    },
                    t.splitToWords = function (t, e) {
                        for (var i, s, n = [], a = -1, r = 0, o = t.length; r < o; r++) if (i = t.charAt(r), " \t=+-*/&%!<>()'\",;".indexOf(i) >= 0) {
                            if (a >= 0 && r - a > 1 && (s = t.substr(a, r - a), n.push(s)), '"' == i || "'" == i) {
                                var h = t.indexOf(i, r + 1);
                                if (h < 0) throw "Sharder err:" + t;
                                n.push(t.substr(r + 1, h - r - 1)),
                                    r = h,
                                    a = -1;
                                continue;
                            }
                            "(" == i && e && n.length > 0 && (s = n[n.length - 1] + ";", "vec4;main;".indexOf(s) < 0 && (e.useFuns += s)),
                                a = -1;
                        } else a < 0 && (a = r);
                        return a < o && o - a > 1 && (s = t.substr(a, o - a), n.push(s)),
                            n;
                    },
                    t.IFDEF_NO = 0,
                    t.IFDEF_YES = 1,
                    t.IFDEF_ELSE = 2,
                    t.IFDEF_PARENT = 3,
                    t._removeAnnotation = new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)", "g"),
                    t._reg = new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])", "g"),
                    t._splitToWordExps = new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])", "g"),
                    t.includes = {},
                    s(t, ["shaderParamsMap",
                        function () {
                            return this.shaderParamsMap = {
                                float: 5126,
                                int: 5124,
                                bool: 35670,
                                vec2: 35664,
                                vec3: 35665,
                                vec4: 35666,
                                ivec2: 35667,
                                ivec3: 35668,
                                ivec4: 35669,
                                bvec2: 35671,
                                bvec3: 35672,
                                bvec4: 35673,
                                mat2: 35674,
                                mat3: 35675,
                                mat4: 35676,
                                sampler2D: 35678,
                                samplerCube: 35680
                            };
                        },
                        "_splitToWordExps3",
                        function () {
                            return this._splitToWordExps3 = new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]", "g");
                        }]),
                    t.__init$ = function () {
                        e = function () {
                            function t(t) {
                                this.childs = [],
                                    this.text = "",
                                    this.parent = null,
                                    this.name = null,
                                    this.noCompile = !1,
                                    this.includefiles = null,
                                    this.condition = null,
                                    this.conditionType = 0,
                                    this.useFuns = "",
                                    this.z = 0,
                                    this.src = null,
                                    this.includefiles = t;
                            }
                            n(t, "");
                            var e = t.prototype;
                            return e.setParent = function (t) {
                                t.childs.push(this),
                                    this.z = t.z + 1,
                                    this.parent = t;
                            },
                                e.setCondition = function (t, e) {
                                    t && (this.conditionType = e, t = t.replace(/(\s*$)/g, ""), this.condition = function () {
                                        return this[t];
                                    },
                                        this.condition.__condition = t);
                                },
                                e.toscript = function (e, i) {
                                    return this._toscript(e, i, ++t.__id);
                                },
                                e._toscript = function (t, e, i) {
                                    if (this.childs.length < 1 && !this.text) return e;
                                    e.length;
                                    if (this.condition) {
                                        var s = !!this.condition.call(t);
                                        if (2 === this.conditionType && (s = !s), !s) return e;
                                    }
                                    if (this.text && e.push(this.text), this.childs.length > 0 && this.childs.forEach(function (s, n, a) {
                                        s._toscript(t, e, i);
                                    }), this.includefiles.length > 0 && this.useFuns.length > 0) for (var n, a = 0,
                                        r = this.includefiles.length; a < r; a++) this.includefiles[a].curUseID != i && (n = this.includefiles[a].file.getFunsScript(this.useFuns)).length > 0 && (this.includefiles[a].curUseID = i, e[0] = n + e[0]);
                                    return e;
                                },
                                t.__id = 1,
                                t;
                        }(),
                            i = function () {
                                function e(e) {
                                    this.script = null,
                                        this.codes = {},
                                        this.funs = {},
                                        this.curUseID = -1,
                                        this.funnames = "",
                                        this.script = e;
                                    for (var i = 0,
                                        s = 0,
                                        n = 0; ;) {
                                        if ((i = e.indexOf("#begin", i)) < 0) break;
                                        for (n = i + 5; ;) {
                                            if ((n = e.indexOf("#end", n)) < 0) break;
                                            if ("i" !== e.charAt(n + 4)) break;
                                            n += 5;
                                        }
                                        if (n < 0) throw "add include err,no #end:" + e;
                                        s = e.indexOf("\n", i);
                                        var a = t.splitToWords(e.substr(i, s - i), null);
                                        "code" == a[1] ? this.codes[a[2]] = e.substr(s + 1, n - s - 1) : "function" == a[1] && (s = e.indexOf("function", i), s += "function".length, this.funs[a[3]] = e.substr(s + 1, n - s - 1), this.funnames += a[3] + ";"),
                                            i = n + 1;
                                    }
                                }
                                n(e, "");
                                var i = e.prototype;
                                return i.getWith = function (t) {
                                    var e = t ? this.codes[t] : this.script;
                                    if (!e) throw "get with error:" + t;
                                    return e;
                                },
                                    i.getFunsScript = function (t) {
                                        var e = "";
                                        for (var i in this.funs) t.indexOf(i + ";") >= 0 && (e += this.funs[i]);
                                        return e;
                                    },
                                    e;
                            }();
                    },
                    t;
            }(),
            bt = function () {
                function t() { }
                return n(t, "laya.webgl.WebGL"),
                    t._uint8ArraySlice = function () {
                        for (var t = this.length,
                            e = new Uint8Array(this.length), i = 0; i < t; i++) e[i] = this[i];
                        return e;
                    },
                    t._float32ArraySlice = function () {
                        for (var t = this.length,
                            e = new Float32Array(this.length), i = 0; i < t; i++) e[i] = this[i];
                        return e;
                    },
                    t._uint16ArraySlice = function (t) {
                        var e, i = arguments,
                            s = 0,
                            n = 0;
                        if (0 === i.length) for (s = this.length, e = new Uint16Array(s), n = 0; n < s; n++) e[n] = this[n];
                        else if (2 === i.length) {
                            var a = i[0],
                                r = i[1];
                            if (r > a) for (s = r - a, e = new Uint16Array(s), n = a; n < r; n++) e[n - a] = this[n];
                            else e = new Uint16Array(0);
                        }
                        return e;
                    },
                    t.expandContext = function () {
                        var t = p.prototype,
                            e = CanvasRenderingContext2D.prototype;
                        e.fillTrangles = t.fillTrangles,
                            $t.__int__(null),
                            e.setIBVB = function (t, e, i, s, n, a, r, o, h, l) {
                                void 0 === h && (h = 0),
                                    void 0 === l && (l = 0),
                                    null === i && (this._ib = this._ib || Zt.QuadrangleIB, i = this._ib, mt.expandIBQuadrangle(i, s._byteLength / 64 + 8)),
                                    this._setIBVB(t, e, i, s, n, a, r, o, h, l);
                            },
                            e.fillTrangles = function (t, e, i, s, n) {
                                this._curMat = this._curMat || b.create(),
                                    this._vb = this._vb || Jt.create(),
                                    this._ib || (this._ib = Zt.create(), mt.fillIBQuadrangle(this._ib, r / 4));
                                var a = this._vb,
                                    r = s.length >> 4;
                                mt.fillTranglesVB(a, e, i, s, n || this._curMat, 0, 0),
                                    mt.expandIBQuadrangle(this._ib, a._byteLength / 64 + 8);
                                var o = new St(1, 0);
                                o.textureHost = t;
                                var h = new Qt("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }", "precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");
                                a._vertType = 3,
                                    this._setIBVB(e, i, this._ib, a, 6 * r, n, h, o, 0, 0);
                            };
                    },
                    t.enable = function () {
                        if (c.__init__(), M.isConchApp && !M.isConchWebGL) return I.skinAniSprite = function () {
                            return new tt();
                        },
                            t.expandContext(),
                            !1;
                        if (I.getWebGLContext = function (t) {
                            for (var e, i = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"], s = 0; s < i.length; s++) {
                                try {
                                    e = t.getContext(i[s], {
                                        stencil: _.isStencil,
                                        alpha: _.isAlpha,
                                        antialias: _.isAntialias,
                                        premultipliedAlpha: _.premultipliedAlpha,
                                        preserveDrawingBuffer: _.preserveDrawingBuffer
                                    });
                                } catch (t) { }
                                if (e) return e;
                            }
                            return null;
                        },
                            null == (t.mainContext = I.getWebGLContext(M._mainCanvas))) return !1;
                        if (M.isWebGL) return !0;
                        v.create = function (t, e) {
                            return new te(t, e);
                        },
                            y.create = function (t, e, i, s, n, a, r) {
                                return new Kt(t, e, i, s, n, a, r);
                            },
                            M.WebGL = t,
                            M.isWebGL = !0,
                            _t.__init__(),
                            I.createRenderSprite = function (t, e) {
                                return new Ct(t, e);
                            },
                            I.createWebGLContext2D = function (t) {
                                return new Mt(t);
                            },
                            I.changeWebGLSize = function (t, e) {
                                laya.webgl.WebGL.onStageResize(t, e);
                            },
                            I.createGraphics = function () {
                                return new wt();
                            };
                        var e = I.createFilterAction;
                        return I.createFilterAction = e ||
                            function (t) {
                                return new Tt();
                            },
                            I.clear = function (t) {
                                vt.worldScissorTest && laya.webgl.WebGL.mainContext.disable(3089);
                                var e = M.context.ctx,
                                    i = 0 == e._submits._length || _.preserveDrawingBuffer ? d.create(t)._color : E._wgColor;
                                i && e.clearBG(i[0], i[1], i[2], i[3]),
                                    vt.clear();
                            },
                            I.addToAtlas = function (t, e) {
                                void 0 === e && (e = !1);
                                var s = t.bitmap;
                                M.optimizeTextureMemory(t.url, t) ? i.__typeof(s, "laya.webgl.resource.IMergeAtlasBitmap") && s.allowMerageInAtlas && s.on("recovered", t, t.addTextureToAtlas) : s.enableMerageInAtlas = !1;
                            },
                            I.isAtlas = function (t) {
                                return t instanceof laya.webgl.atlas.AtlasWebGLCanvas;
                            },
                            U._enable(),
                            I.beginFlush = function () {
                                for (var t = U.instance,
                                    e = t.getAtlaserCount(), i = 0; i < e; i++) {
                                    var s = t.getAtlaserByIndex(i).texture;
                                    s._flashCacheImageNeedFlush && I.flashFlushImage(s);
                                }
                            },
                            I.drawToCanvas = function (t, e, i, s, n, a) {
                                (i <= 0 || s <= 0) && console.log("[error] canvasWidth and canvasHeight should greater than zero"),
                                    n -= t.x,
                                    a -= t.y,
                                    i |= 1,
                                    s |= 1,
                                    n |= 1,
                                    a |= 1;
                                var r = Nt.create(i, s, 6408, 5121, 0, !1);
                                r.start(),
                                    r.clear(0, 0, 0, 0),
                                    M.context.clear(),
                                    S.renders[e]._fun(t, M.context, n, vt.height - s + a),
                                    M.context.flush(),
                                    r.end();
                                var o = r.getData(0, 0, i, s);
                                if (r.recycle(), o.byteLength == i * s * 4) {
                                    var h = new Yt();
                                    h._canvas = c.createElement("canvas"),
                                        h.size(i, s);
                                    var l = h._canvas.getContext("2d");
                                    c.canvas.size(i, s);
                                    var u = c.context,
                                        d = u.createImageData(i, s);
                                    return d.data.set(new Uint8ClampedArray(o.buffer)),
                                        h._imgData = d,
                                        u.putImageData(d, 0, 0),
                                        l.save(),
                                        l.translate(0, s),
                                        l.scale(1, -1),
                                        l.drawImage(c.canvas.source, 0, 0),
                                        l.restore(),
                                        h;
                                }
                                console.log("drawToCanvas error: w:" + i + ",h:" + s + ",datalen:" + o.byteLength);
                            },
                            I.createFilterAction = function (t) {
                                var e;
                                switch (t) {
                                    case 32:
                                        e = new Tt();
                                }
                                return e;
                            },
                            I.addTextureToAtlas = function (t) {
                                t._uvID++ ,
                                    U._atlasRestore++ ,
                                    t.bitmap.enableMerageInAtlas && U.instance.addToAtlas(t);
                            },
                            I.getTexturePixels = function (t, e, i, s, n) {
                                M.context.ctx.clear();
                                var a = new L();
                                a.graphics.drawTexture(t, -e, -i);
                                var r = Nt.create(s, n);
                                r.start(),
                                    r.clear(0, 0, 0, 0),
                                    a.render(M.context, 0, 0),
                                    M.context.ctx.flush(),
                                    r.end();
                                for (var o = r.getData(0, 0, s, n), h = [], l = 0, c = n - 1; c >= 0; c--) for (var u = 0; u < s; u++) l = 4 * (c * s + u),
                                    h.push(o[l]),
                                    h.push(o[l + 1]),
                                    h.push(o[l + 2]),
                                    h.push(o[l + 3]);
                                return h;
                            },
                            I.skinAniSprite = function () {
                                return new tt();
                            },
                            g.create = function (t, e) {
                                var i = new Yt();
                                return i._imgData = e,
                                    i.flipY = !1,
                                    i;
                            },
                            f._filterStart = function (t, e, i, s, n) {
                                var a = t.getValue("bounds"),
                                    r = Nt.create(a.width, a.height);
                                if (r.start(), r.clear(0, 0, 0, 0), t.addValue("src", r), t.addValue("ScissorTest", vt.worldScissorTest), vt.worldScissorTest) {
                                    var o = new w();
                                    o.copyFrom(i.ctx._clipRect),
                                        t.addValue("clipRect", o),
                                        vt.worldScissorTest = !1,
                                        laya.webgl.WebGL.mainContext.disable(3089);
                                }
                            },
                            f._filterEnd = function (t, e, i, s, n) {
                                var a = t.getValue("bounds");
                                t.getValue("src").end();
                                var r = Nt.create(a.width, a.height);
                                r.start(),
                                    r.clear(0, 0, 0, 0),
                                    t.addValue("out", r),
                                    e._set$P("_filterCache", r),
                                    e._set$P("_isHaveGlowFilter", t.getValue("_isHaveGlowFilter"));
                            },
                            f._EndTarget = function (t, e) {
                                t.getValue("src").recycle();
                                t.getValue("out").end();
                                if (t.getValue("ScissorTest")) {
                                    vt.worldScissorTest = !0,
                                        laya.webgl.WebGL.mainContext.enable(3089),
                                        e.ctx.save();
                                    var i = t.getValue("clipRect");
                                    e.ctx.clipRect(i.x, i.y, i.width, i.height);
                                }
                            },
                            f._useSrc = function (t) {
                                var e = t.getValue("out");
                                e.end(),
                                    (e = t.getValue("src")).start(),
                                    e.clear(0, 0, 0, 0);
                            },
                            f._endSrc = function (t) {
                                t.getValue("src").end();
                            },
                            f._useOut = function (t) {
                                var e = t.getValue("src");
                                e.end(),
                                    (e = t.getValue("out")).start(),
                                    e.clear(0, 0, 0, 0);
                            },
                            f._endOut = function (t) {
                                t.getValue("out").end();
                            },
                            f._recycleScope = function (t) {
                                t.recycle();
                            },
                            f._filter = function (t, e, i, s) {
                                var n = this._next;
                                if (n) {
                                    var a = t.filters,
                                        r = a.length;
                                    if (1 == r && 32 == a[0].type) return e.ctx.save(),
                                        e.ctx.setFilters([a[0]]),
                                        n._fun.call(n, t, e, i, s),
                                        void e.ctx.restore();
                                    var o, h, l = ot.create(),
                                        c = x.TEMP,
                                        u = e.ctx._getTransformMatrix(),
                                        d = b.create();
                                    u.copyTo(d);
                                    var _ = 0,
                                        p = 0,
                                        m = !1,
                                        g = t._$P._filterCache ? t._$P._filterCache : null;
                                    if (!g || t._repaint) {
                                        m = t._isHaveGlowFilter(),
                                            l.addValue("_isHaveGlowFilter", m),
                                            m && (_ = 50, p = 25),
                                            (h = new w()).copyFrom(t.getSelfBounds()),
                                            h.x += t.x,
                                            h.y += t.y,
                                            h.x -= t.pivotX + 4,
                                            h.y -= t.pivotY + 4;
                                        var v = h.x,
                                            y = h.y;
                                        if (h.width += _ + 8, h.height += _ + 8, c.x = h.x * d.a + h.y * d.c, c.y = h.y * d.d + h.x * d.b, h.x = c.x, h.y = c.y, c.x = h.width * d.a + h.height * d.c, c.y = h.height * d.d + h.width * d.b, h.width = c.x, h.height = c.y, h.width <= 0 || h.height <= 0) return;
                                        g && g.recycle(),
                                            l.addValue("bounds", h);
                                        var M = rt.create([l, t, e, 0, 0], f._filterStart);
                                        e.addRenderObject(M),
                                            e.ctx._renderKey = 0,
                                            e.ctx._shader2D.glTexture = null;
                                        var S = t.x - v + p,
                                            C = t.y - y + p;
                                        n._fun.call(n, t, e, S, C),
                                            M = rt.create([l, t, e, 0, 0], f._filterEnd),
                                            e.addRenderObject(M);
                                        for (var T = 0; T < r; T++) {
                                            0 != T && (M = rt.create([l], f._useSrc), e.addRenderObject(M), o = St.create(1, 0), b.TEMP.identity(), e.ctx.drawTarget(l, 0, 0, h.width, h.height, b.TEMP, "out", o, null, X.TOINT.overlay), M = rt.create([l], f._useOut), e.addRenderObject(M));
                                            a[T].action.apply3d(l, t, e, 0, 0);
                                        }
                                        M = rt.create([l, e], f._EndTarget),
                                            e.addRenderObject(M);
                                    } else {
                                        if ((m = !!t._$P._isHaveGlowFilter && t._$P._isHaveGlowFilter) && (_ = 50, p = 25), (h = t.getBounds()).width <= 0 || h.height <= 0) return;
                                        h.width += _,
                                            h.height += _,
                                            c.x = h.x * d.a + h.y * d.c,
                                            c.y = h.y * d.d + h.x * d.b,
                                            h.x = c.x,
                                            h.y = c.y,
                                            c.x = h.width * d.a + h.height * d.c,
                                            c.y = h.height * d.d + h.width * d.b,
                                            h.width = c.x,
                                            h.height = c.y,
                                            l.addValue("out", g);
                                    }
                                    i = i - p - t.x,
                                        s = s - p - t.y,
                                        c.setTo(i, s),
                                        d.transformPoint(c),
                                        i = c.x + h.x,
                                        s = c.y + h.y,
                                        o = St.create(1, 0),
                                        b.TEMP.identity(),
                                        e.ctx.drawTarget(l, i, s, h.width, h.height, b.TEMP, "out", o, null, X.TOINT.overlay),
                                        M = rt.create([l], f._recycleScope),
                                        e.addRenderObject(M),
                                        d.destroy();
                                }
                            },
                            Float32Array.prototype.slice || (Float32Array.prototype.slice = t._float32ArraySlice),
                            Uint16Array.prototype.slice || (Uint16Array.prototype.slice = t._uint16ArraySlice),
                            Uint8Array.prototype.slice || (Uint8Array.prototype.slice = t._uint8ArraySlice),
                            !0;
                    },
                    t.onStageResize = function (e, i) {
                        null != t.mainContext && (t.mainContext.viewport(0, 0, e, i), vt.width = e, vt.height = i);
                    },
                    t.onInvalidGLRes = function () {
                        U.instance.freeAll(),
                            T.releaseContentManagers(!0),
                            t.doNodeRepaint(i.stage),
                            t.mainContext.viewport(0, 0, vt.width, vt.height),
                            i.stage.event("devicelost");
                    },
                    t.doNodeRepaint = function (e) {
                        0 == e.numChildren && e.repaint();
                        for (var i = 0; i < e.numChildren; i++) t.doNodeRepaint(e.getChildAt(i));
                    },
                    t.init = function (e, i, s) {
                        t.mainCanvas = e,
                            g._createContext = function (t) {
                                return new Mt(t);
                            },
                            Yt._createContext = function (t) {
                                return new Mt(t);
                            };
                        var n = laya.webgl.WebGL.mainContext;
                        if (null != n.getShaderPrecisionFormat) {
                            var a = n.getShaderPrecisionFormat(35633, 36338),
                                r = n.getShaderPrecisionFormat(35632, 36338);
                            t.shaderHighPrecision = !(!a.precision || !r.precision);
                        } else t.shaderHighPrecision = !1;
                        if (t.compressAstc = n.getExtension("WEBGL_compressed_texture_astc"), t.compressAtc = n.getExtension("WEBGL_compressed_texture_atc"), t.compressEtc = n.getExtension("WEBGL_compressed_texture_etc"), t.compressEtc1 = n.getExtension("WEBGL_compressed_texture_etc1"), t.compressPvrtc = n.getExtension("WEBGL_compressed_texture_pvrtc"), t.compressS3tc = n.getExtension("WEBGL_compressed_texture_s3tc"), t.compressS3tc_srgb = n.getExtension("WEBGL_compressed_texture_s3tc_srgb"), n.deleteTexture1 = n.deleteTexture, n.deleteTexture = function (t) {
                            t == xt.curBindTexValue && (xt.curBindTexValue = null),
                                n.deleteTexture1(t);
                        },
                            t.onStageResize(i, s), null == t.mainContext) throw new Error("webGL getContext err!");
                        P.__init__(),
                            U.__init__(),
                            Lt.__init__(),
                            at.__init__(),
                            Mt.__init__(),
                            St.__init__(),
                            Z.__init__(),
                            $t.__int__(n),
                            X._init_(n),
                            M.isConchApp && conch.setOnInvalidGLRes(t.onInvalidGLRes);
                    },
                    t.compressAstc = null,
                    t.compressAtc = null,
                    t.compressEtc = null,
                    t.compressEtc1 = null,
                    t.compressPvrtc = null,
                    t.compressS3tc = null,
                    t.compressS3tc_srgb = null,
                    t.mainCanvas = null,
                    t.mainContext = null,
                    t.antialias = !0,
                    t.shaderHighPrecision = !1,
                    t._bg_null = [0, 0, 0, 0],
                    t;
            }(),
            xt = function () {
                function t() { }
                return n(t, "laya.webgl.WebGLContext"),
                    t.UseProgram = function (e) {
                        return t._useProgram !== e && (bt.mainContext.useProgram(e), t._useProgram = e, !0);
                    },
                    t.setDepthTest = function (e, i) {
                        i !== t._depthTest && (t._depthTest = i, i ? e.enable(2929) : e.disable(2929));
                    },
                    t.setDepthMask = function (e, i) {
                        i !== t._depthMask && (t._depthMask = i, e.depthMask(i));
                    },
                    t.setDepthFunc = function (e, i) {
                        i !== t._depthFunc && (t._depthFunc = i, e.depthFunc(i));
                    },
                    t.setBlend = function (e, i) {
                        i !== t._blend && (t._blend = i, i ? e.enable(3042) : e.disable(3042));
                    },
                    t.setBlendFunc = function (e, i, s) {
                        (i !== t._sFactor || s !== t._dFactor) && (t._sFactor = i, t._dFactor = s, e.blendFunc(i, s));
                    },
                    t.setCullFace = function (e, i) {
                        i !== t._cullFace && (t._cullFace = i, i ? e.enable(2884) : e.disable(2884));
                    },
                    t.setFrontFace = function (e, i) {
                        i !== t._frontFace && (t._frontFace = i, e.frontFace(i));
                    },
                    t.bindTexture = function (e, i, s) {
                        e.bindTexture(i, s),
                            t.curBindTexTarget = i,
                            t.curBindTexValue = s;
                    },
                    t.DEPTH_BUFFER_BIT = 256,
                    t.STENCIL_BUFFER_BIT = 1024,
                    t.COLOR_BUFFER_BIT = 16384,
                    t.POINTS = 0,
                    t.LINES = 1,
                    t.LINE_LOOP = 2,
                    t.LINE_STRIP = 3,
                    t.TRIANGLES = 4,
                    t.TRIANGLE_STRIP = 5,
                    t.TRIANGLE_FAN = 6,
                    t.ZERO = 0,
                    t.ONE = 1,
                    t.SRC_COLOR = 768,
                    t.ONE_MINUS_SRC_COLOR = 769,
                    t.SRC_ALPHA = 770,
                    t.ONE_MINUS_SRC_ALPHA = 771,
                    t.DST_ALPHA = 772,
                    t.ONE_MINUS_DST_ALPHA = 773,
                    t.DST_COLOR = 774,
                    t.ONE_MINUS_DST_COLOR = 775,
                    t.SRC_ALPHA_SATURATE = 776,
                    t.FUNC_ADD = 32774,
                    t.BLEND_EQUATION = 32777,
                    t.BLEND_EQUATION_RGB = 32777,
                    t.BLEND_EQUATION_ALPHA = 34877,
                    t.FUNC_SUBTRACT = 32778,
                    t.FUNC_REVERSE_SUBTRACT = 32779,
                    t.BLEND_DST_RGB = 32968,
                    t.BLEND_SRC_RGB = 32969,
                    t.BLEND_DST_ALPHA = 32970,
                    t.BLEND_SRC_ALPHA = 32971,
                    t.CONSTANT_COLOR = 32769,
                    t.ONE_MINUS_CONSTANT_COLOR = 32770,
                    t.CONSTANT_ALPHA = 32771,
                    t.ONE_MINUS_CONSTANT_ALPHA = 32772,
                    t.BLEND_COLOR = 32773,
                    t.ARRAY_BUFFER = 34962,
                    t.ELEMENT_ARRAY_BUFFER = 34963,
                    t.ARRAY_BUFFER_BINDING = 34964,
                    t.ELEMENT_ARRAY_BUFFER_BINDING = 34965,
                    t.STREAM_DRAW = 35040,
                    t.STATIC_DRAW = 35044,
                    t.DYNAMIC_DRAW = 35048,
                    t.BUFFER_SIZE = 34660,
                    t.BUFFER_USAGE = 34661,
                    t.CURRENT_VERTEX_ATTRIB = 34342,
                    t.FRONT = 1028,
                    t.BACK = 1029,
                    t.CULL_FACE = 2884,
                    t.FRONT_AND_BACK = 1032,
                    t.BLEND = 3042,
                    t.DITHER = 3024,
                    t.STENCIL_TEST = 2960,
                    t.DEPTH_TEST = 2929,
                    t.SCISSOR_TEST = 3089,
                    t.POLYGON_OFFSET_FILL = 32823,
                    t.SAMPLE_ALPHA_TO_COVERAGE = 32926,
                    t.SAMPLE_COVERAGE = 32928,
                    t.NO_ERROR = 0,
                    t.INVALID_ENUM = 1280,
                    t.INVALID_VALUE = 1281,
                    t.INVALID_OPERATION = 1282,
                    t.OUT_OF_MEMORY = 1285,
                    t.CW = 2304,
                    t.CCW = 2305,
                    t.LINE_WIDTH = 2849,
                    t.ALIASED_POINT_SIZE_RANGE = 33901,
                    t.ALIASED_LINE_WIDTH_RANGE = 33902,
                    t.CULL_FACE_MODE = 2885,
                    t.FRONT_FACE = 2886,
                    t.DEPTH_RANGE = 2928,
                    t.DEPTH_WRITEMASK = 2930,
                    t.DEPTH_CLEAR_VALUE = 2931,
                    t.DEPTH_FUNC = 2932,
                    t.STENCIL_CLEAR_VALUE = 2961,
                    t.STENCIL_FUNC = 2962,
                    t.STENCIL_FAIL = 2964,
                    t.STENCIL_PASS_DEPTH_FAIL = 2965,
                    t.STENCIL_PASS_DEPTH_PASS = 2966,
                    t.STENCIL_REF = 2967,
                    t.STENCIL_VALUE_MASK = 2963,
                    t.STENCIL_WRITEMASK = 2968,
                    t.STENCIL_BACK_FUNC = 34816,
                    t.STENCIL_BACK_FAIL = 34817,
                    t.STENCIL_BACK_PASS_DEPTH_FAIL = 34818,
                    t.STENCIL_BACK_PASS_DEPTH_PASS = 34819,
                    t.STENCIL_BACK_REF = 36003,
                    t.STENCIL_BACK_VALUE_MASK = 36004,
                    t.STENCIL_BACK_WRITEMASK = 36005,
                    t.VIEWPORT = 2978,
                    t.SCISSOR_BOX = 3088,
                    t.COLOR_CLEAR_VALUE = 3106,
                    t.COLOR_WRITEMASK = 3107,
                    t.UNPACK_ALIGNMENT = 3317,
                    t.PACK_ALIGNMENT = 3333,
                    t.MAX_TEXTURE_SIZE = 3379,
                    t.MAX_VIEWPORT_DIMS = 3386,
                    t.SUBPIXEL_BITS = 3408,
                    t.RED_BITS = 3410,
                    t.GREEN_BITS = 3411,
                    t.BLUE_BITS = 3412,
                    t.ALPHA_BITS = 3413,
                    t.DEPTH_BITS = 3414,
                    t.STENCIL_BITS = 3415,
                    t.POLYGON_OFFSET_UNITS = 10752,
                    t.POLYGON_OFFSET_FACTOR = 32824,
                    t.TEXTURE_BINDING_2D = 32873,
                    t.SAMPLE_BUFFERS = 32936,
                    t.SAMPLES = 32937,
                    t.SAMPLE_COVERAGE_VALUE = 32938,
                    t.SAMPLE_COVERAGE_INVERT = 32939,
                    t.NUM_COMPRESSED_TEXTURE_FORMATS = 34466,
                    t.COMPRESSED_TEXTURE_FORMATS = 34467,
                    t.DONT_CARE = 4352,
                    t.FASTEST = 4353,
                    t.NICEST = 4354,
                    t.GENERATE_MIPMAP_HINT = 33170,
                    t.BYTE = 5120,
                    t.UNSIGNED_BYTE = 5121,
                    t.SHORT = 5122,
                    t.UNSIGNED_SHORT = 5123,
                    t.INT = 5124,
                    t.UNSIGNED_INT = 5125,
                    t.FLOAT = 5126,
                    t.DEPTH_COMPONENT = 6402,
                    t.ALPHA = 6406,
                    t.RGB = 6407,
                    t.RGBA = 6408,
                    t.LUMINANCE = 6409,
                    t.LUMINANCE_ALPHA = 6410,
                    t.UNSIGNED_SHORT_4_4_4_4 = 32819,
                    t.UNSIGNED_SHORT_5_5_5_1 = 32820,
                    t.UNSIGNED_SHORT_5_6_5 = 33635,
                    t.FRAGMENT_SHADER = 35632,
                    t.VERTEX_SHADER = 35633,
                    t.MAX_VERTEX_ATTRIBS = 34921,
                    t.MAX_VERTEX_UNIFORM_VECTORS = 36347,
                    t.MAX_VARYING_VECTORS = 36348,
                    t.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661,
                    t.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660,
                    t.MAX_TEXTURE_IMAGE_UNITS = 34930,
                    t.MAX_FRAGMENT_UNIFORM_VECTORS = 36349,
                    t.SHADER_TYPE = 35663,
                    t.DELETE_STATUS = 35712,
                    t.LINK_STATUS = 35714,
                    t.VALIDATE_STATUS = 35715,
                    t.ATTACHED_SHADERS = 35717,
                    t.ACTIVE_UNIFORMS = 35718,
                    t.ACTIVE_ATTRIBUTES = 35721,
                    t.SHADING_LANGUAGE_VERSION = 35724,
                    t.CURRENT_PROGRAM = 35725,
                    t.NEVER = 512,
                    t.LESS = 513,
                    t.EQUAL = 514,
                    t.LEQUAL = 515,
                    t.GREATER = 516,
                    t.NOTEQUAL = 517,
                    t.GEQUAL = 518,
                    t.ALWAYS = 519,
                    t.KEEP = 7680,
                    t.REPLACE = 7681,
                    t.INCR = 7682,
                    t.DECR = 7683,
                    t.INVERT = 5386,
                    t.INCR_WRAP = 34055,
                    t.DECR_WRAP = 34056,
                    t.VENDOR = 7936,
                    t.RENDERER = 7937,
                    t.VERSION = 7938,
                    t.NEAREST = 9728,
                    t.LINEAR = 9729,
                    t.NEAREST_MIPMAP_NEAREST = 9984,
                    t.LINEAR_MIPMAP_NEAREST = 9985,
                    t.NEAREST_MIPMAP_LINEAR = 9986,
                    t.LINEAR_MIPMAP_LINEAR = 9987,
                    t.TEXTURE_MAG_FILTER = 10240,
                    t.TEXTURE_MIN_FILTER = 10241,
                    t.TEXTURE_WRAP_S = 10242,
                    t.TEXTURE_WRAP_T = 10243,
                    t.TEXTURE_2D = 3553,
                    t.TEXTURE = 5890,
                    t.TEXTURE_CUBE_MAP = 34067,
                    t.TEXTURE_BINDING_CUBE_MAP = 34068,
                    t.TEXTURE_CUBE_MAP_POSITIVE_X = 34069,
                    t.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070,
                    t.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,
                    t.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072,
                    t.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073,
                    t.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,
                    t.MAX_CUBE_MAP_TEXTURE_SIZE = 34076,
                    t.TEXTURE0 = 33984,
                    t.TEXTURE1 = 33985,
                    t.TEXTURE2 = 33986,
                    t.TEXTURE3 = 33987,
                    t.TEXTURE4 = 33988,
                    t.TEXTURE5 = 33989,
                    t.TEXTURE6 = 33990,
                    t.TEXTURE7 = 33991,
                    t.TEXTURE8 = 33992,
                    t.TEXTURE9 = 33993,
                    t.TEXTURE10 = 33994,
                    t.TEXTURE11 = 33995,
                    t.TEXTURE12 = 33996,
                    t.TEXTURE13 = 33997,
                    t.TEXTURE14 = 33998,
                    t.TEXTURE15 = 33999,
                    t.TEXTURE16 = 34e3,
                    t.TEXTURE17 = 34001,
                    t.TEXTURE18 = 34002,
                    t.TEXTURE19 = 34003,
                    t.TEXTURE20 = 34004,
                    t.TEXTURE21 = 34005,
                    t.TEXTURE22 = 34006,
                    t.TEXTURE23 = 34007,
                    t.TEXTURE24 = 34008,
                    t.TEXTURE25 = 34009,
                    t.TEXTURE26 = 34010,
                    t.TEXTURE27 = 34011,
                    t.TEXTURE28 = 34012,
                    t.TEXTURE29 = 34013,
                    t.TEXTURE30 = 34014,
                    t.TEXTURE31 = 34015,
                    t.ACTIVE_TEXTURE = 34016,
                    t.REPEAT = 10497,
                    t.CLAMP_TO_EDGE = 33071,
                    t.MIRRORED_REPEAT = 33648,
                    t.FLOAT_VEC2 = 35664,
                    t.FLOAT_VEC3 = 35665,
                    t.FLOAT_VEC4 = 35666,
                    t.INT_VEC2 = 35667,
                    t.INT_VEC3 = 35668,
                    t.INT_VEC4 = 35669,
                    t.BOOL = 35670,
                    t.BOOL_VEC2 = 35671,
                    t.BOOL_VEC3 = 35672,
                    t.BOOL_VEC4 = 35673,
                    t.FLOAT_MAT2 = 35674,
                    t.FLOAT_MAT3 = 35675,
                    t.FLOAT_MAT4 = 35676,
                    t.SAMPLER_2D = 35678,
                    t.SAMPLER_CUBE = 35680,
                    t.VERTEX_ATTRIB_ARRAY_ENABLED = 34338,
                    t.VERTEX_ATTRIB_ARRAY_SIZE = 34339,
                    t.VERTEX_ATTRIB_ARRAY_STRIDE = 34340,
                    t.VERTEX_ATTRIB_ARRAY_TYPE = 34341,
                    t.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922,
                    t.VERTEX_ATTRIB_ARRAY_POINTER = 34373,
                    t.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975,
                    t.COMPILE_STATUS = 35713,
                    t.LOW_FLOAT = 36336,
                    t.MEDIUM_FLOAT = 36337,
                    t.HIGH_FLOAT = 36338,
                    t.LOW_INT = 36339,
                    t.MEDIUM_INT = 36340,
                    t.HIGH_INT = 36341,
                    t.FRAMEBUFFER = 36160,
                    t.RENDERBUFFER = 36161,
                    t.RGBA4 = 32854,
                    t.RGB5_A1 = 32855,
                    t.RGB565 = 36194,
                    t.DEPTH_COMPONENT16 = 33189,
                    t.STENCIL_INDEX = 6401,
                    t.STENCIL_INDEX8 = 36168,
                    t.DEPTH_STENCIL = 34041,
                    t.RENDERBUFFER_WIDTH = 36162,
                    t.RENDERBUFFER_HEIGHT = 36163,
                    t.RENDERBUFFER_INTERNAL_FORMAT = 36164,
                    t.RENDERBUFFER_RED_SIZE = 36176,
                    t.RENDERBUFFER_GREEN_SIZE = 36177,
                    t.RENDERBUFFER_BLUE_SIZE = 36178,
                    t.RENDERBUFFER_ALPHA_SIZE = 36179,
                    t.RENDERBUFFER_DEPTH_SIZE = 36180,
                    t.RENDERBUFFER_STENCIL_SIZE = 36181,
                    t.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048,
                    t.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049,
                    t.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050,
                    t.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051,
                    t.COLOR_ATTACHMENT0 = 36064,
                    t.DEPTH_ATTACHMENT = 36096,
                    t.STENCIL_ATTACHMENT = 36128,
                    t.DEPTH_STENCIL_ATTACHMENT = 33306,
                    t.NONE = 0,
                    t.FRAMEBUFFER_COMPLETE = 36053,
                    t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054,
                    t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055,
                    t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057,
                    t.FRAMEBUFFER_UNSUPPORTED = 36061,
                    t.FRAMEBUFFER_BINDING = 36006,
                    t.RENDERBUFFER_BINDING = 36007,
                    t.MAX_RENDERBUFFER_SIZE = 34024,
                    t.INVALID_FRAMEBUFFER_OPERATION = 1286,
                    t.UNPACK_FLIP_Y_WEBGL = 37440,
                    t.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441,
                    t.CONTEXT_LOST_WEBGL = 37442,
                    t.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443,
                    t.BROWSER_DEFAULT_WEBGL = 37444,
                    t._useProgram = null,
                    t._depthTest = !0,
                    t._depthMask = !0,
                    t._blend = !1,
                    t._cullFace = !1,
                    t.curBindTexTarget = null,
                    t.curBindTexValue = null,
                    s(t, ["_depthFunc",
                        function () {
                            return this._depthFunc = 513;
                        },
                        "_sFactor",
                        function () {
                            return this._sFactor = 1;
                        },
                        "_dFactor",
                        function () {
                            return this._dFactor = 0;
                        },
                        "_frontFace",
                        function () {
                            return this._frontFace = 2305;
                        }]),
                    t;
            }(),
            wt = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.webgl.display.GraphicsGL", m);
                var i = e.prototype;
                return i.setShader = function (t) {
                    this._saveToCmd(M.context._setShader, [t]);
                },
                    i.setIBVB = function (t, e, i, s, n, a) {
                        this._saveToCmd(M.context._setIBVB, [t, e, i, s, n, a]);
                    },
                    i.drawParticle = function (t, e, i) {
                        var s = I.createParticleTemplate2D(i);
                        s.x = t,
                            s.y = e,
                            this._saveToCmd(M.context._drawParticle, [s]);
                    },
                    e;
            }(),
            Mt = function (t) {
                function e(t) {
                    this._x = 0,
                        this._y = 0,
                        this._id = ++e._COUNT,
                        this._path = null,
                        this._drawCount = 1,
                        this._maxNumEle = 0,
                        this._clear = !1,
                        this._isMain = !1,
                        this._atlasResourceChange = 0,
                        this._submits = null,
                        this._curSubmit = null,
                        this._ib = null,
                        this._vb = null,
                        this._nBlendType = 0,
                        this._saveMark = null,
                        this._shader2D = null,
                        this.meshlist = [],
                        this.mId = -1,
                        this.mHaveKey = !1,
                        this.mHaveLineKey = !1,
                        this.mX = 0,
                        this.mY = 0,
                        e.__super.call(this),
                        this._width = 99999999,
                        this._height = 99999999,
                        this._clipRect = e.MAXCLIPRECT,
                        this.mOutPoint,
                        this._canvas = t,
                        e._contextcount++ ,
                        M.isFlash ? (this._ib = Zt.create(35044), mt.fillIBQuadrangle(this._ib, 16)) : this._ib = Zt.QuadrangleIB,
                        this.clear();
                }
                var r;
                n(e, "laya.webgl.canvas.WebGLContext2D", p);
                var o = e.prototype;
                return o.setIsMainContext = function () {
                    this._isMain = !0;
                },
                    o.clearBG = function (t, e, i, s) {
                        var n = bt.mainContext;
                        n.clearColor(t, e, i, s),
                            n.clear(16384);
                    },
                    o._getSubmits = function () {
                        return this._submits;
                    },
                    o._releaseMem = function () {
                        if (this._submits) {
                            this._curMat.destroy(),
                                this._curMat = null,
                                this._shader2D.destroy(),
                                this._shader2D = null;
                            for (var t = 0,
                                e = this._submits._length; t < e; t++) this._submits[t].releaseRender();
                            this._submits.length = 0,
                                this._submits._length = 0,
                                this._submits = null,
                                this._curSubmit = null,
                                this._path && this._path.recover(),
                                this._path = null,
                                this._other && (this._other.font = null),
                                this._save = null,
                                this._vb && (this._vb.releaseResource(), this._vb.destroy(), this._vb.destory(), this._vb = null);
                        }
                    },
                    o.destroy = function () {
                        --e._contextcount,
                            this.sprite = null,
                            this._releaseMem(),
                            this._targets && this._targets.destroy(),
                            this._targets = null,
                            this._canvas = null,
                            this._ib && this._ib != Zt.QuadrangleIB && this._ib.releaseResource();
                    },
                    o.clear = function () {
                        this._submits || (this._other = r.DEFAULT, this._curMat = b.create(), this._vb = Jt.create(- 1), this._submits = [], this._save = [q.Create(this)], this._save.length = 10, this._shader2D = new Z(), this._triangleMesh = Dt.getAMesh()),
                            this._vb.clear(),
                            this._targets && (this._targets.repaint = !0),
                            this._other = r.DEFAULT,
                            this._clear = !0,
                            this._repaint = !1,
                            this._drawCount = 1,
                            this._renderKey = 0,
                            this._other.lineWidth = this._shader2D.ALPHA = 1,
                            this._nBlendType = 0,
                            this._clipRect = e.MAXCLIPRECT,
                            this._curSubmit = at.RENDERBASE,
                            this._shader2D.glTexture = null,
                            this._shader2D.fillStyle = this._shader2D.strokeStyle = z.DEFAULT;
                        for (var t = 0,
                            i = this._submits._length; t < i; t++) this._submits[t].releaseRender();
                        this._submits._length = 0,
                            this._curMat.identity(),
                            this._other.clear(),
                            this._saveMark = this._save[0],
                            this._save._length = 1;
                    },
                    o.size = function (t, e) {
                        if (this._width != t || this._height != e) if (0 == t || 0 == e) {
                            0 != this._vb._byteLength && (this._width = t, this._height = e, this._vb.clear(), this._vb.upload());
                            for (var i = 0,
                                s = this._submits._length; i < s; i++) this._submits[i].releaseRender();
                            this._submits.length = 0,
                                this._submits._length = 0,
                                this._curSubmit = null,
                                this._path && this._path.recover(),
                                this._path = null,
                                this.sprite = null,
                                this._targets && this._targets.destroy(),
                                this._targets = null;
                        } else this._width = t,
                            this._height = e,
                            this._targets && this._targets.size(t, e),
                            this._canvas.memorySize -= this._canvas.memorySize;
                        0 === t && 0 === e && this._releaseMem();
                    },
                    o._getTransformMatrix = function () {
                        return this._curMat;
                    },
                    o.translate = function (t, e) {
                        0 === t && 0 === e || (j.save(this), this._curMat.bTransform && ($.save(this), this._curMat.transformPointN(x.TEMP.setTo(t, e)), t = x.TEMP.x, e = x.TEMP.y), this._x += t, this._y += e);
                    },
                    o.save = function () {
                        this._save[this._save._length++] = q.Create(this);
                    },
                    o.restore = function () {
                        var t = this._save._length;
                        if (!(t < 1)) for (var e = t - 1; e >= 0; e--) {
                            var i = this._save[e];
                            if (i.restore(this), i.isSaveMark()) return void (this._save._length = e);
                        }
                    },
                    o._fillText = function (t, e, i, s, n, a, r, o, h, l) {
                        void 0 === l && (l = 0);
                        var c = this._shader2D,
                            u = this._curSubmit.shaderValue,
                            _ = n ? pt.create(n) : this._other.font;
                        if (U.enabled) c.ALPHA !== u.ALPHA && (c.glTexture = null),
                            _t.drawText(this, t, e, this._curMat, _, h || this._other.textAlign, a, r, o, i, s, l);
                        else {
                            this._shader2D.defines.getValue();
                            var p = a ? d.create(a)._color : c.colorAdd;
                            c.ALPHA === u.ALPHA && p === c.colorAdd && u.colorAdd === c.colorAdd || (c.glTexture = null, c.colorAdd = p),
                                _t.drawText(this, t, e, this._curMat, _, h || this._other.textAlign, a, r, o, i, s, l);
                        }
                    },
                    o.fillWords = function (t, e, i, s, n, a) {
                        this._fillText(null, t, e, i, s, n, null, -1, null, a);
                    },
                    o.fillBorderWords = function (t, e, i, s, n, a, r) {
                        this._fillBorderText(null, t, e, i, s, n, a, r, null);
                    },
                    o.fillText = function (t, e, i, s, n, a) {
                        this._fillText(t, null, e, i, s, n, null, -1, a);
                    },
                    o.strokeText = function (t, e, i, s, n, a, r) {
                        this._fillText(t, null, e, i, s, null, n, a || 1, r);
                    },
                    o.fillBorderText = function (t, e, i, s, n, a, r, o) {
                        this._fillBorderText(t, null, e, i, s, n, a, r, o);
                    },
                    o._fillBorderText = function (t, i, s, n, a, r, o, h, l) {
                        if (!U.enabled) return this._fillText(t, i, s, n, a, null, o, h || 1, l),
                            void this._fillText(t, i, s, n, a, r, null, -1, l);
                        var c = this._shader2D,
                            u = this._curSubmit.shaderValue;
                        c.ALPHA !== u.ALPHA && (c.glTexture = null);
                        var d = a ? (e._fontTemp.setFont(a), e._fontTemp) : this._other.font;
                        _t.drawText(this, t, i, this._curMat, d, l || this._other.textAlign, r, o, h || 1, s, n, 0);
                    },
                    o.fillRect = function (t, e, i, s, n) {
                        var a = this._vb;
                        if (mt.fillRectImgVb(a, this._clipRect, t, e, i, s, D.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                            this._renderKey = 0;
                            var r = this._shader2D.fillStyle;
                            n && (this._shader2D.fillStyle = z.create(n));
                            var o = this._shader2D,
                                h = this._curSubmit.shaderValue;
                            if (o.fillStyle !== h.fillStyle || o.ALPHA !== h.ALPHA) {
                                o.glTexture = null;
                                var l = this._curSubmit = at.createSubmit(this, this._ib, a, (a._byteLength - 64) / 32 * 3, St.create(2, 0));
                                l.shaderValue.color = o.fillStyle._color._color,
                                    l.shaderValue.ALPHA = o.ALPHA,
                                    this._submits[this._submits._length++] = l;
                            }
                            this._curSubmit._numEle += 6,
                                this._shader2D.fillStyle = r;
                        }
                    },
                    o.fillTexture = function (t, e, s, n, a, r, o, h) {
                        if (t.loaded && t.bitmap && t.source) {
                            var l = this._vb,
                                c = t.bitmap.width,
                                u = t.bitmap.height,
                                d = t.uv,
                                _ = o.x % t.width,
                                p = o.y % t.height;
                            if (c != h.w || u != h.h) {
                                if (!h.w && !h.h) switch (h.oy = h.ox = 0, r) {
                                    case "repeat":
                                        h.width = n,
                                            h.height = a;
                                        break;

                                    case "repeat-x":
                                        h.width = n,
                                            p < 0 ? t.height + p > a ? h.height = a : h.height = t.height + p : (h.oy = p, t.height + p > a ? h.height = a - p : h.height = t.height);
                                        break;

                                    case "repeat-y":
                                        _ < 0 ? t.width + _ > n ? h.width = n : h.width = t.width + _ : (h.ox = _, t.width + _ > n ? h.width = n - _ : h.width = t.width),
                                            h.height = a;
                                        break;

                                    default:
                                        h.width = n,
                                            h.height = a;
                                }
                                h.w = c,
                                    h.h = u,
                                    h.uv = [0, 0, h.width / c, 0, h.width / c, h.height / u, 0, h.height / u];
                            }
                            if (e += h.ox, s += h.oy, _ -= h.ox, p -= h.oy, mt.fillRectImgVb(l, this._clipRect, e, s, h.width, h.height, h.uv, this._curMat, this._x, this._y, 0, 0)) {
                                this._renderKey = 0;
                                var f = kt.create(this, this._ib, l, (l._byteLength - 64) / 32 * 3, St.create(256, 0));
                                this._submits[this._submits._length++] = f;
                                var m = f.shaderValue;
                                m.textureHost = t;
                                var g = d[0] * c,
                                    v = d[1] * u,
                                    y = (d[2] - d[0]) * c,
                                    b = (d[5] - d[3]) * u,
                                    x = -_ / c,
                                    w = -p / u;
                                m.u_TexRange[0] = g / c,
                                    m.u_TexRange[1] = y / c,
                                    m.u_TexRange[2] = v / u,
                                    m.u_TexRange[3] = b / u,
                                    m.u_offset[0] = x,
                                    m.u_offset[1] = w,
                                    U.enabled && !this._isMain && f.addTexture(t, (l._byteLength >> 2) - 16),
                                    this._curSubmit = f,
                                    f._renderType = 10017,
                                    f._numEle += 6;
                            }
                        } else this.sprite && i.timer.callLater(this, this._repaintSprite);
                    },
                    o.setShader = function (t) {
                        H.save(this, 1048576, this._shader2D, !0),
                            this._shader2D.shader = t;
                    },
                    o.setFilters = function (t) {
                        H.save(this, 2097152, this._shader2D, !0),
                            this._shader2D.filters = t,
                            this._curSubmit = at.RENDERBASE,
                            this._renderKey = 0,
                            this._drawCount++;
                    },
                    o.drawTexture = function (t, e, i, s, n, a, r) {
                        this._drawTextureM(t, e, i, s, n, a, r, null, 1);
                    },
                    o.addTextureVb = function (t, e, i) {
                        var s = this._curSubmit._vb || this._vb,
                            n = s._byteLength >> 2;
                        s.byteLength = n + 16 << 2;
                        for (var a = s.getFloat32Array(), r = 0; r < 16; r += 4) a[n++] = t[r] + e,
                            a[n++] = t[r + 1] + i,
                            a[n++] = t[r + 2],
                            a[n++] = t[r + 3];
                        this._curSubmit._numEle += 6,
                            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle),
                            s._upload = !0;
                    },
                    o.willDrawTexture = function (t, e) {
                        if (!(t.loaded && t.bitmap && t.source)) return this.sprite && i.timer.callLater(this, this._repaintSprite),
                            0;
                        var s = t.bitmap,
                            n = s.id + this._shader2D.ALPHA * e + 10016;
                        if (n == this._renderKey) return n;
                        var a = this._shader2D,
                            r = a.ALPHA,
                            o = this._curSubmit.shaderValue;
                        a.ALPHA *= e,
                            this._renderKey = n,
                            this._drawCount++ ,
                            a.glTexture = s;
                        var h = this._vb,
                            l = null,
                            c = h._byteLength / 32 * 3;
                        return l = kt.create(this, this._ib, h, c, St.create(1, 0)),
                            this._submits[this._submits._length++] = l,
                            l.shaderValue.textureHost = t,
                            l._renderType = 10016,
                            l._preIsSameTextureShader = 10016 === this._curSubmit._renderType && a.ALPHA === o.ALPHA,
                            this._curSubmit = l,
                            a.ALPHA = r,
                            n;
                    },
                    o.drawTextures = function (t, s, n, a) {
                        if (t.loaded && t.bitmap && t.source) {
                            var r = this._clipRect;
                            if (this._clipRect = e.MAXCLIPRECT, this._drawTextureM(t, s[0], s[1], t.width, t.height, n, a, null, 1)) {
                                if (this._clipRect = r, A.drawCall++ , !(s.length < 4)) {
                                    for (var o = this._curSubmit._vb || this._vb,
                                        h = this._curMat.a,
                                        l = this._curMat.d,
                                        c = 2,
                                        u = s.length; c < u; c += 2) mt.copyPreImgVb(o, (s[c] - s[c - 2]) * h, (s[c + 1] - s[c - 1]) * l),
                                            this._curSubmit._numEle += 6;
                                    this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle);
                                }
                            } else alert("drawTextures err");
                        } else this.sprite && i.timer.callLater(this, this._repaintSprite);
                    },
                    o._drawTextureM = function (t, e, s, n, a, r, o, h, l) {
                        if (!t.loaded || !t.source) return this.sprite && i.timer.callLater(this, this._repaintSprite),
                            !1;
                        var c = this._curSubmit._vb || this._vb,
                            u = t.bitmap;
                        e += r,
                            s += o,
                            this._drawCount++;
                        var d = u.id + this._shader2D.ALPHA * l + 10016;
                        if (d != this._renderKey) {
                            this._renderKey = d;
                            var _ = this._curSubmit.shaderValue,
                                p = this._shader2D,
                                f = p.ALPHA;
                            p.ALPHA *= l,
                                p.glTexture = u;
                            var m = this._vb,
                                g = null,
                                v = m._byteLength / 32 * 3;
                            g = kt.create(this, this._ib, m, v, St.create(1, 0)),
                                this._submits[this._submits._length++] = g,
                                g.shaderValue.textureHost = t,
                                g._renderType = 10016,
                                g._preIsSameTextureShader = 10016 === this._curSubmit._renderType && p.ALPHA === _.ALPHA,
                                this._curSubmit = g,
                                c = this._curSubmit._vb || this._vb,
                                p.ALPHA = f;
                        }
                        return !!mt.fillRectImgVb(c, this._clipRect, e, s, n || t.width, a || t.height, t.uv, h || this._curMat, this._x, this._y, 0, 0) && (U.enabled && !this._isMain && this._curSubmit.addTexture(t, (c._byteLength >> 2) - 16), this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle), !0);
                    },
                    o._repaintSprite = function () {
                        this.sprite && this.sprite.repaint();
                    },
                    o._drawText = function (t, e, i, s, n, a, r, o, h, l) {
                        var c = t.bitmap;
                        this._drawCount++;
                        var u = c.id + this._shader2D.ALPHA + 10016;
                        if (u != this._renderKey) {
                            this._renderKey = u;
                            var d = this._curSubmit.shaderValue,
                                _ = this._shader2D;
                            _.glTexture = c;
                            var p = this._vb,
                                f = null,
                                m = p._byteLength / 32 * 3; (f = U.enabled ? kt.create(this, this._ib, p, m, St.create(1, 0)) : kt.create(this, this._ib, p, m, jt.create()))._preIsSameTextureShader = 10016 === this._curSubmit._renderType && _.ALPHA === d.ALPHA,
                                    this._submits[this._submits._length++] = f,
                                    f.shaderValue.textureHost = t,
                                    f._renderType = 10016,
                                    this._curSubmit = f;
                        }
                        t.active();
                        var g = this._curSubmit._vb || this._vb;
                        mt.fillRectImgVb(g, this._clipRect, e + r, i + o, s || t.width, n || t.height, t.uv, a || this._curMat, this._x, this._y, h, l, !0) && (U.enabled && !this._isMain && this._curSubmit.addTexture(t, (g._byteLength >> 2) - 16), this._curSubmit._numEle += 6, this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle));
                    },
                    o.drawTextureWithTransform = function (t, i, s, n, a, r, o, h, l) {
                        if (r) {
                            var c = this._curMat,
                                u = this._x,
                                d = this._y; (0 !== o || 0 !== h) && (this._x = o * c.a + h * c.c, this._y = h * c.d + o * c.b),
                                    r && c.bTransform ? (b.mul(r, c, e._tmpMatrix), (r = e._tmpMatrix)._checkTransform()) : (this._x += c.tx, this._y += c.ty),
                                    this._drawTextureM(t, i, s, n, a, 0, 0, r, l),
                                    this._x = u,
                                    this._y = d;
                        } else this._drawTextureM(t, i, s, n, a, o, h, null, l);
                    },
                    o.fillQuadrangle = function (t, e, i, s, n) {
                        var a = this._curSubmit,
                            r = this._vb,
                            o = this._shader2D,
                            h = a.shaderValue;
                        if (this._renderKey = 0, t.bitmap) {
                            var l = t.bitmap;
                            o.glTexture == l && o.ALPHA === h.ALPHA || (o.glTexture = l, (a = this._curSubmit = at.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, St.create(1, 0))).shaderValue.glTexture = l, this._submits[this._submits._length++] = a),
                                mt.fillQuadrangleImgVb(r, e, i, s, t.uv, n || this._curMat, this._x, this._y);
                        } else a.shaderValue.fillStyle && a.shaderValue.fillStyle.equal(t) && o.ALPHA === h.ALPHA || (o.glTexture = null, (a = this._curSubmit = at.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, St.create(2, 0))).shaderValue.defines.add(2), a.shaderValue.fillStyle = z.create(t), this._submits[this._submits._length++] = a),
                            mt.fillQuadrangleImgVb(r, e, i, s, D.DEF_UV, n || this._curMat, this._x, this._y);
                        a._numEle += 6;
                    },
                    o.drawTexture2 = function (t, i, s, n, a, r, o, h) {
                        if (0 != r) {
                            var l = this._curMat;
                            if (this._x = t * l.a + i * l.c, this._y = i * l.d + t * l.b, a && (l.bTransform || a.bTransform ? (b.mul(a, l, e._tmpMatrix), a = e._tmpMatrix) : (this._x += a.tx + l.tx, this._y += a.ty + l.ty, a = b.EMPTY)), 1 !== r || o) {
                                var c = this._shader2D.ALPHA,
                                    u = this._nBlendType;
                                this._shader2D.ALPHA = r,
                                    o && (this._nBlendType = X.TOINT(o)),
                                    this._drawTextureM(h[0], h[1] - s, h[2] - n, h[3], h[4], 0, 0, a, 1),
                                    this._shader2D.ALPHA = c,
                                    this._nBlendType = u;
                            } else this._drawTextureM(h[0], h[1] - s, h[2] - n, h[3], h[4], 0, 0, a, 1);
                            this._x = this._y = 0;
                        }
                    },
                    o.drawCanvas = function (t, e, i, s, n) {
                        var a = t.context;
                        if (this._renderKey = 0, a._targets) this._submits[this._submits._length++] = Pt.create(a, 0, null),
                            this._curSubmit = at.RENDERBASE,
                            a._targets.drawTo(this, e, i, s, n);
                        else {
                            var r = this._submits[this._submits._length++] = Pt.create(a, this._shader2D.ALPHA, this._shader2D.filters),
                                o = s / t.width,
                                h = n / t.height,
                                l = r._matrix;
                            this._curMat.copyTo(l),
                                1 != o && 1 != h && l.scale(o, h);
                            var c = l.tx,
                                u = l.ty;
                            l.tx = l.ty = 0,
                                l.transformPoint(x.TEMP.setTo(e, i)),
                                l.translate(x.TEMP.x + c, x.TEMP.y + u),
                                this._curSubmit = at.RENDERBASE;
                        }
                        _.showCanvasMark && (this.save(), this.lineWidth = 4, this.strokeStyle = a._targets ? "yellow" : "green", this.strokeRect(e - 1, i - 1, s + 2, n + 2, 1), this.strokeRect(e, i, s, n, 1), this.restore());
                    },
                    o.drawTarget = function (t, e, i, s, n, a, r, o, h, l) {
                        void 0 === l && (l = -1);
                        var c = this._vb;
                        if (mt.fillRectImgVb(c, this._clipRect, e, i, s, n, h || D.DEF_UV, a || this._curMat, this._x, this._y, 0, 0)) {
                            this._renderKey = 0;
                            this._shader2D.glTexture = null;
                            this._curSubmit.shaderValue;
                            var u = this._curSubmit = ut.create(this, this._ib, c, (c._byteLength - 64) / 32 * 3, o, r);
                            u.blendType = -1 == l ? this._nBlendType : l,
                                u.scope = t,
                                this._submits[this._submits._length++] = u,
                                this._curSubmit._numEle += 6;
                        }
                    },
                    o.mixRGBandAlpha = function (t) {
                        return this._mixRGBandAlpha(t, this._shader2D.ALPHA);
                    },
                    o._mixRGBandAlpha = function (t, e) {
                        var i = (4278190080 & t) >>> 24;
                        return 0 != i ? i *= e : i = 255 * e,
                            16777215 & t | i << 24;
                    },
                    o.drawTriangles = function (t, s, n, a, r, o, h, l, c, u) {
                        if (!t.loaded || !t.source) return this.sprite && i.timer.callLater(this, this._repaintSprite),
                            !1;
                        this._drawCount++;
                        t.bitmap;
                        var d = this._mixRGBandAlpha(4294967295, l),
                            _ = (a.length, o.length);
                        this._renderKey = -1;
                        var p = this._curSubmit = kt.create(this, this._triangleMesh.getIBR(), this._triangleMesh.getVBR(), this._triangleMesh.indexNum, St.create(1, 0));
                        return p.shaderValue.textureHost = t,
                            p._renderType = 10016,
                            this._submits[this._submits._length++] = p,
                            h ? (e._tmpMatrix.a = h.a, e._tmpMatrix.b = h.b, e._tmpMatrix.c = h.c, e._tmpMatrix.d = h.d, e._tmpMatrix.tx = h.tx + s, e._tmpMatrix.ty = h.ty + n, b.mul(e._tmpMatrix, this._curMat, e._tmpMatrix)) : (e._tmpMatrix.a = this._curMat.a, e._tmpMatrix.b = this._curMat.b, e._tmpMatrix.c = this._curMat.c, e._tmpMatrix.d = this._curMat.d, e._tmpMatrix.tx = this._curMat.tx + s, e._tmpMatrix.ty = this._curMat.ty + n),
                            this._triangleMesh.addData(a, r, o, e._tmpMatrix, d, this),
                            this._curSubmit._numEle += _,
                            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle),
                            !0;
                    },
                    o.transform = function (t, e, i, s, n, a) {
                        $.save(this),
                            b.mul(b.TEMP.setTo(t, e, i, s, n, a), this._curMat, this._curMat),
                            this._curMat._checkTransform();
                    },
                    o.setTransformByMatrix = function (t) {
                        t.copyTo(this._curMat);
                    },
                    o.transformByMatrix = function (t) {
                        $.save(this),
                            b.mul(t, this._curMat, this._curMat),
                            this._curMat._checkTransform();
                    },
                    o.rotate = function (t) {
                        $.save(this),
                            this._curMat.rotateEx(t);
                    },
                    o.scale = function (t, e) {
                        $.save(this),
                            this._curMat.scaleEx(t, e);
                    },
                    o.clipRect = function (t, e, i, s) {
                        if (0 != this._curMat.b || 0 != this._curMat.c) {
                            this._renderKey = 0;
                            var n = ct.create(4);
                            this.addRenderObject(n);
                            var a = this._vb,
                                r = a._byteLength >> 2;
                            if (mt.fillRectImgVb(a, null, t, e, i, s, D.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                                this._shader2D.glTexture = null;
                                var o = this._curSubmit = at.createSubmit(this, this._ib, a, (a._byteLength - 64) / 32 * 3, St.create(2, 0));
                                o.shaderValue.ALPHA = 1,
                                    this._submits[this._submits._length++] = o,
                                    this._curSubmit._numEle += 6;
                            } else alert("clipRect calc stencil rect error");
                            var h = ct.create(5);
                            this.addRenderObject(h);
                            var l = a.getFloat32Array(),
                                c = Math.min(Math.min(Math.min(l[r + 0], l[r + 4]), l[r + 8]), l[r + 12]),
                                u = Math.max(Math.max(Math.max(l[r + 0], l[r + 4]), l[r + 8]), l[r + 12]),
                                d = Math.min(Math.min(Math.min(l[r + 1], l[r + 5]), l[r + 9]), l[r + 13]),
                                _ = Math.max(Math.max(Math.max(l[r + 1], l[r + 5]), l[r + 9]), l[r + 13]);
                            K.save(this, h, t, e, i, s, c, d, u - c, _ - d),
                                this._curSubmit = at.RENDERBASE;
                        } else {
                            i *= this._curMat.a,
                                s *= this._curMat.d;
                            var p = x.TEMP;
                            this._curMat.transformPoint(p.setTo(t, e)),
                                i < 0 && (p.x = p.x + i, i = -i),
                                s < 0 && (p.y = p.y + s, s = -s),
                                this._renderKey = 0;
                            var f = this._curSubmit = lt.create(this);
                            this._submits[this._submits._length++] = f,
                                f.submitIndex = this._submits._length,
                                f.submitLength = 9999999,
                                V.save(this, f);
                            var m = this._clipRect,
                                g = m.x,
                                v = m.y,
                                y = p.x + i,
                                b = p.y + s;
                            g < p.x && (m.x = p.x),
                                v < p.y && (m.y = p.y),
                                m.width = Math.min(y, g + m.width) - m.x,
                                m.height = Math.min(b, v + m.height) - m.y,
                                this._shader2D.glTexture = null,
                                f.clipRect.copyFrom(m),
                                this._curSubmit = at.RENDERBASE;
                        }
                    },
                    o.setIBVB = function (t, e, i, s, n, a, r, o, h, l, c) {
                        if (void 0 === h && (h = 0), void 0 === l && (l = 0), void 0 === c && (c = 0), null === i) {
                            if (M.isFlash) {
                                var u = s;
                                u._selfIB || (u._selfIB = Zt.create(35044)),
                                    u._selfIB.clear(),
                                    i = u._selfIB;
                            } else i = this._ib;
                            mt.expandIBQuadrangle(i, s._byteLength / (4 * s.vertexStride * 4));
                        }
                        if (!o || !r) throw Error("setIBVB must input:shader shaderValues");
                        var d = ht.create(this, s, i, n, r, o, h, l, c);
                        a || (a = b.EMPTY),
                            a.translate(t, e),
                            b.mul(a, this._curMat, d._mat),
                            a.translate(- t, -e),
                            this._submits[this._submits._length++] = d,
                            this._curSubmit = at.RENDERBASE,
                            this._renderKey = 0;
                    },
                    o.addRenderObject = function (t) {
                        this._submits[this._submits._length++] = t;
                    },
                    o.fillTrangles = function (t, e, i, s, n) {
                        var a = this._curSubmit,
                            r = this._vb,
                            o = this._shader2D,
                            h = a.shaderValue,
                            l = s.length >> 4,
                            c = t.bitmap;
                        this._renderKey = 0,
                            o.glTexture == c && o.ALPHA === h.ALPHA || ((a = this._curSubmit = at.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, St.create(1, 0))).shaderValue.textureHost = t, this._submits[this._submits._length++] = a),
                            mt.fillTranglesVB(r, e, i, s, n || this._curMat, this._x, this._y),
                            a._numEle += 6 * l;
                    },
                    o.submitElement = function (t, e) {
                        var i = this._submits;
                        for (e < 0 && (e = i._length); t < e;) t += i[t].renderSubmit();
                    },
                    o.finish = function () {
                        bt.mainContext.finish();
                    },
                    o.flush = function () {
                        var t = Math.max(this._vb._byteLength / 64, this._maxNumEle / 6) + 8;
                        if (t > this._ib.bufferLength / 12 && mt.expandIBQuadrangle(this._ib, t), !this._isMain && U.enabled && U._atlasRestore > this._atlasResourceChange) {
                            this._atlasResourceChange = U._atlasRestore;
                            for (var e = this._submits,
                                i = 0,
                                s = e._length; i < s; i++) {
                                var n = e[i];
                                10016 === n.getRenderType() && n.checkTexture();
                            }
                        }
                        this.submitElement(0, this._submits._length),
                            this._path && this._path.reset(),
                            et.instance && et.getInstance().reset();
                        var a = 0;
                        for (i = 0, a = this.meshlist.length; i < a; i++) {
                            var r = this.meshlist[i];
                            r.canReuse ? r.releaseMesh() : r.destroy();
                        }
                        return this.meshlist.length = 0,
                            this._curSubmit = at.RENDERBASE,
                            this._renderKey = 0,
                            this._triangleMesh = Dt.getAMesh(),
                            this.meshlist.push(this._triangleMesh),
                            this._submits._length;
                    },
                    o.setPathId = function (t) {
                        if (this.mId = t, -1 != this.mId) {
                            this.mHaveKey = !1;
                            var e = N.getInstance();
                            e.shapeDic[this.mId] && (this.mHaveKey = !0),
                                this.mHaveLineKey = !1,
                                e.shapeLineDic[this.mId] && (this.mHaveLineKey = !0);
                        }
                    },
                    o.movePath = function (t, e) {
                        var i = t,
                            s = e;
                        t = this._curMat.a * i + this._curMat.c * s + this._curMat.tx,
                            e = this._curMat.b * i + this._curMat.d * s + this._curMat.ty,
                            this.mX += t,
                            this.mY += e;
                    },
                    o.beginPath = function () {
                        var t = this._getPath();
                        t.tempArray.length = 0,
                            t.closePath = !1,
                            this.mX = 0,
                            this.mY = 0;
                    },
                    o.closePath = function () {
                        this._path.closePath = !0;
                    },
                    o.fill = function (t) {
                        void 0 === t && (t = !1);
                        var e = this._getPath();
                        this.drawPoly(0, 0, e.tempArray, this.fillStyle._color.numColor, 0, 0, t);
                    },
                    o.stroke = function () {
                        var t = this._getPath();
                        if (this.lineWidth > 0) {
                            if (- 1 == this.mId) t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor);
                            else if (this.mHaveLineKey) {
                                var e = N.getInstance().shapeLineDic[this.mId];
                                e.rebuild(t.tempArray),
                                    t.setGeomtry(e);
                            } else N.getInstance().addLine(this.mId, t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor));
                            t.update();
                            var i = [this.mX, this.mY],
                                s = at.createShape(this, t.ib, t.vb, t.count, t.offset, St.create(4, 0));
                            s.shaderValue.ALPHA = this._shader2D.ALPHA,
                                s.shaderValue.u_pos = i,
                                s.shaderValue.u_mmat2 = vt.TEMPMAT4_ARRAY,
                                this._submits[this._submits._length++] = s,
                                this._renderKey = -1;
                        }
                    },
                    o.line = function (t, e, i, s, n, a) {
                        var r = this._curSubmit,
                            o = this._vb;
                        if (mt.fillLineVb(o, this._clipRect, t, e, i, s, n, a)) {
                            this._renderKey = 0;
                            var h = this._shader2D,
                                l = r.shaderValue;
                            h.strokeStyle === l.strokeStyle && h.ALPHA === l.ALPHA || (h.glTexture = null, (r = this._curSubmit = at.createSubmit(this, this._ib, o, (o._byteLength - 64) / 32 * 3, St.create(2, 0))).shaderValue.strokeStyle = h.strokeStyle, r.shaderValue.mainID = 2, r.shaderValue.ALPHA = h.ALPHA, this._submits[this._submits._length++] = r),
                                r._numEle += 6;
                        }
                    },
                    o.moveTo = function (t, e, i) {
                        void 0 === i && (i = !0);
                        var s = this._getPath();
                        if (i) {
                            var n = t,
                                a = e;
                            t = this._curMat.a * n + this._curMat.c * a,
                                e = this._curMat.b * n + this._curMat.d * a;
                        }
                        s.addPoint(t, e);
                    },
                    o.lineTo = function (t, e, i) {
                        void 0 === i && (i = !0);
                        var s = this._getPath();
                        if (i) {
                            var n = t,
                                a = e;
                            t = this._curMat.a * n + this._curMat.c * a,
                                e = this._curMat.b * n + this._curMat.d * a;
                        }
                        s.addPoint(t, e);
                    },
                    o.drawCurves = function (t, e, i) {
                        this.setPathId(- 1),
                            this.beginPath(),
                            this.strokeStyle = i[3],
                            this.lineWidth = i[4];
                        var s = i[2];
                        t += i[0],
                            e += i[1],
                            this.movePath(t, e),
                            this.moveTo(s[0], s[1]);
                        for (var n = 2,
                            a = s.length; n < a;) this.quadraticCurveTo(s[n++], s[n++], s[n++], s[n++]);
                        this.stroke();
                    },
                    o.arcTo = function (t, i, s, n, a) {
                        if (- 1 == this.mId || !this.mHaveKey) {
                            var r = 0,
                                o = 0,
                                h = 0,
                                l = this._getPath();
                            this._curMat.copyTo(e._tmpMatrix),
                                e._tmpMatrix.tx = e._tmpMatrix.ty = 0,
                                e._tempPoint.setTo(l.getEndPointX(), l.getEndPointY()),
                                e._tmpMatrix.invertTransformPoint(e._tempPoint);
                            var c = e._tempPoint.x - t,
                                u = e._tempPoint.y - i,
                                d = Math.sqrt(c * c + u * u);
                            if (!(d <= 1e-6)) {
                                var _ = c / d,
                                    p = u / d,
                                    f = s - t,
                                    m = n - i,
                                    g = f * f + m * m,
                                    v = Math.sqrt(g);
                                if (!(v <= 1e-6)) {
                                    var y = f / v,
                                        b = m / v,
                                        x = _ + y,
                                        w = p + b,
                                        M = Math.sqrt(x * x + w * w);
                                    if (!(M <= 1e-6)) {
                                        var S = x / M,
                                            C = w / M,
                                            T = Math.acos(S * _ + C * p),
                                            I = Math.PI / 2 - T,
                                            L = (d = a / Math.tan(I)) * _ + t,
                                            E = d * p + i,
                                            A = Math.sqrt(d * d + a * a),
                                            R = t + S * A,
                                            P = i + C * A,
                                            k = 0,
                                            D = 0,
                                            B = 0;
                                        if (_ * b - p * y >= 0) {
                                            var N = (k = 2 * I) / e.SEGNUM;
                                            D = Math.sin(N),
                                                B = Math.cos(N);
                                        } else N = (k = 2 * -I) / e.SEGNUM,
                                            D = Math.sin(N),
                                            B = Math.cos(N);
                                        o = this._curMat.a * L + this._curMat.c * E,
                                            h = this._curMat.b * L + this._curMat.d * E,
                                            o == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(o, h);
                                        var O = L - R,
                                            G = E - P;
                                        for (r = 0; r < e.SEGNUM; r++) {
                                            var F = O * B + G * D,
                                                U = -O * D + G * B;
                                            o = F + R,
                                                h = U + P,
                                                t = this._curMat.a * o + this._curMat.c * h,
                                                h = i = this._curMat.b * o + this._curMat.d * h,
                                                (o = t) == this._path.getEndPointX() && h == this._path.getEndPointY() || l.addPoint(o, h),
                                                O = F,
                                                G = U;
                                        }
                                    }
                                }
                            }
                        }
                    },
                    o.arc = function (t, e, i, s, n, a, r) {
                        if (void 0 === a && (a = !1), void 0 === r && (r = !0), -1 != this.mId) {
                            var o = N.getInstance().shapeDic[this.mId];
                            if (o && this.mHaveKey && !o.needUpdate(this._curMat)) return;
                            t = 0,
                                e = 0;
                        }
                        var h = 0,
                            l = 0,
                            c = 0,
                            u = 0,
                            d = 0,
                            _ = 0,
                            p = 0,
                            f = 0;
                        if (l = n - s, a) if (Math.abs(l) >= 2 * Math.PI) l = 2 * -Math.PI;
                        else for (; l > 0;) l -= 2 * Math.PI;
                        else if (Math.abs(l) >= 2 * Math.PI) l = 2 * Math.PI;
                        else for (; l < 0;) l += 2 * Math.PI;
                        c = l / (f = i < 101 ? Math.max(10, l * i / 5) : i < 201 ? Math.max(10, l * i / 20) : Math.max(10, l * i / 40)) / 2,
                            u = Math.abs(4 / 3 * (1 - Math.cos(c)) / Math.sin(c)),
                            a && (u = -u);
                        var m = this._getPath(),
                            g = NaN,
                            v = NaN;
                        for (p = 0; p <= f; p++) h = s + l * (p / f),
                            d = t + Math.cos(h) * i,
                            _ = e + Math.sin(h) * i,
                            r && (g = d, v = _, d = this._curMat.a * g + this._curMat.c * v, _ = this._curMat.b * g + this._curMat.d * v),
                            d == this._path.getEndPointX() && _ == this._path.getEndPointY() || m.addPoint(d, _);
                        d = t + Math.cos(n) * i,
                            _ = e + Math.sin(n) * i,
                            r && (g = d, v = _, d = this._curMat.a * g + this._curMat.c * v, _ = this._curMat.b * g + this._curMat.d * v),
                            d == this._path.getEndPointX() && _ == this._path.getEndPointY() || m.addPoint(d, _);
                    },
                    o.quadraticCurveTo = function (t, e, i, s) {
                        var n = h.I,
                            a = i,
                            r = s;
                        i = this._curMat.a * a + this._curMat.c * r,
                            s = this._curMat.b * a + this._curMat.d * r,
                            a = t,
                            r = e,
                            t = this._curMat.a * a + this._curMat.c * r,
                            e = this._curMat.b * a + this._curMat.d * r;
                        for (var o = n.getBezierPoints([this._path.getEndPointX(), this._path.getEndPointY(), t, e, i, s], 30, 2), l = 0, c = o.length / 2; l < c; l++) this.lineTo(o[2 * l], o[2 * l + 1], !1);
                        this.lineTo(i, s, !1);
                    },
                    o.rect = function (t, e, i, s) {
                        this._other = this._other.make(),
                            this._other.path || (this._other.path = new Y()),
                            this._other.path.rect(t, e, i, s);
                    },
                    o.strokeRect = function (t, e, i, s, n) {
                        var a = .5 * n;
                        this.line(t - a, e, t + i + a, e, n, this._curMat),
                            this.line(t + i, e, t + i, e + s, n, this._curMat),
                            this.line(t, e, t, e + s, n, this._curMat),
                            this.line(t - a, e + s, t + i + a, e + s, n, this._curMat);
                    },
                    o.clip = function () { },
                    o.drawPoly = function (t, e, i, s, n, a, r) {
                        void 0 === r && (r = !1),
                            this._renderKey = 0,
                            this._shader2D.glTexture = null;
                        var o = this._getPath();
                        if (- 1 == this.mId) o.polygon(t, e, i, s, n || 1, a);
                        else if (this.mHaveKey) {
                            var h = N.getInstance().shapeDic[this.mId];
                            h.setMatrix(this._curMat),
                                h.rebuild(o.tempArray),
                                o.setGeomtry(h);
                        } else {
                            var l = o.polygon(t, e, i, s, n || 1, a);
                            N.getInstance().addShape(this.mId, l),
                                l.setMatrix(this._curMat);
                        }
                        o.update();
                        var c, u = [this.mX, this.mY];
                        if (c = at.createShape(this, o.ib, o.vb, o.count, o.offset, St.create(4, 0)), c.shaderValue.ALPHA = this._shader2D.ALPHA, c.shaderValue.u_pos = u, c.shaderValue.u_mmat2 = vt.EMPTYMAT4_ARRAY, this._submits[this._submits._length++] = c, n > 0) {
                            if (this.mHaveLineKey) {
                                var d = N.getInstance().shapeLineDic[this.mId];
                                d.rebuild(o.tempArray),
                                    o.setGeomtry(d);
                            } else N.getInstance().addShape(this.mId, o.drawLine(t, e, i, n, a));
                            o.update(),
                                (c = at.createShape(this, o.ib, o.vb, o.count, o.offset, St.create(4, 0))).shaderValue.ALPHA = this._shader2D.ALPHA,
                                c.shaderValue.u_mmat2 = vt.EMPTYMAT4_ARRAY,
                                this._submits[this._submits._length++] = c;
                        }
                    },
                    o.drawParticle = function (t, e, i) {
                        i.x = t,
                            i.y = e,
                            this._submits[this._submits._length++] = i;
                    },
                    o._getPath = function () {
                        return this._path || (this._path = new Y());
                    },
                    a(0, o, "globalCompositeOperation",
                        function () {
                            return X.NAMES[this._nBlendType];
                        },
                        function (t) {
                            var e = X.TOINT[t];
                            null == e || this._nBlendType === e || (H.save(this, 65536, this, !0), this._curSubmit = at.RENDERBASE, this._renderKey = 0, this._nBlendType = e);
                        }),
                    a(0, o, "strokeStyle",
                        function () {
                            return this._shader2D.strokeStyle;
                        },
                        function (t) {
                            this._shader2D.strokeStyle.equal(t) || (H.save(this, 512, this._shader2D, !1), this._shader2D.strokeStyle = z.create(t));
                        }),
                    a(0, o, "globalAlpha",
                        function () {
                            return this._shader2D.ALPHA;
                        },
                        function (t) {
                            (t = Math.floor(1e3 * t) / 1e3) != this._shader2D.ALPHA && (H.save(this, 1, this._shader2D, !0), this._shader2D.ALPHA = t);
                        }),
                    a(0, o, "asBitmap", null,
                        function (t) {
                            if (t) {
                                if (this._targets || (this._targets = new Q()), this._targets.repaint = !0, !this._width || !this._height) throw Error("asBitmap no size!");
                                this._targets.setSP(this.sprite),
                                    this._targets.size(this._width, this._height);
                            } else this._targets = null;
                        }),
                    a(0, o, "fillStyle",
                        function () {
                            return this._shader2D.fillStyle;
                        },
                        function (t) {
                            this._shader2D.fillStyle.equal(t) || (H.save(this, 2, this._shader2D, !1), this._shader2D.fillStyle = z.create(t));
                        }),
                    a(0, o, "textAlign",
                        function () {
                            return this._other.textAlign;
                        },
                        function (t) {
                            this._other.textAlign === t || (this._other = this._other.make(), H.save(this, 32768, this._other, !1), this._other.textAlign = t);
                        }),
                    a(0, o, "lineWidth",
                        function () {
                            return this._other.lineWidth;
                        },
                        function (t) {
                            this._other.lineWidth === t || (this._other = this._other.make(), H.save(this, 256, this._other, !1), this._other.lineWidth = t);
                        }),
                    a(0, o, "textBaseline",
                        function () {
                            return this._other.textBaseline;
                        },
                        function (t) {
                            this._other.textBaseline === t || (this._other = this._other.make(), H.save(this, 16384, this._other, !1), this._other.textBaseline = t);
                        }),
                    a(0, o, "font", null,
                        function (t) {
                            t != this._other.font.toString() && (this._other = this._other.make(), H.save(this, 8, this._other, !1), this._other.font === pt.EMPTY ? this._other.font = new pt(t) : this._other.font.setFont(t));
                        }),
                    e.__init__ = function () {
                        r.DEFAULT = new r();
                    },
                    e._tempPoint = new x(),
                    e._SUBMITVBSIZE = 32e3,
                    e._MAXSIZE = 99999999,
                    e._RECTVBSIZE = 16,
                    e.MAXCLIPRECT = new w(0, 0, 99999999, 99999999),
                    e._COUNT = 0,
                    e._tmpMatrix = new b(),
                    e.SEGNUM = 32,
                    e._contextcount = 0,
                    s(e, ["_fontTemp",
                        function () {
                            return this._fontTemp = new pt();
                        },
                        "_drawStyleTemp",
                        function () {
                            return this._drawStyleTemp = new z(null);
                        }]),
                    e.__init$ = function () {
                        r = function () {
                            function t() {
                                this.lineWidth = 1,
                                    this.path = null,
                                    this.textAlign = null,
                                    this.textBaseline = null,
                                    this.font = pt.EMPTY;
                            }
                            n(t, "");
                            var e = t.prototype;
                            return e.clear = function () {
                                this.lineWidth = 1,
                                    this.path && this.path.clear(),
                                    this.textAlign = this.textBaseline = null,
                                    this.font = pt.EMPTY;
                            },
                                e.make = function () {
                                    return this === t.DEFAULT ? new t() : this;
                                },
                                t.DEFAULT = null,
                                t;
                        }();
                    },
                    e;
            }(),
            St = function (t) {
                function e(t, i) {
                    this.size = [0, 0],
                        this.alpha = 1,
                        this.ALPHA = 1,
                        this.subID = 0,
                        this._cacheID = 0,
                        e.__super.call(this),
                        this.defines = new Lt(),
                        this.position = e._POSITION,
                        this.mainID = t,
                        this.subID = i,
                        this.textureHost = null,
                        this.texture = null,
                        this.fillStyle = null,
                        this.color = null,
                        this.strokeStyle = null,
                        this.colorAdd = null,
                        this.glTexture = null,
                        this.u_mmat2 = null,
                        this._cacheID = t | i,
                        this._inClassCache = e._cache[this._cacheID],
                        t > 0 && !this._inClassCache && (this._inClassCache = e._cache[this._cacheID] = [], this._inClassCache._length = 0),
                        this.clear();
                }
                n(e, "laya.webgl.shader.d2.value.Value2D", G);
                var i = e.prototype;
                return i.setValue = function (t) { },
                    i.refresh = function () {
                        var t = this.size;
                        return t[0] = vt.width,
                            t[1] = vt.height,
                            this.alpha = this.ALPHA * vt.worldAlpha,
                            this.mmat = vt.worldMatrix4,
                            this;
                    },
                    i._ShaderWithCompile = function () {
                        return qt.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, Qt.create);
                    },
                    i._withWorldShaderDefines = function () {
                        var t = vt.worldShaderDefines,
                            e = qt.sharders[this.mainID | this.defines._value | t.getValue()];
                        if (!e) {
                            var i, s, n = {};
                            i = this.defines.toNameDic();
                            for (s in i) n[s] = "";
                            i = t.toNameDic();
                            for (s in i) n[s] = "";
                            e = qt.withCompile2D(0, this.mainID, n, this.mainID | this.defines._value | t.getValue(), Qt.create);
                        }
                        var a = vt.worldFilters;
                        if (!a) return e;
                        for (var r, o = a.length,
                            h = 0; h < o; h++)(r = a[h]) && r.action.setValue(this);
                        return e;
                    },
                    i.upload = function () {
                        var t = vt;
                        this.alpha = this.ALPHA * t.worldAlpha,
                            vt.worldMatrix4 !== vt.TEMPMAT4_ARRAY && this.defines.add(128),
                            bt.shaderHighPrecision && this.defines.add(1024);
                        var e, i = t.worldShaderDefines ? this._withWorldShaderDefines() : qt.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();
                        this.size[0] = t.width,
                            this.size[1] = t.height,
                            this.mmat = t.worldMatrix4,
                            Bt.activeShader !== i ? (i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width, i._shaderValueHeight = t.height) : e = i._params2dQuick2 || i._make2dQuick2(), i.upload(this, e)) : (i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width, i._shaderValueHeight = t.height) : e = i._params2dQuick1 || i._make2dQuick1(), i.upload(this, e));
                    },
                    i.setFilters = function (t) {
                        if (this.filters = t, t) for (var e, i = t.length,
                            s = 0; s < i; s++)(e = t[s]) && (this.defines.add(e.type), e.action.setValue(this));
                    },
                    i.clear = function () {
                        this.defines.setValue(this.subID);
                    },
                    i.release = function () {
                        this._inClassCache[this._inClassCache._length++] = this,
                            this.fillStyle = null,
                            this.strokeStyle = null,
                            this.clear();
                    },
                    e._initone = function (t, i) {
                        e._typeClass[t] = i,
                            e._cache[t] = [],
                            e._cache[t]._length = 0;
                    },
                    e.__init__ = function () {
                        e._POSITION = [2, 5126, !1, 4 * ft.BYTES_PE, 0],
                            e._TEXCOORD = [2, 5126, !1, 4 * ft.BYTES_PE, 2 * ft.BYTES_PE],
                            e._initone(2, Ft),
                            e._initone(4, Xt),
                            e._initone(256, Ut),
                            e._initone(512, Gt),
                            e._initone(1, Wt),
                            e._initone(65, jt),
                            e._initone(9, Wt);
                    },
                    e.create = function (t, i) {
                        var s = e._cache[t | i];
                        return s._length ? s[--s._length] : new e._typeClass[t | i](i);
                    },
                    e._POSITION = null,
                    e._TEXCOORD = null,
                    e._cache = [],
                    e._typeClass = [],
                    e.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                    e;
            }(),
            Ct = function (t) {
                function e(t, i) {
                    e.__super.call(this, t, i);
                }
                n(e, "laya.webgl.utils.RenderSprite3D", S);
                var i = e.prototype;
                return i.onCreate = function (t) {
                    switch (t) {
                        case 8:
                            return void (this._fun = this._blend);

                        case 4:
                            return void (this._fun = this._transform);
                    }
                },
                    i._mask = function (t, i, s, n) {
                        var a, r, o = this._next,
                            h = t.mask;
                        if (h) {
                            i.ctx.save();
                            var l = i.ctx.globalCompositeOperation,
                                c = new w();
                            if (c.copyFrom(h.getBounds()), c.width = Math.round(c.width), c.height = Math.round(c.height), c.x = Math.round(c.x), c.y = Math.round(c.y), c.width > 0 && c.height > 0) {
                                var u = t._style._tf,
                                    d = ot.create();
                                d.addValue("bounds", c),
                                    a = rt.create([d, i], laya.webgl.utils.RenderSprite3D.tmpTarget),
                                    i.addRenderObject(a),
                                    h.render(i, -c.x, -c.y),
                                    a = rt.create([d], laya.webgl.utils.RenderSprite3D.endTmpTarget),
                                    i.addRenderObject(a),
                                    i.ctx.save(),
                                    i.clipRect(s - u.translateX + c.x, n - u.translateY + c.y, c.width, c.height),
                                    o._fun.call(o, t, i, s, n),
                                    i.ctx.restore(),
                                    r = ct.create(6),
                                    l = i.ctx.globalCompositeOperation,
                                    r.blendMode = "mask",
                                    i.addRenderObject(r),
                                    b.TEMP.identity();
                                var _ = St.create(1, 0),
                                    p = D.INV_UV,
                                    f = c.width,
                                    m = c.height; (c.width < 32 || c.height < 32) && ((p = e.tempUV)[0] = 0, p[1] = 0, p[2] = c.width >= 32 ? 1 : c.width / 32, p[3] = 0, p[4] = c.width >= 32 ? 1 : c.width / 32, p[5] = c.height >= 32 ? 1 : c.height / 32, p[6] = 0, p[7] = c.height >= 32 ? 1 : c.height / 32, c.width = c.width >= 32 ? c.width : 32, c.height = c.height >= 32 ? c.height : 32, p[1] *= -1, p[3] *= -1, p[5] *= -1, p[7] *= -1, p[1] += 1, p[3] += 1, p[5] += 1, p[7] += 1),
                                        i.ctx.drawTarget(d, s + c.x - u.translateX, n + c.y - u.translateY, f, m, b.TEMP, "tmpTarget", _, p, 6),
                                        a = rt.create([d], laya.webgl.utils.RenderSprite3D.recycleTarget),
                                        i.addRenderObject(a),
                                        (r = ct.create(6)).blendMode = l,
                                        i.addRenderObject(r);
                            }
                            i.ctx.restore();
                        } else o._fun.call(o, t, i, s, n);
                    },
                    i._blend = function (t, e, i, s) {
                        var n = t._style,
                            a = this._next;
                        n.blendMode ? (e.ctx.save(), e.ctx.globalCompositeOperation = n.blendMode, a._fun.call(a, t, e, i, s), e.ctx.restore()) : a._fun.call(a, t, e, i, s);
                    },
                    i._transform = function (t, e, i, s) {
                        var n = t.transform,
                            a = this._next;
                        if (n && a != S.NORENDER) {
                            var r = e.ctx;
                            t._style;
                            n.tx = i,
                                n.ty = s;
                            var o = r._getTransformMatrix(),
                                h = o.clone();
                            b.mul(n, o, o),
                                o._checkTransform(),
                                n.tx = n.ty = 0,
                                a._fun.call(a, t, e, 0, 0),
                                h.copyTo(o),
                                h.destroy();
                        } else a._fun.call(a, t, e, i, s);
                    },
                    e.tmpTarget = function (t, e) {
                        var i = t.getValue("bounds"),
                            s = Nt.create(i.width, i.height);
                        s.start(),
                            s.clear(0, 0, 0, 0),
                            t.addValue("tmpTarget", s);
                    },
                    e.endTmpTarget = function (t) {
                        t.getValue("tmpTarget").end();
                    },
                    e.recycleTarget = function (t) {
                        t.getValue("tmpTarget").recycle(),
                            t.recycle();
                    },
                    s(e, ["tempUV",
                        function () {
                            return this.tempUV = new Array(8);
                        }]),
                    e;
            }(),
            Tt = function (t) {
                function e() {
                    this.data = null,
                        e.__super.call(this);
                }
                n(e, "laya.filters.webgl.ColorFilterActionGL", O);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.filters.IFilterActionGL": !0
                }),
                    s.setValue = function (t) {
                        t.colorMat = this.data._mat,
                            t.colorAlpha = this.data._alpha;
                    },
                    s.apply3d = function (t, e, i, s, n) {
                        var a = t.getValue("bounds"),
                            r = St.create(1, 0);
                        r.setFilters([this.data]);
                        var o = b.TEMP;
                        o.identity(),
                            i.ctx.drawTarget(t, 0, 0, a.width, a.height, o, "src", r);
                    },
                    e;
            }(),
            It = function (t) {
                function e(t, i, s, n, a) {
                    this._atlasCanvas = null,
                        this._inAtlasTextureKey = null,
                        this._inAtlasTextureBitmapValue = null,
                        this._inAtlasTextureOriUVValue = null,
                        this._InAtlasWebGLImagesKey = null,
                        this._InAtlasWebGLImagesOffsetValue = null,
                        e.__super.call(this, t, i, a),
                        this._inAtlasTextureKey = [],
                        this._inAtlasTextureBitmapValue = [],
                        this._inAtlasTextureOriUVValue = [],
                        this._InAtlasWebGLImagesKey = {},
                        this._InAtlasWebGLImagesOffsetValue = [],
                        this._atlasCanvas = new zt(),
                        this._atlasCanvas._atlaser = this,
                        this._atlasCanvas.width = s,
                        this._atlasCanvas.height = n,
                        this._atlasCanvas.activeResource(),
                        this._atlasCanvas.lock = !0;
                }
                n(e, "laya.webgl.atlas.Atlaser", F);
                var i = e.prototype;
                return i.computeUVinAtlasTexture = function (t, e, i, s) {
                    var n = U.atlasTextureWidth,
                        a = U.atlasTextureHeight,
                        r = i / n,
                        o = s / a,
                        h = (i + t.bitmap.width) / n,
                        l = (s + t.bitmap.height) / a,
                        c = t.bitmap.width / n,
                        u = t.bitmap.height / a;
                    t.uv = [r + e[0] * c, o + e[1] * u, h - (1 - e[2]) * c, o + e[3] * u, h - (1 - e[4]) * c, l - (1 - e[5]) * u, r + e[6] * c, l - (1 - e[7]) * u];
                },
                    i.findBitmapIsExist = function (t) {
                        if (t instanceof laya.webgl.resource.WebGLImage) {
                            var e = t,
                                i = e.url,
                                s = this._InAtlasWebGLImagesKey[i || e.id];
                            if (s) return s.offsetInfoID;
                        }
                        return - 1;
                    },
                    i.addToAtlasTexture = function (t, e, i) {
                        if (t instanceof laya.webgl.resource.WebGLImage) {
                            var s = t,
                                n = s.url;
                            this._InAtlasWebGLImagesKey[n || s.id] = {
                                bitmap: t,
                                offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length
                            },
                                this._InAtlasWebGLImagesOffsetValue.push([e, i]);
                        }
                        this._atlasCanvas.texSubImage2D(e, i, t.atlasSource),
                            t.clearAtlasSource();
                    },
                    i.addToAtlas = function (t, e, i) {
                        t._atlasID = this._inAtlasTextureKey.length;
                        var s = t.uv.slice(),
                            n = t.bitmap;
                        this._inAtlasTextureKey.push(t),
                            this._inAtlasTextureOriUVValue.push(s),
                            this._inAtlasTextureBitmapValue.push(n),
                            this.computeUVinAtlasTexture(t, s, e, i),
                            t.bitmap = this._atlasCanvas;
                    },
                    i.clear = function () {
                        for (var t = 0,
                            e = this._inAtlasTextureKey.length; t < e; t++) this._inAtlasTextureKey[t].bitmap = this._inAtlasTextureBitmapValue[t],
                                this._inAtlasTextureKey[t].uv = this._inAtlasTextureOriUVValue[t],
                                this._inAtlasTextureKey[t]._atlasID = -1,
                                this._inAtlasTextureKey[t].bitmap.lock = !1,
                                this._inAtlasTextureKey[t].bitmap.releaseResource();
                        this._inAtlasTextureKey.length = 0,
                            this._inAtlasTextureBitmapValue.length = 0,
                            this._inAtlasTextureOriUVValue.length = 0,
                            this._InAtlasWebGLImagesKey = null,
                            this._InAtlasWebGLImagesOffsetValue.length = 0;
                    },
                    i.dispose = function () {
                        this.clear(),
                            this._atlasCanvas.destroy();
                    },
                    a(0, i, "InAtlasWebGLImagesOffsetValue",
                        function () {
                            return this._InAtlasWebGLImagesOffsetValue;
                        }),
                    a(0, i, "texture",
                        function () {
                            return this._atlasCanvas;
                        }),
                    a(0, i, "inAtlasWebGLImagesKey",
                        function () {
                            return this._InAtlasWebGLImagesKey;
                        }),
                    e;
            }(),
            Lt = function (t) {
                function e() {
                    e.__super.call(this, e.__name2int, e.__int2name, e.__int2nameMap);
                }
                return n(e, "laya.webgl.shader.d2.ShaderDefines2D", J),
                    e.__init__ = function () {
                        e.reg("TEXTURE2D", 1),
                            e.reg("COLOR2D", 2),
                            e.reg("PRIMITIVE", 4),
                            e.reg("GLOW_FILTER", 8),
                            e.reg("BLUR_FILTER", 16),
                            e.reg("COLOR_FILTER", 32),
                            e.reg("COLOR_ADD", 64),
                            e.reg("WORLDMAT", 128),
                            e.reg("FILLTEXTURE", 256),
                            e.reg("FSHIGHPRECISION", 1024);
                    },
                    e.reg = function (t, i) {
                        J._reg(t, i, e.__name2int, e.__int2name);
                    },
                    e.toText = function (t, e, i) {
                        return J._toText(t, e, i);
                    },
                    e.toInt = function (t) {
                        return J._toInt(t, e.__name2int);
                    },
                    e.TEXTURE2D = 1,
                    e.COLOR2D = 2,
                    e.PRIMITIVE = 4,
                    e.FILTERGLOW = 8,
                    e.FILTERBLUR = 16,
                    e.FILTERCOLOR = 32,
                    e.COLORADD = 64,
                    e.WORLDMAT = 128,
                    e.FILLTEXTURE = 256,
                    e.SKINMESH = 512,
                    e.SHADERDEFINE_FSHIGHPRECISION = 1024,
                    e.__name2int = {},
                    e.__int2name = [],
                    e.__int2nameMap = [],
                    e;
            }(),
            Et = (function (t) {
                function e(t, i, s, n, a, r, o) {
                    e.__super.call(this, t, i, s, n, 40, a, r, o);
                }
                n(e, "laya.webgl.shapes.Ellipse", it);
            }(),
                function (t) {
                    function e(t, i, s, n, a) {
                        this._points = [],
                            this.rebuild(s),
                            e.__super.call(this, t, i, 0, 0, 0, a, n, a, 0);
                    }
                    n(e, "laya.webgl.shapes.Line", it);
                    var i = e.prototype;
                    return i.rebuild = function (t) {
                        var e = t.length;
                        e != this._points.length && (this.mUint16Array = new Uint16Array(6 * (e / 2 - 1)), this.mFloat32Array = new Float32Array(5 * e)),
                            this._points.length = 0;
                        for (var i = NaN,
                            s = NaN,
                            n = -1,
                            a = -1,
                            r = t.length / 2,
                            o = 0; o < r; o++) i = t[2 * o],
                                s = t[2 * o + 1],
                                (Math.abs(n - i) > .01 || Math.abs(a - s) > .01) && this._points.push(i, s),
                                n = i,
                                a = s;
                    },
                        i.getData = function (t, e, i) {
                            var s = [],
                                n = [];
                            this.borderWidth > 0 && this.createLine2(this._points, s, this.borderWidth, i, n, this._points.length / 2),
                                this.mUint16Array.set(s, 0),
                                this.mFloat32Array.set(n, 0),
                                t.append(this.mUint16Array),
                                e.append(this.mFloat32Array);
                        },
                        e;
                }()),
            At = function (t) {
                function e(t, i, s, n, a) {
                    this._points = [];
                    for (var r = NaN,
                        o = NaN,
                        h = -1,
                        l = -1,
                        c = s.length / 2 - 1,
                        u = 0; u < c; u++) r = s[2 * u],
                            o = s[2 * u + 1],
                            (Math.abs(h - r) > .01 || Math.abs(l - o) > .01) && this._points.push(r, o),
                            h = r,
                            l = o;
                    r = s[2 * c],
                        o = s[2 * c + 1],
                        h = this._points[0],
                        l = this._points[1],
                        (Math.abs(h - r) > .01 || Math.abs(l - o) > .01) && this._points.push(r, o),
                        e.__super.call(this, t, i, 0, 0, this._points.length / 2, 0, n, a);
                }
                n(e, "laya.webgl.shapes.LoopLine", it);
                var i = e.prototype;
                return i.getData = function (t, e, i) {
                    if (this.borderWidth > 0) {
                        for (var s = this.color,
                            n = (s >> 16 & 255) / 255, a = (s >> 8 & 255) / 255, r = (255 & s) / 255, o = [], h = 0, l = 0, c = [], u = Math.floor(this._points.length / 2), d = 0; d < u; d++) h = this._points[2 * d],
                                l = this._points[2 * d + 1],
                                o.push(this.x + h, this.y + l, n, a, r);
                        this.createLoopLine(o, c, this.borderWidth, i + o.length / 5),
                            t.append(new Uint16Array(c)),
                            e.append(new Float32Array(o));
                    }
                },
                    i.createLoopLine = function (t, e, i, s, n, a) {
                        t.length;
                        var r = t.concat(),
                            o = n || t,
                            h = this.borderColor,
                            l = (h >> 16 & 255) / 255,
                            c = (h >> 8 & 255) / 255,
                            u = (255 & h) / 255,
                            d = [r[0], r[1]],
                            _ = [r[r.length - 5], r[r.length - 4]],
                            p = _[0] + .5 * (d[0] - _[0]),
                            f = _[1] + .5 * (d[1] - _[1]);
                        r.unshift(p, f, 0, 0, 0),
                            r.push(p, f, 0, 0, 0);
                        var m, g, v, y, b, x, w, M, S, C, T, I, L, E, A, R, P, k, D, B, N = r.length / 5,
                            O = s,
                            G = i / 2;
                        v = r[0],
                            y = r[1],
                            C = v - (b = r[5]),
                            S = (S = -(y - (x = r[6]))) / (B = Math.sqrt(S * S + C * C)) * G,
                            C = C / B * G,
                            o.push(v - S, y - C, l, c, u, v + S, y + C, l, c, u);
                        for (var F = 1; F < N - 1; F++) v = r[5 * (F - 1)],
                            y = r[5 * (F - 1) + 1],
                            b = r[5 * F],
                            x = r[5 * F + 1],
                            w = r[5 * (F + 1)],
                            M = r[5 * (F + 1) + 1],
                            C = v - b,
                            I = b - w,
                            A = (- (S = (S = -(y - x)) / (B = Math.sqrt(S * S + C * C)) * G) + v) * (- (C = C / B * G) + x) - (- S + b) * (- C + y),
                            k = (- (T = (T = -(x - M)) / (B = Math.sqrt(T * T + I * I)) * G) + w) * (- (I = I / B * G) + x) - (- T + b) * (- I + M),
                            D = (L = -C + y - (- C + x)) * (P = -T + b - (- T + w)) - (R = -I + M - (- I + x)) * (E = -S + b - (- S + v)),
                            Math.abs(D) < .1 ? (D += 10.1, o.push(b - S, x - C, l, c, u, b + S, x + C, l, c, u)) : (((m = (E * k - P * A) / D) - b) * (m - b) + ((g = (R * A - L * k) / D) - x) + (g - x), o.push(m, g, l, c, u, b - (m - b), x - (g - x), l, c, u));
                        a && (e = a);
                        var U = this.edges + 1;
                        for (F = 1; F < U; F++) e.push(O + 2 * (F - 1), O + 2 * (F - 1) + 1, O + 2 * F + 1, O + 2 * F + 1, O + 2 * F, O + 2 * (F - 1));
                        return e.push(O + 2 * (F - 1), O + 2 * (F - 1) + 1, O + 1, O + 1, O, O + 2 * (F - 1)),
                            o;
                    },
                    e;
            }(),
            Rt = function (t) {
                function e(t, i, s, n, a, r) {
                    this._points = null,
                        this._start = -1,
                        this._repaint = !1,
                        this.earcutTriangles = null,
                        this._mat = b.create(),
                        this._points = s.slice(0, s.length),
                        e.__super.call(this, t, i, 0, 0, this._points.length / 2, n, a, r);
                }
                n(e, "laya.webgl.shapes.Polygon", it);
                var i = e.prototype;
                return i.rebuild = function (t) {
                    this._repaint || (this._points.length = 0, this._points = this._points.concat(t));
                },
                    i.setMatrix = function (t) {
                        t.copyTo(this._mat);
                    },
                    i.needUpdate = function (t) {
                        return this._repaint = this._mat.a == t.a && this._mat.b == t.b && this._mat.c == t.c && this._mat.d == t.d && this._mat.tx == t.tx && this._mat.ty == t.ty,
                            !this._repaint;
                    },
                    i.getData = function (t, e, i) {
                        var s, n = 0,
                            a = this._points,
                            r = 0;
                        if (this.mUint16Array && this.mFloat32Array && this._repaint) {
                            if (this._start != i) {
                                for (this._start = i, s = [], r = this.earcutTriangles.length, n = 0; n < r; n++) s.push(this.earcutTriangles[n] + i);
                                this.mUint16Array = new Uint16Array(s);
                            }
                        } else {
                            this._start = i,
                                s = [];
                            var o = [],
                                h = [],
                                l = this.color,
                                c = (l >> 16 & 255) / 255,
                                u = (l >> 8 & 255) / 255,
                                d = (255 & l) / 255;
                            for (r = Math.floor(a.length / 2), n = 0; n < r; n++) o.push(this.x + a[2 * n], this.y + a[2 * n + 1], c, u, d),
                                h.push(this.x + a[2 * n], this.y + a[2 * n + 1]);
                            for (this.earcutTriangles = st.earcut(h, null, 2), r = this.earcutTriangles.length, n = 0; n < r; n++) s.push(this.earcutTriangles[n] + i);
                            this.mUint16Array = new Uint16Array(s),
                                this.mFloat32Array = new Float32Array(o);
                        }
                        t.append(this.mUint16Array),
                            e.append(this.mFloat32Array);
                    },
                    e;
            }(),
            Pt = function (t) {
                function e() {
                    this._matrix = new b(),
                        this._matrix4 = ft.defaultMatrix4.concat(),
                        e.__super.call(this, 1e4),
                        this.shaderValue = new St(0, 0);
                }
                n(e, "laya.webgl.submit.SubmitCanvas", at);
                var i = e.prototype;
                return i.renderSubmit = function () {
                    if (this._ctx_src._targets) return this._ctx_src._targets.flush(this._ctx_src),
                        1;
                    var t = vt.worldAlpha,
                        e = vt.worldMatrix4,
                        i = vt.worldMatrix,
                        s = vt.worldFilters,
                        n = vt.worldShaderDefines,
                        a = this.shaderValue,
                        r = this._matrix,
                        o = this._matrix4,
                        h = b.TEMP;
                    return b.mul(r, i, h),
                        o[0] = h.a,
                        o[1] = h.b,
                        o[4] = h.c,
                        o[5] = h.d,
                        o[12] = h.tx,
                        o[13] = h.ty,
                        vt.worldMatrix = h.clone(),
                        vt.worldMatrix4 = o,
                        vt.worldAlpha = vt.worldAlpha * a.alpha,
                        a.filters && a.filters.length && (vt.worldFilters = a.filters, vt.worldShaderDefines = a.defines),
                        this._ctx_src.flush(),
                        vt.worldAlpha = t,
                        vt.worldMatrix4 = e,
                        vt.worldMatrix.destroy(),
                        vt.worldMatrix = i,
                        vt.worldFilters = s,
                        vt.worldShaderDefines = n,
                        1;
                },
                    i.releaseRender = function () {
                        var t = e._cache;
                        this._ctx_src = null,
                            t[t._length++] = this;
                    },
                    i.getRenderType = function () {
                        return 10003;
                    },
                    e.create = function (t, i, s) {
                        var n = e._cache._length ? e._cache[--e._cache._length] : new e();
                        n._ctx_src = t;
                        var a = n.shaderValue;
                        return a.alpha = i,
                            a.defines.setValue(0),
                            s && s.length && a.setFilters(s),
                            n;
                    },
                    e._cache = (e._cache = [], e._cache._length = 0, e._cache),
                    e;
            }(),
            kt = function (t) {
                function e(t) {
                    this._preIsSameTextureShader = !1,
                        this._isSameTexture = !0,
                        this._texs = new Array(),
                        this._texsID = new Array(),
                        this._vbPos = new Array(),
                        void 0 === t && (t = 1e4),
                        e.__super.call(this, t);
                }
                n(e, "laya.webgl.submit.SubmitTexture", at);
                var i = e.prototype;
                return i.releaseRender = function () {
                    var t = e._cache;
                    t[t._length++] = this,
                        this.shaderValue.release(),
                        this._preIsSameTextureShader = !1,
                        this._vb = null,
                        this._texs.length = 0,
                        this._vbPos.length = 0,
                        this._isSameTexture = !0;
                },
                    i.addTexture = function (t, e) {
                        this._texsID[this._texs.length] = t._uvID,
                            this._texs.push(t),
                            this._vbPos.push(e);
                    },
                    i.checkTexture = function () {
                        if (this._texs.length < 1) this._isSameTexture = !0;
                        else {
                            var t = this.shaderValue.textureHost.bitmap;
                            if (null !== t) for (var e = this._vb.getFloat32Array(), i = 0, s = this._texs.length; i < s; i++) {
                                var n = this._texs[i];
                                n.active();
                                var a = n.uv;
                                if (this._texsID[i] !== n._uvID) {
                                    this._texsID[i] = n._uvID;
                                    var r = this._vbPos[i];
                                    e[r + 2] = a[0],
                                        e[r + 3] = a[1],
                                        e[r + 6] = a[2],
                                        e[r + 7] = a[3],
                                        e[r + 10] = a[4],
                                        e[r + 11] = a[5],
                                        e[r + 14] = a[6],
                                        e[r + 15] = a[7],
                                        this._vb.setNeedUpload();
                                }
                                n.bitmap !== t && (this._isSameTexture = !1);
                            }
                        }
                    },
                    i.renderSubmit = function () {
                        if (0 === this._numEle) return e._shaderSet = !1,
                            1;
                        var t = this.shaderValue.textureHost;
                        if (t) {
                            var i = t.source;
                            if (!t.bitmap || !i) return e._shaderSet = !1,
                                1;
                            this.shaderValue.texture = i;
                        }
                        this._vb.bind_upload(this._ib);
                        var s = bt.mainContext;
                        if (X.activeBlendFunction !== this._blendFn && (s.enable(3042), this._blendFn(s), X.activeBlendFunction = this._blendFn), A.drawCall++ , A.trianglesFaces += this._numEle / 3, this._preIsSameTextureShader && Bt.activeShader && e._shaderSet ? Bt.activeShader.uploadTexture2D(this.shaderValue.texture) : this.shaderValue.upload(), e._shaderSet = !0, this._texs.length > 1 && !this._isSameTexture) for (var n = t.bitmap,
                            a = 0,
                            r = Bt.activeShader,
                            o = 0,
                            h = this._texs.length; o < h; o++) {
                            var l = this._texs[o];
                            l.bitmap === n && o + 1 !== h || (r.uploadTexture2D(l.source), s.drawElements(4, 6 * (o - a + 1), 5123, this._startIdx + 6 * a * ft.BYTES_PIDX), n = l.bitmap, a = o);
                        } else s.drawElements(4, this._numEle, 5123, this._startIdx);
                        return 1;
                    },
                    e.create = function (t, i, s, n, a) {
                        var r = e._cache._length ? e._cache[--e._cache._length] : new e();
                        null == s && ((s = r._selfVb || (r._selfVb = Jt.create(- 1))).clear(), n = 0),
                            r._ib = i,
                            r._vb = s,
                            r._startIdx = n * ft.BYTES_PIDX,
                            r._numEle = 0;
                        var o = t._nBlendType;
                        r._blendFn = t._targets ? X.targetFns[o] : X.fns[o],
                            r.shaderValue = a,
                            r.shaderValue.setValue(t._shader2D);
                        var h = t._shader2D.filters;
                        return h && r.shaderValue.setFilters(h),
                            r;
                    },
                    e._cache = (e._cache = [], e._cache._length = 0, e._cache),
                    e._shaderSet = !0,
                    e;
            }(),
            Dt = function (t) {
                function e() {
                    e.__super.call(this, laya.webgl.utils.MeshTexture.const_stride, 0, 0),
                        this.canReuse = !0,
                        this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo);
                }
                n(e, "laya.webgl.utils.MeshTexture", gt);
                var i = e.prototype;
                return i.addData = function (t, i, s, n, a, r) {
                    for (var o = t.length / 2,
                        h = this._vb.needSize(o * e.const_stride) >> 2, l = this._vb.getFloat32Array(), c = 0, u = 0; u < o; u++) {
                        var d = t[c],
                            _ = t[c + 1],
                            p = d * n.a + _ * n.c + n.tx,
                            f = d * n.b + _ * n.d + n.ty;
                        l[h++] = p,
                            l[h++] = f,
                            l[h++] = i[c],
                            l[h++] = i[c + 1],
                            c += 2;
                    }
                    this._vb.setNeedUpload();
                    var m = this.vertNum;
                    if (m > 0) {
                        (o = s.length) > e.tmpIdx.length && (e.tmpIdx = new Uint16Array(o));
                        for (var g = 0; g < o; g++) e.tmpIdx[g] = s[g] + m;
                        this._ib.appendU16Array(e.tmpIdx, s.length);
                    } else this._ib.append(s);
                    this._ib.setNeedUpload(),
                        this.vertNum += o,
                        this.indexNum += s.length;
                },
                    i.releaseMesh = function () {
                        this._vb._byteLength = 0,
                            this._ib._byteLength = 0,
                            this.vertNum = 0,
                            this.indexNum = 0,
                            laya.webgl.utils.MeshTexture._POOL.push(this);
                    },
                    i.destroy = function () {
                        this._ib.destroy(),
                            this._vb.destroy();
                    },
                    e.getAMesh = function () {
                        return laya.webgl.utils.MeshTexture._POOL.length ? laya.webgl.utils.MeshTexture._POOL.pop() : new e();
                    },
                    e.const_stride = 16,
                    e._POOL = [],
                    s(e, ["_fixattriInfo",
                        function () {
                            return this._fixattriInfo = [5126, 2, 0, 5126, 2, 8];
                        },
                        "tmpIdx",
                        function () {
                            return this.tmpIdx = new Uint16Array(4);
                        }]),
                    e;
            }(),
            Bt = function (t) {
                function e() {
                    e.__super.call(this),
                        this.lock = !0;
                }
                return n(e, "laya.webgl.shader.BaseShader", C),
                    e.activeShader = null,
                    e.bindShader = null,
                    e;
            }(),
            Nt = function (t) {
                function e(t, i, s, n, a, r, o, h, l) {
                    this._type = 0,
                        this._svWidth = NaN,
                        this._svHeight = NaN,
                        this._preRenderTarget = null,
                        this._alreadyResolved = !1,
                        this._looked = !1,
                        this._surfaceFormat = 0,
                        this._surfaceType = 0,
                        this._depthStencilFormat = 0,
                        this._mipMap = !1,
                        this._repeat = !1,
                        this._minFifter = 0,
                        this._magFifter = 0,
                        this._destroy = !1,
                        void 0 === s && (s = 6408),
                        void 0 === n && (n = 5121),
                        void 0 === a && (a = 34041),
                        void 0 === r && (r = !1),
                        void 0 === o && (o = !1),
                        void 0 === h && (h = -1),
                        void 0 === l && (l = -1),
                        this._type = 1,
                        this._w = t,
                        this._h = i,
                        this._surfaceFormat = s,
                        this._surfaceType = n,
                        this._depthStencilFormat = a,
                        M.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189),
                        this._mipMap = r,
                        this._repeat = o,
                        this._minFifter = h,
                        this._magFifter = l,
                        this._createWebGLRenderTarget(),
                        this.bitmap.lock = !0,
                        e.__super.call(this, this.bitmap, D.INV_UV);
                }
                n(e, "laya.webgl.resource.RenderTarget2D", t);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.resource.IDispose": !0
                }),
                    s.getType = function () {
                        return this._type;
                    },
                    s.getTexture = function () {
                        return this;
                    },
                    s.size = function (t, e) {
                        this._w == t && this._h == e || (this._w = t, this._h = e, this.release(), 0 != this._w && 0 != this._h && this._createWebGLRenderTarget());
                    },
                    s.release = function () {
                        this.destroy();
                    },
                    s.recycle = function () {
                        e.POOL.push(this);
                    },
                    s.start = function () {
                        var t = bt.mainContext;
                        return this._preRenderTarget = vt.curRenderTarget,
                            vt.curRenderTarget = this,
                            t.bindFramebuffer(36160, this.bitmap.frameBuffer),
                            this._alreadyResolved = !1,
                            1 == this._type && (t.viewport(0, 0, this._w, this._h), this._svWidth = vt.width, this._svHeight = vt.height, vt.width = this._w, vt.height = this._h, Bt.activeShader = null),
                            this;
                    },
                    s.clear = function (t, e, i, s) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = 0),
                            void 0 === i && (i = 0),
                            void 0 === s && (s = 1);
                        var n = bt.mainContext;
                        n.clearColor(t, e, i, s);
                        var a = 16384;
                        switch (this._depthStencilFormat) {
                            case 33189:
                                a |= 256;
                                break;

                            case 36168:
                                a |= 1024;
                                break;

                            case 34041:
                                a |= 256,
                                    a |= 1024;
                        }
                        n.clear(a);
                    },
                    s.end = function () {
                        var t = bt.mainContext;
                        t.bindFramebuffer(36160, this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer : null),
                            this._alreadyResolved = !0,
                            vt.curRenderTarget = this._preRenderTarget,
                            1 == this._type ? (t.viewport(0, 0, this._svWidth, this._svHeight), vt.width = this._svWidth, vt.height = this._svHeight, Bt.activeShader = null) : t.viewport(0, 0, i.stage.width, i.stage.height);
                    },
                    s.getData = function (t, e, i, s) {
                        var n = bt.mainContext;
                        n.bindFramebuffer(36160, this.bitmap.frameBuffer);
                        if (!(36053 === n.checkFramebufferStatus(36160))) return n.bindFramebuffer(36160, null),
                            null;
                        var a = new Uint8Array(this._w * this._h * 4);
                        return n.readPixels(t, e, i, s, this._surfaceFormat, this._surfaceType, a),
                            n.bindFramebuffer(36160, null),
                            a;
                    },
                    s.destroy = function (e) {
                        void 0 === e && (e = !1),
                            this._destroy || (this._loaded = !1, this.bitmap.offAll(), this.bitmap.disposeResource(), this.bitmap.dispose(), this.offAll(), this.bitmap = null, this._alreadyResolved = !1, this._destroy = !0, t.prototype.destroy.call(this));
                    },
                    s.dispose = function () { },
                    s._createWebGLRenderTarget = function () {
                        this.bitmap = new Vt(this.width, this.height, this._surfaceFormat, this._surfaceType, this._depthStencilFormat, this._mipMap, this._repeat, this._minFifter, this._magFifter),
                            this.bitmap.activeResource(),
                            this._alreadyResolved = !0,
                            this._destroy = !1,
                            this._loaded = !0,
                            this.bitmap.on("recovered", this,
                                function (t) {
                                    this.event("recovered");
                                });
                    },
                    a(0, s, "surfaceFormat",
                        function () {
                            return this._surfaceFormat;
                        }),
                    a(0, s, "magFifter",
                        function () {
                            return this._magFifter;
                        }),
                    a(0, s, "surfaceType",
                        function () {
                            return this._surfaceType;
                        }),
                    a(0, s, "mipMap",
                        function () {
                            return this._mipMap;
                        }),
                    a(0, s, "depthStencilFormat",
                        function () {
                            return this._depthStencilFormat;
                        }),
                    a(0, s, "minFifter",
                        function () {
                            return this._minFifter;
                        }),
                    a(0, s, "source",
                        function () {
                            return this._alreadyResolved ? i.superGet(D, this, "source") : null;
                        }),
                    e.create = function (t, i, s, n, a, r, o, h, l) {
                        void 0 === s && (s = 6408),
                            void 0 === n && (n = 5121),
                            void 0 === a && (a = 34041),
                            void 0 === r && (r = !1),
                            void 0 === o && (o = !1),
                            void 0 === h && (h = -1),
                            void 0 === l && (l = -1);
                        var c = e.POOL.pop();
                        return c || (c = new e(t, i)),
                            c.bitmap && c._w == t && c._h == i && c._surfaceFormat == s && c._surfaceType == n && c._depthStencilFormat == a && c._mipMap == r && c._repeat == o && c._minFifter == h && c._magFifter == l || (c._w = t, c._h = i, c._surfaceFormat = s, c._surfaceType = n, c._depthStencilFormat = a, M.isConchWebGL && 34041 === c._depthStencilFormat && (c._depthStencilFormat = 33189), c._mipMap = r, c._repeat = o, c._minFifter = h, c._magFifter = l, c.release(), c._createWebGLRenderTarget()),
                            c;
                    },
                    e.TYPE2D = 1,
                    e.TYPE3D = 2,
                    e.POOL = [],
                    e;
            }(D),
            Ot = function (t) {
                function e() {
                    this._glBuffer = null,
                        this._buffer = null,
                        this._bufferType = 0,
                        this._bufferUsage = 0,
                        this._byteLength = 0,
                        e.__super.call(this),
                        e._gl = bt.mainContext;
                }
                n(e, "laya.webgl.utils.Buffer", C);
                var i = e.prototype;
                return i._bind = function () {
                    this.activeResource(),
                        e._bindActive[this._bufferType] !== this._glBuffer && (34962 === this._bufferType && (e._bindVertexBuffer = this._glBuffer), e._gl.bindBuffer(this._bufferType, e._bindActive[this._bufferType] = this._glBuffer), Bt.activeShader = null);
                },
                    i.recreateResource = function () {
                        this._glBuffer || (this._glBuffer = e._gl.createBuffer()),
                            this.completeCreate();
                    },
                    i.disposeResource = function () {
                        this._glBuffer && (bt.mainContext.deleteBuffer(this._glBuffer), this._glBuffer = null),
                            this.memorySize = 0;
                    },
                    a(0, i, "bufferUsage",
                        function () {
                            return this._bufferUsage;
                        }),
                    e._gl = null,
                    e._bindActive = {},
                    e._bindVertexBuffer = null,
                    e._enableAtributes = [],
                    e;
            }(),
            Gt = function (t) {
                function e(t) {
                    this.texcoord = null,
                        this.offsetX = 300,
                        this.offsetY = 0,
                        e.__super.call(this, 512, 0);
                    var i = 8 * ft.BYTES_PE;
                    this.position = [2, 5126, !1, i, 0],
                        this.texcoord = [2, 5126, !1, i, 2 * ft.BYTES_PE],
                        this.color = [4, 5126, !1, i, 4 * ft.BYTES_PE];
                }
                return n(e, "laya.webgl.shader.d2.skinAnishader.SkinSV", St),
                    e;
            }(),
            Ft = function (t) {
                function e(t) {
                    e.__super.call(this, 2, 0),
                        this.color = [];
                }
                n(e, "laya.webgl.shader.d2.value.Color2dSV", St);
                return e.prototype.setValue = function (t) {
                    t.fillStyle && (this.color = t.fillStyle._color._color),
                        t.strokeStyle && (this.color = t.strokeStyle._color._color);
                },
                    e;
            }(),
            Ut = function (t) {
                function e(t) {
                    this.u_colorMatrix = null,
                        this.strength = 0,
                        this.colorMat = null,
                        this.colorAlpha = null,
                        this.u_TexRange = [0, 1, 0, 1],
                        this.u_offset = [0, 0],
                        this.texcoord = St._TEXCOORD,
                        e.__super.call(this, 256, 0);
                }
                n(e, "laya.webgl.shader.d2.value.FillTextureSV", St);
                var i = e.prototype;
                return i.setValue = function (t) {
                    this.ALPHA = t.ALPHA,
                        t.filters && this.setFilters(t.filters);
                },
                    i.clear = function () {
                        this.texture = null,
                            this.shader = null,
                            this.defines.setValue(0);
                    },
                    e;
            }(),
            Wt = function (t) {
                function e(t) {
                    this.u_colorMatrix = null,
                        this.strength = 0,
                        this.blurInfo = null,
                        this.colorMat = null,
                        this.colorAlpha = null,
                        this.texcoord = St._TEXCOORD,
                        void 0 === t && (t = 0),
                        e.__super.call(this, 1, t);
                }
                n(e, "laya.webgl.shader.d2.value.TextureSV", St);
                var i = e.prototype;
                return i.setValue = function (t) {
                    this.ALPHA = t.ALPHA,
                        t.filters && this.setFilters(t.filters);
                },
                    i.clear = function () {
                        this.texture = null,
                            this.shader = null,
                            this.defines.setValue(0);
                    },
                    e;
            }(),
            Xt = function (t) {
                function e(t) {
                    this.a_color = null,
                        this.u_pos = [0, 0],
                        e.__super.call(this, 4, 0),
                        this.position = [2, 5126, !1, 5 * ft.BYTES_PE, 0],
                        this.a_color = [3, 5126, !1, 5 * ft.BYTES_PE, 2 * ft.BYTES_PE];
                }
                return n(e, "laya.webgl.shader.d2.value.PrimitiveSV", St),
                    e;
            }(),
            zt = function (t) {
                function e() {
                    this._atlaser = null,
                        this._flashCacheImage = null,
                        this._flashCacheImageNeedFlush = !1,
                        e.__super.call(this);
                }
                n(e, "laya.webgl.atlas.AtlasWebGLCanvas", t);
                var i = e.prototype;
                return i.recreateResource = function () {
                    var t = bt.mainContext,
                        e = this._source = t.createTexture(),
                        i = xt.curBindTexTarget,
                        s = xt.curBindTexValue;
                    xt.bindTexture(t, 3553, e),
                        t.texImage2D(3553, 0, 6408, this._w, this._h, 0, 6408, 5121, null),
                        t.texParameteri(3553, 10241, 9729),
                        t.texParameteri(3553, 10240, 9729),
                        t.texParameteri(3553, 10242, 33071),
                        t.texParameteri(3553, 10243, 33071),
                        i && s && xt.bindTexture(t, i, s),
                        this.memorySize = this._w * this._h * 4,
                        this.completeCreate();
                },
                    i.disposeResource = function () {
                        this._source && (bt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
                    },
                    i.texSubImage2D = function (t, e, i) {
                        if (M.isFlash) {
                            this._flashCacheImage || (this._flashCacheImage = v.create(""), this._flashCacheImage._image.createCanvas(this._w, this._h));
                            var s = i.bitmapdata;
                            this._flashCacheImage._image.copyPixels(s, 0, 0, s.width, s.height, t, e),
                                this._flashCacheImageNeedFlush || (this._flashCacheImageNeedFlush = !0);
                        } else {
                            var n = bt.mainContext,
                                a = xt.curBindTexTarget,
                                r = xt.curBindTexValue;
                            xt.bindTexture(n, 3553, this._source),
                                M.isConchWebGL ? (t - 1 >= 0 && n.texSubImage2DEx(!0, 3553, 0, t - 1, e, 6408, 5121, i), t + 1 <= this._w && n.texSubImage2DEx(!0, 3553, 0, t + 1, e, 6408, 5121, i), e - 1 >= 0 && n.texSubImage2DEx(!0, 3553, 0, t, e - 1, 6408, 5121, i), e + 1 <= this._h && n.texSubImage2DEx(!0, 3553, 0, t, e + 1, 6408, 5121, i), n.texSubImage2DEx(!0, 3553, 0, t, e, 6408, 5121, i)) : (n.pixelStorei(37441, !0), t - 1 >= 0 && n.texSubImage2D(3553, 0, t - 1, e, 6408, 5121, i), t + 1 <= this._w && n.texSubImage2D(3553, 0, t + 1, e, 6408, 5121, i), e - 1 >= 0 && n.texSubImage2D(3553, 0, t, e - 1, 6408, 5121, i), e + 1 <= this._h && n.texSubImage2D(3553, 0, t, e + 1, 6408, 5121, i), n.texSubImage2D(3553, 0, t, e, 6408, 5121, i), n.pixelStorei(37441, !1)),
                                a && r && xt.bindTexture(n, a, r);
                        }
                    },
                    i.texSubImage2DPixel = function (t, e, i, s, n) {
                        var a = bt.mainContext,
                            r = xt.curBindTexTarget,
                            o = xt.curBindTexValue;
                        xt.bindTexture(a, 3553, this._source);
                        var h = new Uint8Array(n.data);
                        M.isConchWebGL ? a.texSubImage2DEx(!0, 3553, 0, t, e, i, s, 6408, 5121, h) : (a.pixelStorei(37441, !0), a.texSubImage2D(3553, 0, t, e, i, s, 6408, 5121, h), a.pixelStorei(37441, !1)),
                            r && o && xt.bindTexture(a, r, o);
                    },
                    a(0, i, "width", t.prototype._$get_width,
                        function (t) {
                            this._w = t;
                        }),
                    a(0, i, "height", t.prototype._$get_height,
                        function (t) {
                            this._h = t;
                        }),
                    e;
            }(l),
            Yt = function (t) {
                function e() {
                    this.flipY = !0,
                        this.premulAlpha = !1,
                        this.alwaysChange = !1,
                        e.__super.call(this);
                }
                n(e, "laya.webgl.resource.WebGLCanvas", l);
                var i = e.prototype;
                return i.getCanvas = function () {
                    return this._canvas;
                },
                    i.clear = function () {
                        this._ctx && this._ctx.clear();
                    },
                    i.destroy = function () {
                        this._ctx && this._ctx.destroy(),
                            this._ctx = null;
                    },
                    i._setContext = function (t) {
                        this._ctx = t;
                    },
                    i.getContext = function (t, i) {
                        return this._ctx ? this._ctx : this._ctx = e._createContext(this);
                    },
                    i.size = function (t, e) {
                        this._w == t && this._h == e || (this._w = t, this._h = e, this._ctx && this._ctx.size(t, e), this._canvas && (this._canvas.height = e, this._canvas.width = t));
                    },
                    i.activeResource = function (t) {
                        void 0 === t && (t = !1),
                            this._source || this.recreateResource();
                    },
                    i.recreateResource = function () {
                        this.createWebGlTexture(),
                            this.completeCreate();
                    },
                    i.disposeResource = function () {
                        this._source && !this.iscpuSource && (bt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
                    },
                    i.createWebGlTexture = function () {
                        var t = bt.mainContext;
                        this._canvas;
                        var e = this._source = t.createTexture();
                        this.iscpuSource = !1;
                        var i = xt.curBindTexTarget,
                            s = xt.curBindTexValue;
                        xt.bindTexture(t, 3553, e),
                            t.pixelStorei(37440, this.flipY ? 1 : 0),
                            M.isConchWebGL ? t.texImage2DEx(this.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (this.premulAlpha && t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), this.premulAlpha && t.pixelStorei(37441, !1)),
                            t.texParameteri(3553, 10240, 9729),
                            t.texParameteri(3553, 10241, 9729),
                            t.texParameteri(3553, 10242, 33071),
                            t.texParameteri(3553, 10243, 33071),
                            t.pixelStorei(37440, 0),
                            this.memorySize = this._w * this._h * 4,
                            i && s && xt.bindTexture(t, i, s);
                    },
                    i.reloadCanvasData = function () {
                        var t = bt.mainContext;
                        if (!this._source) throw "reloadCanvasData error, gl texture not created!";
                        var e = xt.curBindTexTarget,
                            i = xt.curBindTexValue;
                        xt.bindTexture(t, 3553, this._source),
                            M.isConchWebGL ? t.texImage2DEx(this.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (this.premulAlpha && t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData), this.premulAlpha && t.pixelStorei(37441, !1)),
                            t.pixelStorei(37440, 0),
                            e && i && xt.bindTexture(t, e, i);
                    },
                    i.texSubImage2D = function (t, e, i) {
                        var s = bt.mainContext,
                            n = xt.curBindTexTarget,
                            a = xt.curBindTexValue;
                        xt.bindTexture(s, 3553, this._source),
                            M.isConchWebGL ? s.texSubImage2DEx(!0, 3553, 0, e, i, 6408, 5121, t._source) : (s.pixelStorei(37441, !0), s.texSubImage2D(3553, 0, e, i, 6408, 5121, t._source), s.pixelStorei(37441, !1)),
                            n && a && xt.bindTexture(s, n, a);
                    },
                    i.toBase64 = function (t, e, i) {
                        var s = null;
                        this._canvas && (s = this._canvas.toDataURL(t, e)),
                            i.call(this, s);
                    },
                    a(0, i, "context",
                        function () {
                            return this._ctx;
                        }),
                    a(0, i, "source",
                        function () {
                            return this.alwaysChange && this.reloadCanvasData(),
                                this._source;
                        }),
                    a(0, i, "asBitmap", null,
                        function (t) {
                            this._ctx && (this._ctx.asBitmap = t);
                        }),
                    e._createContext = null,
                    e;
            }(),
            Ht = function (t) {
                function e(t, i) {
                    this.CborderSize = 12,
                        e.__super.call(this),
                        this.char = t,
                        this.isSpace = " " === t,
                        this.xs = i.scaleX,
                        this.ys = i.scaleY,
                        this.font = i.font.toString(),
                        this.fontSize = i.font.size,
                        this.fillColor = i.fillColor,
                        this.borderColor = i.borderColor,
                        this.lineWidth = i.lineWidth,
                        this.underLine = i.underLine;
                    var s, n = M.isConchApp;
                    n ? ((s = ConchTextCanvas)._source = ConchTextCanvas, s._source.canvas = ConchTextCanvas) : s = c.canvas.source,
                        this.canvas = s,
                        this._enableMerageInAtlas = !0,
                        this._ctx = n ? s : this.canvas.getContext("2d", void 0);
                    var a = B.measureText(this.char, this.font);
                    this.cw = a.width * this.xs,
                        this.ch = (a.height || this.fontSize) * this.ys,
                        this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize),
                        this.texture = new D(this);
                }
                n(e, "laya.webgl.resource.WebGLCharImage", l);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.webgl.resource.IMergeAtlasBitmap": !0
                }),
                    s.active = function () {
                        this.texture.active();
                    },
                    s.recreateResource = function () {
                        var t = M.isConchApp;
                        if (this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this.canvas && (this.canvas.height = this._h, this.canvas.width = this._w), t) {
                            var e = this.fontSize;
                            1 == this.xs && 1 == this.ys || (e = parseInt(e * (this.xs > this.ys ? this.xs : this.ys) + ""));
                            var i = "normal 100 " + e + "px Arial";
                            this.borderColor && (i += " 1 " + this.borderColor),
                                this._ctx.font = i,
                                this._ctx.textBaseline = "top",
                                this._ctx.fillStyle = this.fillColor,
                                this._ctx.fillText(this.char, this.CborderSize, this.CborderSize, null, null, null);
                        } else {
                            if (this._ctx.save(), this._ctx.clearRect(0, 0, this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize), this._ctx.font = this.font, k.RightToLeft && (this._ctx.textAlign = "end"), this._ctx.textBaseline = "top", this._ctx.translate(this.CborderSize, this.CborderSize), 1 == this.xs && 1 == this.ys || this._ctx.scale(this.xs, this.ys), this.fillColor && this.borderColor ? (this._ctx.strokeStyle = this.borderColor, this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null), this._ctx.fillStyle = this.fillColor, this._ctx.fillText(this.char, 0, 0, null, null, null)) : -1 === this.lineWidth ? (this._ctx.fillStyle = this.fillColor ? this.fillColor : "white", this._ctx.fillText(this.char, 0, 0, null, null, null)) : (this._ctx.strokeStyle = this.borderColor ? this.borderColor : "white", this._ctx.lineWidth = this.lineWidth, this._ctx.strokeText(this.char, 0, 0, null, null, 0, null)), this.underLine) {
                                this._ctx.lineWidth = 1,
                                    this._ctx.strokeStyle = this.fillColor,
                                    this._ctx.beginPath(),
                                    this._ctx.moveTo(0, this.fontSize + 1);
                                var s = this._ctx.measureText(this.char).width + 1;
                                this._ctx.lineTo(s, this.fontSize + 1),
                                    this._ctx.stroke();
                            }
                            this._ctx.restore();
                        }
                        this.borderSize = this.CborderSize,
                            this.completeCreate();
                    },
                    s.onresize = function (t, e) {
                        this._w = t,
                            this._h = e,
                            this._allowMerageInAtlas = !0;
                    },
                    s.clearAtlasSource = function () { },
                    a(0, s, "allowMerageInAtlas",
                        function () {
                            return this._allowMerageInAtlas;
                        }),
                    a(0, s, "atlasSource",
                        function () {
                            return this.canvas;
                        }),
                    a(0, s, "enableMerageInAtlas",
                        function () {
                            return this._enableMerageInAtlas;
                        },
                        function (t) {
                            this._enableMerageInAtlas = t;
                        }),
                    e.createOneChar = function (t, i) {
                        return new e(t, i);
                    },
                    e;
            }(),
            Vt = function (t) {
                function e(t, i, s, n, a, r, o, h, l) {
                    void 0 === s && (s = 6408),
                        void 0 === n && (n = 5121),
                        void 0 === a && (a = 34041),
                        void 0 === r && (r = !1),
                        void 0 === o && (o = !1),
                        void 0 === h && (h = -1),
                        void 0 === l && (l = 1),
                        e.__super.call(this),
                        this._w = t,
                        this._h = i,
                        this._surfaceFormat = s,
                        this._surfaceType = n,
                        this._depthStencilFormat = a,
                        M.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189),
                        this._mipMap = r,
                        this._repeat = o,
                        this._minFifter = h,
                        this._magFifter = l;
                }
                n(e, "laya.webgl.resource.WebGLRenderTarget", l);
                var i = e.prototype;
                return i.recreateResource = function () {
                    var t = bt.mainContext;
                    this._frameBuffer || (this._frameBuffer = t.createFramebuffer()),
                        this._source || (this._source = t.createTexture());
                    var e = xt.curBindTexTarget,
                        i = xt.curBindTexValue;
                    xt.bindTexture(t, 3553, this._source),
                        t.texImage2D(3553, 0, 6408, this._w, this._h, 0, this._surfaceFormat, this._surfaceType, null);
                    var s = this._minFifter,
                        n = this._magFifter,
                        a = this._repeat ? 10497 : 33071,
                        r = o.isPOT(this._w, this._h);
                    if (r ? (this._mipMap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729), -1 !== n || (n = 9729), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, n), t.texParameteri(3553, 10242, a), t.texParameteri(3553, 10243, a), this._mipMap && t.generateMipmap(3553)) : (- 1 !== s || (s = 9729), -1 !== n || (n = 9729), t.texParameteri(3553, 10241, s), t.texParameteri(3553, 10240, n), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)), t.bindFramebuffer(36160, this._frameBuffer), t.framebufferTexture2D(36160, 36064, 3553, this._source, 0), this._depthStencilFormat) switch (this._depthStencilBuffer || (this._depthStencilBuffer = t.createRenderbuffer()), t.bindRenderbuffer(36161, this._depthStencilBuffer), t.renderbufferStorage(36161, this._depthStencilFormat, this._w, this._h), this._depthStencilFormat) {
                        case 33189:
                            t.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
                            break;

                        case 36168:
                            t.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
                            break;

                        case 34041:
                            t.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer);
                    }
                    t.bindFramebuffer(36160, null),
                        e && i && xt.bindTexture(t, e, i),
                        t.bindRenderbuffer(36161, null),
                        r && this._mipMap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4,
                        this.completeCreate();
                },
                    i.disposeResource = function () {
                        this._frameBuffer && (bt.mainContext.deleteTexture(this._source), bt.mainContext.deleteFramebuffer(this._frameBuffer), bt.mainContext.deleteRenderbuffer(this._depthStencilBuffer), this._source = null, this._frameBuffer = null, this._depthStencilBuffer = null, this.memorySize = 0);
                    },
                    a(0, i, "depthStencilBuffer",
                        function () {
                            return this._depthStencilBuffer;
                        }),
                    a(0, i, "frameBuffer",
                        function () {
                            return this._frameBuffer;
                        }),
                    e;
            }(),
            Kt = function (t) {
                function e(t, i, s, n, a, r, o) {
                    this.offsetX = 0,
                        this.offsetY = 0,
                        e.__super.call(this),
                        this.repeat = !0,
                        this.mipmap = !1,
                        this.minFifter = -1,
                        this.magFifter = -1,
                        this.atlasImage = r,
                        this.canvas = t,
                        this._ctx = t.getContext("2d", void 0),
                        this._w = n,
                        this._h = a,
                        this.offsetX = i,
                        this.offsetY = s,
                        this.src = o,
                        this._enableMerageInAtlas = !0,
                        U.enabled && this._w < U.atlasLimitWidth && this._h < U.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
                }
                n(e, "laya.webgl.resource.WebGLSubImage", l);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.webgl.resource.IMergeAtlasBitmap": !0
                }),
                    s.size = function (t, e) {
                        this._w = t,
                            this._h = e,
                            this._ctx && this._ctx.size(t, e),
                            this.canvas && (this.canvas.height = e, this.canvas.width = t);
                    },
                    s.recreateResource = function () {
                        this.size(this._w, this._h),
                            this._ctx.drawImage(this.atlasImage, this.offsetX, this.offsetY, this._w, this._h, 0, 0, this._w, this._h),
                            this._allowMerageInAtlas && this._enableMerageInAtlas ? this.memorySize = 0 : this.createWebGlTexture(),
                            this.completeCreate();
                    },
                    s.createWebGlTexture = function () {
                        var t = bt.mainContext;
                        if (!this.canvas) throw "create GLTextur err:no data:" + this.canvas;
                        var e = this._source = t.createTexture(),
                            i = xt.curBindTexTarget,
                            s = xt.curBindTexValue;
                        xt.bindTexture(t, 3553, e),
                            M.isConchWebGL ? t.texImage2DEx(!0, 3553, 0, 6408, 6408, 5121, this.canvas) : (t.pixelStorei(37441, !0), t.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas), t.pixelStorei(37441, !1));
                        var n = this.minFifter,
                            a = this.magFifter,
                            r = this.repeat ? 10497 : 33071,
                            h = o.isPOT(this.width, this.height);
                        h ? (this.mipmap ? -1 !== n || (n = 9987) : -1 !== n || (n = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10242, r), t.texParameteri(3553, 10243, r), this.mipmap && t.generateMipmap(3553)) : (- 1 !== n || (n = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)),
                            i && s && xt.bindTexture(t, i, s),
                            this.canvas = null,
                            h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4;
                    },
                    s.disposeResource = function () {
                        U.enabled && this._allowMerageInAtlas || !this._source || (bt.mainContext.deleteTexture(this._source), this._source = null, this.memorySize = 0);
                    },
                    s.clearAtlasSource = function () { },
                    a(0, s, "allowMerageInAtlas",
                        function () {
                            return this._allowMerageInAtlas;
                        }),
                    a(0, s, "atlasSource",
                        function () {
                            return this.canvas;
                        }),
                    a(0, s, "enableMerageInAtlas",
                        function () {
                            return this._allowMerageInAtlas;
                        },
                        function (t) {
                            this._allowMerageInAtlas = t;
                        }),
                    e;
            }(),
            qt = function (t) {
                function e(t, i, s, n) {
                    if (this._curActTexIndex = 0, this.tag = {},
                        this._program = null, this._params = null, this._paramsMap = {},
                        this._offset = 0, e.__super.call(this), !t || !i) throw "Shader Error";
                    this._id = ++e._count,
                        this._vs = t,
                        this._ps = i,
                        this._nameMap = n || {},
                        null != s && (e.sharders[s] = this);
                }
                n(e, "laya.webgl.shader.Shader", Bt);
                var i = e.prototype;
                return i.recreateResource = function () {
                    this._compile(),
                        this.completeCreate(),
                        this.memorySize = 0;
                },
                    i.disposeResource = function () {
                        bt.mainContext.deleteShader(this._vshader),
                            bt.mainContext.deleteShader(this._pshader),
                            bt.mainContext.deleteProgram(this._program),
                            this._vshader = this._pshader = this._program = null,
                            this._params = null,
                            this._paramsMap = {},
                            this.memorySize = 0,
                            this._curActTexIndex = 0;
                    },
                    i._compile = function () {
                        if (this._vs && this._ps && !this._params) {
                            this._reCompile = !0,
                                this._params = [];
                            var t = [this._vs, this._ps],
                                i = bt.mainContext;
                            if (this._program = i.createProgram(), this._vshader = e._createShader(i, t[0], 35633), this._pshader = e._createShader(i, t[1], 35632), i.attachShader(this._program, this._vshader), i.attachShader(this._program, this._pshader), i.linkProgram(this._program), !M.isConchApp && !i.getProgramParameter(this._program, 35714)) throw i.getProgramInfoLog(this._program);
                            var s, n = 0,
                                a = 0,
                                r = 0;
                            for (r = M.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35721) : i.getProgramParameter(this._program, 35721), n = 0; n < r; n++) {
                                var o = null;
                                s = {
                                    vartype: "attribute",
                                    glfun: null,
                                    ivartype: 0,
                                    attrib: o = M.isConchApp ? i.getActiveAttribEx(this._vs, this._ps, "", n) : i.getActiveAttrib(this._program, n),
                                    location: i.getAttribLocation(this._program, o.name),
                                    name: o.name,
                                    type: o.type,
                                    isArray: !1,
                                    isSame: !1,
                                    preValue: null,
                                    indexOfParams: 0
                                },
                                    this._params.push(s);
                            }
                            var h = 0;
                            for (h = M.isConchApp ? i.getProgramParameterEx(this._vs, this._ps, "", 35718) : i.getProgramParameter(this._program, 35718), n = 0; n < h; n++) {
                                var l = null;
                                l = M.isConchApp ? i.getActiveUniformEx(this._vs, this._ps, "", n) : i.getActiveUniform(this._program, n),
                                    (s = {
                                        vartype: "uniform",
                                        glfun: null,
                                        ivartype: 1,
                                        attrib: o,
                                        location: i.getUniformLocation(this._program, l.name),
                                        name: l.name,
                                        type: l.type,
                                        isArray: !1,
                                        isSame: !1,
                                        preValue: null,
                                        indexOfParams: 0
                                    }).name.indexOf("[0]") > 0 && (s.name = s.name.substr(0, s.name.length - 3), s.isArray = !0, s.location = i.getUniformLocation(this._program, s.name)),
                                    this._params.push(s);
                            }
                            for (n = 0, a = this._params.length; n < a; n++) if (s = this._params[n], s.indexOfParams = n, s.index = 1, s.value = [s.location, null], s.codename = s.name, s.name = this._nameMap[s.codename] ? this._nameMap[s.codename] : s.codename, this._paramsMap[s.name] = s, s._this = this, s.uploadedValue = [], "attribute" !== s.vartype) switch (s.type) {
                                case 5124:
                                    s.fun = s.isArray ? this._uniform1iv : this._uniform1i;
                                    break;

                                case 5126:
                                    s.fun = s.isArray ? this._uniform1fv : this._uniform1f;
                                    break;

                                case 35664:
                                    s.fun = s.isArray ? this._uniform_vec2v : this._uniform_vec2;
                                    break;

                                case 35665:
                                    s.fun = s.isArray ? this._uniform_vec3v : this._uniform_vec3;
                                    break;

                                case 35666:
                                    s.fun = s.isArray ? this._uniform_vec4v : this._uniform_vec4;
                                    break;

                                case 35678:
                                    s.fun = this._uniform_sampler2D;
                                    break;

                                case 35680:
                                    s.fun = this._uniform_samplerCube;
                                    break;

                                case 35676:
                                    s.glfun = i.uniformMatrix4fv,
                                        s.fun = this._uniformMatrix4fv;
                                    break;

                                case 35670:
                                    s.fun = this._uniform1i;
                                    break;

                                case 35674:
                                case 35675:
                                default:
                                    throw new Error("compile shader err!");
                            } else s.fun = this._attribute;
                        }
                    },
                    i.getUniform = function (t) {
                        return this._paramsMap[t];
                    },
                    i._attribute = function (t, e) {
                        var i = bt.mainContext,
                            s = Ot._enableAtributes,
                            n = t.location;
                        return s[n] || i.enableVertexAttribArray(n),
                            i.vertexAttribPointer(n, e[0], e[1], e[2], e[3], e[4] + this._offset),
                            s[n] = Ot._bindVertexBuffer,
                            1;
                    },
                    i._uniform1f = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e ? (bt.mainContext.uniform1f(t.location, i[0] = e), 1) : 0;
                    },
                    i._uniform1fv = function (t, e) {
                        if (e.length < 4) {
                            var i = t.uploadedValue;
                            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform1fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
                        }
                        return bt.mainContext.uniform1fv(t.location, e),
                            1;
                    },
                    i._uniform_vec2 = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e[0] || i[1] !== e[1] ? (bt.mainContext.uniform2f(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0;
                    },
                    i._uniform_vec2v = function (t, e) {
                        if (e.length < 2) {
                            var i = t.uploadedValue;
                            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform2fv(t.location, e), i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3], 1) : 0;
                        }
                        return bt.mainContext.uniform2fv(t.location, e),
                            1;
                    },
                    i._uniform_vec3 = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (bt.mainContext.uniform3f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0;
                    },
                    i._uniform_vec3v = function (t, e) {
                        return bt.mainContext.uniform3fv(t.location, e),
                            1;
                    },
                    i._uniform_vec4 = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform4f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0;
                    },
                    i._uniform_vec4v = function (t, e) {
                        return bt.mainContext.uniform4fv(t.location, e),
                            1;
                    },
                    i._uniformMatrix2fv = function (t, e) {
                        return bt.mainContext.uniformMatrix2fv(t.location, !1, e),
                            1;
                    },
                    i._uniformMatrix3fv = function (t, e) {
                        return bt.mainContext.uniformMatrix3fv(t.location, !1, e),
                            1;
                    },
                    i._uniformMatrix4fv = function (t, e) {
                        return bt.mainContext.uniformMatrix4fv(t.location, !1, e),
                            1;
                    },
                    i._uniform1i = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e ? (bt.mainContext.uniform1i(t.location, i[0] = e), 1) : 0;
                    },
                    i._uniform1iv = function (t, e) {
                        return bt.mainContext.uniform1iv(t.location, e),
                            1;
                    },
                    i._uniform_ivec2 = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e[0] || i[1] !== e[1] ? (bt.mainContext.uniform2i(t.location, i[0] = e[0], i[1] = e[1]), 1) : 0;
                    },
                    i._uniform_ivec2v = function (t, e) {
                        return bt.mainContext.uniform2iv(t.location, e),
                            1;
                    },
                    i._uniform_vec3i = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (bt.mainContext.uniform3i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]), 1) : 0;
                    },
                    i._uniform_vec3vi = function (t, e) {
                        return bt.mainContext.uniform3iv(t.location, e),
                            1;
                    },
                    i._uniform_vec4i = function (t, e) {
                        var i = t.uploadedValue;
                        return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (bt.mainContext.uniform4i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]), 1) : 0;
                    },
                    i._uniform_vec4vi = function (t, e) {
                        return bt.mainContext.uniform4iv(t.location, e),
                            1;
                    },
                    i._uniform_sampler2D = function (t, i) {
                        var s = bt.mainContext,
                            n = t.uploadedValue;
                        return null == n[0] ? (n[0] = this._curActTexIndex, s.uniform1i(t.location, this._curActTexIndex), s.activeTexture(e._TEXTURES[this._curActTexIndex]), xt.bindTexture(s, 3553, i), this._curActTexIndex++ , 1) : (s.activeTexture(e._TEXTURES[n[0]]), xt.bindTexture(s, 3553, i), 0);
                    },
                    i._uniform_samplerCube = function (t, i) {
                        var s = bt.mainContext,
                            n = t.uploadedValue;
                        return null == n[0] ? (n[0] = this._curActTexIndex, s.uniform1i(t.location, this._curActTexIndex), s.activeTexture(e._TEXTURES[this._curActTexIndex]), xt.bindTexture(s, 34067, i), this._curActTexIndex++ , 1) : (s.activeTexture(e._TEXTURES[n[0]]), xt.bindTexture(s, 34067, i), 0);
                    },
                    i._noSetValue = function (t) {
                        console.log("no....:" + t.name);
                    },
                    i.uploadOne = function (t, e) {
                        this.activeResource(),
                            xt.UseProgram(this._program);
                        var i = this._paramsMap[t];
                        i.fun.call(this, i, e);
                    },
                    i.uploadTexture2D = function (t) {
                        A.shaderCall++;
                        var e = bt.mainContext;
                        e.activeTexture(33984),
                            xt.bindTexture(e, 3553, t);
                    },
                    i.upload = function (t, e) {
                        Bt.activeShader = Bt.bindShader = this,
                            this._lastUseFrameCount === A.loopCount || this.activeResource(),
                            xt.UseProgram(this._program),
                            this._reCompile ? (e = this._params, this._reCompile = !1) : e = e || this._params;
                        bt.mainContext;
                        for (var i, s, n = e.length,
                            a = 0,
                            r = 0; r < n; r++) null !== (s = t[(i = e[r]).name]) && (a += i.fun.call(this, i, s));
                        A.shaderCall += a;
                    },
                    i.uploadArray = function (t, e, i) {
                        Bt.activeShader = this,
                            Bt.bindShader = this,
                            this.activeResource(),
                            xt.UseProgram(this._program);
                        this._params;
                        for (var s, n, a = 0,
                            r = e - 2; r >= 0; r -= 2)(n = this._paramsMap[t[r]]) && null != (s = t[r + 1]) && (i && i[n.name] && i[n.name].bind(), a += n.fun.call(this, n, s));
                        A.shaderCall += a;
                    },
                    i.getParams = function () {
                        return this._params;
                    },
                    e.getShader = function (t) {
                        return e.sharders[t];
                    },
                    e.create = function (t, i, s, n) {
                        return new e(t, i, s, n);
                    },
                    e.withCompile = function (t, i, s, n) {
                        if (s && e.sharders[s]) return e.sharders[s];
                        var a = e._preCompileShader[2e-4 * t];
                        if (!a) throw new Error("withCompile shader err!" + t);
                        return a.createShader(i, s, n);
                    },
                    e.withCompile2D = function (t, i, s, n, a) {
                        if (n && e.sharders[n]) return e.sharders[n];
                        var r = e._preCompileShader[2e-4 * t + i];
                        if (!r) throw new Error("withCompile shader err!" + t + " " + i);
                        return r.createShader(s, n, a);
                    },
                    e.addInclude = function (t, e) {
                        yt.addInclude(t, e);
                    },
                    e.preCompile = function (t, i, s, n) {
                        var a = 2e-4 * t;
                        e._preCompileShader[a] = new yt(a, i, s, n);
                    },
                    e.preCompile2D = function (t, i, s, n, a) {
                        var r = 2e-4 * t + i;
                        e._preCompileShader[r] = new yt(r, s, n, a);
                    },
                    e._createShader = function (t, e, i) {
                        var s = t.createShader(i);
                        return t.shaderSource(s, e),
                            t.compileShader(s),
                            s;
                    },
                    e._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, , 33991, 33992],
                    e._count = 0,
                    e._preCompileShader = {},
                    e.SHADERNAME2ID = 2e-4,
                    e.sharders = (e.sharders = [], e.sharders.length = 32, e.sharders),
                    s(e, ["nameKey",
                        function () {
                            return this.nameKey = new R();
                        }]),
                    e;
            }(),
            $t = function (t) {
                function e() {
                    this._maxsize = 0,
                        this._upload = !0,
                        this._uploadSize = 0,
                        e.__super.call(this),
                        this.lock = !0;
                }
                n(e, "laya.webgl.utils.Buffer2D", t);
                var i = e.prototype;
                return i.needSize = function (t) {
                    var e = this._byteLength;
                    if (t) {
                        var i = this._byteLength + t;
                        i <= this._buffer.byteLength || this._resizeBuffer(i << 1, !0),
                            this._byteLength = i;
                    }
                    return e;
                },
                    i._bufferData = function () {
                        this._maxsize = Math.max(this._maxsize, this._byteLength),
                            A.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength, this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()), this._maxsize = this._byteLength),
                            this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength, Ot._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize),
                            Ot._gl.bufferSubData(this._bufferType, 0, this._buffer);
                    },
                    i._bufferSubData = function (t, e, i) {
                        if (void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), this._maxsize = Math.max(this._maxsize, this._byteLength), A.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength, this._buffer = this._buffer.slice(0, this._maxsize + 64), this._checkArrayUse()), this._maxsize = this._byteLength), this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength, Ot._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage), this.memorySize = this._uploadSize), e || i) {
                            var s = this._buffer.slice(e, i);
                            Ot._gl.bufferSubData(this._bufferType, t, s);
                        } else Ot._gl.bufferSubData(this._bufferType, t, this._buffer);
                    },
                    i._checkArrayUse = function () { },
                    i._bind_upload = function () {
                        return !!this._upload && (this._upload = !1, this._bind(), this._bufferData(), !0);
                    },
                    i._bind_subUpload = function (t, e, i) {
                        return void 0 === t && (t = 0),
                            void 0 === e && (e = 0),
                            void 0 === i && (i = 0),
                            !!this._upload && (this._upload = !1, this._bind(), this._bufferSubData(t, e, i), !0);
                    },
                    i._resizeBuffer = function (t, e) {
                        if (t < this._buffer.byteLength) return this;
                        if (this.memorySize = t, e && this._buffer && this._buffer.byteLength > 0) {
                            var i = new ArrayBuffer(t);
                            new Uint8Array(i).set(new Uint8Array(this._buffer), 0),
                                this._buffer = i;
                        } else this._buffer = new ArrayBuffer(t);
                        return this._checkArrayUse(),
                            this._upload = !0,
                            this;
                    },
                    i.append = function (t) {
                        this._upload = !0;
                        var e, i = 0;
                        i = t.byteLength,
                            t instanceof Uint8Array ? (this._resizeBuffer(this._byteLength + i, !0), e = new Uint8Array(this._buffer, this._byteLength)) : t instanceof Uint16Array ? (this._resizeBuffer(this._byteLength + i, !0), e = new Uint16Array(this._buffer, this._byteLength)) : t instanceof Float32Array && (this._resizeBuffer(this._byteLength + i, !0), e = new Float32Array(this._buffer, this._byteLength)),
                            e.set(t, 0),
                            this._byteLength += i,
                            this._checkArrayUse();
                    },
                    i.appendU16Array = function (t, e) {
                        this._resizeBuffer(this._byteLength + 2 * e, !0);
                        for (var i = new Uint16Array(this._buffer, this._byteLength, e), s = 0; s < e; s++) i[s] = t[s];
                        this._byteLength += 2 * e,
                            this._checkArrayUse();
                    },
                    i.appendEx = function (t, e) {
                        this._upload = !0;
                        var i = 0;
                        i = t.byteLength,
                            this._resizeBuffer(this._byteLength + i, !0),
                            new e(this._buffer, this._byteLength).set(t, 0),
                            this._byteLength += i,
                            this._checkArrayUse();
                    },
                    i.appendEx2 = function (t, e, i, s) {
                        void 0 === s && (s = 1),
                            this._upload = !0;
                        var n, a = 0;
                        a = i * s,
                            this._resizeBuffer(this._byteLength + a, !0),
                            n = new e(this._buffer, this._byteLength);
                        var r = 0;
                        for (r = 0; r < i; r++) n[r] = t[r];
                        this._byteLength += a,
                            this._checkArrayUse();
                    },
                    i.getBuffer = function () {
                        return this._buffer;
                    },
                    i.setNeedUpload = function () {
                        this._upload = !0;
                    },
                    i.getNeedUpload = function () {
                        return this._upload;
                    },
                    i.upload = function () {
                        var t = this._bind_upload();
                        return Ot._gl.bindBuffer(this._bufferType, null),
                            Ot._bindActive[this._bufferType] = null,
                            Bt.activeShader = null,
                            t;
                    },
                    i.subUpload = function (t, e, i) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = 0),
                            void 0 === i && (i = 0);
                        var s = this._bind_subUpload();
                        return Ot._gl.bindBuffer(this._bufferType, null),
                            Ot._bindActive[this._bufferType] = null,
                            Bt.activeShader = null,
                            s;
                    },
                    i.disposeResource = function () {
                        t.prototype.disposeResource.call(this),
                            this._upload = !0,
                            this._uploadSize = 0;
                    },
                    i.clear = function () {
                        this._byteLength = 0,
                            this._upload = !0;
                    },
                    a(0, i, "bufferLength",
                        function () {
                            return this._buffer.byteLength;
                        }),
                    a(0, i, "byteLength", null,
                        function (t) {
                            this._byteLength !== t && (t <= this._buffer.byteLength || this._resizeBuffer(2 * t + 256, !0), this._byteLength = t);
                        }),
                    e.__int__ = function (t) {
                        Zt.QuadrangleIB = Zt.create(35044),
                            mt.fillIBQuadrangle(Zt.QuadrangleIB, 16);
                    },
                    e.FLOAT32 = 4,
                    e.SHORT = 2,
                    e;
            }(Ot),
            jt = (function (t) {
                function e(t) {
                    this.u_blurX = !1,
                        this.u_color = null,
                        this.u_offset = null,
                        this.u_strength = NaN,
                        this.u_texW = 0,
                        this.u_texH = 0,
                        e.__super.call(this, 9);
                }
                n(e, "laya.webgl.shader.d2.value.GlowSV", t);
                var i = e.prototype;
                i.setValue = function (e) {
                    t.prototype.setValue.call(this, e);
                },
                    i.clear = function () {
                        t.prototype.clear.call(this);
                    };
            }(Wt),
                function (t) {
                    function e(t) {
                        e.__super.call(this, 64),
                            this.defines.add(64);
                    }
                    n(e, "laya.webgl.shader.d2.value.TextSV", t);
                    var i = e.prototype;
                    return i.release = function () {
                        e.pool[e._length++] = this,
                            this.clear();
                    },
                        i.clear = function () {
                            t.prototype.clear.call(this);
                        },
                        e.create = function () {
                            return e._length ? e.pool[--e._length] : new e(null);
                        },
                        e.pool = [],
                        e._length = 0,
                        e;
                }(Wt)),
            Qt = function (t) {
                function e(t, i, s, n) {
                    this._params2dQuick1 = null,
                        this._params2dQuick2 = null,
                        this._shaderValueWidth = NaN,
                        this._shaderValueHeight = NaN,
                        e.__super.call(this, t, i, s, n);
                }
                n(e, "laya.webgl.shader.d2.Shader2X", t);
                var i = e.prototype;
                return i.upload2dQuick1 = function (t) {
                    this.upload(t, this._params2dQuick1 || this._make2dQuick1());
                },
                    i._make2dQuick1 = function () {
                        if (!this._params2dQuick1) {
                            this.activeResource(),
                                this._params2dQuick1 = [];
                            for (var t, e = this._params,
                                i = 0,
                                s = e.length; i < s; i++) t = e[i],
                                    (M.isFlash || "size" !== t.name && "position" !== t.name && "texcoord" !== t.name) && this._params2dQuick1.push(t);
                        }
                        return this._params2dQuick1;
                    },
                    i.disposeResource = function () {
                        t.prototype.disposeResource.call(this),
                            this._params2dQuick1 = null,
                            this._params2dQuick2 = null;
                    },
                    i.upload2dQuick2 = function (t) {
                        this.upload(t, this._params2dQuick2 || this._make2dQuick2());
                    },
                    i._make2dQuick2 = function () {
                        if (!this._params2dQuick2) {
                            this.activeResource(),
                                this._params2dQuick2 = [];
                            for (var t, e = this._params,
                                i = 0,
                                s = e.length; i < s; i++) t = e[i],
                                    (M.isFlash || "size" !== t.name) && this._params2dQuick2.push(t);
                        }
                        return this._params2dQuick2;
                    },
                    e.create = function (t, i, s, n) {
                        return new e(t, i, s, n);
                    },
                    e;
            }(qt),
            Zt = function (t) {
                function e(t) {
                    this._uint8Array = null,
                        this._uint16Array = null,
                        void 0 === t && (t = 35044),
                        e.__super.call(this),
                        this._bufferUsage = t,
                        this._bufferType = 34963,
                        M.isFlash || (this._buffer = new ArrayBuffer(8));
                }
                n(e, "laya.webgl.utils.IndexBuffer2D", $t);
                var i = e.prototype;
                return i._checkArrayUse = function () {
                    this._uint8Array && (this._uint8Array = new Uint8Array(this._buffer)),
                        this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));
                },
                    i.getUint8Array = function () {
                        return this._uint8Array || (this._uint8Array = new Uint8Array(this._buffer));
                    },
                    i.getUint16Array = function () {
                        return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));
                    },
                    i.destory = function () {
                        this._uint16Array = null,
                            this._uint8Array = null,
                            this._buffer = null;
                    },
                    e.QuadrangleIB = null,
                    e.create = function (t) {
                        return void 0 === t && (t = 35044),
                            new e(t);
                    },
                    e;
            }(),
            Jt = function (t) {
                function e(t, i) {
                    this._floatArray32 = null,
                        this._vertexStride = 0,
                        e.__super.call(this),
                        this._vertexStride = t,
                        this._bufferUsage = i,
                        this._bufferType = 34962,
                        M.isFlash || (this._buffer = new ArrayBuffer(8)),
                        this.getFloat32Array();
                }
                n(e, "laya.webgl.utils.VertexBuffer2D", t);
                var i = e.prototype;
                return i.getFloat32Array = function () {
                    return this._floatArray32 || (this._floatArray32 = new Float32Array(this._buffer));
                },
                    i.bind = function (t) {
                        t && t._bind(),
                            this._bind();
                    },
                    i.insertData = function (t, e) {
                        this.getFloat32Array().set(t, e),
                            this._upload = !0;
                    },
                    i.bind_upload = function (t) {
                        t._bind_upload() || t._bind(),
                            this._bind_upload() || this._bind();
                    },
                    i._checkArrayUse = function () {
                        this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));
                    },
                    i.disposeResource = function () {
                        t.prototype.disposeResource.call(this);
                        var e = Ot._enableAtributes;
                        if (!M.isConchWebGL) for (var i = 0; i < 10; i++) bt.mainContext.disableVertexAttribArray(i),
                            e[i] = null;
                    },
                    i.destory = function () {
                        this._byteLength = 0,
                            this._upload = !0,
                            this._buffer = null,
                            this._floatArray32 = null;
                    },
                    a(0, i, "vertexStride",
                        function () {
                            return this._vertexStride;
                        }),
                    e.create = function (t, i) {
                        return void 0 === i && (i = 35048),
                            new e(t, i);
                    },
                    e;
            }($t),
            te = function (t) {
                function e(t, i, s, n) {
                    if (this._format = 0, this._mipmap = !1, this._allowMerageInAtlas = !1, this._enableMerageInAtlas = !1, this.repeat = !1, this._image = null, this.minFifter = 0, this.magFifter = 0, void 0 === s && (s = 6408), void 0 === n && (n = !0), e.__super.call(this, t, i), this._format = s, this._mipmap = n, this.repeat = !1, this.minFifter = -1, this.magFifter = -1, "string" == typeof t) this._url = t,
                        this._src = t,
                        this._image = new c.window.Image(),
                        i && (i.onload && (this.onload = i.onload), i.onerror && (this.onerror = i.onerror), i.onCreate && i.onCreate(this)),
                        this._image.crossOrigin = t && 0 == t.indexOf("data:") ? null : "",
                        t && (this._image.src = t);
                    else if (t instanceof ArrayBuffer) {
                        this._src = i,
                            this._url = this._src;
                        var a = new u(t);
                        a.readUTFBytes(4),
                            a.readUTFBytes(2),
                            a.getInt16();
                        a.endian = "bigEndian",
                            this._w = a.getInt16(),
                            this._h = a.getInt16();
                        a.getInt16(),
                            a.getInt16();
                        this._image = new Uint8Array(t, a.pos),
                            this._format = bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL,
                            U.enabled && this._w < U.atlasLimitWidth && this._h < U.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
                    } else this._src = i,
                        this._url = this._src,
                        this._image = t.source || t,
                        this.onresize();
                    this._$5__enableMerageInAtlas = !0;
                }
                n(e, "laya.webgl.resource.WebGLImage", v);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.webgl.resource.IMergeAtlasBitmap": !0
                }),
                    s._init_ = function (t, e) { },
                    s._createWebGlTexture = function () {
                        if (!this._image) throw "create GLTextur err:no data:" + this._image;
                        var t = bt.mainContext,
                            e = this._source = t.createTexture(),
                            i = xt.curBindTexTarget,
                            s = xt.curBindTexValue;
                        if (xt.bindTexture(t, 3553, e), M.isConchWebGL) switch (this._format) {
                            case 6408:
                                t.texImage2DEx(!0, 3553, 0, this._format, 6408, 5121, this._image);
                                break;

                            case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                                t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
                        } else {
                            switch (t.pixelStorei(37441, !0), this._format) {
                                case 6408:
                                    t.texImage2D(3553, 0, this._format, 6408, 5121, this._image);
                                    break;

                                case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                                    t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
                            }
                            t.pixelStorei(37441, !1);
                        }
                        var n = this.minFifter,
                            a = this.magFifter,
                            r = this.repeat ? 10497 : 33071,
                            h = o.isPOT(this._w, this._h);
                        h ? (this.mipmap ? -1 !== n || (n = 9987) : -1 !== n || (n = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, r), t.texParameteri(3553, 10243, r), this.mipmap && t.generateMipmap(3553)) : (- 1 !== n || (n = 9729), -1 !== a || (a = 9729), t.texParameteri(3553, 10241, n), t.texParameteri(3553, 10240, a), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071)),
                            i && s && xt.bindTexture(t, i, s),
                            this._image.onload = null,
                            this._image = null,
                            h && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4,
                            this._recreateLock = !1;
                    },
                    s.recreateResource = function () {
                        var t = this;
                        if (null != this._src && "" !== this._src) if (this._needReleaseAgain = !1, this._image) {
                            if (this._recreateLock) return;
                            this._allowMerageInAtlas && this._$5__enableMerageInAtlas ? (this.memorySize = 0, this._recreateLock = !1) : this._createWebGlTexture(),
                                this.completeCreate();
                        } else {
                            this._recreateLock = !0;
                            var e = this;
                            this._image = new c.window.Image(),
                                this._image.crossOrigin = 0 == this._src.indexOf("data:") ? null : "",
                                this._image.onload = function () {
                                    if (e._needReleaseAgain) return e._needReleaseAgain = !1,
                                        e._image.onload = null,
                                        void (e._image = null);
                                    e._allowMerageInAtlas && e._enableMerageInAtlas ? (t.memorySize = 0, t._recreateLock = !1) : e._createWebGlTexture(),
                                        e.completeCreate();
                                },
                                this._image.src = this._src;
                        }
                    },
                    s.disposeResource = function () {
                        this._recreateLock && (this._needReleaseAgain = !0),
                            this._source && (bt.mainContext.deleteTexture(this._source), this._source = null, this._image = null, this.memorySize = 0);
                    },
                    s.onresize = function () {
                        this._w = this._image.width,
                            this._h = this._image.height,
                            U.enabled && this._w < U.atlasLimitWidth && this._h < U.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
                    },
                    s.clearAtlasSource = function () {
                        this._image = null;
                    },
                    a(0, s, "format",
                        function () {
                            return this._format;
                        }),
                    a(0, s, "enableMerageInAtlas",
                        function () {
                            return this._$5__enableMerageInAtlas;
                        },
                        function (t) {
                            this._$5__enableMerageInAtlas = t;
                        }),
                    a(0, s, "mipmap",
                        function () {
                            return this._mipmap;
                        }),
                    a(0, s, "allowMerageInAtlas",
                        function () {
                            return this._allowMerageInAtlas;
                        }),
                    a(0, s, "atlasSource",
                        function () {
                            return this._image;
                        }),
                    a(0, s, "onload", null,
                        function (t) {
                            var e = this;
                            this._onload = t,
                                this._image && (this._image.onload = null != this._onload ?
                                    function () {
                                        e.onresize(),
                                            e._onload();
                                    } : null);
                        }),
                    a(0, s, "onerror", null,
                        function (t) {
                            var e = this;
                            this._onerror = t,
                                this._image && (this._image.onerror = null != this._onerror ?
                                    function () {
                                        e._onerror();
                                    } : null);
                        }),
                    e;
            }();
        i.__init([_t, F, Mt, yt]);
    }(window, document, Laya),
    "function" == typeof define && define.amd && define("laya.core", ["require", "exports"],
        function (t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            for (var i in Laya) {
                var s = Laya[i];
                s && s.__isclass && (e[i] = s);
            }
        }),
    function (t, e, i) {
        i.un,
            i.uns;
        var s = i.static,
            n = i.class,
            a = i.getset,
            r = i.__newvec,
            o = laya.maths.Bezier,
            h = laya.utils.Browser,
            l = laya.utils.Byte,
            c = (laya.events.Event, laya.events.EventDispatcher),
            u = laya.display.Graphics,
            d = laya.resource.HTMLCanvas,
            _ = laya.utils.Handler,
            p = laya.net.Loader,
            f = laya.maths.MathUtil,
            m = laya.maths.Matrix,
            g = (laya.display.Node, laya.maths.Point, laya.maths.Rectangle),
            v = laya.renders.Render,
            y = (laya.renders.RenderContext, laya.resource.Resource),
            b = laya.utils.RunDriver,
            x = laya.display.Sprite,
            w = laya.utils.Stat,
            M = laya.resource.Texture,
            S = laya.net.URL,
            C = laya.utils.Utils,
            T = function () {
                function t() {
                    this.nodes = null,
                        this.name = null,
                        this.playTime = NaN,
                        this.bone3DMap = null,
                        this.totalKeyframeDatasLength = 0;
                }
                return n(t, "laya.ani.AnimationContent"),
                    t;
            }(),
            I = function () {
                function t() {
                    this.name = null,
                        this.parentIndex = 0,
                        this.parent = null,
                        this.keyframeWidth = 0,
                        this.lerpType = 0,
                        this.interpolationMethod = null,
                        this.childs = null,
                        this.keyFrame = null,
                        this.playTime = NaN,
                        this.extenData = null,
                        this.dataOffset = 0;
                }
                return n(t, "laya.ani.AnimationNodeContent"),
                    t;
            }(),
            L = function () {
                function t() { }
                return n(t, "laya.ani.AnimationParser01"),
                    t.parse = function (t, e) {
                        var i = e.__getBuffer(),
                            s = 0,
                            n = 0,
                            a = 0,
                            r = 0,
                            o = 0,
                            h = 0,
                            c = 0,
                            u = e.readUTFString();
                        t._aniClassName = u;
                        var d, _ = e.readUTFString().split("\n"),
                            p = e.getUint8(),
                            f = e.getUint32(),
                            m = e.getUint32();
                        f > 0 && (d = i.slice(f, m));
                        var g = new l(d);
                        for (m > 0 && (t._publicExtData = i.slice(m, i.byteLength)), t._useParent = !!e.getUint8(), t._anis.length = p, s = 0; s < p; s++) {
                            var v = t._anis[s] = new T();
                            v.nodes = new Array();
                            var y = v.name = _[e.getUint16()];
                            t._aniMap[y] = s,
                                v.bone3DMap = {},
                                v.playTime = e.getFloat32();
                            var b = v.nodes.length = e.getUint8();
                            for (v.totalKeyframeDatasLength = 0, n = 0; n < b; n++) {
                                var x = v.nodes[n] = new I();
                                x.childs = [];
                                var w = e.getInt16();
                                w >= 0 && (x.name = _[w], v.bone3DMap[x.name] = n),
                                    x.keyFrame = new Array(),
                                    x.parentIndex = e.getInt16(),
                                    -1 == x.parentIndex ? x.parent = null : x.parent = v.nodes[x.parentIndex],
                                    x.lerpType = e.getUint8();
                                var M = e.getUint32();
                                g.pos = M;
                                var S = x.keyframeWidth = g.getUint16();
                                if (v.totalKeyframeDatasLength += S, 0 === x.lerpType || 1 === x.lerpType) for (x.interpolationMethod = [], x.interpolationMethod.length = S, a = 0; a < S; a++) x.interpolationMethod[a] = it.interpolation[g.getUint8()];
                                null != x.parent && x.parent.childs.push(x);
                                var C = e.getUint16();
                                C > 0 && (x.extenData = i.slice(e.pos, e.pos + C), e.pos += C);
                                var L = e.getUint16();
                                x.keyFrame.length = L;
                                var E, A = 0;
                                for (a = 0, r = L; a < r; a++) {
                                    if (E = x.keyFrame[a] = new Q(), E.duration = e.getFloat32(), E.startTime = A, 2 === x.lerpType) {
                                        E.interpolationData = [];
                                        var R = e.getUint8(),
                                            P = 0;
                                        switch (P = e.getFloat32()) {
                                            case 254:
                                                for (E.interpolationData.length = S, c = 0; c < S; c++) E.interpolationData[c] = 0;
                                                break;

                                            case 255:
                                                for (E.interpolationData.length = S, c = 0; c < S; c++) E.interpolationData[c] = 5;
                                                break;

                                            default:
                                                for (E.interpolationData.push(P), h = 1; h < R; h++) E.interpolationData.push(e.getFloat32());
                                        }
                                    }
                                    for (E.data = new Float32Array(S), o = 0; o < S; o++) E.data[o] = e.getFloat32(),
                                        E.data[o] > -1e-8 && E.data[o] < 1e-8 && (E.data[o] = 0);
                                    A += E.duration;
                                }
                                E.startTime = v.playTime,
                                    x.playTime = v.playTime,
                                    t._calculateKeyFrame(x, L, S);
                            }
                        }
                    },
                    t;
            }(),
            E = function () {
                function t() { }
                return n(t, "laya.ani.AnimationParser02"),
                    t.READ_DATA = function () {
                        t._DATA.offset = t._reader.getUint32(),
                            t._DATA.size = t._reader.getUint32();
                    },
                    t.READ_BLOCK = function () {
                        for (var e = t._BLOCK.count = t._reader.getUint16(), i = t._BLOCK.blockStarts = [], s = t._BLOCK.blockLengths = [], n = 0; n < e; n++) i.push(t._reader.getUint32()),
                            s.push(t._reader.getUint32());
                    },
                    t.READ_STRINGS = function () {
                        var e = t._reader.getUint32(),
                            i = t._reader.getUint16(),
                            s = t._reader.pos;
                        t._reader.pos = e + t._DATA.offset;
                        for (var n = 0; n < i; n++) t._strings[n] = t._reader.readUTFString();
                        t._reader.pos = s;
                    },
                    t.parse = function (e, i) {
                        t._templet = e,
                            t._reader = i;
                        i.__getBuffer();
                        t.READ_DATA(),
                            t.READ_BLOCK(),
                            t.READ_STRINGS();
                        for (var s = 0,
                            n = t._BLOCK.count; s < n; s++) {
                            var a = i.getUint16(),
                                r = t._strings[a],
                                o = t["READ_" + r];
                            if (null == o) throw new Error("model file err,no this function:" + a + " " + r);
                            o.call();
                        }
                    },
                    t.READ_ANIMATIONS = function () {
                        var e = t._reader,
                            i = e.__getBuffer(),
                            s = 0,
                            n = 0,
                            a = 0,
                            r = 0,
                            o = e.getUint16(),
                            h = [];
                        for (h.length = o, s = 0; s < o; s++) h[s] = it.interpolation[e.getByte()];
                        var l = e.getUint8();
                        for (t._templet._anis.length = l, s = 0; s < l; s++) {
                            var c = t._templet._anis[s] = {};
                            c.nodes = new Array();
                            var u = c.name = t._strings[e.getUint16()];
                            t._templet._aniMap[u] = s,
                                c.bone3DMap = {},
                                c.playTime = e.getFloat32();
                            var d = c.nodes.length = e.getInt16();
                            for (c.totalKeyframeDatasLength = 0, n = 0; n < d; n++) {
                                var _ = c.nodes[n] = {};
                                _.keyframeWidth = o,
                                    _.childs = [];
                                var p = e.getUint16();
                                p >= 0 && (_.name = t._strings[p], c.bone3DMap[_.name] = n),
                                    _.keyFrame = new Array(),
                                    _.parentIndex = e.getInt16(),
                                    -1 == _.parentIndex ? _.parent = null : _.parent = c.nodes[_.parentIndex],
                                    c.totalKeyframeDatasLength += o,
                                    _.interpolationMethod = h,
                                    null != _.parent && _.parent.childs.push(_);
                                var f = e.getUint16();
                                _.keyFrame.length = f;
                                var m = null,
                                    g = null;
                                for (a = 0, r = f; a < r; a++) {
                                    (m = _.keyFrame[a] = {}).startTime = e.getFloat32(),
                                        g && (g.duration = m.startTime - g.startTime);
                                    var v = t._DATA.offset,
                                        y = e.getUint32(),
                                        b = 4 * o,
                                        x = i.slice(v + y, v + y + b);
                                    m.data = new Float32Array(x),
                                        g = m;
                                }
                                m.duration = 0,
                                    _.playTime = c.playTime,
                                    t._templet._calculateKeyFrame(_, f, o);
                            }
                        }
                    },
                    t._templet = null,
                    t._reader = null,
                    t._strings = [],
                    s(t, ["_BLOCK",
                        function () {
                            return this._BLOCK = {
                                count: 0
                            };
                        },
                        "_DATA",
                        function () {
                            return this._DATA = {
                                offset: 0,
                                size: 0
                            };
                        }]),
                    t;
            }(),
            A = (function () {
                function t() { }
                n(t, "laya.ani.AnimationState"),
                    t.stopped = 0,
                    t.paused = 1,
                    t.playing = 2;
            }(),
                function () {
                    function t() {
                        this.name = null,
                            this.root = null,
                            this.parentBone = null,
                            this.length = 10,
                            this.transform = null,
                            this.inheritScale = !0,
                            this.inheritRotation = !0,
                            this.rotation = NaN,
                            this.resultRotation = NaN,
                            this.d = -1,
                            this._tempMatrix = null,
                            this._sprite = null,
                            this.resultTransform = new $(),
                            this.resultMatrix = new m(),
                            this._children = [];
                    }
                    n(t, "laya.ani.bone.Bone");
                    var e = t.prototype;
                    return e.setTempMatrix = function (t) {
                        this._tempMatrix = t;
                        var e = 0,
                            i = 0;
                        for (e = 0, i = this._children.length; e < i; e++) this._children[e].setTempMatrix(this._tempMatrix);
                    },
                        e.update = function (t) {
                            this.rotation = this.transform.skX;
                            var e;
                            if (t) e = this.resultTransform.getMatrix(),
                                m.mul(e, t, this.resultMatrix),
                                this.resultRotation = this.rotation;
                            else if (this.resultRotation = this.rotation + this.parentBone.resultRotation, this.parentBone) if (this.inheritRotation && this.inheritScale) e = this.resultTransform.getMatrix(),
                                m.mul(e, this.parentBone.resultMatrix, this.resultMatrix);
                            else {
                                var i = this.parentBone,
                                    s = NaN,
                                    n = NaN,
                                    a = NaN,
                                    r = this.parentBone.resultMatrix;
                                e = this.resultTransform.getMatrix();
                                var o = r.a * e.tx + r.c * e.ty + r.tx,
                                    h = r.b * e.tx + r.d * e.ty + r.ty,
                                    l = new m();
                                this.inheritRotation ? (s = Math.atan2(i.resultMatrix.b, i.resultMatrix.a), n = Math.cos(s), a = Math.sin(s), l.setTo(n, a, -a, n, 0, 0), m.mul(this._tempMatrix, l, m.TEMP), m.TEMP.copyTo(l), e = this.resultTransform.getMatrix(), m.mul(e, l, this.resultMatrix), this.resultTransform.scX * this.resultTransform.scY < 0 && this.resultMatrix.rotate(.5 * Math.PI), this.resultMatrix.tx = o, this.resultMatrix.ty = h) : (this.inheritScale, e = this.resultTransform.getMatrix(), m.TEMP.identity(), m.TEMP.d = this.d, m.mul(e, m.TEMP, this.resultMatrix), this.resultMatrix.tx = o, this.resultMatrix.ty = h);
                            } else (e = this.resultTransform.getMatrix()).copyTo(this.resultMatrix);
                            var c = 0,
                                u = 0;
                            for (c = 0, u = this._children.length; c < u; c++) this._children[c].update();
                        },
                        e.updateChild = function () {
                            var t = 0,
                                e = 0;
                            for (t = 0, e = this._children.length; t < e; t++) this._children[t].update();
                        },
                        e.setRotation = function (t) {
                            this._sprite && (this._sprite.rotation = 180 * t / Math.PI);
                        },
                        e.updateDraw = function (e, s) {
                            t.ShowBones && !t.ShowBones[this.name] || (this._sprite ? (this._sprite.x = e + this.resultMatrix.tx, this._sprite.y = s + this.resultMatrix.ty) : (this._sprite = new x(), this._sprite.graphics.drawCircle(0, 0, 5, "#ff0000"), this._sprite.graphics.drawLine(0, 0, this.length, 0, "#00ff00"), this._sprite.graphics.fillText(this.name, 0, 0, "20px Arial", "#00ff00", "center"), i.stage.addChild(this._sprite), this._sprite.x = e + this.resultMatrix.tx, this._sprite.y = s + this.resultMatrix.ty));
                            var n = 0,
                                a = 0;
                            for (n = 0, a = this._children.length; n < a; n++) this._children[n].updateDraw(e, s);
                        },
                        e.addChild = function (t) {
                            this._children.push(t),
                                t.parentBone = this;
                        },
                        e.findBone = function (t) {
                            if (this.name == t) return this;
                            var e, i, s = 0,
                                n = 0;
                            for (s = 0, n = this._children.length; s < n; s++) if (e = this._children[s], i = e.findBone(t)) return i;
                            return null;
                        },
                        e.localToWorld = function (t) {
                            var e = t[0],
                                i = t[1];
                            t[0] = e * this.resultMatrix.a + i * this.resultMatrix.c + this.resultMatrix.tx,
                                t[1] = e * this.resultMatrix.b + i * this.resultMatrix.d + this.resultMatrix.ty;
                        },
                        t.ShowBones = {},
                        t;
                }()),
            R = function () {
                function t() {
                    this.name = null,
                        this.parent = null,
                        this.attachmentName = null,
                        this.srcDisplayIndex = -1,
                        this.type = "src",
                        this.templet = null,
                        this.currSlotData = null,
                        this.currTexture = null,
                        this.currDisplayData = null,
                        this.displayIndex = -1,
                        this._diyTexture = null,
                        this._parentMatrix = null,
                        this._resultMatrix = null,
                        this._replaceDic = {},
                        this._curDiyUV = null,
                        this._curDiyVS = null,
                        this._skinSprite = null,
                        this.deformData = null,
                        this._mVerticleArr = null;
                }
                n(t, "laya.ani.bone.BoneSlot");
                var e = t.prototype;
                return e.showSlotData = function (t, e) {
                    void 0 === e && (e = !0),
                        this.currSlotData = t,
                        e && (this.displayIndex = this.srcDisplayIndex),
                        this.currDisplayData = null,
                        this.currTexture = null;
                },
                    e.showDisplayByName = function (t) {
                        this.currSlotData && this.showDisplayByIndex(this.currSlotData.getDisplayByName(t));
                    },
                    e.replaceDisplayByName = function (t, e) {
                        if (this.currSlotData) {
                            var i = 0;
                            i = this.currSlotData.getDisplayByName(t);
                            var s = 0;
                            s = this.currSlotData.getDisplayByName(e),
                                this.replaceDisplayByIndex(i, s);
                        }
                    },
                    e.replaceDisplayByIndex = function (t, e) {
                        this.currSlotData && (this._replaceDic[t] = e, this.displayIndex == t && this.showDisplayByIndex(t));
                    },
                    e.showDisplayByIndex = function (t) {
                        if (null != this._replaceDic[t] && (t = this._replaceDic[t]), this.currSlotData && t > -1 && t < this.currSlotData.displayArr.length) {
                            if (this.displayIndex = t, this.currDisplayData = this.currSlotData.displayArr[t], this.currDisplayData) {
                                var e = this.currDisplayData.name;
                                this.currTexture = this.templet.getTexture(e),
                                    this.currTexture && !v.isConchApp && 0 == this.currDisplayData.type && this.currDisplayData.uvs && (this.currTexture = this.currDisplayData.createTexture(this.currTexture));
                            }
                        } else this.displayIndex = -1,
                            this.currDisplayData = null,
                            this.currTexture = null;
                    },
                    e.replaceSkin = function (t) {
                        this._diyTexture = t,
                            this._curDiyUV && (this._curDiyUV.length = 0),
                            this.currDisplayData && this._diyTexture == this.currDisplayData.texture && (this._diyTexture = null);
                    },
                    e.setParentMatrix = function (t) {
                        this._parentMatrix = t;
                    },
                    e.draw = function (e, i, s, n) {
                        if (void 0 === s && (s = !1), void 0 === n && (n = 1), (null != this._diyTexture || null != this.currTexture) && null != this.currDisplayData || this.currDisplayData && 3 == this.currDisplayData.type) {
                            var a = this.currTexture;
                            this._diyTexture && (a = this._diyTexture);
                            var r;
                            switch (this.currDisplayData.type) {
                                case 0:
                                    if (e) {
                                        var o = this.getDisplayMatrix();
                                        if (this._parentMatrix) {
                                            var h = !1;
                                            if (o) {
                                                m.mul(o, this._parentMatrix, m.TEMP);
                                                var l;
                                                if (s ? (null == this._resultMatrix && (this._resultMatrix = new m()), l = this._resultMatrix) : l = new m(), !v.isWebGL && this.currDisplayData.uvs || v.isWebGL && this._diyTexture && this.currDisplayData.uvs) {
                                                    var c = t._tempMatrix;
                                                    c.identity(),
                                                        this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (c.d = -1),
                                                        this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4] && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (h = !0, c.rotate(- Math.PI / 2)),
                                                        m.mul(c, m.TEMP, l);
                                                } else m.TEMP.copyTo(l);
                                                h ? e.drawTexture(a, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, l) : e.drawTexture(a, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, l);
                                            }
                                        }
                                    }
                                    break;

                                case 1:
                                    if (s ? (null == this._skinSprite && (this._skinSprite = t.createSkinMesh()), r = this._skinSprite) : r = t.createSkinMesh(), null == r) return;
                                    var u;
                                    if (null == this.currDisplayData.bones) {
                                        var d = this.currDisplayData.weights;
                                        this.deformData && (d = this.deformData);
                                        var _;
                                        this._diyTexture ? (this._curDiyUV || (this._curDiyUV = []), 0 == this._curDiyUV.length && (this._curDiyUV = j.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV), this._curDiyUV = j.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)), _ = this._curDiyUV) : _ = this.currDisplayData.uvs,
                                            this._mVerticleArr = d;
                                        this.currDisplayData.triangles.length;
                                        u = this.currDisplayData.triangles,
                                            r.init2(a, null, u, this._mVerticleArr, _);
                                        var p = this.getDisplayMatrix();
                                        if (this._parentMatrix && p) {
                                            m.mul(p, this._parentMatrix, m.TEMP);
                                            var f;
                                            s ? (null == this._resultMatrix && (this._resultMatrix = new m()), f = this._resultMatrix) : f = new m(),
                                                m.TEMP.copyTo(f),
                                                r.transform = f;
                                        }
                                    } else this.skinMesh(i, r, n);
                                    e.drawSkin(r);
                                    break;

                                case 2:
                                    if (s ? (null == this._skinSprite && (this._skinSprite = t.createSkinMesh()), r = this._skinSprite) : r = t.createSkinMesh(), null == r) return;
                                    this.skinMesh(i, r, n),
                                        e.drawSkin(r);
                            }
                        }
                    },
                    e.skinMesh = function (t, e, i) {
                        var s, n = this.currTexture,
                            a = this.currDisplayData.bones;
                        this._diyTexture ? (n = this._diyTexture, this._curDiyUV || (this._curDiyUV = []), 0 == this._curDiyUV.length && (this._curDiyUV = j.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV), this._curDiyUV = j.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)), s = this._curDiyUV) : s = this.currDisplayData.uvs;
                        var r, o, h = this.currDisplayData.weights,
                            l = this.currDisplayData.triangles,
                            c = 0,
                            u = 0,
                            d = 0,
                            _ = NaN,
                            p = NaN,
                            f = 0,
                            m = 0,
                            g = [],
                            v = 0,
                            y = 0;
                        if (this.deformData && this.deformData.length > 0) {
                            var b = 0;
                            for (v = 0, y = a.length; v < y;) {
                                for (d = a[v++] + v, c = 0, u = 0; v < d; v++) o = t[a[v]],
                                    _ = h[f] + this.deformData[b++],
                                    p = h[f + 1] + this.deformData[b++],
                                    m = h[f + 2],
                                    c += (_ * o.a + p * o.c + o.tx) * m,
                                    u += (_ * o.b + p * o.d + o.ty) * m,
                                    f += 3;
                                g.push(c, u);
                            }
                        } else for (v = 0, y = a.length; v < y;) {
                            for (d = a[v++] + v, c = 0, u = 0; v < d; v++) o = t[a[v]],
                                _ = h[f],
                                p = h[f + 1],
                                m = h[f + 2],
                                c += (_ * o.a + p * o.c + o.tx) * m,
                                u += (_ * o.b + p * o.d + o.ty) * m,
                                f += 3;
                            g.push(c, u);
                        }
                        this._mVerticleArr = g,
                            r = l,
                            e.init2(n, null, r, this._mVerticleArr, s);
                    },
                    e.drawBonePoint = function (t) {
                        t && this._parentMatrix && t.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, "#ff0000");
                    },
                    e.getDisplayMatrix = function () {
                        return this.currDisplayData ? this.currDisplayData.transform.getMatrix() : null;
                    },
                    e.getMatrix = function () {
                        return this._resultMatrix;
                    },
                    e.copy = function () {
                        var e = new t();
                        return e.type = "copy",
                            e.name = this.name,
                            e.attachmentName = this.attachmentName,
                            e.srcDisplayIndex = this.srcDisplayIndex,
                            e.parent = this.parent,
                            e.displayIndex = this.displayIndex,
                            e.templet = this.templet,
                            e.currSlotData = this.currSlotData,
                            e.currTexture = this.currTexture,
                            e.currDisplayData = this.currDisplayData,
                            e;
                    },
                    t.createSkinMesh = function () {
                        return v.isWebGL || v.isConchApp ? b.skinAniSprite() : v.isWebGL ? null : nt.useSimpleMeshInCanvas ? new st() : new et();
                    },
                    s(t, ["_tempMatrix",
                        function () {
                            return this._tempMatrix = new m();
                        }]),
                    t;
            }(),
            P = function () {
                function t() {
                    this.mesh = null,
                        this.transform = null,
                        this.context = null,
                        this.mode = 0;
                }
                n(t, "laya.ani.bone.canvasmesh.CanvasMeshRender");
                var e = t.prototype;
                return e.renderToContext = function (t) {
                    this.context = t.ctx || t,
                        this.mesh && (0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
                },
                    e._renderNoIndexes = function (t) {
                        var e = 0,
                            i = t.vertices.length / 2,
                            s = 0;
                        for (e = 0; e < i - 2; e++) s = 2 * e,
                            this._renderDrawTriangle(t, s, s + 2, s + 4);
                    },
                    e._renderWithIndexes = function (t) {
                        var e = t.indexes,
                            i = 0,
                            s = e.length;
                        for (i = 0; i < s; i += 3) {
                            var n = 2 * e[i],
                                a = 2 * e[i + 1],
                                r = 2 * e[i + 2];
                            this._renderDrawTriangle(t, n, a, r);
                        }
                    },
                    e._renderDrawTriangle = function (t, e, i, s) {
                        var n = this.context,
                            a = t.uvs,
                            r = t.vertices,
                            o = t.texture,
                            h = o.bitmap,
                            l = h.source,
                            c = o.width,
                            u = o.height,
                            d = h.width,
                            _ = h.height,
                            p = NaN,
                            f = NaN,
                            m = NaN,
                            g = NaN,
                            v = NaN,
                            y = NaN;
                        if (t.useUvTransform) {
                            var b = t.uvTransform;
                            p = (a[e] * b.a + a[e + 1] * b.c + b.tx) * d,
                                f = (a[i] * b.a + a[i + 1] * b.c + b.tx) * d,
                                m = (a[s] * b.a + a[s + 1] * b.c + b.tx) * d,
                                g = (a[e] * b.b + a[e + 1] * b.d + b.ty) * _,
                                v = (a[i] * b.b + a[i + 1] * b.d + b.ty) * _,
                                y = (a[s] * b.b + a[s + 1] * b.d + b.ty) * _;
                        } else p = a[e] * d,
                            f = a[i] * d,
                            m = a[s] * d,
                            g = a[e + 1] * _,
                            v = a[i + 1] * _,
                            y = a[s + 1] * _;
                        var x = r[e],
                            w = r[i],
                            M = r[s],
                            S = r[e + 1],
                            C = r[i + 1],
                            T = r[s + 1];
                        if (t.canvasPadding > 0) {
                            var I = t.canvasPadding,
                                L = t.canvasPadding,
                                E = (x + w + M) / 3,
                                A = (S + C + T) / 3,
                                R = x - E,
                                P = S - A,
                                k = Math.sqrt(R * R + P * P);
                            x = E + R / k * (k + I),
                                S = A + P / k * (k + L),
                                P = C - A,
                                w = E + (R = w - E) / (k = Math.sqrt(R * R + P * P)) * (k + I),
                                C = A + P / k * (k + L),
                                P = T - A,
                                M = E + (R = M - E) / (k = Math.sqrt(R * R + P * P)) * (k + I),
                                T = A + P / k * (k + L);
                        }
                        if (n.save(), this.transform) {
                            var D = this.transform;
                            n.transform(D.a, D.b, D.c, D.d, D.tx, D.ty);
                        }
                        n.beginPath(),
                            n.moveTo(x, S),
                            n.lineTo(w, C),
                            n.lineTo(M, T),
                            n.closePath(),
                            n.clip();
                        var B = 1 / (p * v + g * m + f * y - v * m - g * f - p * y),
                            N = x * v + g * M + w * y - v * M - g * w - x * y,
                            O = p * w + x * m + f * M - w * m - x * f - p * M,
                            G = p * v * M + g * w * m + x * f * y - x * v * m - g * f * M - p * w * y,
                            F = S * v + g * T + C * y - v * T - g * C - S * y,
                            U = p * C + S * m + f * T - C * m - S * f - p * T,
                            W = p * v * T + g * C * m + S * f * y - S * v * m - g * f * T - p * C * y;
                        n.transform(N * B, F * B, O * B, U * B, G * B, W * B),
                            n.drawImage(l, o.uv[0] * d, o.uv[1] * _, c, u, o.uv[0] * d, o.uv[1] * _, c, u),
                            n.restore();
                    },
                    t;
            }(),
            k = function () {
                function t() {
                    this.texture = null,
                        this.uvs = [0, 0, 1, 0, 1, 1, 0, 1],
                        this.vertices = [0, 0, 100, 0, 100, 100, 0, 100],
                        this.indexes = [0, 1, 3, 3, 1, 2],
                        this.uvTransform = null,
                        this.useUvTransform = !1,
                        this.canvasPadding = 1;
                }
                n(t, "laya.ani.bone.canvasmesh.MeshData");
                return t.prototype.getBounds = function () {
                    return g._getWrapRec(this.vertices);
                },
                    t;
            }(),
            D = function () {
                function t() {
                    this.skinName = null,
                        this.deformSlotDataList = [];
                }
                return n(t, "laya.ani.bone.DeformAniData"),
                    t;
            }(),
            B = function () {
                function t() {
                    this.deformSlotDisplayList = [];
                }
                return n(t, "laya.ani.bone.DeformSlotData"),
                    t;
            }(),
            N = function () {
                function t() {
                    this.boneSlot = null,
                        this.slotIndex = -1,
                        this.attachment = null,
                        this.deformData = null,
                        this.frameIndex = 0,
                        this.timeList = [],
                        this.vectices = [],
                        this.tweenKeyList = [];
                }
                n(t, "laya.ani.bone.DeformSlotDisplayData");
                var e = t.prototype;
                return e.binarySearch1 = function (t, e) {
                    var i = 0,
                        s = t.length - 2;
                    if (0 == s) return 1;
                    for (var n = s >>> 1; ;) {
                        if (t[Math.floor(n + 1)] <= e ? i = n + 1 : s = n, i == s) return i + 1;
                        n = i + s >>> 1;
                    }
                    return 0;
                },
                    e.apply = function (t, e, i) {
                        if (void 0 === i && (i = 1), t += .05, !(this.timeList.length <= 0)) {
                            var s = 0;
                            if (!(t < this.timeList[0])) {
                                var n = this.vectices[0].length,
                                    a = [],
                                    r = this.binarySearch1(this.timeList, t);
                                if (this.frameIndex = r, t >= this.timeList[this.timeList.length - 1]) {
                                    var o = this.vectices[this.vectices.length - 1];
                                    if (i < 1) for (s = 0; s < n; s++) a[s] += (o[s] - a[s]) * i;
                                    else for (s = 0; s < n; s++) a[s] = o[s];
                                    this.deformData = a;
                                } else {
                                    this.tweenKeyList[this.frameIndex];
                                    var h = this.vectices[this.frameIndex - 1],
                                        l = this.vectices[this.frameIndex],
                                        c = this.timeList[this.frameIndex - 1],
                                        u = this.timeList[this.frameIndex];
                                    i = this.tweenKeyList[r - 1] ? (t - c) / (u - c) : 0;
                                    var d = NaN;
                                    for (s = 0; s < n; s++) d = h[s],
                                        a[s] = d + (l[s] - d) * i;
                                    this.deformData = a;
                                }
                            }
                        }
                    },
                    t;
            }(),
            O = function () {
                function t() {
                    this.time = NaN,
                        this.drawOrder = [];
                }
                return n(t, "laya.ani.bone.DrawOrderData"),
                    t;
            }(),
            G = function () {
                function t() {
                    this.name = null,
                        this.intValue = 0,
                        this.floatValue = NaN,
                        this.stringValue = null,
                        this.time = NaN;
                }
                return n(t, "laya.ani.bone.EventData"),
                    t;
            }(),
            F = function () {
                function t(t, e) {
                    this._targetBone = null,
                        this._bones = null,
                        this._data = null,
                        this.name = null,
                        this.mix = NaN,
                        this.bendDirection = NaN,
                        this.isSpine = !0,
                        this._sp = null,
                        this.isDebug = !1,
                        this._data = t,
                        this._targetBone = e[t.targetBoneIndex],
                        this.isSpine = t.isSpine,
                        null == this._bones && (this._bones = []),
                        this._bones.length = 0;
                    for (var i = 0,
                        s = t.boneIndexs.length; i < s; i++) this._bones.push(e[t.boneIndexs[i]]);
                    this.name = t.name,
                        this.mix = t.mix,
                        this.bendDirection = t.bendDirection;
                }
                n(t, "laya.ani.bone.IkConstraint");
                var e = t.prototype;
                return e.apply = function () {
                    switch (this._bones.length) {
                        case 1:
                            this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);
                            break;

                        case 2:
                            this.isSpine ? this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix) : this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);
                    }
                },
                    e._applyIk1 = function (e, i, s, n) {
                        var a = e.parentBone,
                            r = 1 / (a.resultMatrix.a * a.resultMatrix.d - a.resultMatrix.b * a.resultMatrix.c),
                            o = i - a.resultMatrix.tx,
                            h = s - a.resultMatrix.ty,
                            l = (o * a.resultMatrix.d - h * a.resultMatrix.c) * r - e.transform.x,
                            c = (h * a.resultMatrix.a - o * a.resultMatrix.b) * r - e.transform.y,
                            u = Math.atan2(c, l) * t.radDeg - 0 - e.transform.skX;
                        e.transform.scX < 0 && (u += 180),
                            u > 180 ? u -= 360 : u < -180 && (u += 360),
                            e.transform.skX = e.transform.skY = e.transform.skX + u * n,
                            e.update();
                    },
                    e.updatePos = function (t, e) {
                        this._sp && this._sp.pos(t, e);
                    },
                    e._applyIk2 = function (e, s, n, a, r, o) {
                        if (0 != o) {
                            var h = e.resultTransform.x,
                                l = e.resultTransform.y,
                                c = e.transform.scX,
                                u = e.transform.scY,
                                d = s.transform.scX,
                                _ = 0,
                                p = 0,
                                f = 0;
                            c < 0 ? (c = -c, _ = 180, f = -1) : (_ = 0, f = 1),
                                u < 0 && (u = -u, f = -f),
                                d < 0 ? (d = -d, p = 180) : p = 0;
                            var m = s.resultTransform.x,
                                g = NaN,
                                v = NaN,
                                y = NaN,
                                b = e.resultMatrix.a,
                                w = e.resultMatrix.c,
                                M = e.resultMatrix.b,
                                S = e.resultMatrix.d,
                                C = Math.abs(c - u) <= 1e-4;
                            C ? (v = b * m + w * (g = s.resultTransform.y) + e.resultMatrix.tx, y = M * m + S * g + e.resultMatrix.ty) : (g = 0, v = b * m + e.resultMatrix.tx, y = M * m + e.resultMatrix.ty),
                                this.isDebug && (this._sp || (this._sp = new x(), i.stage.addChild(this._sp)), this._sp.graphics.clear(), this._sp.graphics.drawCircle(n, a, 15, "#ffff00"), this._sp.graphics.drawCircle(v, y, 15, "#ff00ff")),
                                e.setRotation(Math.atan2(y - e.resultMatrix.ty, v - e.resultMatrix.tx));
                            var T = e.parentBone;
                            b = T.resultMatrix.a,
                                w = T.resultMatrix.c,
                                M = T.resultMatrix.b;
                            var I = 1 / (b * (S = T.resultMatrix.d) - w * M),
                                L = n - T.resultMatrix.tx,
                                E = a - T.resultMatrix.ty,
                                A = (L * S - E * w) * I - h,
                                R = (E * b - L * M) * I - l,
                                P = ((L = v - T.resultMatrix.tx) * S - (E = y - T.resultMatrix.ty) * w) * I - h,
                                k = (E * b - L * M) * I - l,
                                D = Math.sqrt(P * P + k * k),
                                B = s.length * d,
                                N = NaN,
                                O = NaN;
                            if (C) {
                                var G = (A * A + R * R - D * D - (B *= c) * B) / (2 * D * B);
                                G < -1 ? G = -1 : G > 1 && (G = 1),
                                    O = Math.acos(G) * r,
                                    b = D + B * G,
                                    w = B * Math.sin(O),
                                    N = Math.atan2(R * b - A * w, A * b + R * w);
                            } else {
                                var F = (b = c * B) * b,
                                    U = (w = u * B) * w,
                                    W = A * A + R * R,
                                    X = Math.atan2(R, A),
                                    z = -2 * U * D,
                                    Y = U - F;
                                if ((S = z * z - 4 * Y * (M = U * D * D + F * W - F * U)) > 0) {
                                    var H = Math.sqrt(S);
                                    z < 0 && (H = -H);
                                    var V = (H = -(z + H) / 2) / Y,
                                        K = M / H,
                                        q = Math.abs(V) < Math.abs(K) ? V : K;
                                    q * q <= W && (E = Math.sqrt(W - q * q) * r, N = X - Math.atan2(E, q), O = Math.atan2(E / u, (q - D) / c));
                                }
                                var $ = 0,
                                    j = Number.MAX_VALUE,
                                    Q = 0,
                                    Z = 0,
                                    J = 0,
                                    tt = 0,
                                    et = 0,
                                    it = 0; (S = (L = D + b) * L) > tt && (J = 0, tt = S, et = L),
                                        (S = (L = D - b) * L) < j && ($ = Math.PI, j = S, Q = L);
                                var st = Math.acos(- b * D / (F - U)); (S = (L = b * Math.cos(st) + D) * L + (E = w * Math.sin(st)) * E) < j && ($ = st, j = S, Q = L, Z = E),
                                    S > tt && (J = st, tt = S, et = L, it = E),
                                    W <= (j + tt) / 2 ? (N = X - Math.atan2(Z * r, Q), O = $ * r) : (N = X - Math.atan2(it * r, et), O = J * r);
                            }
                            var nt = Math.atan2(g, m) * f,
                                at = e.resultTransform.skX; (N = (N - nt) * t.radDeg + _ - at) > 180 ? N -= 360 : N < -180 && (N += 360),
                                    e.resultTransform.x = h,
                                    e.resultTransform.y = l,
                                    e.resultTransform.skX = e.resultTransform.skY = at + N * o,
                                    at = s.resultTransform.skX,
                                    (O = ((O + nt) * t.radDeg - 0) * f + p - (at %= 360)) > 180 ? O -= 360 : O < -180 && (O += 360),
                                    s.resultTransform.x = m,
                                    s.resultTransform.y = g,
                                    s.resultTransform.skX = s.resultTransform.skY = s.resultTransform.skY + O * o,
                                    e.update();
                        }
                    },
                    e._applyIk3 = function (e, s, n, a, r, o) {
                        if (0 != o) {
                            var h = NaN,
                                l = NaN,
                                c = s.resultMatrix.a * s.length,
                                u = s.resultMatrix.b * s.length,
                                d = c * c + u * u,
                                _ = Math.sqrt(d),
                                p = e.resultMatrix.tx,
                                f = e.resultMatrix.ty,
                                m = s.resultMatrix.tx,
                                g = s.resultMatrix.ty,
                                v = m - p,
                                y = g - f,
                                b = v * v + y * y,
                                w = Math.sqrt(b),
                                M = (v = n - e.resultMatrix.tx) * v + (y = a - e.resultMatrix.ty) * y,
                                S = Math.sqrt(M);
                            if (_ + w <= S || S + _ <= w || S + w <= _) {
                                var C = NaN;
                                m = p + (C = _ + w <= S ? 1 : -1) * (n - p) * w / S,
                                    g = f + C * (a - f) * w / S;
                            } else {
                                var T = (b - d + M) / (2 * M),
                                    I = Math.sqrt(b - T * T * M) / S,
                                    L = p + v * T,
                                    E = f + y * T,
                                    A = -y * I,
                                    R = v * I;
                                r > 0 ? (m = L - A, g = E - R) : (m = L + A, g = E + R);
                            }
                            h = m,
                                l = g,
                                this.isDebug && (this._sp || (this._sp = new x(), i.stage.addChild(this._sp)), this._sp.graphics.clear(), this._sp.graphics.drawCircle(p, f, 15, "#ff00ff"), this._sp.graphics.drawCircle(n, a, 15, "#ffff00"), this._sp.graphics.drawCircle(h, l, 15, "#ff00ff"));
                            var P = NaN;
                            P = Math.atan2(l - e.resultMatrix.ty, h - e.resultMatrix.tx),
                                e.setRotation(P);
                            var k; (k = t._tempMatrix).identity(),
                                k.rotate(P),
                                k.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY()),
                                k.translate(e.resultMatrix.tx, e.resultMatrix.ty),
                                k.copyTo(e.resultMatrix),
                                e.updateChild();
                            var D = NaN;
                            D = Math.atan2(a - l, n - h),
                                s.setRotation(D);
                            var B; (B = t._tempMatrix).identity(),
                                B.rotate(D),
                                B.scale(s.resultMatrix.getScaleX(), s.resultMatrix.getScaleY()),
                                B.translate(h, l),
                                k.copyTo(s.resultMatrix),
                                s.updateChild();
                        }
                    },
                    s(t, ["radDeg",
                        function () {
                            return this.radDeg = 180 / Math.PI;
                        },
                        "degRad",
                        function () {
                            return this.degRad = Math.PI / 180;
                        },
                        "_tempMatrix",
                        function () {
                            return this._tempMatrix = new m();
                        }]),
                    t;
            }(),
            U = function () {
                function t() {
                    this.name = null,
                        this.targetBoneName = null,
                        this.bendDirection = 1,
                        this.mix = 1,
                        this.isSpine = !0,
                        this.targetBoneIndex = -1,
                        this.boneNames = [],
                        this.boneIndexs = [];
                }
                return n(t, "laya.ani.bone.IkConstraintData"),
                    t;
            }(),
            W = function () {
                function t() { }
                return n(t, "laya.ani.bone.MeshTools"),
                    t.findEdge = function (t, e, i) {
                        void 0 === e && (e = 0),
                            void 0 === i && (i = !0);
                        var s = 0,
                            n = 0,
                            a = 0;
                        for (n = t.length, a = -1, s = 0; s < n; s += 2)(a < 0 || i == t[a + e] < t[s + e]) && (a = s);
                        return a;
                    },
                    t.findBestTriangle = function (e) {
                        var i = 0;
                        i = t.findEdge(e, 1, !0);
                        var s = 0;
                        s = t.findEdge(e, 1, !1);
                        var n = 0;
                        n = t.findEdge(e, 0, !0);
                        var a = 0;
                        a = t.findEdge(e, 0, !1);
                        var r;
                        return r = t._bestTriangle,
                            r.length = 0,
                            r.push(n, a),
                            r.indexOf(i) < 0 && r.push(i),
                            r.indexOf(s) < 0 && r.push(s),
                            r;
                    },
                    t.solveMesh = function (e, i) {
                        (i = i || []).length = 0;
                        var s;
                        s = e.uvs;
                        var n;
                        n = e.vertices;
                        var a, r, o = 0,
                            h = 0,
                            l = 0;
                        o = (r = t.findBestTriangle(s))[0],
                            h = r[1],
                            l = r[2],
                            t._absArr.length = 0;
                        return t.isNormalUV(e.texture.uv) && t.adptTexture(e),
                            a = t.solvePoints(e.texture.uv, s[o], s[o + 1], s[h] - s[o], s[h + 1] - s[o + 1], s[l] - s[o], s[l + 1] - s[o + 1], t._absArr),
                            t.transPoints(a, n[o], n[o + 1], n[h] - n[o], n[h + 1] - n[o + 1], n[l] - n[o], n[l + 1] - n[o + 1], i);
                    },
                    t.findWrapRect = function (e) {
                        var i = 0;
                        i = t.findEdge(e, 1, !0);
                        var s = 0;
                        s = t.findEdge(e, 1, !1);
                        var n = 0;
                        n = t.findEdge(e, 0, !0);
                        var a = 0;
                        a = t.findEdge(e, 0, !1);
                        var r = NaN;
                        r = e[n];
                        var o = NaN;
                        o = e[a];
                        var h = NaN;
                        h = e[i + 1];
                        var l = NaN;
                        return [o, l = e[s + 1], r - o, h - l];
                    },
                    t.adptTexture = function (e) {
                        var i;
                        i = t.findWrapRect(e.uvs);
                        var s, n, a = (s = e.texture).width,
                            r = s.height;
                        n = M.create(s, i[0] * a, i[1] * r, i[2] * a, i[3] * r),
                            e.texture = n;
                    },
                    t.isNormalUV = function (t) {
                        return 0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5];
                    },
                    t.solvePoints = function (e, i, s, n, a, r, o, h) {
                        h = h || [];
                        var l = 0,
                            c = 0;
                        c = e.length;
                        var u;
                        for (l = 0; l < c; l += 2) u = t.solve2(e[l], e[l + 1], i, s, n, a, r, o),
                            h.push(u[0], u[1]);
                        return h;
                    },
                    t.transPoints = function (e, i, s, n, a, r, o, h) {
                        h = h || [];
                        var l = 0,
                            c = 0;
                        c = e.length;
                        for (l = 0; l < c; l += 2) t.transPoint(e[l], e[l + 1], i, s, n, a, r, o, h);
                        return h;
                    },
                    t.transPoint = function (t, e, i, s, n, a, r, o, h) {
                        var l = NaN,
                            c = NaN;
                        return l = i + n * t + r * e,
                            c = s + a * t + o * e,
                            (h = h || []).push(l, c),
                            h;
                    },
                    t.solve2 = function (e, i, s, n, a, r, o, h, l, c) {
                        void 0 === l && (l = !1),
                            c = c || [];
                        var u = NaN,
                            d = NaN;
                        if (0 == a) return t.solve2(e, i, s, n, o, h, a, r, !0, c);
                        var _ = NaN,
                            p = NaN;
                        return _ = e - s,
                            p = i - n,
                            d = (p - _ * r / a) / (h - o * r / a),
                            u = (_ - d * o) / a,
                            l ? c.push(d, u) : c.push(u, d),
                            c;
                    },
                    t.solve = function (e, i, s, n) {
                        return t.solve2(e.x, e.y, i.x, i.y, s.x, s.y, n.x, n.y);
                    },
                    t._bestTriangle = [],
                    t._absArr = [],
                    t;
            }(),
            X = function () {
                function t(t, e) {
                    this.target = null,
                        this.data = null,
                        this.bones = null,
                        this.position = NaN,
                        this.spacing = NaN,
                        this.rotateMix = NaN,
                        this.translateMix = NaN,
                        this._debugKey = !1,
                        this._spaces = null,
                        this._segments = [],
                        this._curves = [],
                        this.data = t,
                        this.position = t.position,
                        this.spacing = t.spacing,
                        this.rotateMix = t.rotateMix,
                        this.translateMix = t.translateMix,
                        this.bones = [];
                    for (var i = this.data.bones,
                        s = 0,
                        n = i.length; s < n; s++) this.bones.push(e[i[s]]);
                }
                n(t, "laya.ani.bone.PathConstraint");
                var e = t.prototype;
                return e.apply = function (t, e) {
                    if (this.target) {
                        var i = this.translateMix,
                            s = this.translateMix,
                            n = s > 0,
                            a = this.data.spacingMode,
                            r = "length" == a,
                            o = this.data.rotateMode,
                            h = "tangent" == o,
                            l = "chainScale" == o,
                            c = [],
                            u = this.bones.length,
                            d = h ? u : u + 1,
                            _ = [];
                        this._spaces = _,
                            _[0] = this.position;
                        var p = this.spacing;
                        if (l || r) for (var f = 0,
                            m = d - 1; f < m;) {
                            var g = this.bones[f],
                                v = g.length,
                                y = v * g.resultMatrix.a,
                                b = v * g.resultMatrix.b;
                            v = Math.sqrt(y * y + b * b),
                                l && (c[f] = v),
                                _[++f] = r ? Math.max(0, v + p) : p;
                        } else for (f = 1; f < d; f++) _[f] = p;
                        var x = this.computeWorldPositions(this.target, t, e, d, h, "percent" == this.data.positionMode, "percent" == a);
                        if (this._debugKey) {
                            for (f = 0; f < x.length; f++) e.drawCircle(x[f++], x[f++], 5, "#00ff00");
                            var w = [];
                            for (f = 0; f < x.length; f++) w.push(x[f++], x[f++]);
                            e.drawLines(0, 0, w, "#ff0000");
                        }
                        var M = x[0],
                            S = x[1],
                            C = this.data.offsetRotation,
                            T = "chain" == o && 0 == C,
                            I = NaN;
                        for (f = 0, I = 3; f < u; f++ , I += 3) {
                            (g = this.bones[f]).resultMatrix.tx += (M - g.resultMatrix.tx) * i,
                                g.resultMatrix.ty += (S - g.resultMatrix.ty) * i;
                            var L = (y = x[I]) - M,
                                E = (b = x[I + 1]) - S;
                            if (l && 0 != (v = c[f])) {
                                var A = (Math.sqrt(L * L + E * E) / v - 1) * s + 1;
                                g.resultMatrix.a *= A,
                                    g.resultMatrix.c *= A;
                            }
                            if (M = y, S = b, n) {
                                var R = g.resultMatrix.a,
                                    P = g.resultMatrix.c,
                                    k = g.resultMatrix.b,
                                    D = g.resultMatrix.d,
                                    B = NaN,
                                    N = NaN,
                                    O = NaN;
                                B = h ? x[I - 1] : 0 == _[f + 1] ? x[I + 2] : Math.atan2(E, L),
                                    B -= Math.atan2(k, R) - C / 180 * Math.PI,
                                    T && (N = Math.cos(B), O = Math.sin(B), M += ((v = g.length) * (N * R - O * k) - L) * s, S += (v * (O * R + N * k) - E) * s),
                                    B > Math.PI ? B -= 2 * Math.PI : B < -Math.PI && (B += 2 * Math.PI),
                                    B *= s,
                                    N = Math.cos(B),
                                    O = Math.sin(B),
                                    g.resultMatrix.a = N * R - O * k,
                                    g.resultMatrix.c = N * P - O * D,
                                    g.resultMatrix.b = O * R + N * k,
                                    g.resultMatrix.d = O * P + N * D;
                            }
                        }
                    }
                },
                    e.computeWorldVertices2 = function (e, i, s, n, a, r) {
                        var o, h, l = e.currDisplayData.bones,
                            c = e.currDisplayData.weights,
                            u = e.currDisplayData.triangles,
                            d = 0,
                            _ = 0,
                            p = 0,
                            f = 0,
                            m = 0,
                            g = 0,
                            v = 0,
                            y = 0,
                            b = 0,
                            x = 0,
                            w = 0;
                        if (null != l) {
                            for (d = 0; d < s; d += 2) _ += (f = l[_]) + 1,
                                p += f;
                            var M = i;
                            for (m = r, g = 3 * p; m < n; m += 2) {
                                for (v = 0, y = 0, f = l[_++], f += _; _ < f; _++ , g += 3) {
                                    o = M[l[_]].resultMatrix,
                                        b = c[g],
                                        x = c[g + 1];
                                    var S = c[g + 2];
                                    v += (b * o.a + x * o.c + o.tx) * S,
                                        y += (b * o.b + x * o.d + o.ty) * S;
                                }
                                a[m] = v,
                                    a[m + 1] = y;
                            }
                        } else {
                            u || (u = c),
                                e.deformData && (u = e.deformData);
                            var C;
                            if (C = e.parent, i) for (w = i.length, d = 0; d < w; d++) if (i[d].name == C) {
                                h = i[d];
                                break;
                            }
                            var T;
                            h && (T = h.resultMatrix),
                                T || (T = t._tempMt);
                            var I = T.tx,
                                L = T.ty,
                                E = T.a,
                                A = T.b,
                                R = T.c,
                                P = T.d;
                            for (h && (P *= h.d), _ = s, m = r; m < n; _ += 2, m += 2) b = u[_],
                                x = u[_ + 1],
                                a[m] = b * E + x * A + I,
                                a[m + 1] = -(b * R + x * P + L);
                        }
                    },
                    e.computeWorldPositions = function (t, e, i, s, n, a, r) {
                        t.currDisplayData.bones,
                            t.currDisplayData.weights,
                            t.currDisplayData.triangles;
                        var o = [],
                            h = 0,
                            l = t.currDisplayData.verLen,
                            c = this.position,
                            u = this._spaces,
                            d = [],
                            _ = [],
                            p = l / 6,
                            f = -1,
                            m = NaN,
                            g = 0,
                            v = 0,
                            y = NaN,
                            b = NaN,
                            x = NaN,
                            w = NaN;
                        if (p-- , l -= 4, this.computeWorldVertices2(t, e, 2, l, o, 0), this._debugKey) for (h = 0; h < o.length;) i.drawCircle(o[h++], o[h++], 10, "#ff0000");
                        d = o,
                            this._curves.length = p;
                        var M = this._curves;
                        m = 0;
                        var S = d[0],
                            C = d[1],
                            T = 0,
                            I = 0,
                            L = 0,
                            E = 0,
                            A = 0,
                            R = 0,
                            P = NaN,
                            k = NaN,
                            D = NaN,
                            B = NaN,
                            N = NaN,
                            O = NaN,
                            G = NaN,
                            F = NaN,
                            U = 0;
                        for (h = 0, U = 2; h < p; h++ , U += 6) T = d[U],
                            I = d[U + 1],
                            L = d[U + 2],
                            E = d[U + 3],
                            N = 2 * (P = .1875 * (S - 2 * T + L)) + (D = .09375 * (3 * (T - L) - S + (A = d[U + 4]))),
                            O = 2 * (k = .1875 * (C - 2 * I + E)) + (B = .09375 * (3 * (I - E) - C + (R = d[U + 5]))),
                            G = .75 * (T - S) + P + .16666667 * D,
                            F = .75 * (I - C) + k + .16666667 * B,
                            m += Math.sqrt(G * G + F * F),
                            G += N,
                            F += O,
                            N += D,
                            O += B,
                            m += Math.sqrt(G * G + F * F),
                            G += N,
                            F += O,
                            m += Math.sqrt(G * G + F * F),
                            G += N + D,
                            F += O + B,
                            m += Math.sqrt(G * G + F * F),
                            M[h] = m,
                            S = A,
                            C = R;
                        if (a && (c *= m), r) for (h = 0; h < s; h++) u[h] *= m;
                        var W = this._segments,
                            X = 0,
                            z = 0;
                        for (h = 0, g = 0, v = 0, z = 0; h < s; h++ , g += 3) if (b = u[h], c += b, (y = c) < 0) this.addBeforePosition(y, d, 0, _, g);
                        else if (y > m) this.addAfterPosition(y - m, d, l - 4, _, g);
                        else {
                            for (; ; v++) if (w = M[v], !(y > w)) {
                                0 == v ? y /= w : y = (y - (x = M[v - 1])) / (w - x);
                                break;
                            }
                            if (v != f) {
                                f = v;
                                var Y = 6 * v;
                                for (S = d[Y], C = d[Y + 1], T = d[Y + 2], I = d[Y + 3], L = d[Y + 4], E = d[Y + 5], N = 2 * (P = .03 * (S - 2 * T + L)) + (D = .006 * (3 * (T - L) - S + (A = d[Y + 6]))), O = 2 * (k = .03 * (C - 2 * I + E)) + (B = .006 * (3 * (I - E) - C + (R = d[Y + 7]))), G = .3 * (T - S) + P + .16666667 * D, F = .3 * (I - C) + k + .16666667 * B, X = Math.sqrt(G * G + F * F), W[0] = X, Y = 1; Y < 8; Y++) G += N,
                                    F += O,
                                    N += D,
                                    O += B,
                                    X += Math.sqrt(G * G + F * F),
                                    W[Y] = X;
                                G += N,
                                    F += O,
                                    X += Math.sqrt(G * G + F * F),
                                    W[8] = X,
                                    G += N + D,
                                    F += O + B,
                                    X += Math.sqrt(G * G + F * F),
                                    W[9] = X,
                                    z = 0;
                            }
                            for (y *= X; ; z++) if (w = W[z], !(y > w)) {
                                0 == z ? y /= w : y = z + (y - (x = W[z - 1])) / (w - x);
                                break;
                            }
                            this.addCurvePosition(.1 * y, S, C, T, I, L, E, A, R, _, g, n || h > 0 && 0 == b);
                        }
                        return _;
                    },
                    e.addBeforePosition = function (t, e, i, s, n) {
                        var a = e[i],
                            r = e[i + 1],
                            o = e[i + 2] - a,
                            h = e[i + 3] - r,
                            l = Math.atan2(h, o);
                        s[n] = a + t * Math.cos(l),
                            s[n + 1] = r + t * Math.sin(l),
                            s[n + 2] = l;
                    },
                    e.addAfterPosition = function (t, e, i, s, n) {
                        var a = e[i + 2],
                            r = e[i + 3],
                            o = a - e[i],
                            h = r - e[i + 1],
                            l = Math.atan2(h, o);
                        s[n] = a + t * Math.cos(l),
                            s[n + 1] = r + t * Math.sin(l),
                            s[n + 2] = l;
                    },
                    e.addCurvePosition = function (t, e, i, s, n, a, r, o, h, l, c, u) {
                        0 == t && (t = 1e-4);
                        var d = t * t,
                            _ = d * t,
                            p = 1 - t,
                            f = p * p,
                            m = f * p,
                            g = p * t,
                            v = 3 * g,
                            y = p * v,
                            b = v * t,
                            x = e * m + s * y + a * b + o * _,
                            w = i * m + n * y + r * b + h * _;
                        l[c] = x,
                            l[c + 1] = w,
                            l[c + 2] = u ? Math.atan2(w - (i * f + n * g * 2 + r * d), x - (e * f + s * g * 2 + a * d)) : 0;
                    },
                    t.NONE = -1,
                    t.BEFORE = -2,
                    t.AFTER = -3,
                    s(t, ["_tempMt",
                        function () {
                            return this._tempMt = new m();
                        }]),
                    t;
            }(),
            z = function () {
                function t() {
                    this.name = null,
                        this.target = null,
                        this.positionMode = null,
                        this.spacingMode = null,
                        this.rotateMode = null,
                        this.offsetRotation = NaN,
                        this.position = NaN,
                        this.spacing = NaN,
                        this.rotateMix = NaN,
                        this.translateMix = NaN,
                        this.bones = [];
                }
                return n(t, "laya.ani.bone.PathConstraintData"),
                    t;
            }(),
            Y = function () {
                function t() {
                    this.name = null,
                        this.slotArr = [];
                }
                return n(t, "laya.ani.bone.SkinData"),
                    t;
            }(),
            H = function () {
                function t() {
                    this.name = null,
                        this.attachmentName = null,
                        this.type = 0,
                        this.transform = null,
                        this.width = NaN,
                        this.height = NaN,
                        this.texture = null,
                        this.bones = null,
                        this.uvs = null,
                        this.weights = null,
                        this.triangles = null,
                        this.vertices = null,
                        this.lengths = null,
                        this.verLen = 0;
                }
                n(t, "laya.ani.bone.SkinSlotDisplayData");
                var e = t.prototype;
                return e.createTexture = function (t) {
                    return this.texture ? this.texture : (this.texture = new M(t.bitmap, this.uvs), this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5] ? (this.texture.width = t.height, this.texture.height = t.width, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY, this.texture.sourceWidth = t.sourceHeight, this.texture.sourceHeight = t.sourceWidth) : (this.texture.width = t.width, this.texture.height = t.height, this.texture.offsetX = -t.offsetX, this.texture.offsetY = -t.offsetY, this.texture.sourceWidth = t.sourceWidth, this.texture.sourceHeight = t.sourceHeight), v.isWebGL || this.uvs[1] > this.uvs[5] && (this.texture.offsetY = this.texture.sourceHeight - this.texture.height - this.texture.offsetY), this.texture);
                },
                    e.destory = function () {
                        this.texture && this.texture.destroy();
                    },
                    t;
            }(),
            V = function () {
                function t() {
                    this.name = null,
                        this.displayArr = [];
                }
                n(t, "laya.ani.bone.SlotData");
                return t.prototype.getDisplayByName = function (t) {
                    for (var e = 0,
                        i = this.displayArr.length; e < i; e++) if (this.displayArr[e].attachmentName == t) return e;
                    return - 1;
                },
                    t;
            }(),
            K = function () {
                function t(t, e) {
                    this._data = null,
                        this._bones = null,
                        this.target = null,
                        this.rotateMix = NaN,
                        this.translateMix = NaN,
                        this.scaleMix = NaN,
                        this.shearMix = NaN,
                        this._temp = r(2, 0),
                        this._data = t,
                        null == this._bones && (this._bones = []),
                        this.target = e[t.targetIndex];
                    var i = 0,
                        s = 0;
                    for (i = 0, s = t.boneIndexs.length; i < s; i++) this._bones.push(e[t.boneIndexs[i]]);
                    this.rotateMix = t.rotateMix,
                        this.translateMix = t.translateMix,
                        this.scaleMix = t.scaleMix,
                        this.shearMix = t.shearMix;
                }
                n(t, "laya.ani.bone.TfConstraint");
                return t.prototype.apply = function () {
                    for (var t, e = this.target.resultMatrix.a,
                        i = this.target.resultMatrix.b,
                        s = this.target.resultMatrix.c,
                        n = this.target.resultMatrix.d,
                        a = 0,
                        r = this._bones.length; a < r; a++) {
                        if (t = this._bones[a], this.rotateMix > 0) {
                            var o = t.resultMatrix.a,
                                h = t.resultMatrix.b,
                                l = t.resultMatrix.c,
                                c = t.resultMatrix.d,
                                u = Math.atan2(s, e) - Math.atan2(l, o) + this._data.offsetRotation * Math.PI / 180;
                            u > Math.PI ? u -= 2 * Math.PI : u < -Math.PI && (u += 2 * Math.PI),
                                u *= this.rotateMix;
                            var d = Math.cos(u),
                                _ = Math.sin(u);
                            t.resultMatrix.a = d * o - _ * l,
                                t.resultMatrix.b = d * h - _ * c,
                                t.resultMatrix.c = _ * o + d * l,
                                t.resultMatrix.d = _ * h + d * c;
                        }
                        if (this.translateMix && (this._temp[0] = this._data.offsetX, this._temp[1] = this._data.offsetY, this.target.localToWorld(this._temp), t.resultMatrix.tx += (this._temp[0] - t.resultMatrix.tx) * this.translateMix, t.resultMatrix.ty += (this._temp[1] - t.resultMatrix.ty) * this.translateMix, t.updateChild()), this.scaleMix > 0) {
                            var p = Math.sqrt(t.resultMatrix.a * t.resultMatrix.a + t.resultMatrix.c * t.resultMatrix.c),
                                f = Math.sqrt(e * e + s * s),
                                m = p > 1e-5 ? (p + (f - p + this._data.offsetScaleX) * this.scaleMix) / p : 0;
                            t.resultMatrix.a *= m,
                                t.resultMatrix.c *= m,
                                p = Math.sqrt(t.resultMatrix.b * t.resultMatrix.b + t.resultMatrix.d * t.resultMatrix.d),
                                f = Math.sqrt(i * i + n * n),
                                m = p > 1e-5 ? (p + (f - p + this._data.offsetScaleY) * this.scaleMix) / p : 0,
                                t.resultMatrix.b *= m,
                                t.resultMatrix.d *= m;
                        }
                        if (this.shearMix > 0) {
                            h = t.resultMatrix.b,
                                c = t.resultMatrix.d;
                            var g = Math.atan2(c, h); (u = Math.atan2(n, i) - Math.atan2(s, e) - (g - Math.atan2(t.resultMatrix.c, t.resultMatrix.a))) > Math.PI ? u -= 2 * Math.PI : u < -Math.PI && (u += 2 * Math.PI),
                                u = g + (u + this._data.offsetShearY * Math.PI / 180) * this.shearMix,
                                m = Math.sqrt(h * h + c * c),
                                t.resultMatrix.b = Math.cos(u) * m,
                                t.resultMatrix.d = Math.sin(u) * m;
                        }
                    }
                },
                    t;
            }(),
            q = function () {
                function t() {
                    this.name = null,
                        this.targetIndex = 0,
                        this.rotateMix = NaN,
                        this.translateMix = NaN,
                        this.scaleMix = NaN,
                        this.shearMix = NaN,
                        this.offsetRotation = NaN,
                        this.offsetX = NaN,
                        this.offsetY = NaN,
                        this.offsetScaleX = NaN,
                        this.offsetScaleY = NaN,
                        this.offsetShearY = NaN,
                        this.boneIndexs = [];
                }
                return n(t, "laya.ani.bone.TfConstraintData"),
                    t;
            }(),
            $ = function () {
                function t() {
                    this.skX = 0,
                        this.skY = 0,
                        this.scX = 1,
                        this.scY = 1,
                        this.x = 0,
                        this.y = 0,
                        this.skewX = 0,
                        this.skewY = 0,
                        this.mMatrix = null;
                }
                n(t, "laya.ani.bone.Transform");
                var e = t.prototype;
                return e.initData = function (t) {
                    void 0 != t.x && (this.x = t.x),
                        void 0 != t.y && (this.y = t.y),
                        void 0 != t.skX && (this.skX = t.skX),
                        void 0 != t.skY && (this.skY = t.skY),
                        void 0 != t.scX && (this.scX = t.scX),
                        void 0 != t.scY && (this.scY = t.scY);
                },
                    e.getMatrix = function () {
                        var t;
                        return (t = this.mMatrix ? this.mMatrix : this.mMatrix = new m()).identity(),
                            t.scale(this.scX, this.scY),
                            (this.skewX || this.skewY) && this.skew(t, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180),
                            t.rotate(this.skX * Math.PI / 180),
                            t.translate(this.x, this.y),
                            t;
                    },
                    e.skew = function (t, e, i) {
                        var s = Math.sin(i),
                            n = Math.cos(i),
                            a = Math.sin(e),
                            r = Math.cos(e);
                        return t.setTo(t.a * r - t.b * s, t.a * a + t.b * n, t.c * r - t.d * s, t.c * a + t.d * n, t.tx * r - t.ty * s, t.tx * a + t.ty * n),
                            t;
                    },
                    t;
            }(),
            j = function () {
                function t() { }
                return n(t, "laya.ani.bone.UVTools"),
                    t.getRelativeUV = function (t, e, i) {
                        var s = t[0],
                            n = t[2] - t[0],
                            a = t[1],
                            r = t[5] - t[1];
                        i || (i = []),
                            i.length = e.length;
                        var o = 0,
                            h = 0;
                        h = i.length;
                        var l = 1 / n,
                            c = 1 / r;
                        for (o = 0; o < h; o += 2) i[o] = (e[o] - s) * l,
                            i[o + 1] = (e[o + 1] - a) * c;
                        return i;
                    },
                    t.getAbsoluteUV = function (t, e, i) {
                        if (0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5]) return i ? (C.copyArray(i, e), i) : e;
                        var s = t[0],
                            n = t[2] - t[0],
                            a = t[1],
                            r = t[5] - t[1];
                        i || (i = []),
                            i.length = e.length;
                        var o = 0,
                            h = 0;
                        for (h = i.length, o = 0; o < h; o += 2) i[o] = e[o] * n + s,
                            i[o + 1] = e[o + 1] * r + a;
                        return i;
                    },
                    t;
            }(),
            Q = function () {
                function t() {
                    this.startTime = NaN,
                        this.duration = NaN,
                        this.interpolationData = null,
                        this.data = null,
                        this.nextData = null;
                }
                return n(t, "laya.ani.KeyFramesContent"),
                    t;
            }(),
            Z = function () {
                function t() { }
                return n(t, "laya.ani.math.BezierLerp"),
                    t.getBezierRate = function (e, i, s, n, a) {
                        var r = t._getBezierParamKey(i, s, n, a),
                            o = 100 * r + e;
                        if (t._bezierResultCache[o]) return t._bezierResultCache[o];
                        var h = t._getBezierPoints(i, s, n, a, r),
                            l = 0,
                            c = 0;
                        for (c = h.length, l = 0; l < c; l += 2) if (e <= h[l]) return t._bezierResultCache[o] = h[l + 1],
                            h[l + 1];
                        return t._bezierResultCache[o] = 1,
                            1;
                    },
                    t._getBezierParamKey = function (t, e, i, s) {
                        return 100 * (100 * (100 * (100 * t + e) + i) + s);
                    },
                    t._getBezierPoints = function (e, i, s, n, a) {
                        if (t._bezierPointsCache[a]) return t._bezierPointsCache[a];
                        var r;
                        r = [0, 0, e, i, s, n, 1, 1];
                        var h;
                        return h = new o().getBezierPoints(r, 100, 3),
                            t._bezierPointsCache[a] = h,
                            h;
                    },
                    t._bezierResultCache = {},
                    t._bezierPointsCache = {},
                    t;
            }(),
            J = function (t) {
                function e() {
                    this._destroyed = !1,
                        this._templet = null,
                        this._currentTime = NaN,
                        this._currentFrameTime = NaN,
                        this._playStart = NaN,
                        this._playEnd = NaN,
                        this._playDuration = NaN,
                        this._overallDuration = NaN,
                        this._stopWhenCircleFinish = !1,
                        this._elapsedPlaybackTime = NaN,
                        this._startUpdateLoopCount = NaN,
                        this._currentAnimationClipIndex = 0,
                        this._currentKeyframeIndex = 0,
                        this._paused = !1,
                        this._cacheFrameRate = 0,
                        this._cacheFrameRateInterval = NaN,
                        this._cachePlayRate = NaN,
                        this._fullFrames = null,
                        this.isCache = !0,
                        this.playbackRate = 1,
                        this.returnToZeroStopped = !1,
                        e.__super.call(this),
                        this._destroyed = !1,
                        this._currentAnimationClipIndex = -1,
                        this._currentKeyframeIndex = -1,
                        this._currentTime = 0,
                        this._overallDuration = Number.MAX_VALUE,
                        this._stopWhenCircleFinish = !1,
                        this._elapsedPlaybackTime = 0,
                        this._startUpdateLoopCount = -1,
                        this._cachePlayRate = 1,
                        this.cacheFrameRate = 60,
                        this.returnToZeroStopped = !1;
                }
                n(e, "laya.ani.AnimationPlayer", c);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.resource.IDestroy": !0
                }),
                    s._onTempletLoadedComputeFullKeyframeIndices = function (t, e, i) {
                        this._templet === i && this._cachePlayRate === t && this._cacheFrameRate === e && this._computeFullKeyframeIndices();
                    },
                    s._computeFullKeyframeIndices = function () {
                        for (var t = this._fullFrames = [], e = this._templet, i = this._cacheFrameRateInterval * this._cachePlayRate, s = 0, n = e.getAnimationCount(); s < n; s++) {
                            for (var a = [], r = 0, o = e.getAnimation(s).nodes.length; r < o; r++) {
                                for (var h = e.getAnimation(s).nodes[r], l = Math.floor(h.playTime / i + .01), c = new Uint16Array(l + 1), u = -1, d = 0, _ = h.keyFrame.length; d < _; d++) {
                                    var p = h.keyFrame[d],
                                        f = p.startTime,
                                        m = f + p.duration + i;
                                    do {
                                        for (var g = Math.floor(f / i + .5), v = u + 1; v < g; v++) c[v] = d;
                                        u = g, c[g] = d, f += i;
                                    } while (f <= m);
                                }
                                a.push(c);
                            }
                            t.push(a);
                        }
                    },
                    s._onAnimationTempletLoaded = function () {
                        this.destroyed || this._calculatePlayDuration();
                    },
                    s._calculatePlayDuration = function () {
                        if (0 !== this.state) {
                            var t = this._templet.getAniDuration(this._currentAnimationClipIndex);
                            0 === this._playEnd && (this._playEnd = t),
                                this._playEnd > t && (this._playEnd = t),
                                this._playDuration = this._playEnd - this._playStart;
                        }
                    },
                    s._setPlayParams = function (t, e) {
                        this._currentTime = t,
                            this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e + .01), 0),
                            this._currentFrameTime = this._currentKeyframeIndex * e;
                    },
                    s._setPlayParamsWhenStop = function (t, e) {
                        this._currentTime = t,
                            this._currentKeyframeIndex = Math.max(Math.floor(t / e + .01), 0),
                            this._currentFrameTime = this._currentKeyframeIndex * e,
                            this._currentAnimationClipIndex = -1;
                    },
                    s._update = function (t) {
                        if (- 1 !== this._currentAnimationClipIndex && !this._paused && this._templet && this._templet.loaded) {
                            var e = this._cacheFrameRateInterval * this._cachePlayRate,
                                i = 0;
                            this._startUpdateLoopCount !== w.loopCount && (i = t * this.playbackRate, this._elapsedPlaybackTime += i);
                            var s = this.playDuration;
                            if (0 !== this._overallDuration && this._elapsedPlaybackTime >= this._overallDuration || 0 === this._overallDuration && this._elapsedPlaybackTime >= s) return this._setPlayParamsWhenStop(s, e),
                                void this.event("stopped");
                            if (i += this._currentTime, s > 0) if (i >= s) do {
                                if (i -= s, this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(s, e), this._stopWhenCircleFinish = !1, void this.event("stopped");
                                i < s && (this._setPlayParams(i, e), this.event("complete"));
                            } while (i >= s);
                            else this._setPlayParams(i, e);
                            else {
                                if (this._stopWhenCircleFinish) return this._setPlayParamsWhenStop(s, e),
                                    this._stopWhenCircleFinish = !1,
                                    void this.event("stopped");
                                this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0,
                                    this.event("complete");
                            }
                        }
                    },
                    s._destroy = function () {
                        this.offAll(),
                            this._templet = null,
                            this._fullFrames = null,
                            this._destroyed = !0;
                    },
                    s.play = function (t, e, i, s, n) {
                        if (void 0 === t && (t = 0), void 0 === e && (e = 1), void 0 === i && (i = 2147483647), void 0 === s && (s = 0), void 0 === n && (n = 0), !this._templet) throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url.");
                        if (i < 0 || s < 0 || n < 0) throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero.");
                        if (0 !== n && s > n) throw new Error("AnimationPlayer:start must less than end.");
                        this._currentTime = 0,
                            this._currentFrameTime = 0,
                            this._elapsedPlaybackTime = 0,
                            this.playbackRate = e,
                            this._overallDuration = i,
                            this._playStart = s,
                            this._playEnd = n,
                            this._paused = !1,
                            this._currentAnimationClipIndex = t,
                            this._currentKeyframeIndex = 0,
                            this._startUpdateLoopCount = w.loopCount,
                            this.event("played"),
                            this._templet.loaded ? this._calculatePlayDuration() : this._templet.once("loaded", this, this._onAnimationTempletLoaded),
                            this._update(0);
                    },
                    s.playByFrame = function (t, e, i, s, n, a) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = 1),
                            void 0 === i && (i = 2147483647),
                            void 0 === s && (s = 0),
                            void 0 === n && (n = 0),
                            void 0 === a && (a = 30);
                        var r = 1e3 / a;
                        this.play(t, e, i, s * r, n * r);
                    },
                    s.stop = function (t) {
                        void 0 === t && (t = !0),
                            t ? (this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0, this._currentAnimationClipIndex = -1, this.event("stopped")) : this._stopWhenCircleFinish = !0;
                    },
                    a(0, s, "playEnd",
                        function () {
                            return this._playEnd;
                        }),
                    a(0, s, "templet",
                        function () {
                            return this._templet;
                        },
                        function (t) {
                            0 === !this.state && this.stop(!0),
                                this._templet !== t && (this._templet = t, t.loaded ? this._computeFullKeyframeIndices() : t.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, this._cacheFrameRate]));
                        }),
                    a(0, s, "playStart",
                        function () {
                            return this._playStart;
                        }),
                    a(0, s, "playDuration",
                        function () {
                            return this._playDuration;
                        }),
                    a(0, s, "state",
                        function () {
                            return - 1 === this._currentAnimationClipIndex ? 0 : this._paused ? 1 : 2;
                        }),
                    a(0, s, "currentKeyframeIndex",
                        function () {
                            return this._currentKeyframeIndex;
                        }),
                    a(0, s, "overallDuration",
                        function () {
                            return this._overallDuration;
                        }),
                    a(0, s, "currentFrameTime",
                        function () {
                            return this._currentFrameTime;
                        }),
                    a(0, s, "currentAnimationClipIndex",
                        function () {
                            return this._currentAnimationClipIndex;
                        }),
                    a(0, s, "currentPlayTime",
                        function () {
                            return this._currentTime + this._playStart;
                        }),
                    a(0, s, "cachePlayRate",
                        function () {
                            return this._cachePlayRate;
                        },
                        function (t) {
                            this._cachePlayRate !== t && (this._cachePlayRate = t, this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [t, this._cacheFrameRate])));
                        }),
                    a(0, s, "cacheFrameRate",
                        function () {
                            return this._cacheFrameRate;
                        },
                        function (t) {
                            this._cacheFrameRate !== t && (this._cacheFrameRate = t, this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate, this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, t])));
                        }),
                    a(0, s, "currentTime", null,
                        function (t) {
                            if (- 1 !== this._currentAnimationClipIndex && this._templet && this._templet.loaded) {
                                if (t < this._playStart || t > this._playEnd) throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime.");
                                this._startUpdateLoopCount = w.loopCount;
                                var e = this._cacheFrameRateInterval * this._cachePlayRate;
                                this._currentTime = t,
                                    this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e), 0),
                                    this._currentFrameTime = this._currentKeyframeIndex * e;
                            }
                        }),
                    a(0, s, "paused",
                        function () {
                            return this._paused;
                        },
                        function (t) {
                            this._paused = t,
                                t && this.event("paused");
                        }),
                    a(0, s, "cacheFrameRateInterval",
                        function () {
                            return this._cacheFrameRateInterval;
                        }),
                    a(0, s, "destroyed",
                        function () {
                            return this._destroyed;
                        }),
                    e;
            }(),
            tt = function (t) {
                function e() {
                    e.__super.call(this),
                        v.isConchNode && (this.drawSkin = function (t) {
                            t.transform || (t.transform = m.EMPTY),
                                this._addCmd([t]),
                                this.setSkinMesh && this.setSkinMesh(t._ps, t.mVBData, t.mEleNum, 0, t.mTexture, t.transform);
                        });
                }
                n(e, "laya.ani.GraphicsAni", u);
                return e.prototype.drawSkin = function (t) {
                    var e = [t];
                    this._saveToCmd(v._context._drawSkin, e);
                },
                    e.create = function () {
                        return e._caches.pop() || new e();
                    },
                    e.recycle = function (t) {
                        t.clear(),
                            e._caches.push(t);
                    },
                    e._caches = [],
                    e;
            }(),
            et = function (t) {
                function e() {
                    e.__super.call(this),
                        this.mesh = new k();
                }
                n(e, "laya.ani.bone.canvasmesh.SkinMeshCanvas", P);
                var i = e.prototype;
                return i.init2 = function (t, e, i, s, n) {
                    this.transform && (this.transform = null);
                    var a;
                    i ? a = i : (a = []).push(0, 1, 3, 3, 1, 2),
                        this.mesh.texture = t,
                        this.mesh.indexes = a,
                        this.mesh.vertices = s,
                        this.mesh.uvs = n;
                },
                    i.render = function (t, i, s) {
                        this.mesh.texture && (this.transform ? (this.transform.translate(i, s), this.renderToContext(t), this.transform.translate(- i, -s)) : (this.transform = e._tempMatrix, this.transform.identity(), this.transform.translate(i, s), this.renderToContext(t), this.transform.translate(- i, -s), this.transform = null));
                    },
                    s(e, ["_tempMatrix",
                        function () {
                            return this._tempMatrix = new m();
                        }]),
                    e;
            }(),
            it = function (t) {
                function e() {
                    this._aniMap = {},
                        this.unfixedLastAniIndex = -1,
                        e.__super.call(this),
                        this._anis = new Array();
                }
                n(e, "laya.ani.AnimationTemplet", y);
                var s = e.prototype;
                return s.parse = function (t) {
                    var e = new l(t);
                    this._aniVersion = e.readUTFString(),
                        L.parse(this, e);
                },
                    s._calculateKeyFrame = function (t, e, i) {
                        var s = t.keyFrame;
                        s[e] = s[0];
                        for (var n = 0; n < e; n++) {
                            var a = s[n];
                            a.nextData = 0 === a.duration ? a.data : s[n + 1].data;
                        }
                        s.length--;
                    },
                    s.onAsynLoaded = function (t, e, i) {
                        var s = new l(e);
                        switch (this._aniVersion = s.readUTFString(), this._aniVersion) {
                            case "LAYAANIMATION:02":
                                E.parse(this, s);
                                break;

                            default:
                                L.parse(this, s);
                        }
                        this._endLoaded();
                    },
                    s.disposeResource = function () {
                        this._aniVersion = null,
                            this._anis = null,
                            this._aniMap = null,
                            this._publicExtData = null,
                            this.unfixedCurrentFrameIndexes = null,
                            this.unfixedCurrentTimes = null,
                            this.unfixedKeyframes = null,
                            this._aniClassName = null,
                            this._animationDatasCache = null;
                    },
                    s.getAnimationCount = function () {
                        return this._anis.length;
                    },
                    s.getAnimation = function (t) {
                        return this._anis[t];
                    },
                    s.getAniDuration = function (t) {
                        return this._anis[t].playTime;
                    },
                    s.getNodes = function (t) {
                        return this._anis[t].nodes;
                    },
                    s.getNodeIndexWithName = function (t, e) {
                        return this._anis[t].bone3DMap[e];
                    },
                    s.getNodeCount = function (t) {
                        return this._anis[t].nodes.length;
                    },
                    s.getTotalkeyframesLength = function (t) {
                        return this._anis[t].totalKeyframeDatasLength;
                    },
                    s.getPublicExtData = function () {
                        return this._publicExtData;
                    },
                    s.getAnimationDataWithCache = function (t, e, i, s) {
                        var n = e[i];
                        if (n) {
                            var a = n[t];
                            return a ? a[s] : null;
                        }
                        return null;
                    },
                    s.setAnimationDataWithCache = function (t, e, i, s, n) {
                        var a = e[i] || (e[i] = {}); (a[t] || (a[t] = []))[s] = n;
                    },
                    s.getOriginalData = function (t, i, s, n, a) {
                        for (var r = this._anis[t].nodes, o = 0, h = 0, l = r.length, c = 0; h < l; h++) {
                            var u, d = r[h];
                            u = d.keyFrame[s[h][n]],
                                d.dataOffset = c;
                            var _ = a - u.startTime,
                                p = d.lerpType;
                            if (p) switch (p) {
                                case 0:
                                case 1:
                                    for (o = 0; o < d.keyframeWidth;) o += d.interpolationMethod[o](d, o, i, c + o, u.data, _, null, u.duration, u.nextData);
                                    break;

                                case 2:
                                    var f = u.interpolationData,
                                        m = f.length,
                                        g = 0;
                                    for (o = 0; o < m;) {
                                        var v = f[o];
                                        switch (v) {
                                            case 6:
                                            case 7:
                                                o += e.interpolation[v](d, g, i, c + g, u.data, _, null, u.duration, u.nextData, f, o + 1);
                                                break;

                                            default:
                                                o += e.interpolation[v](d, g, i, c + g, u.data, _, null, u.duration, u.nextData);
                                        }
                                        g++;
                                    }
                            } else for (o = 0; o < d.keyframeWidth;) o += d.interpolationMethod[o](d, o, i, c + o, u.data, _, null, u.duration, u.nextData);
                            c += d.keyframeWidth;
                        }
                    },
                    s.getNodesCurrentFrameIndex = function (t, e) {
                        var i = this._anis[t].nodes;
                        t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(i.length), this.unfixedCurrentTimes = new Float32Array(i.length), this.unfixedLastAniIndex = t);
                        for (var s = 0,
                            n = i.length; s < n; s++) {
                            var a = i[s];
                            for (e < this.unfixedCurrentTimes[s] && (this.unfixedCurrentFrameIndexes[s] = 0), this.unfixedCurrentTimes[s] = e; this.unfixedCurrentFrameIndexes[s] < a.keyFrame.length && !(a.keyFrame[this.unfixedCurrentFrameIndexes[s]].startTime > this.unfixedCurrentTimes[s]);) this.unfixedCurrentFrameIndexes[s]++;
                            this.unfixedCurrentFrameIndexes[s]--;
                        }
                        return this.unfixedCurrentFrameIndexes;
                    },
                    s.getOriginalDataUnfixedRate = function (t, i, s) {
                        var n = this._anis[t].nodes;
                        t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(n.length), this.unfixedCurrentTimes = new Float32Array(n.length), this.unfixedKeyframes = r(n.length), this.unfixedLastAniIndex = t);
                        for (var a = 0,
                            o = 0,
                            h = n.length,
                            l = 0; o < h; o++) {
                            var c = n[o];
                            for (s < this.unfixedCurrentTimes[o] && (this.unfixedCurrentFrameIndexes[o] = 0), this.unfixedCurrentTimes[o] = s; this.unfixedCurrentFrameIndexes[o] < c.keyFrame.length && !(c.keyFrame[this.unfixedCurrentFrameIndexes[o]].startTime > this.unfixedCurrentTimes[o]);) this.unfixedKeyframes[o] = c.keyFrame[this.unfixedCurrentFrameIndexes[o]],
                                this.unfixedCurrentFrameIndexes[o]++;
                            var u = this.unfixedKeyframes[o];
                            c.dataOffset = l;
                            var d = s - u.startTime;
                            if (c.lerpType) switch (c.lerpType) {
                                case 0:
                                case 1:
                                    for (a = 0; a < c.keyframeWidth;) a += c.interpolationMethod[a](c, a, i, l + a, u.data, d, null, u.duration, u.nextData);
                                    break;

                                case 2:
                                    var _ = u.interpolationData,
                                        p = _.length,
                                        f = 0;
                                    for (a = 0; a < p;) {
                                        var m = _[a];
                                        switch (m) {
                                            case 6:
                                            case 7:
                                                a += e.interpolation[m](c, f, i, l + f, u.data, d, null, u.duration, u.nextData, _, a + 1);
                                                break;

                                            default:
                                                a += e.interpolation[m](c, f, i, l + f, u.data, d, null, u.duration, u.nextData);
                                        }
                                        f++;
                                    }
                            } else for (a = 0; a < c.keyframeWidth;) a += c.interpolationMethod[a](c, a, i, l + a, u.data, d, null, u.duration, u.nextData);
                            l += c.keyframeWidth;
                        }
                    },
                    e._LinearInterpolation_0 = function (t, e, i, s, n, a, r, o, h, l) {
                        var c = 0 === o ? 0 : a / o;
                        return i[s] = (1 - c) * n[e] + c * h[e],
                            1;
                    },
                    e._QuaternionInterpolation_1 = function (t, e, i, s, n, a, r, o, h, l) {
                        var c = 0 === o ? 0 : a / o;
                        return f.slerpQuaternionArray(n, e, h, e, c, i, s),
                            4;
                    },
                    e._AngleInterpolation_2 = function (t, e, i, s, n, a, r, o, h, l) {
                        return 0;
                    },
                    e._RadiansInterpolation_3 = function (t, e, i, s, n, a, r, o, h, l) {
                        return 0;
                    },
                    e._Matrix4x4Interpolation_4 = function (t, e, i, s, n, a, r, o, h, l) {
                        for (var c = 0; c < 16; c++ , e++) i[s + c] = n[e] + a * r[e];
                        return 16;
                    },
                    e._NoInterpolation_5 = function (t, e, i, s, n, a, r, o, h, l) {
                        return i[s] = n[e],
                            1;
                    },
                    e._BezierInterpolation_6 = function (t, e, i, s, n, a, r, o, h, l, c) {
                        return void 0 === c && (c = 0),
                            i[s] = n[e] + (h[e] - n[e]) * Z.getBezierRate(a / o, l[c], l[c + 1], l[c + 2], l[c + 3]),
                            5;
                    },
                    e._BezierInterpolation_7 = function (t, e, i, s, n, a, r, o, h, l, c) {
                        return void 0 === c && (c = 0),
                            i[s] = l[c + 4] + l[c + 5] * Z.getBezierRate((.001 * a + l[c + 6]) / l[c + 7], l[c], l[c + 1], l[c + 2], l[c + 3]),
                            9;
                    },
                    e.load = function (t) {
                        return i.loader.create(t, null, null, e);
                    },
                    e.interpolation = [e._LinearInterpolation_0, e._QuaternionInterpolation_1, e._AngleInterpolation_2, e._RadiansInterpolation_3, e._Matrix4x4Interpolation_4, e._NoInterpolation_5, e._BezierInterpolation_6, e._BezierInterpolation_7],
                    e;
            }(),
            st = (function (t) {
                function e() {
                    this.isCached = !1,
                        this.canvas = null,
                        this.tex = null,
                        this.rec = null,
                        e.__super.call(this);
                }
                n(e, "laya.ani.bone.canvasmesh.CacheAbleSkinMesh", et);
                var i = e.prototype;
                i.getCanvasPic = function () {
                    var t = new d("2D"),
                        i = t.getContext("2d");
                    this.rec = this.mesh.getBounds(),
                        t.size(this.rec.width, this.rec.height);
                    var s;
                    return s = this.transform,
                        this.transform = e.tempMt,
                        this.transform.identity(),
                        this.transform.translate(- this.rec.x, -this.rec.y),
                        this.renderToContext(i),
                        this.transform.translate(+ this.rec.x, +this.rec.y),
                        this.transform = s,
                        new M(t);
                },
                    i.render = function (t, e, i) {
                        this.mesh.texture && (this.isCached || (this.isCached = !0, this.tex = this.getCanvasPic()), this.transform ? (this.transform.translate(e, i), this._renderTextureToContext(t), this.transform.translate(- e, -i)) : (this.transform = et._tempMatrix, this.transform.identity(), this.transform.translate(e, i), this._renderTextureToContext(t), this.transform.translate(- e, -i), this.transform = null));
                    },
                    i._renderTextureToContext = function (t) {
                        this.context = t.ctx || t,
                            t.save();
                        var e;
                        if (e = this.tex, this.transform) {
                            var i = this.transform;
                            t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
                        }
                        this.rec = this.mesh.getBounds(),
                            t.translate(this.rec.x, this.rec.y),
                            t.drawTexture(e, 0, 0, e.width, e.height, 0, 0),
                            t.restore();
                    },
                    s(e, ["tempMt",
                        function () {
                            return this.tempMt = new m();
                        }]);
            }(),
                function (t) {
                    function e() {
                        this.cacheOK = !1,
                            this.cacheCmdOK = !1,
                            this.transformCmds = [],
                            this.drawCmds = [],
                            e.__super.call(this),
                            this.tempMesh = new k();
                    }
                    n(e, "laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas", t);
                    var i = e.prototype;
                    return i.init2 = function (e, i, s, n, a) {
                        t.prototype.init2.call(this, e, i, s, n, a),
                            this.cacheOK = !1,
                            this.cacheCmdOK = !1,
                            this.transformCmds.length = 6,
                            this.drawCmds.length = 9;
                    },
                        i.renderToContext = function (t) {
                            if (this.context = t.ctx || t, this.mesh) {
                                if (this.mesh.uvs.length <= 8) return void (0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
                                this.cacheOK || (this.tempMesh.texture = this.mesh.texture, this.tempMesh.uvs = this.mesh.texture.uv, this.tempMesh.vertices = W.solveMesh(this.mesh, this.tempMesh.vertices), this.cacheOK = !0),
                                    0 == this.mode ? this._renderWithIndexes(this.tempMesh) : this._renderNoIndexes(this.tempMesh);
                            }
                        },
                        i._renderWithIndexes = function (t) {
                            if (this.cacheCmdOK) this.renderByCache(t);
                            else {
                                var e = t.indexes,
                                    i = 0,
                                    s = e.length;
                                for (s > 1 && (s = 1), i = 0; i < s; i += 3) {
                                    var n = 2 * e[i],
                                        a = 2 * e[i + 1],
                                        r = 2 * e[i + 2];
                                    this._renderDrawTriangle(t, n, a, r);
                                }
                                this.cacheCmdOK = !0;
                            }
                        },
                        i._renderDrawTriangle = function (t, e, i, s) {
                            var n = this.context,
                                a = t.uvs,
                                r = t.vertices,
                                o = t.texture,
                                h = o.bitmap,
                                l = h.source,
                                c = o.width,
                                u = o.height,
                                d = h.width,
                                _ = h.height,
                                p = NaN,
                                f = NaN,
                                m = NaN,
                                g = NaN,
                                v = NaN,
                                y = NaN;
                            if (t.useUvTransform) {
                                var b = t.uvTransform;
                                p = (a[e] * b.a + a[e + 1] * b.c + b.tx) * d,
                                    f = (a[i] * b.a + a[i + 1] * b.c + b.tx) * d,
                                    m = (a[s] * b.a + a[s + 1] * b.c + b.tx) * d,
                                    g = (a[e] * b.b + a[e + 1] * b.d + b.ty) * _,
                                    v = (a[i] * b.b + a[i + 1] * b.d + b.ty) * _,
                                    y = (a[s] * b.b + a[s + 1] * b.d + b.ty) * _;
                            } else p = a[e] * d,
                                f = a[i] * d,
                                m = a[s] * d,
                                g = a[e + 1] * _,
                                v = a[i + 1] * _,
                                y = a[s + 1] * _;
                            var x = r[e],
                                w = r[i],
                                M = r[s],
                                S = r[e + 1],
                                C = r[i + 1],
                                T = r[s + 1],
                                I = 1 / (p * v + g * m + f * y - v * m - g * f - p * y),
                                L = x * v + g * M + w * y - v * M - g * w - x * y,
                                E = p * w + x * m + f * M - w * m - x * f - p * M,
                                A = p * v * M + g * w * m + x * f * y - x * v * m - g * f * M - p * w * y,
                                R = S * v + g * T + C * y - v * T - g * C - S * y,
                                P = p * C + S * m + f * T - C * m - S * f - p * T,
                                k = p * v * T + g * C * m + S * f * y - S * v * m - g * f * T - p * C * y;
                            if (this.transformCmds[0] = L * I, this.transformCmds[1] = R * I, this.transformCmds[2] = E * I, this.transformCmds[3] = P * I, this.transformCmds[4] = A * I, this.transformCmds[5] = k * I, this.drawCmds[0] = l, this.drawCmds[1] = o.uv[0] * d, this.drawCmds[2] = o.uv[1] * _, this.drawCmds[3] = c, this.drawCmds[4] = u, this.drawCmds[5] = o.uv[0] * d, this.drawCmds[6] = o.uv[1] * _, this.drawCmds[7] = c, this.drawCmds[8] = u, n.save(), this.transform) {
                                var D = this.transform;
                                n.transform(D.a, D.b, D.c, D.d, D.tx, D.ty);
                            }
                            n.transform.apply(n, this.transformCmds),
                                n.drawImage.apply(n, this.drawCmds),
                                n.restore();
                        },
                        i.renderByCache = function (t) {
                            var e = this.context;
                            if (e.save(), this.transform) {
                                var i = this.transform;
                                e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
                            }
                            e.transform.apply(e, this.transformCmds),
                                e.drawImage.apply(e, this.drawCmds),
                                e.restore();
                        },
                        e;
                }(et)),
            nt = function (t) {
                function e(t, i) {
                    this._templet = null,
                        this._player = null,
                        this._curOriginalData = null,
                        this._boneMatrixArray = [],
                        this._lastTime = 0,
                        this._currAniName = null,
                        this._currAniIndex = -1,
                        this._pause = !0,
                        this._aniClipIndex = -1,
                        this._clipIndex = -1,
                        this._skinIndex = 0,
                        this._skinName = "default",
                        this._aniMode = 0,
                        this._graphicsCache = null,
                        this._boneSlotDic = null,
                        this._bindBoneBoneSlotDic = null,
                        this._boneSlotArray = null,
                        this._index = -1,
                        this._total = -1,
                        this._indexControl = !1,
                        this._aniPath = null,
                        this._texturePath = null,
                        this._complete = null,
                        this._loadAniMode = 0,
                        this._yReverseMatrix = null,
                        this._ikArr = null,
                        this._tfArr = null,
                        this._pathDic = null,
                        this._rootBone = null,
                        this._boneList = null,
                        this._aniSectionDic = null,
                        this._eventIndex = 0,
                        this._drawOrderIndex = 0,
                        this._drawOrder = null,
                        this._lastAniClipIndex = -1,
                        this._lastUpdateAniClipIndex = -1,
                        e.__super.call(this),
                        void 0 === i && (i = 0),
                        t && this.init(t, i);
                }
                n(e, "laya.ani.bone.Skeleton", t);
                var s = e.prototype;
                return s.init = function (t, e) {
                    void 0 === e && (e = 0);
                    var i = 0,
                        s = 0;
                    if (1 == e) for (this._graphicsCache = [], i = 0, s = t.getAnimationCount(); i < s; i++) this._graphicsCache.push([]);
                    if (this._yReverseMatrix = t.yReverseMatrix, this._aniMode = e, this._templet = t, this._player = new J(), this._player.cacheFrameRate = t.rate, this._player.templet = t, this._player.play(), this._parseSrcBoneMatrix(), this._boneList = t.mBoneArr, this._rootBone = t.mRootBone, this._aniSectionDic = t.aniSectionDic, t.ikArr.length > 0) for (this._ikArr = [], i = 0, s = t.ikArr.length; i < s; i++) this._ikArr.push(new F(t.ikArr[i], this._boneList));
                    if (t.pathArr.length > 0) {
                        var n, a;
                        null == this._pathDic && (this._pathDic = {});
                        var r;
                        for (i = 0, s = t.pathArr.length; i < s; i++) n = t.pathArr[i],
                            a = new X(n, this._boneList),
                            (r = this._boneSlotDic[n.name]) && ((a = new X(n, this._boneList)).target = r),
                            this._pathDic[n.name] = a;
                    }
                    if (t.tfArr.length > 0) for (this._tfArr = [], i = 0, s = t.tfArr.length; i < s; i++) this._tfArr.push(new K(t.tfArr[i], this._boneList));
                    if (t.skinDataArray.length > 0) {
                        var o = this._templet.skinDataArray[this._skinIndex];
                        this._skinName = o.name;
                    }
                    this._player.on("played", this, this._onPlay),
                        this._player.on("stopped", this, this._onStop),
                        this._player.on("paused", this, this._onPause);
                },
                    s.load = function (t, e, s) {
                        void 0 === s && (s = 0),
                            this._aniPath = t,
                            this._complete = e,
                            this._loadAniMode = s,
                            i.loader.load([{
                                url: t,
                                type: "arraybuffer"
                            }], _.create(this, this._onLoaded));
                    },
                    s._onLoaded = function () {
                        var t = p.getRes(this._aniPath);
                        if (null != t) {
                            null == at.TEMPLET_DICTIONARY && (at.TEMPLET_DICTIONARY = {});
                            var e; (e = at.TEMPLET_DICTIONARY[this._aniPath]) ? e.isParseFail ? this._parseFail() : e.isParserComplete ? this._parseComplete() : (e.on("complete", this, this._parseComplete), e.on("error", this, this._parseFail)) : ((e = new at())._setUrl(this._aniPath), at.TEMPLET_DICTIONARY[this._aniPath] = e, e.on("complete", this, this._parseComplete), e.on("error", this, this._parseFail), e.isParserComplete = !1, e.parseData(null, t));
                        }
                    },
                    s._parseComplete = function () {
                        var t = at.TEMPLET_DICTIONARY[this._aniPath];
                        t && (this.init(t, this._loadAniMode), this.play(0, !0)),
                            this._complete && this._complete.runWith(this);
                    },
                    s._parseFail = function () {
                        console.log("[Error]:" + this._aniPath + "解析失败");
                    },
                    s._onPlay = function () {
                        this.event("played");
                    },
                    s._onStop = function () {
                        var t, e = this._templet.eventAniArr[this._aniClipIndex];
                        if (e && this._eventIndex < e.length) for (; this._eventIndex < e.length; this._eventIndex++)(t = e[this._eventIndex]).time >= this._player.playStart && t.time <= this._player.playEnd && this.event("label", t);
                        this._eventIndex = 0,
                            this._drawOrder = null,
                            this.event("stopped");
                    },
                    s._onPause = function () {
                        this.event("paused");
                    },
                    s._parseSrcBoneMatrix = function () {
                        var t = 0,
                            e = 0;
                        for (e = this._templet.srcBoneMatrixArr.length, t = 0; t < e; t++) this._boneMatrixArray.push(new m());
                        if (0 == this._aniMode) this._boneSlotDic = this._templet.boneSlotDic,
                            this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic,
                            this._boneSlotArray = this._templet.boneSlotArray;
                        else {
                            null == this._boneSlotDic && (this._boneSlotDic = {}),
                                null == this._bindBoneBoneSlotDic && (this._bindBoneBoneSlotDic = {}),
                                null == this._boneSlotArray && (this._boneSlotArray = []);
                            var i, s, n = this._templet.boneSlotArray;
                            for (t = 0, e = n.length; t < e; t++) i = n[t],
                                null == (s = this._bindBoneBoneSlotDic[i.parent]) && (this._bindBoneBoneSlotDic[i.parent] = s = []),
                                this._boneSlotDic[i.name] = i = i.copy(),
                                s.push(i),
                                this._boneSlotArray.push(i);
                        }
                    },
                    s._emitMissedEvents = function (t, e, i) {
                        void 0 === i && (i = 0);
                        var s = this._templet.eventAniArr[this._player.currentAnimationClipIndex];
                        if (s) {
                            var n, a = 0,
                                r = 0;
                            for (r = s.length, a = i; a < r; a++)(n = s[a]).time >= this._player.playStart && n.time <= this._player.playEnd && this.event("label", n);
                        }
                    },
                    s._update = function (t) {
                        if (void 0 === t && (t = !0), !(this._pause || t && this._indexControl)) {
                            var e = this.timer.currTimer,
                                i = this._player.currentKeyframeIndex,
                                s = e - this._lastTime;
                            if (t ? this._player._update(s) : i = -1, this._lastTime = e, this._player && (this._index = this._clipIndex = this._player.currentKeyframeIndex, !(this._index < 0 || s > 0 && this._clipIndex == i && this._lastUpdateAniClipIndex == this._aniClipIndex))) {
                                this._lastUpdateAniClipIndex = this._aniClipIndex,
                                    i > this._clipIndex && 0 != this._eventIndex && (this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex), this._eventIndex = 0);
                                var n, a = this._templet.eventAniArr[this._aniClipIndex];
                                a && this._eventIndex < a.length && ((n = a[this._eventIndex]).time >= this._player.playStart && n.time <= this._player.playEnd ? this._player.currentPlayTime >= n.time && (this.event("label", n), this._eventIndex++) : this._eventIndex++);
                                var r;
                                if (0 == this._aniMode) {
                                    if (r = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void (this.graphics != r && (this.graphics = r));
                                    var o = 0,
                                        h = 0;
                                    for (h = this._clipIndex; !this._templet.getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0;) h--;
                                    if (h < this._clipIndex) for (o = h; o < this._clipIndex; o++) this._createGraphics(o);
                                } else if (1 == this._aniMode) {
                                    if (r = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex)) return void (this.graphics != r && (this.graphics = r));
                                    for (h = this._clipIndex; !this._getGrahicsDataWithCache(this._aniClipIndex, h - 1) && h > 0;) h--;
                                    if (h < this._clipIndex) for (o = h; o < this._clipIndex; o++) this._createGraphics(o);
                                }
                                this._createGraphics();
                            }
                        }
                    },
                    s._createGraphics = function (t) {
                        void 0 === t && (t = -1),
                            -1 == t && (t = this._clipIndex);
                        var e, i = t * this._player.cacheFrameRateInterval,
                            s = this._templet.drawOrderAniArr[this._aniClipIndex];
                        if (s && s.length > 0) for (this._drawOrderIndex = 0, e = s[this._drawOrderIndex]; i >= e.time && (this._drawOrder = e.drawOrder, this._drawOrderIndex++ , !(this._drawOrderIndex >= s.length));) e = s[this._drawOrderIndex];
                        var n;
                        0 == this._aniMode || 1 == this._aniMode ? this.graphics = tt.create() : this.graphics instanceof laya.ani.GraphicsAni ? this.graphics.clear() : this.graphics = tt.create(),
                            n = this.graphics;
                        var a = this._templet.getNodes(this._aniClipIndex);
                        this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, this._player._fullFrames[this._aniClipIndex], t, i);
                        var r, o, h, c, u = this._aniSectionDic[this._aniClipIndex],
                            d = 0,
                            _ = 0,
                            p = 0,
                            f = 0,
                            g = 0,
                            v = this._templet.srcBoneMatrixArr.length;
                        for (_ = 0, g = u[0]; _ < v; _++) c = this._boneList[_],
                            h = this._templet.srcBoneMatrixArr[_],
                            c.resultTransform.scX = h.scX * this._curOriginalData[d++],
                            c.resultTransform.skX = h.skX + this._curOriginalData[d++],
                            c.resultTransform.skY = h.skY + this._curOriginalData[d++],
                            c.resultTransform.scY = h.scY * this._curOriginalData[d++],
                            c.resultTransform.x = h.x + this._curOriginalData[d++],
                            c.resultTransform.y = h.y + this._curOriginalData[d++],
                            8 === this._templet.tMatrixDataLen && (c.resultTransform.skewX = h.skewX + this._curOriginalData[d++], c.resultTransform.skewY = h.skewY + this._curOriginalData[d++]);
                        var y, b = {},
                            x = {};
                        for (g += u[1]; _ < g; _++) b[(y = a[_]).name] = this._curOriginalData[d++],
                            x[y.name] = this._curOriginalData[d++],
                            this._curOriginalData[d++],
                            this._curOriginalData[d++],
                            this._curOriginalData[d++],
                            this._curOriginalData[d++];
                        var w = {},
                            M = {};
                        for (g += u[2]; _ < g; _++) w[(y = a[_]).name] = this._curOriginalData[d++],
                            M[y.name] = this._curOriginalData[d++],
                            this._curOriginalData[d++],
                            this._curOriginalData[d++],
                            this._curOriginalData[d++],
                            this._curOriginalData[d++];
                        if (this._pathDic) {
                            var S;
                            for (g += u[3]; _ < g; _++) if (y = a[_], S = this._pathDic[y.name]) {
                                switch (new l(y.extenData).getByte()) {
                                    case 1:
                                        S.position = this._curOriginalData[d++];
                                        break;

                                    case 2:
                                        S.spacing = this._curOriginalData[d++];
                                        break;

                                    case 3:
                                        S.rotateMix = this._curOriginalData[d++],
                                            S.translateMix = this._curOriginalData[d++];
                                }
                            }
                        }
                        if (this._yReverseMatrix ? this._rootBone.update(this._yReverseMatrix) : this._rootBone.update(m.TEMP.identity()), this._ikArr) {
                            var C;
                            for (_ = 0, g = this._ikArr.length; _ < g; _++) C = this._ikArr[_],
                                w.hasOwnProperty(C.name) && (C.bendDirection = w[C.name]),
                                M.hasOwnProperty(C.name) && (C.mix = M[C.name]),
                                C.apply();
                        }
                        if (this._pathDic) for (var T in this._pathDic) (S = this._pathDic[T]).apply(this._boneList, n);
                        if (this._tfArr) {
                            for (_ = 0, f = this._tfArr.length; _ < f; _++) this._tfArr[_].apply();
                        }
                        for (_ = 0, f = this._boneList.length; _ < f; _++) if (c = this._boneList[_], o = this._bindBoneBoneSlotDic[c.name], c.resultMatrix.copyTo(this._boneMatrixArray[_]), o) for (p = 0, g = o.length; p < g; p++)(r = o[p]) && r.setParentMatrix(c.resultMatrix);
                        var I, L = {},
                            E = this._templet.deformAniArr;
                        if (E && E.length > 0) {
                            if (this._lastAniClipIndex != this._aniClipIndex) for (this._lastAniClipIndex = this._aniClipIndex, _ = 0, g = this._boneSlotArray.length; _ < g; _++)(r = this._boneSlotArray[_]).deformData = null;
                            var A = E[this._aniClipIndex];
                            I = A.
                                default,
                                this._setDeform(I, L, this._boneSlotArray, i);
                            var R;
                            for (R in A) "default" != R && R != this._skinName && (I = A[R], this._setDeform(I, L, this._boneSlotArray, i));
                            I = A[this._skinName],
                                this._setDeform(I, L, this._boneSlotArray, i);
                        }
                        var P, k, D;
                        if (this._drawOrder) for (_ = 0, g = this._drawOrder.length; _ < g; _++) P = b[(r = this._boneSlotArray[this._drawOrder[_]]).name],
                            k = x[r.name],
                            isNaN(k) || (n.save(), n.alpha(k)),
                            isNaN(P) || -2 == P || (this._templet.attachmentNames ? r.showDisplayByName(this._templet.attachmentNames[P]) : r.showDisplayByIndex(P)),
                            L[this._drawOrder[_]] ? (D = L[this._drawOrder[_]], r.currDisplayData && D[r.currDisplayData.attachmentName] ? r.deformData = D[r.currDisplayData.attachmentName] : r.deformData = null) : r.deformData = null,
                            isNaN(k) ? r.draw(n, this._boneMatrixArray, 2 == this._aniMode) : r.draw(n, this._boneMatrixArray, 2 == this._aniMode, k),
                            isNaN(k) || n.restore();
                        else for (_ = 0, g = this._boneSlotArray.length; _ < g; _++) P = b[(r = this._boneSlotArray[_]).name],
                            k = x[r.name],
                            isNaN(k) || (n.save(), n.alpha(k)),
                            isNaN(P) || -2 == P || (this._templet.attachmentNames ? r.showDisplayByName(this._templet.attachmentNames[P]) : r.showDisplayByIndex(P)),
                            L[_] ? (D = L[_], r.currDisplayData && D[r.currDisplayData.attachmentName] ? r.deformData = D[r.currDisplayData.attachmentName] : r.deformData = null) : r.deformData = null,
                            isNaN(k) ? r.draw(n, this._boneMatrixArray, 2 == this._aniMode) : r.draw(n, this._boneMatrixArray, 2 == this._aniMode, k),
                            isNaN(k) || n.restore();
                        0 == this._aniMode ? this._templet.setGrahicsDataWithCache(this._aniClipIndex, t, n) : 1 == this._aniMode && this._setGrahicsDataWithCache(this._aniClipIndex, t, n);
                    },
                    s._setDeform = function (t, e, i, s) {
                        if (t) {
                            var n, a, r, o = 0,
                                h = 0,
                                l = 0;
                            if (t) for (o = 0, h = t.deformSlotDataList.length; o < h; o++) for (n = t.deformSlotDataList[o], l = 0; l < n.deformSlotDisplayList.length; l++) r = i[(a = n.deformSlotDisplayList[l]).slotIndex],
                                a.apply(s, r),
                                e[a.slotIndex] || (e[a.slotIndex] = {}),
                                e[a.slotIndex][a.attachment] = a.deformData;
                        }
                    },
                    s.getAnimNum = function () {
                        return this._templet.getAnimationCount();
                    },
                    s.getAniNameByIndex = function (t) {
                        return this._templet.getAniNameByIndex(t);
                    },
                    s.getSlotByName = function (t) {
                        return this._boneSlotDic[t];
                    },
                    s.showSkinByName = function (t, e) {
                        void 0 === e && (e = !0),
                            this.showSkinByIndex(this._templet.getSkinIndexByName(t), e);
                    },
                    s.showSkinByIndex = function (t, e) {
                        void 0 === e && (e = !0);
                        for (var i = 0; i < this._boneSlotArray.length; i++) this._boneSlotArray[i].showSlotData(null, e);
                        if (this._templet.showSkinByIndex(this._boneSlotDic, t, e)) {
                            var s = this._templet.skinDataArray[t];
                            this._skinIndex = t,
                                this._skinName = s.name;
                        }
                        this._clearCache();
                    },
                    s.showSlotSkinByIndex = function (t, e) {
                        if (0 != this._aniMode) {
                            var i = this.getSlotByName(t);
                            i && i.showDisplayByIndex(e),
                                this._clearCache();
                        }
                    },
                    s.showSlotSkinByName = function (t, e) {
                        if (0 != this._aniMode) {
                            var i = this.getSlotByName(t);
                            i && i.showDisplayByName(e),
                                this._clearCache();
                        }
                    },
                    s.replaceSlotSkinName = function (t, e, i) {
                        if (0 != this._aniMode) {
                            var s = this.getSlotByName(t);
                            s && s.replaceDisplayByName(e, i),
                                this._clearCache();
                        }
                    },
                    s.replaceSlotSkinByIndex = function (t, e, i) {
                        if (0 != this._aniMode) {
                            var s = this.getSlotByName(t);
                            s && s.replaceDisplayByIndex(e, i),
                                this._clearCache();
                        }
                    },
                    s.setSlotSkin = function (t, e) {
                        if (0 != this._aniMode) {
                            var i = this.getSlotByName(t);
                            i && i.replaceSkin(e),
                                this._clearCache();
                        }
                    },
                    s._clearCache = function () {
                        if (1 == this._aniMode) for (var t = 0,
                            e = this._graphicsCache.length; t < e; t++) {
                            for (var i = 0,
                                s = this._graphicsCache[t].length; i < s; i++) {
                                var n = this._graphicsCache[t][i];
                                n != this.graphics && tt.recycle(n);
                            }
                            this._graphicsCache[t].length = 0;
                        }
                    },
                    s.play = function (t, e, i, s, n, a) {
                        void 0 === i && (i = !0),
                            void 0 === s && (s = 0),
                            void 0 === n && (n = 0),
                            void 0 === a && (a = !0),
                            this._indexControl = !1;
                        var r = -1,
                            o = NaN;
                        if (o = e ? 2147483647 : 0, "string" == typeof t) for (var l = 0,
                            c = this._templet.getAnimationCount(); l < c; l++) {
                            var u = this._templet.getAnimation(l);
                            if (u && t == u.name) {
                                r = l;
                                break;
                            }
                        } else r = t;
                        r > -1 && r < this.getAnimNum() && (this._aniClipIndex = r, (i || this._pause || this._currAniIndex != r) && (this._currAniIndex = r, this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(r)), this._drawOrder = null, this._eventIndex = 0, this._player.play(r, this._player.playbackRate, o, s, n), a && this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex), this._pause && (this._pause = !1, this._lastTime = h.now(), this.timer.frameLoop(1, this, this._update, null, !0)), this._update()));
                    },
                    s.stop = function () {
                        this._pause || (this._pause = !0, this._player && this._player.stop(!0), this.timer.clear(this, this._update));
                    },
                    s.playbackRate = function (t) {
                        this._player && (this._player.playbackRate = t);
                    },
                    s.paused = function () {
                        this._pause || (this._pause = !0, this._player && (this._player.paused = !0), this.timer.clear(this, this._update));
                    },
                    s.resume = function () {
                        this._indexControl = !1,
                            this._pause && (this._pause = !1, this._player && (this._player.paused = !1), this._lastTime = h.now(), this.timer.frameLoop(1, this, this._update, null, !0));
                    },
                    s._getGrahicsDataWithCache = function (t, e) {
                        return this._graphicsCache[t][e];
                    },
                    s._setGrahicsDataWithCache = function (t, e, i) {
                        this._graphicsCache[t][e] = i;
                    },
                    s.destroy = function (e) {
                        void 0 === e && (e = !0),
                            t.prototype.destroy.call(this, e),
                            this._templet = null,
                            this._player && this._player.offAll(),
                            this._player = null,
                            this._curOriginalData = null,
                            this._boneMatrixArray.length = 0,
                            this._lastTime = 0,
                            this.timer.clear(this, this._update);
                    },
                    a(0, s, "url",
                        function () {
                            return this._aniPath;
                        },
                        function (t) {
                            this.load(t);
                        }),
                    a(0, s, "index",
                        function () {
                            return this._index;
                        },
                        function (t) {
                            this.player && (this._index = t, this._player.currentTime = 1e3 * this._index / this._player.cacheFrameRate, this._indexControl = !0, this._update(!1));
                        }),
                    a(0, s, "total",
                        function () {
                            return this._templet && this._player ? this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1e3 * this._player.cacheFrameRate) : this._total = -1,
                                this._total;
                        }),
                    a(0, s, "templet",
                        function () {
                            return this._templet;
                        }),
                    a(0, s, "player",
                        function () {
                            return this._player;
                        }),
                    e.useSimpleMeshInCanvas = !1,
                    e;
            }(x),
            at = (function (t) {
                function e(t) {
                    this._start = 0,
                        this._Pos = 0,
                        this._data = null,
                        this._curIndex = 0,
                        this._preIndex = 0,
                        this._playIndex = 0,
                        this._playing = !1,
                        this._ended = !0,
                        this._count = 0,
                        this._ids = null,
                        this._loadedImage = {},
                        this._idOfSprite = null,
                        this._parentMovieClip = null,
                        this._movieClipList = null,
                        this._labels = null,
                        this.basePath = null,
                        this._atlasPath = null,
                        this._url = null,
                        this._isRoot = !1,
                        this._completeHandler = null,
                        this._endFrame = -1,
                        this.interval = 30,
                        this.loop = !1,
                        e.__super.call(this),
                        this._ids = {},
                        this._idOfSprite = [],
                        this._reset(),
                        this._playing = !1,
                        this._parentMovieClip = t,
                        t ? (this._isRoot = !1, this._movieClipList = t._movieClipList, this._movieClipList.push(this)) : (this._movieClipList = [this], this._isRoot = !0, this._setUpNoticeType(1));
                }
                n(e, "laya.ani.swf.MovieClip", t);
                var s = e.prototype;
                s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        this._clear(),
                        t.prototype.destroy.call(this, e);
                },
                    s._setDisplay = function (e) {
                        t.prototype._setDisplay.call(this, e),
                            this._isRoot && this._$3__onDisplay(e);
                    },
                    s._$3__onDisplay = function (t) {
                        t ? this.timer.loop(this.interval, this, this.updates, null, !0) : this.timer.clear(this, this.updates);
                    },
                    s.updates = function () {
                        if (!this._parentMovieClip) {
                            var t = 0,
                                e = 0;
                            for (e = this._movieClipList.length, t = 0; t < e; t++) this._movieClipList[t] && this._movieClipList[t]._update();
                        }
                    },
                    s.addLabel = function (t, e) {
                        this._labels || (this._labels = {}),
                            this._labels[e] = t;
                    },
                    s.removeLabel = function (t) {
                        if (t) {
                            if (!this._labels) for (var e in this._labels) if (this._labels[e] === t) {
                                delete this._labels[e];
                                break;
                            }
                        } else this._labels = null;
                    },
                    s._update = function () {
                        if (this._data && this._playing) {
                            if (this._playIndex++ , this._playIndex >= this._count) {
                                if (!this.loop) return this._playIndex-- ,
                                    void this.stop();
                                this._playIndex = 0;
                            }
                            if (this._parse(this._playIndex), this._labels && this._labels[this._playIndex] && this.event("label", this._labels[this._playIndex]), -1 != this._endFrame && this._endFrame == this._playIndex) {
                                if (this._endFrame = -1, null != this._completeHandler) {
                                    var t = this._completeHandler;
                                    this._completeHandler = null,
                                        t.run();
                                }
                                this.stop();
                            }
                        }
                    },
                    s.stop = function () {
                        this._playing = !1;
                    },
                    s.gotoAndStop = function (t) {
                        this.index = t,
                            this.stop();
                    },
                    s._clear = function () {
                        if (this.stop(), this._idOfSprite.length = 0, !this._parentMovieClip) {
                            this.timer.clear(this, this.updates);
                            var t = 0,
                                e = 0;
                            for (e = this._movieClipList.length, t = 0; t < e; t++) this._movieClipList[t] != this && this._movieClipList[t]._clear();
                            this._movieClipList.length = 0;
                        }
                        this._atlasPath && p.clearRes(this._atlasPath);
                        var i;
                        for (i in this._loadedImage) this._loadedImage[i] && (p.clearRes(i), this._loadedImage[i] = !1);
                        this.removeChildren(),
                            this.graphics = null,
                            this._parentMovieClip = null;
                    },
                    s.play = function (t, e) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = !0),
                            this.loop = e,
                            this._playing = !0,
                            this._data && this._displayFrame(t);
                    },
                    s._displayFrame = function (t) {
                        void 0 === t && (t = -1),
                            -1 != t && (this._curIndex > t && this._reset(), this._parse(t));
                    },
                    s._reset = function (t) {
                        void 0 === t && (t = !0),
                            t && 1 != this._curIndex && this.removeChildren(),
                            this._preIndex = this._curIndex = -1,
                            this._Pos = this._start;
                    },
                    s._parse = function (t) {
                        var i, s, n, a = 0,
                            r = 0,
                            o = 0,
                            h = !1,
                            l = this._idOfSprite,
                            c = this._data;
                        for (this._ended && this._reset(), c.pos = this._Pos, this._ended = !1, this._playIndex = t, this._curIndex > t && t < this._preIndex && (this._reset(!0), c.pos = this._Pos); this._curIndex <= t && !this._ended;) switch (c.getUint16()) {
                            case 12:
                                if (a = c.getUint16(), r = this._ids[c.getUint16()], this._Pos = c.pos, c.pos = r, 0 == (o = c.getUint8())) {
                                    var u = c.getUint16();
                                    if (!(s = l[a])) {
                                        s = l[a] = new x();
                                        var d = new x();
                                        d.loadImage(this.basePath + u + ".png"),
                                            this._loadedImage[this.basePath + u + ".png"] = !0,
                                            s.addChild(d),
                                            d.size(c.getFloat32(), c.getFloat32());
                                        var _ = c._getMatrix();
                                        d.transform = _;
                                    }
                                    s.alpha = 1;
                                } else 1 == o && ((i = l[a]) || (l[a] = i = new e(this), i.interval = this.interval, i._ids = this._ids, i.basePath = this.basePath, i._setData(c, r), i._initState(), i.play(0)), i.alpha = 1);
                                c.pos = this._Pos;
                                break;

                            case 3:
                                var p = l[c.getUint16()];
                                p && (this.addChild(p), p.zOrder = c.getUint16(), h = !0);
                                break;

                            case 4:
                                (p = l[c.getUint16()]) && p.removeSelf();
                                break;

                            case 5:
                                l[c.getUint16()][e._ValueList[c.getUint16()]] = c.getFloat32();
                                break;

                            case 6:
                                l[c.getUint16()].visible = c.getUint8() > 0;
                                break;

                            case 7:
                                var f = (s = l[c.getUint16()]).transform || m.create();
                                f.setTo(c.getFloat32(), c.getFloat32(), c.getFloat32(), c.getFloat32(), c.getFloat32(), c.getFloat32()),
                                    s.transform = f;
                                break;

                            case 8:
                                l[c.getUint16()].setPos(c.getFloat32(), c.getFloat32());
                                break;

                            case 9:
                                l[c.getUint16()].setSize(c.getFloat32(), c.getFloat32());
                                break;

                            case 10:
                                l[c.getUint16()].alpha = c.getFloat32();
                                break;

                            case 11:
                                l[c.getUint16()].setScale(c.getFloat32(), c.getFloat32());
                                break;

                            case 98:
                                n = c.getString(),
                                    this.event(n),
                                    "stop" == n && this.stop();
                                break;

                            case 99:
                                this._curIndex = c.getUint16(),
                                    h && this.updateZOrder();
                                break;

                            case 100:
                                this._count = this._curIndex + 1,
                                    this._ended = !0,
                                    this._playing && (this.event("enterframe"), this.event("end"), this.event("complete")),
                                    this._reset(!1);
                        }
                        this._playing && !this._ended && this.event("enterframe"),
                            this._Pos = c.pos;
                    },
                    s._setData = function (t, e) {
                        this._data = t,
                            this._start = e + 3;
                    },
                    s.load = function (t, e, s) {
                        void 0 === e && (e = !1),
                            this._url = t = S.formatURL(t),
                            e && (this._atlasPath = s || t.split(".swf")[0] + ".json"),
                            this.stop(),
                            this._clear(),
                            this._movieClipList = [this];
                        var n;
                        n = [{
                            url: t,
                            type: "arraybuffer"
                        }],
                            this._atlasPath && n.push({
                                url: this._atlasPath,
                                type: "atlas"
                            }),
                            i.loader.load(n, _.create(this, this._onLoaded));
                    },
                    s._onLoaded = function () {
                        var t; (t = p.getRes(this._url)) ? (this.basePath = this._atlasPath ? p.getAtlas(this._atlasPath).dir : this._url.split(".swf")[0] + "/image/", this._initData(t)) : this.event("error", "file not find");
                    },
                    s._initState = function () {
                        this._reset(),
                            this._ended = !1;
                        var t = this._playing;
                        for (this._playing = !1, this._curIndex = 0; !this._ended;) this._parse(++this._curIndex);
                        this._playing = t;
                    },
                    s._initData = function (t) {
                        this._data = new l(t);
                        var e = 0,
                            i = this._data.getUint16();
                        for (e = 0; e < i; e++) this._ids[this._data.getInt16()] = this._data.getInt32();
                        this.interval = 1e3 / this._data.getUint16(),
                            this._setData(this._data, this._ids[32767]),
                            this._initState(),
                            this.play(0),
                            this.event("loaded"),
                            this._parentMovieClip || this.timer.loop(this.interval, this, this.updates, null, !0);
                    },
                    s.playTo = function (t, e, i) {
                        this._completeHandler = i,
                            this._endFrame = e,
                            this.play(t, !1);
                    },
                    a(0, s, "index",
                        function () {
                            return this._playIndex;
                        },
                        function (t) {
                            this._playIndex = t,
                                this._data && this._displayFrame(this._playIndex),
                                this._labels && this._labels[t] && this.event("label", this._labels[t]);
                        }),
                    a(0, s, "count",
                        function () {
                            return this._count;
                        }),
                    a(0, s, "playing",
                        function () {
                            return this._playing;
                        }),
                    a(0, s, "url", null,
                        function (t) {
                            this.load(t);
                        }),
                    e._ValueList = ["x", "y", "width", "height", "scaleX", "scaleY", "rotation", "alpha"];
            }(x),
                function (t) {
                    function e() {
                        this._mainTexture = null,
                            this._textureJson = null,
                            this._graphicsCache = [],
                            this.srcBoneMatrixArr = [],
                            this.ikArr = [],
                            this.tfArr = [],
                            this.pathArr = [],
                            this.boneSlotDic = {},
                            this.bindBoneBoneSlotDic = {},
                            this.boneSlotArray = [],
                            this.skinDataArray = [],
                            this.skinDic = {},
                            this.subTextureDic = {},
                            this.isParseFail = !1,
                            this.yReverseMatrix = null,
                            this.drawOrderAniArr = [],
                            this.eventAniArr = [],
                            this.attachmentNames = null,
                            this.deformAniArr = [],
                            this._isDestroyed = !1,
                            this._rate = 30,
                            this.isParserComplete = !1,
                            this.aniSectionDic = {},
                            this._skBufferUrl = null,
                            this._textureDic = {},
                            this._loadList = null,
                            this._path = null,
                            this.tMatrixDataLen = 0,
                            this.mRootBone = null,
                            e.__super.call(this),
                            this.skinSlotDisplayDataArr = [],
                            this.mBoneArr = [];
                    }
                    n(e, "laya.ani.bone.Templet", t);
                    var s = e.prototype;
                    return s.loadAni = function (t) {
                        this._skBufferUrl = t,
                            i.loader.load(t, _.create(this, this.onComplete), null, "arraybuffer");
                    },
                        s.onComplete = function (t) {
                            if (this._isDestroyed) this.destroy();
                            else {
                                var e = p.getRes(this._skBufferUrl);
                                e ? (this._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf("/")) + "/", this.parseData(null, e)) : this.event("error", "load failed:" + this._skBufferUrl);
                            }
                        },
                        s.parseData = function (t, e, i) {
                            void 0 === i && (i = 30),
                                !this._path && this.url && (this._path = this.url.slice(0, this.url.lastIndexOf("/")) + "/"),
                                this._mainTexture = t,
                                this._mainTexture && v.isWebGL && t.bitmap && (t.bitmap.enableMerageInAtlas = !1),
                                this._rate = i,
                                this.parse(e);
                        },
                        s.buildArmature = function (t) {
                            return void 0 === t && (t = 0),
                                new nt(this, t);
                        },
                        s.parse = function (i) {
                            t.prototype.parse.call(this, i),
                                this._endLoaded(),
                                this._aniVersion != e.LAYA_ANIMATION_VISION && (console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出" + this._aniVersion + "->" + e.LAYA_ANIMATION_VISION), this._loaded = !1),
                                this.loaded ? this._mainTexture ? this._parsePublicExtData() : this._parseTexturePath() : (this.event("error", this), this.isParseFail = !0);
                        },
                        s._parseTexturePath = function () {
                            if (this._isDestroyed) this.destroy();
                            else {
                                var t = 0;
                                this._loadList = [];
                                var e, s = new l(this.getPublicExtData()),
                                    n = 0,
                                    a = 0,
                                    r = 0,
                                    o = s.getInt32(),
                                    h = s.readUTFString(),
                                    c = h.split("\n");
                                for (t = 0; t < o; t++) e = this._path + c[2 * t],
                                    h = c[2 * t + 1],
                                    s.getFloat32(),
                                    s.getFloat32(),
                                    n = s.getFloat32(),
                                    a = s.getFloat32(),
                                    r = s.getFloat32(),
                                    isNaN(r) ? 0 : r,
                                    r = s.getFloat32(),
                                    isNaN(r) ? 0 : r,
                                    r = s.getFloat32(),
                                    isNaN(r) ? n : r,
                                    r = s.getFloat32(),
                                    isNaN(r) ? a : r,
                                    -1 == this._loadList.indexOf(e) && this._loadList.push(e);
                                i.loader.load(this._loadList, _.create(this, this._textureComplete));
                            }
                        },
                        s._textureComplete = function () {
                            for (var t, e, i = 0,
                                s = this._loadList.length; i < s; i++) e = this._loadList[i],
                                    t = this._textureDic[e] = p.getRes(e),
                                    v.isWebGL && t && t.bitmap && (t.bitmap.enableMerageInAtlas = !1);
                            this._parsePublicExtData();
                        },
                        s._parsePublicExtData = function () {
                            var t = 0,
                                e = 0,
                                i = 0,
                                s = 0,
                                n = 0;
                            for (t = 0, n = this.getAnimationCount(); t < n; t++) this._graphicsCache.push([]);
                            var a = !1;
                            a = "Dragon" != this._aniClassName;
                            var r, o, h = new l(this.getPublicExtData()),
                                c = 0,
                                u = 0,
                                d = 0,
                                _ = 0,
                                p = 0,
                                f = 0,
                                g = 0,
                                v = 0,
                                y = 0,
                                b = h.getInt32(),
                                x = h.readUTFString(),
                                w = x.split("\n");
                            for (t = 0; t < b; t++) {
                                if (r = this._mainTexture, o = this._path + w[2 * t], x = w[2 * t + 1], null == this._mainTexture && (r = this._textureDic[o]), !r) return this.event("error", this),
                                    void (this.isParseFail = !0);
                                c = h.getFloat32(),
                                    u = h.getFloat32(),
                                    d = h.getFloat32(),
                                    _ = h.getFloat32(),
                                    y = h.getFloat32(),
                                    p = isNaN(y) ? 0 : y,
                                    y = h.getFloat32(),
                                    f = isNaN(y) ? 0 : y,
                                    y = h.getFloat32(),
                                    g = isNaN(y) ? d : y,
                                    y = h.getFloat32(),
                                    v = isNaN(y) ? _ : y,
                                    this.subTextureDic[x] = M.create(r, c, u, d, _, -p, -f, g, v);
                            }
                            this._mainTexture = r;
                            var S, C = h.getUint16();
                            for (t = 0; t < C; t++)(S = []).push(h.getUint16()),
                                S.push(h.getUint16()),
                                S.push(h.getUint16()),
                                S.push(h.getUint16()),
                                this.aniSectionDic[t] = S;
                            var T, I, L, E, P, k = h.getInt16(),
                                F = {};
                            for (t = 0; t < k; t++) T = new A(),
                                0 == t ? P = T : T.root = P,
                                T.d = a ? -1 : 1,
                                L = h.readUTFString(),
                                E = h.readUTFString(),
                                T.length = h.getFloat32(),
                                1 == h.getByte() && (T.inheritRotation = !1),
                                1 == h.getByte() && (T.inheritScale = !1),
                                T.name = L,
                                E && ((I = F[E]) ? I.addChild(T) : this.mRootBone = T),
                                F[L] = T,
                                this.mBoneArr.push(T);
                            this.tMatrixDataLen = h.getUint16();
                            var W, X = h.getUint16(),
                                K = Math.floor(X / this.tMatrixDataLen),
                                j = this.srcBoneMatrixArr;
                            for (t = 0; t < K; t++)(W = new $()).scX = h.getFloat32(),
                                W.skX = h.getFloat32(),
                                W.skY = h.getFloat32(),
                                W.scY = h.getFloat32(),
                                W.x = h.getFloat32(),
                                W.y = h.getFloat32(),
                                8 === this.tMatrixDataLen && (W.skewX = h.getFloat32(), W.skewY = h.getFloat32()),
                                j.push(W),
                                (T = this.mBoneArr[t]).transform = W;
                            var Q, Z = h.getUint16(),
                                J = 0;
                            for (t = 0; t < Z; t++) {
                                for (Q = new U(), J = h.getUint16(), e = 0; e < J; e++) Q.boneNames.push(h.readUTFString()),
                                    Q.boneIndexs.push(h.getInt16());
                                Q.name = h.readUTFString(),
                                    Q.targetBoneName = h.readUTFString(),
                                    Q.targetBoneIndex = h.getInt16(),
                                    Q.bendDirection = h.getFloat32(),
                                    Q.mix = h.getFloat32(),
                                    Q.isSpine = a,
                                    this.ikArr.push(Q);
                            }
                            var tt, et = h.getUint16(),
                                it = 0;
                            for (t = 0; t < et; t++) {
                                for (tt = new q(), it = h.getUint16(), e = 0; e < it; e++) tt.boneIndexs.push(h.getInt16());
                                tt.name = h.getUTFString(),
                                    tt.targetIndex = h.getInt16(),
                                    tt.rotateMix = h.getFloat32(),
                                    tt.translateMix = h.getFloat32(),
                                    tt.scaleMix = h.getFloat32(),
                                    tt.shearMix = h.getFloat32(),
                                    tt.offsetRotation = h.getFloat32(),
                                    tt.offsetX = h.getFloat32(),
                                    tt.offsetY = h.getFloat32(),
                                    tt.offsetScaleX = h.getFloat32(),
                                    tt.offsetScaleY = h.getFloat32(),
                                    tt.offsetShearY = h.getFloat32(),
                                    this.tfArr.push(tt);
                            }
                            var st, nt = h.getUint16(),
                                at = 0;
                            for (t = 0; t < nt; t++) {
                                for ((st = new z()).name = h.readUTFString(), at = h.getUint16(), e = 0; e < at; e++) st.bones.push(h.getInt16());
                                st.target = h.readUTFString(),
                                    st.positionMode = h.readUTFString(),
                                    st.spacingMode = h.readUTFString(),
                                    st.rotateMode = h.readUTFString(),
                                    st.offsetRotation = h.getFloat32(),
                                    st.position = h.getFloat32(),
                                    st.spacing = h.getFloat32(),
                                    st.rotateMix = h.getFloat32(),
                                    st.translateMix = h.getFloat32(),
                                    this.pathArr.push(st);
                            }
                            var rt, ot, ht, lt, ct = 0,
                                ut = 0,
                                dt = 0,
                                _t = NaN,
                                pt = 0,
                                ft = h.getInt16();
                            for (t = 0; t < ft; t++) {
                                var mt = h.getUint8(),
                                    gt = {};
                                this.deformAniArr.push(gt);
                                for (var vt = 0; vt < mt; vt++) for ((rt = new D()).skinName = h.getUTFString(), gt[rt.skinName] = rt, ct = h.getInt16(), e = 0; e < ct; e++) for (ot = new B(), rt.deformSlotDataList.push(ot), ut = h.getInt16(), i = 0; i < ut; i++) for (ht = new N(), ot.deformSlotDisplayList.push(ht), ht.slotIndex = h.getInt16(), ht.attachment = h.getUTFString(), dt = h.getInt16(), s = 0; s < dt; s++) for (1 == h.getByte() ? ht.tweenKeyList.push(!0) : ht.tweenKeyList.push(!1), _t = h.getFloat32(), ht.timeList.push(_t), lt = [], ht.vectices.push(lt), pt = h.getInt16(), n = 0; n < pt; n++) lt.push(h.getFloat32());
                            }
                            var yt, bt, xt = h.getInt16(),
                                wt = 0,
                                Mt = 0;
                            for (t = 0; t < xt; t++) {
                                for (wt = h.getInt16(), yt = [], e = 0; e < wt; e++) {
                                    for ((bt = new O()).time = h.getFloat32(), Mt = h.getInt16(), i = 0; i < Mt; i++) bt.drawOrder.push(h.getInt16());
                                    yt.push(bt);
                                }
                                this.drawOrderAniArr.push(yt);
                            }
                            var St, Ct, Tt = h.getInt16(),
                                It = 0;
                            for (t = 0; t < Tt; t++) {
                                for (It = h.getInt16(), St = [], e = 0; e < It; e++)(Ct = new G()).name = h.getUTFString(),
                                    Ct.intValue = h.getInt32(),
                                    Ct.floatValue = h.getFloat32(),
                                    Ct.stringValue = h.getUTFString(),
                                    Ct.time = h.getFloat32(),
                                    St.push(Ct);
                                this.eventAniArr.push(St);
                            }
                            var Lt = h.getInt16();
                            if (Lt > 0) for (this.attachmentNames = [], t = 0; t < Lt; t++) this.attachmentNames.push(h.getUTFString());
                            var Et, At, Rt = h.getInt16();
                            for (t = 0; t < Rt; t++)(Et = new R()).name = h.readUTFString(),
                                Et.parent = h.readUTFString(),
                                Et.attachmentName = h.readUTFString(),
                                Et.srcDisplayIndex = Et.displayIndex = h.getInt16(),
                                Et.templet = this,
                                this.boneSlotDic[Et.name] = Et,
                                null == (At = this.bindBoneBoneSlotDic[Et.parent]) && (this.bindBoneBoneSlotDic[Et.parent] = At = []),
                                At.push(Et),
                                this.boneSlotArray.push(Et);
                            var Pt, kt, Dt, Bt = h.readUTFString().split("\n"),
                                Nt = 0,
                                Ot = h.getUint8(),
                                Gt = 0,
                                Ft = 0,
                                Ut = 0,
                                Wt = 0,
                                Xt = 0,
                                zt = 0,
                                Yt = 0;
                            for (t = 0; t < Ot; t++) {
                                for ((Pt = new Y()).name = Bt[Nt++], Gt = h.getUint8(), e = 0; e < Gt; e++) {
                                    for ((kt = new V()).name = Bt[Nt++], Et = this.boneSlotDic[kt.name], Ft = h.getUint8(), i = 0; i < Ft; i++) {
                                        if (Dt = new H(), this.skinSlotDisplayDataArr.push(Dt), Dt.name = Bt[Nt++], Dt.attachmentName = Bt[Nt++], Dt.transform = new $(), Dt.transform.scX = h.getFloat32(), Dt.transform.skX = h.getFloat32(), Dt.transform.skY = h.getFloat32(), Dt.transform.scY = h.getFloat32(), Dt.transform.x = h.getFloat32(), Dt.transform.y = h.getFloat32(), kt.displayArr.push(Dt), Dt.width = h.getFloat32(), Dt.height = h.getFloat32(), Dt.type = h.getUint8(), Dt.verLen = h.getUint16(), (k = h.getUint16()) > 0) for (Dt.bones = [], s = 0; s < k; s++) {
                                            var Ht = h.getUint16();
                                            Dt.bones.push(Ht);
                                        }
                                        if ((Ut = h.getUint16()) > 0) for (Dt.uvs = [], s = 0; s < Ut; s++) Dt.uvs.push(h.getFloat32());
                                        if ((Wt = h.getUint16()) > 0) for (Dt.weights = [], s = 0; s < Wt; s++) Dt.weights.push(h.getFloat32());
                                        if ((Xt = h.getUint16()) > 0) for (Dt.triangles = [], s = 0; s < Xt; s++) Dt.triangles.push(h.getUint16());
                                        if ((zt = h.getUint16()) > 0) for (Dt.vertices = [], s = 0; s < zt; s++) Dt.vertices.push(h.getFloat32());
                                        if ((Yt = h.getUint16()) > 0) for (Dt.lengths = [], s = 0; s < Yt; s++) Dt.lengths.push(h.getFloat32());
                                    }
                                    Pt.slotArr.push(kt);
                                }
                                this.skinDic[Pt.name] = Pt,
                                    this.skinDataArray.push(Pt);
                            }
                            1 == h.getUint8() ? (this.yReverseMatrix = new m(1, 0, 0, -1, 0, 0), P && P.setTempMatrix(this.yReverseMatrix)) : P && P.setTempMatrix(new m()),
                                this.showSkinByIndex(this.boneSlotDic, 0),
                                this.isParserComplete = !0,
                                this.event("complete", this);
                        },
                        s.getTexture = function (t) {
                            var e = this.subTextureDic[t];
                            return e || (e = this.subTextureDic[t.substr(0, t.length - 1)]),
                                null == e ? this._mainTexture : e;
                        },
                        s.showSkinByIndex = function (t, e, i) {
                            if (void 0 === i && (i = !0), e < 0 && e >= this.skinDataArray.length) return !1;
                            var s, n, a = 0,
                                r = 0,
                                o = this.skinDataArray[e];
                            if (o) {
                                for (a = 0, r = o.slotArr.length; a < r; a++)(n = o.slotArr[a]) && (s = t[n.name]) && (s.showSlotData(n, i), i && "undefined" != s.attachmentName && "null" != s.attachmentName ? s.showDisplayByName(s.attachmentName) : s.showDisplayByIndex(s.displayIndex));
                                return !0;
                            }
                            return !1;
                        },
                        s.getSkinIndexByName = function (t) {
                            for (var e = 0,
                                i = this.skinDataArray.length; e < i; e++) if (this.skinDataArray[e].name == t) return e;
                            return - 1;
                        },
                        s.getGrahicsDataWithCache = function (t, e) {
                            return this._graphicsCache[t][e];
                        },
                        s.setGrahicsDataWithCache = function (t, e, i) {
                            this._graphicsCache[t][e] = i;
                        },
                        s.destroy = function () {
                            this._isDestroyed = !0;
                            var t;
                            for (var i in this.subTextureDic) (t = this.subTextureDic[i]) && t.destroy();
                            for (i in this._textureDic) (t = this._textureDic[i]) && t.destroy();
                            for (var s = 0,
                                n = this.skinSlotDisplayDataArr.length; s < n; s++) this.skinSlotDisplayDataArr[s].destory();
                            this.skinSlotDisplayDataArr.length = 0,
                                this.url && delete e.TEMPLET_DICTIONARY[this.url],
                                laya.resource.Resource.prototype.destroy.call(this);
                        },
                        s.getAniNameByIndex = function (t) {
                            var e = this.getAnimation(t);
                            return e ? e.name : null;
                        },
                        a(0, s, "rate",
                            function () {
                                return this._rate;
                            },
                            function (t) {
                                this._rate = t;
                            }),
                        e.LAYA_ANIMATION_VISION = "LAYAANIMATION:1.6.0",
                        e.TEMPLET_DICTIONARY = null,
                        e;
                }(it));
    }(window, document, Laya),
    "function" == typeof define && define.amd && define("laya.core", ["require", "exports"],
        function (t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            for (var i in Laya) {
                var s = Laya[i];
                s && s.__isclass && (e[i] = s);
            }
        }),
    function (t, e, i) {
        i.un,
            i.uns,
            i.static;
        var s = i.class,
            n = i.getset,
            a = (i.__newvec, laya.utils.Browser, laya.utils.Color),
            r = laya.filters.ColorFilterAction,
            o = laya.filters.webgl.ColorFilterActionGL,
            h = laya.filters.Filter,
            l = laya.filters.webgl.FilterActionGL,
            c = laya.maths.Matrix,
            u = (laya.maths.Rectangle, laya.renders.Render),
            d = (laya.renders.RenderContext, laya.webgl.resource.RenderTarget2D),
            _ = laya.utils.RunDriver,
            p = (laya.webgl.shader.d2.ShaderDefines2D, laya.display.Sprite, laya.resource.Texture, laya.webgl.shader.d2.value.Value2D),
            f = function () {
                function t() {
                    this.data = null;
                }
                s(t, "laya.filters.FilterAction");
                var e = t.prototype;
                return i.imps(e, {
                    "laya.filters.IFilterAction": !0
                }),
                    e.apply = function (t) {
                        return null;
                    },
                    t;
            }(),
            m = function () {
                function t() { }
                return s(t, "laya.filters.WebGLFilter"),
                    t.enable = function () {
                        t.isInit || (t.isInit = !0, u.isWebGL && (_.createFilterAction = function (t) {
                            var e;
                            switch (t) {
                                case 32:
                                    e = new o();
                                    break;

                                case 16:
                                    e = new g();
                                    break;

                                case 8:
                                    e = new v();
                            }
                            return e;
                        }));
                    },
                    t.isInit = !1,
                    t.__init$ = function () {
                        _.createFilterAction = function (t) {
                            var e;
                            switch (t) {
                                case 16:
                                case 8:
                                    e = new f();
                                    break;

                                case 32:
                                    e = new r();
                            }
                            return e;
                        };
                    },
                    t;
            }(),
            g = (function (t) {
                function e(t) {
                    this.strength = NaN,
                        this.strength_sig2_2sig2_gauss1 = [],
                        e.__super.call(this),
                        void 0 === t && (t = 4),
                        u.isWebGL && m.enable(),
                        this.strength = t,
                        this._action = _.createFilterAction(16),
                        this._action.data = this;
                }
                s(e, "laya.filters.BlurFilter", h);
                var i = e.prototype;
                i.callNative = function (t) {
                    t.conchModel && t.conchModel.blurFilter && t.conchModel.blurFilter(this.strength);
                },
                    n(0, i, "action",
                        function () {
                            return this._action;
                        }),
                    n(0, i, "type",
                        function () {
                            return 16;
                        });
            }(),
                function (t) {
                    function e(t, i, s, n) {
                        this._color = null,
                            e.__super.call(this),
                            this._elements = new Float32Array(9),
                            void 0 === i && (i = 4),
                            void 0 === s && (s = 6),
                            void 0 === n && (n = 6),
                            u.isWebGL && m.enable(),
                            this._color = new a(t),
                            this.blur = Math.min(i, 20),
                            this.offX = s,
                            this.offY = n,
                            this._action = _.createFilterAction(8),
                            this._action.data = this;
                    }
                    s(e, "laya.filters.GlowFilter", h);
                    var i = e.prototype;
                    i.getColor = function () {
                        return this._color._color;
                    },
                        i.callNative = function (t) {
                            t.conchModel && t.conchModel.glowFilter && t.conchModel.glowFilter(this._color.strColor, this._elements[4], this._elements[5], this._elements[6]);
                        },
                        n(0, i, "type",
                            function () {
                                return 8;
                            }),
                        n(0, i, "action",
                            function () {
                                return this._action;
                            }),
                        n(0, i, "offY",
                            function () {
                                return this._elements[6];
                            },
                            function (t) {
                                this._elements[6] = t;
                            }),
                        n(0, i, "offX",
                            function () {
                                return this._elements[5];
                            },
                            function (t) {
                                this._elements[5] = t;
                            }),
                        n(0, i, "blur",
                            function () {
                                return this._elements[4];
                            },
                            function (t) {
                                this._elements[4] = t;
                            });
                }(),
                function (t) {
                    function e() {
                        this.data = null,
                            e.__super.call(this);
                    }
                    s(e, "laya.filters.webgl.BlurFilterActionGL", l);
                    var i = e.prototype;
                    return i.setValueMix = function (t) {
                        t.defines.add(this.data.type);
                    },
                        i.apply3d = function (t, e, i, s, n) {
                            var a = t.getValue("bounds"),
                                r = p.create(1, 0);
                            r.setFilters([this.data]);
                            c.EMPTY.identity(),
                                i.ctx.drawTarget(t, 0, 0, a.width, a.height, c.EMPTY, "src", r),
                                r.setFilters(null);
                        },
                        i.setValue = function (t) {
                            t.strength = this.data.strength;
                            var e = this.data.strength / 3,
                                i = e * e;
                            this.data.strength_sig2_2sig2_gauss1[0] = this.data.strength,
                                this.data.strength_sig2_2sig2_gauss1[1] = i,
                                this.data.strength_sig2_2sig2_gauss1[2] = 2 * i,
                                this.data.strength_sig2_2sig2_gauss1[3] = 1 / (2 * Math.PI * i),
                                t.strength_sig2_2sig2_gauss1 = this.data.strength_sig2_2sig2_gauss1;
                        },
                        n(0, i, "typeMix",
                            function () {
                                return 16;
                            }),
                        e;
                }()),
            v = function (t) {
                function e() {
                    this.data = null,
                        this._initKey = !1,
                        this._textureWidth = 0,
                        this._textureHeight = 0,
                        e.__super.call(this);
                }
                s(e, "laya.filters.webgl.GlowFilterActionGL", l);
                var a = e.prototype;
                return i.imps(a, {
                    "laya.filters.IFilterActionGL": !0
                }),
                    a.setValueMix = function (t) { },
                    a.apply3d = function (t, e, i, s, n) {
                        var a = t.getValue("bounds");
                        t.addValue("color", this.data.getColor());
                        var r = a.width,
                            o = a.height;
                        this._textureWidth = r,
                            this._textureHeight = o;
                        var h, l = c.TEMP;
                        return l.identity(),
                            (h = p.create(1, 0)).setFilters([this.data]),
                            i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", h, null),
                            h = p.create(1, 0),
                            i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", h),
                            null;
                    },
                    a.setSpriteWH = function (t) {
                        this._textureWidth = t.width,
                            this._textureHeight = t.height;
                    },
                    a.setValue = function (t) {
                        t.u_offsetX = this.data.offX,
                            t.u_offsetY = -this.data.offY,
                            t.u_strength = 1,
                            t.u_blurX = this.data.blur,
                            t.u_blurY = this.data.blur,
                            t.u_textW = this._textureWidth,
                            t.u_textH = this._textureHeight,
                            t.u_color = this.data.getColor();
                    },
                    n(0, a, "typeMix",
                        function () {
                            return 8;
                        }),
                    e.tmpTarget = function (t, e, i, s, n) {
                        var a = t.getValue("bounds");
                        t.getValue("out").end();
                        var r = d.create(a.width, a.height);
                        r.start();
                        var o = t.getValue("color");
                        o && r.clear(o[0], o[1], o[2], 0),
                            t.addValue("tmpTarget", r);
                    },
                    e.startOut = function (t, e, i, s, n) {
                        t.getValue("tmpTarget").end();
                        var a = t.getValue("out");
                        a.start();
                        var r = t.getValue("color");
                        r && a.clear(r[0], r[1], r[2], 0);
                    },
                    e.recycleTarget = function (t, e, i, s, n) {
                        t.getValue("src");
                        t.getValue("tmpTarget").recycle();
                    },
                    e;
            }();
        i.__init([m]);
    }(window, document, Laya),
    "function" == typeof define && define.amd && define("laya.core", ["require", "exports"],
        function (t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            for (var i in Laya) {
                var s = Laya[i];
                s && s.__isclass && (e[i] = s);
            }
        }),
    function (t, e, i) {
        i.un,
            i.uns;
        var s = i.static,
            n = i.class,
            a = i.getset,
            r = (i.__newvec, laya.display.Animation),
            o = (laya.utils.Browser, laya.utils.ClassUtils),
            h = laya.filters.ColorFilter,
            l = laya.utils.Ease,
            c = laya.events.Event,
            u = (laya.events.EventDispatcher, laya.display.css.Font),
            d = laya.display.FrameAnimation,
            _ = laya.display.Graphics,
            p = laya.utils.Handler,
            f = laya.display.Input,
            m = laya.net.Loader,
            g = (laya.display.Node, laya.maths.Point),
            v = laya.maths.Rectangle,
            y = laya.renders.Render,
            b = laya.display.Sprite,
            x = laya.display.Text,
            w = laya.resource.Texture,
            M = laya.utils.Tween,
            S = laya.utils.Utils,
            C = laya.utils.WeakObject;
        i.interface("laya.ui.IItem"),
            i.interface("laya.ui.IRender"),
            i.interface("laya.ui.ISelect"),
            i.interface("laya.ui.IComponent"),
            i.interface("laya.ui.IBox", "IComponent");
        var T = function () {
            function t() {
                this.enable = !1,
                    this.top = NaN,
                    this.bottom = NaN,
                    this.left = NaN,
                    this.right = NaN,
                    this.centerX = NaN,
                    this.centerY = NaN,
                    this.anchorX = NaN,
                    this.anchorY = NaN;
            }
            return n(t, "laya.ui.LayoutStyle"),
                s(t, ["EMPTY",
                    function () {
                        return this.EMPTY = new t();
                    }]),
                t;
        }(),
            I = function () {
                function t() { }
                return n(t, "laya.ui.Styles"),
                    t.labelColor = "#000000",
                    t.buttonStateNum = 3,
                    t.scrollBarMinNum = 15,
                    t.scrollBarDelayTime = 500,
                    s(t, ["defaultSizeGrid",
                        function () {
                            return this.defaultSizeGrid = [4, 4, 4, 4, 0];
                        },
                        "labelPadding",
                        function () {
                            return this.labelPadding = [2, 2, 2, 2];
                        },
                        "inputLabelPadding",
                        function () {
                            return this.inputLabelPadding = [1, 1, 1, 3];
                        },
                        "buttonLabelColors",
                        function () {
                            return this.buttonLabelColors = ["#32556b", "#32cc6b", "#ff0000", "#C0C0C0"];
                        },
                        "comboBoxItemColors",
                        function () {
                            return this.comboBoxItemColors = ["#5e95b6", "#ffffff", "#000000", "#8fa4b1", "#ffffff"];
                        }]),
                    t;
            }(),
            L = function () {
                function t() { }
                return n(t, "laya.ui.UIUtils"),
                    t.fillArray = function (t, e, i) {
                        var s = t.concat();
                        if (e) for (var n = e.split(","), a = 0, r = Math.min(s.length, n.length); a < r; a++) {
                            var o = n[a];
                            s[a] = "true" == o || "false" != o && o,
                                null != i && (s[a] = i(o));
                        }
                        return s;
                    },
                    t.toColor = function (t) {
                        return S.toHexColor(t);
                    },
                    t.gray = function (e, i) {
                        void 0 === i && (i = !0),
                            i ? t.addFilter(e, t.grayFilter) : t.clearFilter(e, h);
                    },
                    t.addFilter = function (t, e) {
                        var i = t.filters || [];
                        i.push(e),
                            t.filters = i;
                    },
                    t.clearFilter = function (t, e) {
                        var s = t.filters;
                        if (null != s && s.length > 0) {
                            for (var n = s.length - 1; n > -1; n--) {
                                var a = s[n];
                                i.__typeof(a, e) && s.splice(n, 1);
                            }
                            t.filters = s;
                        }
                    },
                    t._getReplaceStr = function (e) {
                        return t.escapeSequence[e];
                    },
                    t.adptString = function (e) {
                        return e.replace(/\\(\w)/g, t._getReplaceStr);
                    },
                    t.getBindFun = function (e) {
                        var s = t._funMap.get(e);
                        if (null == s) {
                            var n = '"' + e + '"',
                                a = "(function(data){if(data==null)return;with(data){try{\nreturn " + (n = n.replace(/^"\${|}"$/g, "").replace(/\${/g, '"+').replace(/}/g, '+"')) + "\n}catch(e){}}})";
                            s = i._runScript(a),
                                t._funMap.set(e, s);
                        }
                        return s;
                    },
                    s(t, ["grayFilter",
                        function () {
                            return this.grayFilter = new h([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0]);
                        },
                        "escapeSequence",
                        function () {
                            return this.escapeSequence = {
                                "\\n": "\n",
                                "\\t": "\t"
                            };
                        },
                        "_funMap",
                        function () {
                            return this._funMap = new C();
                        }]),
                    t;
            }(),
            E = function () {
                function t() { }
                return n(t, "UIConfig"),
                    t.touchScrollEnable = !0,
                    t.mouseWheelEnable = !0,
                    t.showButtons = !0,
                    t.popupBgColor = "#000000",
                    t.popupBgAlpha = .5,
                    t.closeDialogOnSide = !0,
                    t;
            }(),
            A = function (t) {
                function e() {
                    this.autoCacheCmd = !0,
                        this._width = 0,
                        this._height = 0,
                        this._source = null,
                        this._sizeGrid = null,
                        this._isChanged = !1,
                        this._offset = null,
                        e.__super.call(this);
                }
                n(e, "laya.ui.AutoBitmap", t);
                var s = e.prototype;
                return s.destroy = function () {
                    t.prototype.destroy.call(this),
                        this._source = null,
                        this._sizeGrid = null,
                        this._offset = null;
                },
                    s._setChanged = function () {
                        this._isChanged || (this._isChanged = !0, i.timer.callLater(this, this.changeSource));
                    },
                    s.changeSource = function () {
                        this._isChanged = !1;
                        var t = this._source;
                        if (t && t.bitmap) {
                            var i = this.width,
                                s = this.height,
                                n = this._sizeGrid,
                                a = t.sourceWidth,
                                r = t.sourceHeight;
                            if (!n || a === i && r === s) this.cleanByTexture(t, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, i, s);
                            else {
                                t.$_GID || (t.$_GID = S.getGID());
                                var o = t.$_GID + "." + i + "." + s + "." + n.join(".");
                                if (S.isOKCmdList(C.I.get(o))) return void (this.cmds = C.I.get(o));
                                this.clear();
                                var h = n[0],
                                    l = n[1],
                                    c = n[2],
                                    u = n[3],
                                    d = n[4],
                                    _ = !1;
                                if (i == a && (u = l = 0), s == r && (h = c = 0), u + l > i) {
                                    var p = i;
                                    _ = !0,
                                        i = u + l,
                                        this.save(),
                                        this.clipRect(0, 0, p, s);
                                }
                                u && h && this.drawTexture(e.getTexture(t, 0, 0, u, h), 0, 0, u, h),
                                    l && h && this.drawTexture(e.getTexture(t, a - l, 0, l, h), i - l, 0, l, h),
                                    u && c && this.drawTexture(e.getTexture(t, 0, r - c, u, c), 0, s - c, u, c),
                                    l && c && this.drawTexture(e.getTexture(t, a - l, r - c, l, c), i - l, s - c, l, c),
                                    h && this.drawBitmap(d, e.getTexture(t, u, 0, a - u - l, h), u, 0, i - u - l, h),
                                    c && this.drawBitmap(d, e.getTexture(t, u, r - c, a - u - l, c), u, s - c, i - u - l, c),
                                    u && this.drawBitmap(d, e.getTexture(t, 0, h, u, r - h - c), 0, h, u, s - h - c),
                                    l && this.drawBitmap(d, e.getTexture(t, a - l, h, l, r - h - c), i - l, h, l, s - h - c),
                                    this.drawBitmap(d, e.getTexture(t, u, h, a - u - l, r - h - c), u, h, i - u - l, s - h - c),
                                    _ && this.restore(),
                                    this.autoCacheCmd && !y.isConchApp && C.I.set(o, this.cmds);
                            }
                            this._repaint();
                        }
                    },
                    s.drawBitmap = function (t, e, i, s, n, a) {
                        void 0 === n && (n = 0),
                            void 0 === a && (a = 0),
                            n < .1 || a < .1 || (!t || e.width == n && e.height == a ? this.drawTexture(e, i, s, n, a) : this.fillTexture(e, i, s, n, a));
                    },
                    s.clear = function (e) {
                        void 0 === e && (e = !0),
                            t.prototype.clear.call(this, !1);
                    },
                    a(0, s, "sizeGrid",
                        function () {
                            return this._sizeGrid;
                        },
                        function (t) {
                            this._sizeGrid = t,
                                this._setChanged();
                        }),
                    a(0, s, "width",
                        function () {
                            return this._width ? this._width : this._source ? this._source.sourceWidth : 0;
                        },
                        function (t) {
                            this._width != t && (this._width = t, this._setChanged());
                        }),
                    a(0, s, "height",
                        function () {
                            return this._height ? this._height : this._source ? this._source.sourceHeight : 0;
                        },
                        function (t) {
                            this._height != t && (this._height = t, this._setChanged());
                        }),
                    a(0, s, "source",
                        function () {
                            return this._source;
                        },
                        function (t) {
                            t ? (this._source = t, this._setChanged()) : (this._source = null, this.clear());
                        }),
                    e.getTexture = function (t, e, i, s, n) {
                        s <= 0 && (s = 1),
                            n <= 0 && (n = 1),
                            t.$_GID || (t.$_GID = S.getGID());
                        var a = t.$_GID + "." + e + "." + i + "." + s + "." + n,
                            r = C.I.get(a);
                        return r && r.source || (r = w.createFromTexture(t, e, i, s, n), C.I.set(a, r)),
                            r;
                    },
                    e;
            }(_),
            R = (function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.ui.UIEvent", c),
                    e.SHOW_TIP = "showtip",
                    e.HIDE_TIP = "hidetip";
            }(),
                function (t) {
                    function e() {
                        this._comXml = null,
                            this._dataSource = null,
                            this._toolTip = null,
                            this._tag = null,
                            this._disabled = !1,
                            this._gray = !1,
                            this.layoutEnabled = !0,
                            e.__super.call(this),
                            this._layout = T.EMPTY,
                            this.preinitialize(),
                            this.createChildren(),
                            this.initialize();
                    }
                    n(e, "laya.ui.Component", t);
                    var s = e.prototype;
                    return i.imps(s, {
                        "laya.ui.IComponent": !0
                    }),
                        s.destroy = function (e) {
                            void 0 === e && (e = !0),
                                t.prototype.destroy.call(this, e),
                                this._dataSource = this._layout = null,
                                this._tag = null,
                                this._toolTip = null;
                        },
                        s.preinitialize = function () { },
                        s.createChildren = function () { },
                        s.initialize = function () { },
                        s.callLater = function (t, e) {
                            i.timer.callLater(this, t, e);
                        },
                        s.runCallLater = function (t) {
                            i.timer.runCallLater(this, t);
                        },
                        s.commitMeasure = function () { },
                        s.changeSize = function () {
                            this.event("resize");
                        },
                        s.getLayout = function () {
                            return this._layout === T.EMPTY && (this._layout = new T()),
                                this._layout;
                        },
                        s._setLayoutEnabled = function (t) {
                            this._layout && this._layout.enable != t && (this._layout.enable = t, this.on("added", this, this.onAdded), this.on("removed", this, this.onRemoved), this.parent && this.onAdded());
                        },
                        s.onRemoved = function () {
                            this.parent.off("resize", this, this.onCompResize);
                        },
                        s.onAdded = function () {
                            this.parent.on("resize", this, this.onCompResize),
                                this.resetLayoutX(),
                                this.resetLayoutY();
                        },
                        s.onCompResize = function () {
                            this._layout && this._layout.enable && (this.resetLayoutX(), this.resetLayoutY());
                        },
                        s.resetLayoutX = function () {
                            var t = this._layout;
                            if (isNaN(t.anchorX) || (this.pivotX = t.anchorX * this.width), this.layoutEnabled) {
                                var e = this.parent;
                                e && (isNaN(t.centerX) ? isNaN(t.left) ? isNaN(t.right) || (this.x = Math.round(e.width - this.displayWidth - t.right + this.pivotX * this.scaleX)) : (this.x = Math.round(t.left + this.pivotX * this.scaleX), isNaN(t.right) || (this.width = (e._width - t.left - t.right) / (this.scaleX || .01))) : this.x = Math.round(.5 * (e.width - this.displayWidth) + t.centerX + this.pivotX * this.scaleX));
                            }
                        },
                        s.resetLayoutY = function () {
                            var t = this._layout;
                            if (isNaN(t.anchorY) || (this.pivotY = t.anchorY * this.height), this.layoutEnabled) {
                                var e = this.parent;
                                e && (isNaN(t.centerY) ? isNaN(t.top) ? isNaN(t.bottom) || (this.y = Math.round(e.height - this.displayHeight - t.bottom + this.pivotY * this.scaleY)) : (this.y = Math.round(t.top + this.pivotY * this.scaleY), isNaN(t.bottom) || (this.height = (e._height - t.top - t.bottom) / (this.scaleY || .01))) : this.y = Math.round(.5 * (e.height - this.displayHeight) + t.centerY + this.pivotY * this.scaleY));
                            }
                        },
                        s.onMouseOver = function (t) {
                            i.stage.event("showtip", this._toolTip);
                        },
                        s.onMouseOut = function (t) {
                            i.stage.event("hidetip", this._toolTip);
                        },
                        a(0, s, "displayWidth",
                            function () {
                                return this.width * this.scaleX;
                            }),
                        a(0, s, "width",
                            function () {
                                return this._width ? this._width : this.measureWidth;
                            },
                            function (t) {
                                this._width != t && (this._width = t, this.conchModel && this.conchModel.size(this._width, this._height), this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerX) && isNaN(this._layout.right) && isNaN(this._layout.anchorX) || this.resetLayoutX());
                            }),
                        a(0, s, "measureWidth",
                            function () {
                                var t = 0;
                                this.commitMeasure();
                                for (var e = this.numChildren - 1; e > -1; e--) {
                                    var i = this.getChildAt(e);
                                    i.visible && (t = Math.max(i.x + i.width * i.scaleX, t));
                                }
                                return t;
                            }),
                        a(0, s, "displayHeight",
                            function () {
                                return this.height * this.scaleY;
                            }),
                        a(0, s, "height",
                            function () {
                                return this._height ? this._height : this.measureHeight;
                            },
                            function (t) {
                                this._height != t && (this._height = t, this.conchModel && this.conchModel.size(this._width, this._height), this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerY) && isNaN(this._layout.bottom) && isNaN(this._layout.anchorY) || this.resetLayoutY());
                            }),
                        a(0, s, "dataSource",
                            function () {
                                return this._dataSource;
                            },
                            function (t) {
                                this._dataSource = t;
                                for (var e in this._dataSource) this.hasOwnProperty(e) && "function" != typeof this[e] && (this[e] = this._dataSource[e]);
                            }),
                        a(0, s, "scaleY", t.prototype._$get_scaleY,
                            function (t) {
                                i.superGet(b, this, "scaleY") != t && (i.superSet(b, this, "scaleY", t), this.callLater(this.changeSize), this._layout.enable && this.resetLayoutY());
                            }),
                        a(0, s, "measureHeight",
                            function () {
                                var t = 0;
                                this.commitMeasure();
                                for (var e = this.numChildren - 1; e > -1; e--) {
                                    var i = this.getChildAt(e);
                                    i.visible && (t = Math.max(i.y + i.height * i.scaleY, t));
                                }
                                return t;
                            }),
                        a(0, s, "scaleX", t.prototype._$get_scaleX,
                            function (t) {
                                i.superGet(b, this, "scaleX") != t && (i.superSet(b, this, "scaleX", t), this.callLater(this.changeSize), this._layout.enable && this.resetLayoutX());
                            }),
                        a(0, s, "top",
                            function () {
                                return this._layout.top;
                            },
                            function (t) {
                                t != this._layout.top && (this.getLayout().top = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutY();
                            }),
                        a(0, s, "bottom",
                            function () {
                                return this._layout.bottom;
                            },
                            function (t) {
                                t != this._layout.bottom && (this.getLayout().bottom = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutY();
                            }),
                        a(0, s, "left",
                            function () {
                                return this._layout.left;
                            },
                            function (t) {
                                t != this._layout.left && (this.getLayout().left = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutX();
                            }),
                        a(0, s, "right",
                            function () {
                                return this._layout.right;
                            },
                            function (t) {
                                t != this._layout.right && (this.getLayout().right = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutX();
                            }),
                        a(0, s, "centerX",
                            function () {
                                return this._layout.centerX;
                            },
                            function (t) {
                                t != this._layout.centerX && (this.getLayout().centerX = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutX();
                            }),
                        a(0, s, "centerY",
                            function () {
                                return this._layout.centerY;
                            },
                            function (t) {
                                t != this._layout.centerY && (this.getLayout().centerY = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutY();
                            }),
                        a(0, s, "anchorX",
                            function () {
                                return this._layout.anchorX;
                            },
                            function (t) {
                                t != this._layout.anchorX && (this.getLayout().anchorX = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutX();
                            }),
                        a(0, s, "anchorY",
                            function () {
                                return this._layout.anchorY;
                            },
                            function (t) {
                                t != this._layout.anchorY && (this.getLayout().anchorY = t, this._setLayoutEnabled(!0)),
                                    this.resetLayoutY();
                            }),
                        a(0, s, "tag",
                            function () {
                                return this._tag;
                            },
                            function (t) {
                                this._tag = t;
                            }),
                        a(0, s, "toolTip",
                            function () {
                                return this._toolTip;
                            },
                            function (t) {
                                this._toolTip != t && (this._toolTip = t, null != t ? (this.on("mouseover", this, this.onMouseOver), this.on("mouseout", this, this.onMouseOut)) : (this.off("mouseover", this, this.onMouseOver), this.off("mouseout", this, this.onMouseOut)));
                            }),
                        a(0, s, "comXml",
                            function () {
                                return this._comXml;
                            },
                            function (t) {
                                this._comXml = t;
                            }),
                        a(0, s, "gray",
                            function () {
                                return this._gray;
                            },
                            function (t) {
                                t !== this._gray && (this._gray = t, L.gray(this, t));
                            }),
                        a(0, s, "disabled",
                            function () {
                                return this._disabled;
                            },
                            function (t) {
                                t !== this._disabled && (this.gray = this._disabled = t, this.mouseEnabled = !t);
                            }),
                        e;
                }(b)),
            P = function (t) {
                function e() {
                    this.lockLayer = null,
                        this.popupEffect = function (t) {
                            t.scale(1, 1),
                                M.from(t, {
                                    x: i.stage.width / 2,
                                    y: i.stage.height / 2,
                                    scaleX: 0,
                                    scaleY: 0
                                },
                                    300, l.backOut, p.create(this, this.doOpen, [t]));
                        },
                        this.closeEffect = function (t, e) {
                            M.to(t, {
                                x: i.stage.width / 2,
                                y: i.stage.height / 2,
                                scaleX: 0,
                                scaleY: 0
                            },
                                300, l.strongOut, p.create(this, this.doClose, [t, e]));
                        },
                        e.__super.call(this),
                        this.maskLayer = new b(),
                        this.popupEffectHandler = new p(this, this.popupEffect),
                        this.closeEffectHandler = new p(this, this.closeEffect),
                        this.mouseEnabled = this.maskLayer.mouseEnabled = !0,
                        this.zOrder = 1e3,
                        i.stage.addChild(this),
                        i.stage.on("resize", this, this._onResize),
                        E.closeDialogOnSide && this.maskLayer.on("click", this, this._closeOnSide),
                        this._onResize(null);
                }
                n(e, "laya.ui.DialogManager", b);
                var s = e.prototype;
                return s._closeOnSide = function () {
                    var t = this.getChildAt(this.numChildren - 1);
                    t instanceof laya.ui.Dialog && t.close("side");
                },
                    s.setLockView = function (t) {
                        this.lockLayer || (this.lockLayer = new k(), this.lockLayer.mouseEnabled = !0, this.lockLayer.size(i.stage.width, i.stage.height)),
                            this.lockLayer.removeChildren(),
                            t && (t.centerX = t.centerY = 0, this.lockLayer.addChild(t));
                    },
                    s._onResize = function (t) {
                        var e = this.maskLayer.width = i.stage.width,
                            s = this.maskLayer.height = i.stage.height;
                        this.lockLayer && this.lockLayer.size(e, s),
                            this.maskLayer.graphics.clear(),
                            this.maskLayer.graphics.drawRect(0, 0, e, s, E.popupBgColor),
                            this.maskLayer.alpha = E.popupBgAlpha;
                        for (var n = this.numChildren - 1; n > -1; n--) {
                            var a = this.getChildAt(n);
                            a.popupCenter && this._centerDialog(a);
                        }
                    },
                    s._centerDialog = function (t) {
                        t.x = Math.round((i.stage.width - t.width >> 1) + t.pivotX),
                            t.y = Math.round((i.stage.height - t.height >> 1) + t.pivotY);
                    },
                    s.open = function (t, e, i) {
                        void 0 === e && (e = !1),
                            void 0 === i && (i = !1),
                            e && this._closeAll(),
                            t.popupCenter && this._centerDialog(t),
                            this.addChild(t),
                            (t.isModal || this._$P.hasZorder) && this.timer.callLater(this, this._checkMask),
                            i && null != t.popupEffect ? t.popupEffect.runWith(t) : this.doOpen(t),
                            this.event("open");
                    },
                    s.doOpen = function (t) {
                        t.onOpened();
                    },
                    s.lock = function (t) {
                        this.lockLayer && (t ? this.addChild(this.lockLayer) : this.lockLayer.removeSelf());
                    },
                    s.close = function (t, e, i) {
                        void 0 === i && (i = !1),
                            i && null != t.closeEffect ? t.closeEffect.runWith([t, e]) : this.doClose(t, e),
                            this.event("close");
                    },
                    s.doClose = function (t, e) {
                        t.removeSelf(),
                            t.isModal && this._checkMask(),
                            t.closeHandler && t.closeHandler.runWith(e),
                            t.onClosed(e);
                    },
                    s.closeAll = function () {
                        this._closeAll(),
                            this.event("close");
                    },
                    s._closeAll = function () {
                        for (var t = this.numChildren - 1; t > -1; t--) {
                            var e = this.getChildAt(t);
                            e && null != e.close && this.doClose(e);
                        }
                    },
                    s.getDialogsByGroup = function (t) {
                        for (var e = [], i = this.numChildren - 1; i > -1; i--) {
                            var s = this.getChildAt(i);
                            s && s.group === t && e.push(s);
                        }
                        return e;
                    },
                    s.closeByGroup = function (t) {
                        for (var e = [], i = this.numChildren - 1; i > -1; i--) {
                            var s = this.getChildAt(i);
                            s && s.group === t && (s.close(), e.push(s));
                        }
                        return e;
                    },
                    s._checkMask = function () {
                        this.maskLayer.removeSelf();
                        for (var t = this.numChildren - 1; t > -1; t--) {
                            var e = this.getChildAt(t);
                            if (e && e.isModal) return void this.addChildAt(this.maskLayer, t);
                        }
                    },
                    e;
            }(),
            k = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.ui.Box", t);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.ui.IBox": !0
                }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t;
                            for (var e in t) {
                                var i = this.getChildByName(e);
                                i ? i.dataSource = t[e] : this.hasOwnProperty(e) && "function" != typeof this[e] && (this[e] = t[e]);
                            }
                        }),
                    e;
            }(R),
            D = function (t) {
                function e(t, i) {
                    this.toggle = !1,
                        this._bitmap = null,
                        this._text = null,
                        this._strokeColors = null,
                        this._state = 0,
                        this._selected = !1,
                        this._skin = null,
                        this._autoSize = !0,
                        this._sources = null,
                        this._clickHandler = null,
                        this._stateChanged = !1,
                        e.__super.call(this),
                        this._labelColors = I.buttonLabelColors,
                        this._stateNum = I.buttonStateNum,
                        void 0 === i && (i = ""),
                        this.skin = t,
                        this.label = i;
                }
                n(e, "laya.ui.Button", t);
                var r = e.prototype;
                return i.imps(r, {
                    "laya.ui.ISelect": !0
                }),
                    r.destroy = function (e) {
                        void 0 === e && (e = !0),
                            t.prototype.destroy.call(this, e),
                            this._bitmap && this._bitmap.destroy(),
                            this._text && this._text.destroy(e),
                            this._bitmap = null,
                            this._text = null,
                            this._clickHandler = null,
                            this._labelColors = this._sources = this._strokeColors = null;
                    },
                    r.createChildren = function () {
                        this.graphics = this._bitmap = new A();
                    },
                    r.createText = function () {
                        this._text || (this._text = new x(), this._text.overflow = x.HIDDEN, this._text.align = "center", this._text.valign = "middle", this._text.width = this._width, this._text.height = this._height);
                    },
                    r.initialize = function () {
                        1 !== this._mouseEnableState && (this.mouseEnabled = !0, this._setBit(2, !0)),
                            this._createListener("mouseover", this, this.onMouse, null, !1, !1),
                            this._createListener("mouseout", this, this.onMouse, null, !1, !1),
                            this._createListener("mousedown", this, this.onMouse, null, !1, !1),
                            this._createListener("mouseup", this, this.onMouse, null, !1, !1),
                            this._createListener("click", this, this.onMouse, null, !1, !1);
                    },
                    r.onMouse = function (t) {
                        if (!1 !== this.toggle || !this._selected) return "click" === t.type ? (this.toggle && (this.selected = !this._selected), void (this._clickHandler && this._clickHandler.run())) : void (!this._selected && (this.state = e.stateMap[t.type]));
                    },
                    r.changeClips = function () {
                        var t = m.getRes(this._skin);
                        if (t) {
                            var e = t.sourceWidth,
                                i = t.sourceHeight / this._stateNum;
                            t.$_GID || (t.$_GID = S.getGID());
                            var s = t.$_GID + "-" + this._stateNum,
                                n = C.I.get(s);
                            if (S.isOkTextureList(n) || (n = null), n) this._sources = n;
                            else {
                                if (this._sources = [], 1 === this._stateNum) this._sources.push(t);
                                else for (var a = 0; a < this._stateNum; a++) this._sources.push(w.createFromTexture(t, 0, i * a, e, i));
                                C.I.set(s, this._sources);
                            }
                            this._autoSize ? (this._bitmap.width = this._width || e, this._bitmap.height = this._height || i, this._text && (this._text.width = this._bitmap.width, this._text.height = this._bitmap.height)) : this._text && (this._text.x = e);
                        } else console.log("lose skin", this._skin);
                    },
                    r.changeState = function () {
                        this._stateChanged = !1,
                            this.runCallLater(this.changeClips);
                        var t = this._state < this._stateNum ? this._state : this._stateNum - 1;
                        this._sources && (this._bitmap.source = this._sources[t]),
                            this.label && (this._text.color = this._labelColors[t], this._strokeColors && (this._text.strokeColor = this._strokeColors[t]));
                    },
                    r._setStateChanged = function () {
                        this._stateChanged || (this._stateChanged = !0, this.callLater(this.changeState));
                    },
                    a(0, r, "labelStrokeColor",
                        function () {
                            return this.createText(),
                                this._text.strokeColor;
                        },
                        function (t) {
                            this.createText(),
                                this._text.strokeColor = t;
                        }),
                    a(0, r, "measureHeight",
                        function () {
                            return this.runCallLater(this.changeClips),
                                this._text ? Math.max(this._bitmap.height, this._text.height) : this._bitmap.height;
                        }),
                    a(0, r, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            this._skin != t && (this._skin = t, this.callLater(this.changeClips), this._setStateChanged());
                        }),
                    a(0, r, "state",
                        function () {
                            return this._state;
                        },
                        function (t) {
                            this._state != t && (this._state = t, this._setStateChanged());
                        }),
                    a(0, r, "text",
                        function () {
                            return this.createText(),
                                this._text;
                        }),
                    a(0, r, "stateNum",
                        function () {
                            return this._stateNum;
                        },
                        function (t) {
                            "string" == typeof t && (t = parseInt(t)),
                                this._stateNum != t && (this._stateNum = t < 1 ? 1 : t > 3 ? 3 : t, this.callLater(this.changeClips));
                        }),
                    a(0, r, "strokeColors",
                        function () {
                            return this._strokeColors ? this._strokeColors.join(",") : "";
                        },
                        function (t) {
                            this._strokeColors = L.fillArray(I.buttonLabelColors, t, String),
                                this._setStateChanged();
                        }),
                    a(0, r, "labelColors",
                        function () {
                            return this._labelColors.join(",");
                        },
                        function (t) {
                            this._labelColors = L.fillArray(I.buttonLabelColors, t, String),
                                this._setStateChanged();
                        }),
                    a(0, r, "measureWidth",
                        function () {
                            return this.runCallLater(this.changeClips),
                                this._autoSize ? this._bitmap.width : (this.runCallLater(this.changeState), this._bitmap.width + (this._text ? this._text.width : 0));
                        }),
                    a(0, r, "label",
                        function () {
                            return this._text ? this._text.text : null;
                        },
                        function (t) {
                            (this._text || t) && (this.createText(), this._text.text != t && (t && !this._text.parent && this.addChild(this._text), this._text.text = (t + "").replace(/\\n/g, "\n"), this._setStateChanged()));
                        }),
                    a(0, r, "selected",
                        function () {
                            return this._selected;
                        },
                        function (t) {
                            this._selected != t && (this._selected = t, this.state = this._selected ? 2 : 0, this.event("change"));
                        }),
                    a(0, r, "labelPadding",
                        function () {
                            return this.createText(),
                                this._text.padding.join(",");
                        },
                        function (t) {
                            this.createText(),
                                this._text.padding = L.fillArray(I.labelPadding, t, Number);
                        }),
                    a(0, r, "labelSize",
                        function () {
                            return this.createText(),
                                this._text.fontSize;
                        },
                        function (t) {
                            this.createText(),
                                this._text.fontSize = t;
                        }),
                    a(0, r, "labelStroke",
                        function () {
                            return this.createText(),
                                this._text.stroke;
                        },
                        function (t) {
                            this.createText(),
                                this._text.stroke = t;
                        }),
                    a(0, r, "labelBold",
                        function () {
                            return this.createText(),
                                this._text.bold;
                        },
                        function (t) {
                            this.createText(),
                                this._text.bold = t;
                        }),
                    a(0, r, "labelFont",
                        function () {
                            return this.createText(),
                                this._text.font;
                        },
                        function (t) {
                            this.createText(),
                                this._text.font = t;
                        }),
                    a(0, r, "labelAlign",
                        function () {
                            return this.createText(),
                                this._text.align;
                        },
                        function (t) {
                            this.createText(),
                                this._text.align = t;
                        }),
                    a(0, r, "clickHandler",
                        function () {
                            return this._clickHandler;
                        },
                        function (t) {
                            this._clickHandler = t;
                        }),
                    a(0, r, "sizeGrid",
                        function () {
                            return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
                        },
                        function (t) {
                            this._bitmap.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number);
                        }),
                    a(0, r, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(R, this, "width", t),
                                this._autoSize && (this._bitmap.width = t, this._text && (this._text.width = t));
                        }),
                    a(0, r, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(R, this, "height", t),
                                this._autoSize && (this._bitmap.height = t, this._text && (this._text.height = t));
                        }),
                    a(0, r, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t || "string" == typeof t ? this.label = t + "" : i.superSet(R, this, "dataSource", t);
                        }),
                    a(0, r, "iconOffset",
                        function () {
                            return this._bitmap._offset ? this._bitmap._offset.join(",") : null;
                        },
                        function (t) {
                            this._bitmap._offset = t ? L.fillArray([1, 1], t, Number) : [];
                        }),
                    s(e, ["stateMap",
                        function () {
                            return this.stateMap = {
                                mouseup: 0,
                                mouseover: 1,
                                mousedown: 2,
                                mouseout: 0
                            };
                        }]),
                    e;
            }(R),
            B = function (t) {
                function e(t, i, s) {
                    this._sources = null,
                        this._bitmap = null,
                        this._skin = null,
                        this._clipX = 1,
                        this._clipY = 1,
                        this._clipWidth = 0,
                        this._clipHeight = 0,
                        this._autoPlay = !1,
                        this._interval = 50,
                        this._complete = null,
                        this._isPlaying = !1,
                        this._index = 0,
                        this._clipChanged = !1,
                        this._group = null,
                        this._toIndex = -1,
                        e.__super.call(this),
                        void 0 === i && (i = 1),
                        void 0 === s && (s = 1),
                        this._clipX = i,
                        this._clipY = s,
                        this.skin = t;
                }
                n(e, "laya.ui.Clip", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, !0),
                        this._bitmap && this._bitmap.destroy(),
                        this._bitmap = null,
                        this._sources = null;
                },
                    s.dispose = function () {
                        this.destroy(!0),
                            i.loader.clearRes(this._skin);
                    },
                    s.createChildren = function () {
                        this.graphics = this._bitmap = new A();
                    },
                    s._onDisplay = function (t) {
                        this._isPlaying ? this._displayedInStage ? this.play() : this.stop() : this._autoPlay && this.play();
                    },
                    s.changeClip = function () {
                        if (this._clipChanged = !1, this._skin) {
                            var t = m.getRes(this._skin);
                            t ? this.loadComplete(this._skin, t) : i.loader.load(this._skin, p.create(this, this.loadComplete, [this._skin]));
                        }
                    },
                    s.loadComplete = function (t, e) {
                        if (t === this._skin && e) {
                            var i = this._clipWidth || Math.ceil(e.sourceWidth / this._clipX),
                                s = this._clipHeight || Math.ceil(e.sourceHeight / this._clipY),
                                n = this._skin + i + s,
                                a = C.I.get(n);
                            if (S.isOkTextureList(a) || (a = null), a) this._sources = a;
                            else {
                                this._sources = [];
                                for (var r = 0; r < this._clipY; r++) for (var o = 0; o < this._clipX; o++) this._sources.push(w.createFromTexture(e, i * o, s * r, i, s));
                                C.I.set(n, this._sources);
                            }
                            this.index = this._index,
                                this.event("loaded"),
                                this.onCompResize();
                        }
                    },
                    s.play = function (t, e) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = -1),
                            this._isPlaying = !0,
                            this.index = t,
                            this._toIndex = e,
                            this._index++ ,
                            i.timer.loop(this.interval, this, this._loop),
                            this.on("display", this, this._onDisplay),
                            this.on("undisplay", this, this._onDisplay);
                    },
                    s._loop = function () {
                        this._style.visible && this._sources && (this._index++ , this._toIndex > -1 && this._index >= this._toIndex ? this.stop() : this._index >= this._sources.length && (this._index = 0), this.index = this._index);
                    },
                    s.stop = function () {
                        this._isPlaying = !1,
                            i.timer.clear(this, this._loop),
                            this.event("complete");
                    },
                    s._setClipChanged = function () {
                        this._clipChanged || (this._clipChanged = !0, this.callLater(this.changeClip));
                    },
                    a(0, s, "interval",
                        function () {
                            return this._interval;
                        },
                        function (t) {
                            this._interval != t && (this._interval = t, this._isPlaying && this.play());
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            this._skin != t && (this._skin = t, t ? this._setClipChanged() : this._bitmap.source = null);
                        }),
                    a(0, s, "sources",
                        function () {
                            return this._sources;
                        },
                        function (t) {
                            this._sources = t,
                                this.index = this._index,
                                this.event("loaded");
                        }),
                    a(0, s, "clipX",
                        function () {
                            return this._clipX;
                        },
                        function (t) {
                            this._clipX = t || 1,
                                this._setClipChanged();
                        }),
                    a(0, s, "clipY",
                        function () {
                            return this._clipY;
                        },
                        function (t) {
                            this._clipY = t || 1,
                                this._setClipChanged();
                        }),
                    a(0, s, "total",
                        function () {
                            return this.runCallLater(this.changeClip),
                                this._sources ? this._sources.length : 0;
                        }),
                    a(0, s, "clipWidth",
                        function () {
                            return this._clipWidth;
                        },
                        function (t) {
                            this._clipWidth = t,
                                this._setClipChanged();
                        }),
                    a(0, s, "sizeGrid",
                        function () {
                            return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
                        },
                        function (t) {
                            this._bitmap.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number);
                        }),
                    a(0, s, "group",
                        function () {
                            return this._group;
                        },
                        function (t) {
                            t && this._skin && m.setGroup(this._skin, t),
                                this._group = t;
                        }),
                    a(0, s, "clipHeight",
                        function () {
                            return this._clipHeight;
                        },
                        function (t) {
                            this._clipHeight = t,
                                this._setClipChanged();
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(R, this, "width", t),
                                this._bitmap.width = t;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(R, this, "height", t),
                                this._bitmap.height = t;
                        }),
                    a(0, s, "measureWidth",
                        function () {
                            return this.runCallLater(this.changeClip),
                                this._bitmap.width;
                        }),
                    a(0, s, "measureHeight",
                        function () {
                            return this.runCallLater(this.changeClip),
                                this._bitmap.height;
                        }),
                    a(0, s, "index",
                        function () {
                            return this._index;
                        },
                        function (t) {
                            this._index = t,
                                this._bitmap && this._sources && (this._bitmap.source = this._sources[t]),
                                this.event("change");
                        }),
                    a(0, s, "autoPlay",
                        function () {
                            return this._autoPlay;
                        },
                        function (t) {
                            this._autoPlay != t && (this._autoPlay = t, t ? this.play() : this.stop());
                        }),
                    a(0, s, "isPlaying",
                        function () {
                            return this._isPlaying;
                        },
                        function (t) {
                            this._isPlaying = t;
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.index = parseInt(t) : i.superSet(R, this, "dataSource", t);
                        }),
                    a(0, s, "bitmap",
                        function () {
                            return this._bitmap;
                        }),
                    e;
            }(R),
            N = function (t) {
                function e() {
                    this.changeHandler = null,
                        this._gridSize = 11,
                        this._bgColor = "#ffffff",
                        this._borderColor = "#000000",
                        this._inputColor = "#000000",
                        this._inputBgColor = "#efefef",
                        this._colorPanel = null,
                        this._colorTiles = null,
                        this._colorBlock = null,
                        this._colorInput = null,
                        this._colorButton = null,
                        this._colors = [],
                        this._selectedColor = "#000000",
                        this._panelChanged = !1,
                        e.__super.call(this);
                }
                n(e, "laya.ui.ColorPicker", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._colorPanel && this._colorPanel.destroy(e),
                        this._colorButton && this._colorButton.destroy(e),
                        this._colorPanel = null,
                        this._colorTiles = null,
                        this._colorBlock = null,
                        this._colorInput = null,
                        this._colorButton = null,
                        this._colors = null,
                        this.changeHandler = null;
                },
                    s.createChildren = function () {
                        this.addChild(this._colorButton = new D()),
                            this._colorPanel = new k(),
                            this._colorPanel.size(230, 166),
                            this._colorPanel.addChild(this._colorTiles = new b()),
                            this._colorPanel.addChild(this._colorBlock = new b()),
                            this._colorPanel.addChild(this._colorInput = new f());
                    },
                    s.initialize = function () {
                        this._colorButton.on("click", this, this.onColorButtonClick),
                            this._colorBlock.pos(5, 5),
                            this._colorInput.pos(60, 5),
                            this._colorInput.size(60, 20),
                            this._colorInput.on("change", this, this.onColorInputChange),
                            this._colorInput.on("keydown", this, this.onColorFieldKeyDown),
                            this._colorTiles.pos(5, 30),
                            this._colorTiles.on("mousemove", this, this.onColorTilesMouseMove),
                            this._colorTiles.on("click", this, this.onColorTilesClick),
                            this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize),
                            this._colorPanel.on("mousedown", this, this.onPanelMouseDown),
                            this.bgColor = this._bgColor;
                    },
                    s.onPanelMouseDown = function (t) {
                        t.stopPropagation();
                    },
                    s.changePanel = function () {
                        this._panelChanged = !1;
                        var t = this._colorPanel.graphics;
                        t.clear(),
                            t.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor),
                            this.drawBlock(this._selectedColor),
                            this._colorInput.borderColor = this._borderColor,
                            this._colorInput.bgColor = this._inputBgColor,
                            this._colorInput.color = this._inputColor,
                            (t = this._colorTiles.graphics).clear();
                        for (var e = [0, 3355443, 6710886, 10066329, 13421772, 16777215, 16711680, 65280, 255, 16776960, 65535, 16711935], i = 0; i < 12; i++) for (var s = 0; s < 20; s++) {
                            var n = 0;
                            n = 0 === s ? e[i] : 1 === s ? 0 : 51 * (((3 * i + s / 6) % 3 << 0) + 3 * (i / 6 << 0)) << 16 | s % 6 * 51 << 8 | (i << 0) % 6 * 51;
                            var a = L.toColor(n);
                            this._colors.push(a);
                            var r = s * this._gridSize,
                                o = i * this._gridSize;
                            t.drawRect(r, o, this._gridSize, this._gridSize, a, "#000000");
                        }
                    },
                    s.onColorButtonClick = function (t) {
                        this._colorPanel.parent ? this.close() : this.open();
                    },
                    s.open = function () {
                        var t = this.localToGlobal(new g()),
                            e = t.x + this._colorPanel.width <= i.stage.width ? t.x : i.stage.width - this._colorPanel.width,
                            s = t.y + this._colorButton.height;
                        s = s + this._colorPanel.height <= i.stage.height ? s : t.y - this._colorPanel.height,
                            this._colorPanel.pos(e, s),
                            this._colorPanel.zOrder = 1001,
                            i._currentStage.addChild(this._colorPanel),
                            i.stage.on("mousedown", this, this.removeColorBox);
                    },
                    s.close = function () {
                        i.stage.off("mousedown", this, this.removeColorBox),
                            this._colorPanel.removeSelf();
                    },
                    s.removeColorBox = function (t) {
                        this.close();
                    },
                    s.onColorFieldKeyDown = function (t) {
                        13 == t.keyCode && (this._colorInput.text ? this.selectedColor = this._colorInput.text : this.selectedColor = null, this.close(), t.stopPropagation());
                    },
                    s.onColorInputChange = function (t) {
                        this._colorInput.text ? this.drawBlock(this._colorInput.text) : this.drawBlock("#FFFFFF");
                    },
                    s.onColorTilesClick = function (t) {
                        this.selectedColor = this.getColorByMouse(),
                            this.close();
                    },
                    s.onColorTilesMouseMove = function (t) {
                        this._colorInput.focus = !1;
                        var e = this.getColorByMouse();
                        this._colorInput.text = e,
                            this.drawBlock(e);
                    },
                    s.getColorByMouse = function () {
                        var t = this._colorTiles.getMousePoint(),
                            e = Math.floor(t.x / this._gridSize),
                            i = Math.floor(t.y / this._gridSize);
                        return this._colors[20 * i + e];
                    },
                    s.drawBlock = function (t) {
                        var e = this._colorBlock.graphics;
                        e.clear();
                        var i = t || "#ffffff";
                        e.drawRect(0, 0, 50, 20, i, this._borderColor),
                            t || e.drawLine(0, 0, 50, 20, "#ff0000");
                    },
                    s.changeColor = function () {
                        var t = this.graphics;
                        t.clear();
                        var e = this._selectedColor || "#000000";
                        t.drawRect(0, 0, this._colorButton.width, this._colorButton.height, e);
                    },
                    s._setPanelChanged = function () {
                        this._panelChanged || (this._panelChanged = !0, this.callLater(this.changePanel));
                    },
                    a(0, s, "inputBgColor",
                        function () {
                            return this._inputBgColor;
                        },
                        function (t) {
                            this._inputBgColor = t,
                                this._setPanelChanged();
                        }),
                    a(0, s, "selectedColor",
                        function () {
                            return this._selectedColor;
                        },
                        function (t) {
                            this._selectedColor != t && (this._selectedColor = this._colorInput.text = t, this.drawBlock(t), this.changeColor(), this.changeHandler && this.changeHandler.runWith(this._selectedColor), this.event("change", c.EMPTY.setTo("change", this, this)));
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._colorButton.skin;
                        },
                        function (t) {
                            this._colorButton.skin = t,
                                this.changeColor();
                        }),
                    a(0, s, "bgColor",
                        function () {
                            return this._bgColor;
                        },
                        function (t) {
                            this._bgColor = t,
                                this._setPanelChanged();
                        }),
                    a(0, s, "borderColor",
                        function () {
                            return this._borderColor;
                        },
                        function (t) {
                            this._borderColor = t,
                                this._setPanelChanged();
                        }),
                    a(0, s, "inputColor",
                        function () {
                            return this._inputColor;
                        },
                        function (t) {
                            this._inputColor = t,
                                this._setPanelChanged();
                        }),
                    e;
            }(R),
            O = function (t) {
                function e(t, i) {
                    this._visibleNum = 6,
                        this._button = null,
                        this._list = null,
                        this._isOpen = !1,
                        this._itemSize = 12,
                        this._labels = [],
                        this._selectedIndex = -1,
                        this._selectHandler = null,
                        this._itemHeight = NaN,
                        this._listHeight = NaN,
                        this._listChanged = !1,
                        this._itemChanged = !1,
                        this._scrollBarSkin = null,
                        this._isCustomList = !1,
                        this.itemRender = null,
                        e.__super.call(this),
                        this._itemColors = I.comboBoxItemColors,
                        this.skin = t,
                        this.labels = i;
                }
                n(e, "laya.ui.ComboBox", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._button && this._button.destroy(e),
                        this._list && this._list.destroy(e),
                        this._button = null,
                        this._list = null,
                        this._itemColors = null,
                        this._labels = null,
                        this._selectHandler = null;
                },
                    s.createChildren = function () {
                        this.addChild(this._button = new D()),
                            this._button.text.align = "left",
                            this._button.labelPadding = "0,0,0,5",
                            this._button.on("mousedown", this, this.onButtonMouseDown);
                    },
                    s._createList = function () {
                        this._list = new K(),
                            this._scrollBarSkin && (this._list.vScrollBarSkin = this._scrollBarSkin),
                            this._setListEvent(this._list);
                    },
                    s._setListEvent = function (t) {
                        this._list.selectEnable = !0,
                            this._list.on("mousedown", this, this.onListDown),
                            this._list.mouseHandler = p.create(this, this.onlistItemMouse, null, !1),
                            this._list.scrollBar && this._list.scrollBar.on("mousedown", this, this.onScrollBarDown);
                    },
                    s.onListDown = function (t) {
                        t.stopPropagation();
                    },
                    s.onScrollBarDown = function (t) {
                        t.stopPropagation();
                    },
                    s.onButtonMouseDown = function (t) {
                        this.callLater(this.switchTo, [!this._isOpen]);
                    },
                    s.changeList = function () {
                        this._listChanged = !1;
                        var t = this.width - 2,
                            e = this._itemColors[2];
                        this._itemHeight = this._itemSize + 6,
                            this._list.itemRender = this.itemRender || {
                                type: "Box",
                                child: [{
                                    type: "Label",
                                    props: {
                                        name: "label",
                                        x: 1,
                                        padding: "3,3,3,3",
                                        width: t,
                                        height: this._itemHeight,
                                        fontSize: this._itemSize,
                                        color: e
                                    }
                                }]
                            },
                            this._list.repeatY = this._visibleNum,
                            this._list.refresh();
                    },
                    s.onlistItemMouse = function (t, e) {
                        var i = t.type;
                        if ("mouseover" === i || "mouseout" === i) {
                            if (this._isCustomList) return;
                            var s = this._list.getCell(e);
                            if (!s) return;
                            var n = s.getChildByName("label");
                            n && ("mouseover" === i ? (n.bgColor = this._itemColors[0], n.color = this._itemColors[1]) : (n.bgColor = null, n.color = this._itemColors[2]));
                        } else "click" === i && (this.selectedIndex = e, this.isOpen = !1);
                    },
                    s.switchTo = function (t) {
                        this.isOpen = t;
                    },
                    s.changeOpen = function () {
                        this.isOpen = !this._isOpen;
                    },
                    s.changeItem = function () {
                        if (this._itemChanged = !1, this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight, !this._isCustomList) {
                            var t = this._list.graphics;
                            t.clear(),
                                t.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);
                        }
                        var e = this._list.array || [];
                        e.length = 0;
                        for (var i = 0,
                            s = this._labels.length; i < s; i++) e.push({
                                label: this._labels[i]
                            });
                        this._list.height = this._listHeight,
                            this._list.array = e;
                    },
                    s.changeSelected = function () {
                        this._button.label = this.selectedLabel;
                    },
                    s._onStageMouseWheel = function (t) {
                        this._list && !this._list.contains(t.target) && this.removeList(null);
                    },
                    s.removeList = function (t) {
                        i.stage.off("mousedown", this, this.removeList),
                            i.stage.off("mousewheel", this, this._onStageMouseWheel),
                            this.isOpen = !1;
                    },
                    a(0, s, "selectedIndex",
                        function () {
                            return this._selectedIndex;
                        },
                        function (t) {
                            this._selectedIndex != t && (this._selectedIndex = t, this._labels.length > 0 ? this.changeSelected() : this.callLater(this.changeSelected), this.event("change", [c.EMPTY.setTo("change", this, this)]), this._selectHandler && this._selectHandler.runWith(this._selectedIndex));
                        }),
                    a(0, s, "measureHeight",
                        function () {
                            return this._button.height;
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._button.skin;
                        },
                        function (t) {
                            this._button.skin != t && (this._button.skin = t, this._listChanged = !0);
                        }),
                    a(0, s, "measureWidth",
                        function () {
                            return this._button.width;
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(R, this, "width", t),
                                this._button.width = this._width,
                                this._itemChanged = !0,
                                this._listChanged = !0;
                        }),
                    a(0, s, "selectedLabel",
                        function () {
                            return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : null;
                        },
                        function (t) {
                            this.selectedIndex = this._labels.indexOf(t);
                        }),
                    a(0, s, "labels",
                        function () {
                            return this._labels.join(",");
                        },
                        function (t) {
                            this._labels.length > 0 && (this.selectedIndex = -1),
                                t ? this._labels = t.split(",") : this._labels.length = 0,
                                this._itemChanged = !0;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(R, this, "height", t),
                                this._button.height = this._height;
                        }),
                    a(0, s, "selectHandler",
                        function () {
                            return this._selectHandler;
                        },
                        function (t) {
                            this._selectHandler = t;
                        }),
                    a(0, s, "visibleNum",
                        function () {
                            return this._visibleNum;
                        },
                        function (t) {
                            this._visibleNum = t,
                                this._listChanged = !0;
                        }),
                    a(0, s, "labelBold",
                        function () {
                            return this._button.text.bold;
                        },
                        function (t) {
                            this._button.text.bold = t;
                        }),
                    a(0, s, "itemColors",
                        function () {
                            return String(this._itemColors);
                        },
                        function (t) {
                            this._itemColors = L.fillArray(this._itemColors, t, String),
                                this._listChanged = !0;
                        }),
                    a(0, s, "itemSize",
                        function () {
                            return this._itemSize;
                        },
                        function (t) {
                            this._itemSize = t,
                                this._listChanged = !0;
                        }),
                    a(0, s, "scrollBar",
                        function () {
                            return this.list.scrollBar;
                        }),
                    a(0, s, "isOpen",
                        function () {
                            return this._isOpen;
                        },
                        function (t) {
                            if (this._isOpen != t) if (this._isOpen = t, this._button.selected = this._isOpen, this._isOpen) {
                                this._list || this._createList(),
                                    this._listChanged && !this._isCustomList && this.changeList(),
                                    this._itemChanged && this.changeItem();
                                var e = this.localToGlobal(g.TEMP.setTo(0, 0)),
                                    s = e.y + this._button.height;
                                s = s + this._listHeight <= i.stage.height ? s : e.y - this._listHeight,
                                    this._list.pos(e.x, s),
                                    this._list.zOrder = 1001,
                                    i._currentStage.addChild(this._list),
                                    i.stage.once("mousedown", this, this.removeList),
                                    i.stage.on("mousewheel", this, this._onStageMouseWheel),
                                    this._list.selectedIndex = this._selectedIndex;
                            } else this._list && this._list.removeSelf();
                        }),
                    a(0, s, "scrollBarSkin",
                        function () {
                            return this._scrollBarSkin;
                        },
                        function (t) {
                            this._scrollBarSkin = t;
                        }),
                    a(0, s, "sizeGrid",
                        function () {
                            return this._button.sizeGrid;
                        },
                        function (t) {
                            this._button.sizeGrid = t;
                        }),
                    a(0, s, "button",
                        function () {
                            return this._button;
                        }),
                    a(0, s, "list",
                        function () {
                            return this._list || this._createList(),
                                this._list;
                        },
                        function (t) {
                            t && (t.removeSelf(), this._isCustomList = !0, this._list = t, this._setListEvent(t), this._itemHeight = t.getCell(0).height + t.spaceY);
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : i.superSet(R, this, "dataSource", t);
                        }),
                    a(0, s, "labelColors",
                        function () {
                            return this._button.labelColors;
                        },
                        function (t) {
                            this._button.labelColors != t && (this._button.labelColors = t);
                        }),
                    a(0, s, "labelPadding",
                        function () {
                            return this._button.text.padding.join(",");
                        },
                        function (t) {
                            this._button.text.padding = L.fillArray(I.labelPadding, t, Number);
                        }),
                    a(0, s, "labelSize",
                        function () {
                            return this._button.text.fontSize;
                        },
                        function (t) {
                            this._button.text.fontSize = t;
                        }),
                    a(0, s, "labelFont",
                        function () {
                            return this._button.text.font;
                        },
                        function (t) {
                            this._button.text.font = t;
                        }),
                    a(0, s, "stateNum",
                        function () {
                            return this._button.stateNum;
                        },
                        function (t) {
                            this._button.stateNum = t;
                        }),
                    e;
            }(R),
            G = function (t) {
                function e(t) {
                    this.rollRatio = .95,
                        this.changeHandler = null,
                        this.scaleBar = !0,
                        this.autoHide = !1,
                        this.elasticDistance = 0,
                        this.elasticBackTime = 500,
                        this.upButton = null,
                        this.downButton = null,
                        this.slider = null,
                        this._scrollSize = 1,
                        this._skin = null,
                        this._thumbPercent = 1,
                        this._target = null,
                        this._lastPoint = null,
                        this._lastOffset = 0,
                        this._checkElastic = !1,
                        this._isElastic = !1,
                        this._value = NaN,
                        this._hide = !1,
                        this._clickOnly = !0,
                        this._offsets = null,
                        e.__super.call(this),
                        this._showButtons = E.showButtons,
                        this._touchScrollEnable = E.touchScrollEnable,
                        this._mouseWheelEnable = E.mouseWheelEnable,
                        this.skin = t,
                        this.max = 1;
                }
                n(e, "laya.ui.ScrollBar", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        this.stopScroll(),
                        this.target = null,
                        t.prototype.destroy.call(this, e),
                        this.upButton && this.upButton.destroy(e),
                        this.downButton && this.downButton.destroy(e),
                        this.slider && this.slider.destroy(e),
                        this.upButton = this.downButton = null,
                        this.slider = null,
                        this.changeHandler = null,
                        this._offsets = null;
                },
                    s.createChildren = function () {
                        this.addChild(this.slider = new F()),
                            this.addChild(this.upButton = new D()),
                            this.addChild(this.downButton = new D());
                    },
                    s.initialize = function () {
                        this.slider.showLabel = !1,
                            this.slider.on("change", this, this.onSliderChange),
                            this.slider.setSlider(0, 0, 0),
                            this.upButton.on("mousedown", this, this.onButtonMouseDown),
                            this.downButton.on("mousedown", this, this.onButtonMouseDown);
                    },
                    s.onSliderChange = function () {
                        this._value != this.slider.value && (this.value = this.slider.value);
                    },
                    s.onButtonMouseDown = function (t) {
                        var e = t.currentTarget === this.upButton;
                        this.slide(e),
                            i.timer.once(I.scrollBarDelayTime, this, this.startLoop, [e]),
                            i.stage.once("mouseup", this, this.onStageMouseUp);
                    },
                    s.startLoop = function (t) {
                        i.timer.frameLoop(1, this, this.slide, [t]);
                    },
                    s.slide = function (t) {
                        t ? this.value -= this._scrollSize : this.value += this._scrollSize;
                    },
                    s.onStageMouseUp = function (t) {
                        i.timer.clear(this, this.startLoop),
                            i.timer.clear(this, this.slide);
                    },
                    s.changeScrollBar = function () {
                        this.upButton.visible = this._showButtons,
                            this.downButton.visible = this._showButtons,
                            this._showButtons && (this.upButton.skin = this._skin.replace(".png", "$up.png"), this.downButton.skin = this._skin.replace(".png", "$down.png")),
                            this.slider.isVertical ? this.slider.y = this._showButtons ? this.upButton.height : 0 : this.slider.x = this._showButtons ? this.upButton.width : 0,
                            this.resetPositions(),
                            this.repaint();
                    },
                    s.changeSize = function () {
                        t.prototype.changeSize.call(this),
                            this.repaint(),
                            this.resetPositions(),
                            this.event("change"),
                            this.changeHandler && this.changeHandler.runWith(this.value);
                    },
                    s.resetPositions = function () {
                        this.slider.isVertical ? this.slider.height = this.height - (this._showButtons ? this.upButton.height + this.downButton.height : 0) : this.slider.width = this.width - (this._showButtons ? this.upButton.width + this.downButton.width : 0),
                            this.resetButtonPosition();
                    },
                    s.resetButtonPosition = function () {
                        this.slider.isVertical ? this.downButton.y = this.slider.y + this.slider.height : this.downButton.x = this.slider.x + this.slider.width;
                    },
                    s.setScroll = function (t, e, i) {
                        this.runCallLater(this.changeSize),
                            this.slider.setSlider(t, e, i),
                            this.slider.bar.visible = e > 0,
                            !this._hide && this.autoHide && (this.visible = !1);
                    },
                    s.onTargetMouseWheel = function (t) {
                        this.value -= t.delta * this._scrollSize,
                            this.target = this._target;
                    },
                    s.onTargetMouseDown = function (t) {
                        this._clickOnly = !0,
                            this._lastOffset = 0,
                            this._checkElastic = !1,
                            this._lastPoint || (this._lastPoint = new g()),
                            this._lastPoint.setTo(i.stage.mouseX, i.stage.mouseY),
                            i.timer.clear(this, this.tweenMove),
                            M.clearTween(this),
                            i.stage.once("mouseup", this, this.onStageMouseUp2),
                            i.stage.once("mouseout", this, this.onStageMouseUp2),
                            i.timer.frameLoop(1, this, this.loop);
                    },
                    s.loop = function () {
                        var t = i.stage.mouseY,
                            e = i.stage.mouseX;
                        if (this._lastOffset = this.isVertical ? t - this._lastPoint.y : e - this._lastPoint.x, this._clickOnly) {
                            if (!(Math.abs(this._lastOffset * (this.isVertical ? i.stage._canvasTransform.getScaleY() : i.stage._canvasTransform.getScaleX())) > 1)) return;
                            this._clickOnly = !1,
                                this._offsets || (this._offsets = []),
                                this._offsets.length = 0,
                                this._target.mouseEnabled = !1,
                                !this.hide && this.autoHide && (this.alpha = 1, this.visible = !0),
                                this.event("start");
                        }
                        this._offsets.push(this._lastOffset),
                            this._lastPoint.x = e,
                            this._lastPoint.y = t,
                            0 !== this._lastOffset && (this._checkElastic || (this.elasticDistance > 0 ? this._checkElastic || 0 == this._lastOffset || (this._lastOffset > 0 && this._value <= this.min || this._lastOffset < 0 && this._value >= this.max ? (this._isElastic = !0, this._checkElastic = !0) : this._isElastic = !1) : this._checkElastic = !0), this._isElastic ? this._value <= this.min ? this.value -= this._lastOffset * Math.max(0, 1 - (this.min - this._value) / this.elasticDistance) : this._value >= this.max && (this.value -= this._lastOffset * Math.max(0, 1 - (this._value - this.max) / this.elasticDistance)) : this.value -= this._lastOffset);
                    },
                    s.onStageMouseUp2 = function (t) {
                        if (i.stage.off("mouseup", this, this.onStageMouseUp2), i.stage.off("mouseout", this, this.onStageMouseUp2), i.timer.clear(this, this.loop), !(this._clickOnly && this._value >= this.min && this._value <= this.max)) if (this._target.mouseEnabled = !0, this._isElastic) this._value < this.min ? M.to(this, {
                            value: this.min
                        },
                            this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver)) : this._value > this.max && M.to(this, {
                                value: this.max
                            },
                                this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver));
                        else {
                            if (!this._offsets) return;
                            this._offsets.length < 1 && (this._offsets[0] = this.isVertical ? i.stage.mouseY - this._lastPoint.y : i.stage.mouseX - this._lastPoint.x);
                            for (var e = 0,
                                s = Math.min(this._offsets.length, 3), n = 0; n < s; n++) e += this._offsets[this._offsets.length - 1 - n];
                            if (this._lastOffset = e / s, (e = Math.abs(this._lastOffset)) < 2) return void this.event("end");
                            e > 60 && (this._lastOffset = this._lastOffset > 0 ? 60 : -60);
                            var a = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 240)));
                            i.timer.frameLoop(1, this, this.tweenMove, [a]);
                        }
                    },
                    s.elasticOver = function () {
                        this._isElastic = !1,
                            !this.hide && this.autoHide && M.to(this, {
                                alpha: 0
                            },
                                500),
                            this.event("end");
                    },
                    s.tweenMove = function (t) {
                        this._lastOffset *= this.rollRatio;
                        var e = NaN;
                        if (t > 0 && (this._lastOffset > 0 && this.value <= this.min ? (this._isElastic = !0, e = .5 * -(this.min - t - this.value), this._lastOffset > e && (this._lastOffset = e)) : this._lastOffset < 0 && this.value >= this.max && (this._isElastic = !0, e = .5 * -(this.max + t - this.value), this._lastOffset < e && (this._lastOffset = e))), this.value -= this._lastOffset, Math.abs(this._lastOffset) < 1) {
                            if (i.timer.clear(this, this.tweenMove), this._isElastic) return void (this._value < this.min ? M.to(this, {
                                value: this.min
                            },
                                this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver)) : this._value > this.max ? M.to(this, {
                                    value: this.max
                                },
                                    this.elasticBackTime, l.sineOut, p.create(this, this.elasticOver)) : this.elasticOver());
                            this.event("end"),
                                !this.hide && this.autoHide && M.to(this, {
                                    alpha: 0
                                },
                                    500);
                        }
                    },
                    s.stopScroll = function () {
                        this.onStageMouseUp2(null),
                            i.timer.clear(this, this.tweenMove),
                            M.clearTween(this);
                    },
                    a(0, s, "measureHeight",
                        function () {
                            return this.slider.isVertical ? 100 : this.slider.height;
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            this._skin != t && (this._skin = t, this.slider.skin = this._skin, this.callLater(this.changeScrollBar));
                        }),
                    a(0, s, "max",
                        function () {
                            return this.slider.max;
                        },
                        function (t) {
                            this.slider.max = t;
                        }),
                    a(0, s, "showButtons",
                        function () {
                            return this._showButtons;
                        },
                        function (t) {
                            this._showButtons = t,
                                this.callLater(this.changeScrollBar);
                        }),
                    a(0, s, "measureWidth",
                        function () {
                            return this.slider.isVertical ? this.slider.width : 100;
                        }),
                    a(0, s, "min",
                        function () {
                            return this.slider.min;
                        },
                        function (t) {
                            this.slider.min = t;
                        }),
                    a(0, s, "value",
                        function () {
                            return this._value;
                        },
                        function (t) {
                            t !== this._value && (this._value = t, this._isElastic || (this.slider._value != t && (this.slider._value = t, this.slider.changeValue()), this._value = this.slider._value), this.event("change"), this.changeHandler && this.changeHandler.runWith(this._value));
                        }),
                    a(0, s, "isVertical",
                        function () {
                            return this.slider.isVertical;
                        },
                        function (t) {
                            this.slider.isVertical = t;
                        }),
                    a(0, s, "sizeGrid",
                        function () {
                            return this.slider.sizeGrid;
                        },
                        function (t) {
                            this.slider.sizeGrid = t;
                        }),
                    a(0, s, "scrollSize",
                        function () {
                            return this._scrollSize;
                        },
                        function (t) {
                            this._scrollSize = t;
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t || "string" == typeof t ? this.value = Number(t) : i.superSet(R, this, "dataSource", t);
                        }),
                    a(0, s, "thumbPercent",
                        function () {
                            return this._thumbPercent;
                        },
                        function (t) {
                            this.runCallLater(this.changeScrollBar),
                                this.runCallLater(this.changeSize),
                                t = t >= 1 ? .99 : t,
                                this._thumbPercent = t,
                                this.scaleBar && (this.slider.isVertical ? this.slider.bar.height = Math.max(this.slider.height * t, I.scrollBarMinNum) : this.slider.bar.width = Math.max(this.slider.width * t, I.scrollBarMinNum));
                        }),
                    a(0, s, "target",
                        function () {
                            return this._target;
                        },
                        function (t) {
                            this._target && (this._target.off("mousewheel", this, this.onTargetMouseWheel), this._target.off("mousedown", this, this.onTargetMouseDown)),
                                this._target = t,
                                t && (this._mouseWheelEnable && this._target.on("mousewheel", this, this.onTargetMouseWheel), this._touchScrollEnable && this._target.on("mousedown", this, this.onTargetMouseDown));
                        }),
                    a(0, s, "hide",
                        function () {
                            return this._hide;
                        },
                        function (t) {
                            this._hide = t,
                                this.visible = !t;
                        }),
                    a(0, s, "touchScrollEnable",
                        function () {
                            return this._touchScrollEnable;
                        },
                        function (t) {
                            this._touchScrollEnable = t,
                                this.target = this._target;
                        }),
                    a(0, s, "mouseWheelEnable",
                        function () {
                            return this._mouseWheelEnable;
                        },
                        function (t) {
                            this._mouseWheelEnable = t;
                        }),
                    a(0, s, "tick",
                        function () {
                            return this.slider.tick;
                        },
                        function (t) {
                            this.slider.tick = t;
                        }),
                    e;
            }(R),
            F = function (t) {
                function e(t) {
                    this.changeHandler = null,
                        this.isVertical = !0,
                        this.showLabel = !0,
                        this._allowClickBack = !1,
                        this._max = 100,
                        this._min = 0,
                        this._tick = 1,
                        this._value = 0,
                        this._skin = null,
                        this._bg = null,
                        this._progress = null,
                        this._bar = null,
                        this._tx = NaN,
                        this._ty = NaN,
                        this._maxMove = NaN,
                        this._globalSacle = null,
                        e.__super.call(this),
                        this.skin = t;
                }
                n(e, "laya.ui.Slider", t);
                var r = e.prototype;
                return r.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._bg && this._bg.destroy(e),
                        this._bar && this._bar.destroy(e),
                        this._progress && this._progress.destroy(e),
                        this._bg = null,
                        this._bar = null,
                        this._progress = null,
                        this.changeHandler = null;
                },
                    r.createChildren = function () {
                        this.addChild(this._bg = new U()),
                            this.addChild(this._bar = new D());
                    },
                    r.initialize = function () {
                        this._bar.on("mousedown", this, this.onBarMouseDown),
                            this._bg.sizeGrid = this._bar.sizeGrid = "4,4,4,4,0",
                            this._progress && (this._progress.sizeGrid = this._bar.sizeGrid),
                            this.allowClickBack = !0;
                    },
                    r.onBarMouseDown = function (t) {
                        this._globalSacle || (this._globalSacle = new g()),
                            this._globalSacle.setTo(this.globalScaleX || .01, this.globalScaleY || .01),
                            this._maxMove = this.isVertical ? this.height - this._bar.height : this.width - this._bar.width,
                            this._tx = i.stage.mouseX,
                            this._ty = i.stage.mouseY,
                            i.stage.on("mousemove", this, this.mouseMove),
                            i.stage.once("mouseup", this, this.mouseUp),
                            i.stage.once("mouseout", this, this.mouseUp),
                            this.showValueText();
                    },
                    r.showValueText = function () {
                        if (this.showLabel) {
                            var t = laya.ui.Slider.label;
                            this.addChild(t),
                                t.textField.changeText(this._value + ""),
                                this.isVertical ? (t.x = this._bar.x + 20, t.y = .5 * (this._bar.height - t.height) + this._bar.y) : (t.y = this._bar.y - 20, t.x = .5 * (this._bar.width - t.width) + this._bar.x);
                        }
                    },
                    r.hideValueText = function () {
                        laya.ui.Slider.label && laya.ui.Slider.label.removeSelf();
                    },
                    r.mouseUp = function (t) {
                        i.stage.off("mousemove", this, this.mouseMove),
                            i.stage.off("mouseup", this, this.mouseUp),
                            i.stage.off("mouseout", this, this.mouseUp),
                            this.sendChangeEvent("changed"),
                            this.hideValueText();
                    },
                    r.mouseMove = function (t) {
                        var e = this._value;
                        this.isVertical ? (this._bar.y += (i.stage.mouseY - this._ty) / this._globalSacle.y, this._bar.y > this._maxMove ? this._bar.y = this._maxMove : this._bar.y < 0 && (this._bar.y = 0), this._value = this._bar.y / this._maxMove * (this._max - this._min) + this._min, this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x += (i.stage.mouseX - this._tx) / this._globalSacle.x, this._bar.x > this._maxMove ? this._bar.x = this._maxMove : this._bar.x < 0 && (this._bar.x = 0), this._value = this._bar.x / this._maxMove * (this._max - this._min) + this._min, this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width)),
                            this._tx = i.stage.mouseX,
                            this._ty = i.stage.mouseY;
                        var s = Math.pow(10, (this._tick + "").length - 1);
                        this._value = Math.round(Math.round(this._value / this._tick) * this._tick * s) / s,
                            this._value != e && this.sendChangeEvent(),
                            this.showValueText();
                    },
                    r.sendChangeEvent = function (t) {
                        void 0 === t && (t = "change"),
                            this.event(t),
                            this.changeHandler && this.changeHandler.runWith(this._value);
                    },
                    r.setBarPoint = function () {
                        this.isVertical ? this._bar.x = Math.round(.5 * (this._bg.width - this._bar.width)) : this._bar.y = Math.round(.5 * (this._bg.height - this._bar.height));
                    },
                    r.changeSize = function () {
                        t.prototype.changeSize.call(this),
                            this.isVertical ? this._bg.height = this.height : this._bg.width = this.width,
                            this.setBarPoint(),
                            this.changeValue();
                    },
                    r.setSlider = function (t, e, i) {
                        this._value = -1,
                            this._min = t,
                            this._max = e > t ? e : t,
                            this.value = i < t ? t : i > e ? e : i;
                    },
                    r.changeValue = function () {
                        var t = Math.pow(10, (this._tick + "").length - 1);
                        this._value = Math.round(Math.round(this._value / this._tick) * this._tick * t) / t,
                            this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;
                        var e = this._max - this._min;
                        0 === e && (e = 1),
                            this.isVertical ? (this._bar.y = (this._value - this._min) / e * (this.height - this._bar.height), this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x = (this._value - this._min) / e * (this.width - this._bar.width), this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width));
                    },
                    r.onBgMouseDown = function (t) {
                        var e = this._bg.getMousePoint();
                        this.isVertical ? this.value = e.y / (this.height - this._bar.height) * (this._max - this._min) + this._min : this.value = e.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;
                    },
                    a(0, r, "measureHeight",
                        function () {
                            return Math.max(this._bg.height, this._bar.height);
                        }),
                    a(0, r, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            if (this._skin != t) {
                                this._skin = t,
                                    this._bg.skin = this._skin,
                                    this._bar.skin = this._skin.replace(".png", "$bar.png");
                                var e = this._skin.replace(".png", "$progress.png");
                                m.getRes(e) && (this._progress || (this.addChild(this._progress = new U()), this._progress.sizeGrid = this._bar.sizeGrid, this.setChildIndex(this._progress, 1)), this._progress.skin = e),
                                    this.setBarPoint(),
                                    this.callLater(this.changeValue);
                            }
                        }),
                    a(0, r, "allowClickBack",
                        function () {
                            return this._allowClickBack;
                        },
                        function (t) {
                            this._allowClickBack != t && (this._allowClickBack = t, t ? this._bg.on("mousedown", this, this.onBgMouseDown) : this._bg.off("mousedown", this, this.onBgMouseDown));
                        }),
                    a(0, r, "max",
                        function () {
                            return this._max;
                        },
                        function (t) {
                            this._max != t && (this._max = t, this.callLater(this.changeValue));
                        }),
                    a(0, r, "measureWidth",
                        function () {
                            return Math.max(this._bg.width, this._bar.width);
                        }),
                    a(0, r, "tick",
                        function () {
                            return this._tick;
                        },
                        function (t) {
                            this._tick != t && (this._tick = t, this.callLater(this.changeValue));
                        }),
                    a(0, r, "sizeGrid",
                        function () {
                            return this._bg.sizeGrid;
                        },
                        function (t) {
                            this._bg.sizeGrid = t,
                                this._bar.sizeGrid = t,
                                this._progress && (this._progress.sizeGrid = this._bar.sizeGrid);
                        }),
                    a(0, r, "min",
                        function () {
                            return this._min;
                        },
                        function (t) {
                            this._min != t && (this._min = t, this.callLater(this.changeValue));
                        }),
                    a(0, r, "value",
                        function () {
                            return this._value;
                        },
                        function (t) {
                            if (this._value != t) {
                                var e = this._value;
                                this._value = t,
                                    this.changeValue(),
                                    this._value != e && this.sendChangeEvent();
                            }
                        }),
                    a(0, r, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t || "string" == typeof t ? this.value = Number(t) : i.superSet(R, this, "dataSource", t);
                        }),
                    a(0, r, "bar",
                        function () {
                            return this._bar;
                        }),
                    s(e, ["label",
                        function () {
                            return this.label = new W();
                        }]),
                    e;
            }(R),
            U = function (t) {
                function e(t) {
                    this._bitmap = null,
                        this._skin = null,
                        this._group = null,
                        e.__super.call(this),
                        this.skin = t;
                }
                n(e, "laya.ui.Image", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, !0),
                        this._bitmap && this._bitmap.destroy(),
                        this._bitmap = null;
                },
                    s.dispose = function () {
                        this.destroy(!0),
                            i.loader.clearRes(this._skin);
                    },
                    s.createChildren = function () {
                        this.graphics = this._bitmap = new A(),
                            this._bitmap.autoCacheCmd = !1;
                    },
                    s.setSource = function (t, e) {
                        t === this._skin && e && (this.source = e, this.onCompResize());
                    },
                    a(0, s, "source",
                        function () {
                            return this._bitmap.source;
                        },
                        function (t) {
                            this._bitmap && (this._bitmap.source = t, this.event("loaded"), this.repaint());
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "string" == typeof t ? this.skin = t : i.superSet(R, this, "dataSource", t);
                        }),
                    a(0, s, "measureHeight",
                        function () {
                            return this._bitmap.height;
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            if (this._skin != t) if (this._skin = t, t) {
                                var e = m.getRes(t);
                                e ? (this.source = e, this.onCompResize()) : i.loader.load(this._skin, p.create(this, this.setSource, [this._skin]), null, "image", 1, !0, this._group);
                            } else this.source = null;
                        }),
                    a(0, s, "group",
                        function () {
                            return this._group;
                        },
                        function (t) {
                            t && this._skin && m.setGroup(this._skin, t),
                                this._group = t;
                        }),
                    a(0, s, "sizeGrid",
                        function () {
                            return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
                        },
                        function (t) {
                            this._bitmap.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number);
                        }),
                    a(0, s, "measureWidth",
                        function () {
                            return this._bitmap.width;
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(R, this, "width", t),
                                this._bitmap.width = 0 == t ? 1e-7 : t;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(R, this, "height", t),
                                this._bitmap.height = 0 == t ? 1e-7 : t;
                        }),
                    e;
            }(R),
            W = function (t) {
                function e(t) {
                    this._tf = null,
                        e.__super.call(this),
                        void 0 === t && (t = ""),
                        u.defaultColor = I.labelColor,
                        this.text = t;
                }
                n(e, "laya.ui.Label", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._tf = null;
                },
                    s.createChildren = function () {
                        this.addChild(this._tf = new x());
                    },
                    s.changeText = function (t) {
                        this._tf.changeText(t);
                    },
                    a(0, s, "padding",
                        function () {
                            return this._tf.padding.join(",");
                        },
                        function (t) {
                            this._tf.padding = L.fillArray(I.labelPadding, t, Number);
                        }),
                    a(0, s, "bold",
                        function () {
                            return this._tf.bold;
                        },
                        function (t) {
                            this._tf.bold = t;
                        }),
                    a(0, s, "align",
                        function () {
                            return this._tf.align;
                        },
                        function (t) {
                            this._tf.align = t;
                        }),
                    a(0, s, "text",
                        function () {
                            return this._tf.text;
                        },
                        function (t) {
                            this._tf.text != t && (t && (t = L.adptString(t + "")), this._tf.text = t, this.event("change"), this._width && this._height || this.onCompResize());
                        }),
                    a(0, s, "italic",
                        function () {
                            return this._tf.italic;
                        },
                        function (t) {
                            this._tf.italic = t;
                        }),
                    a(0, s, "wordWrap",
                        function () {
                            return this._tf.wordWrap;
                        },
                        function (t) {
                            this._tf.wordWrap = t;
                        }),
                    a(0, s, "font",
                        function () {
                            return this._tf.font;
                        },
                        function (t) {
                            this._tf.font = t;
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t || "string" == typeof t ? this.text = t + "" : i.superSet(R, this, "dataSource", t);
                        }),
                    a(0, s, "color",
                        function () {
                            return this._tf.color;
                        },
                        function (t) {
                            this._tf.color = t;
                        }),
                    a(0, s, "valign",
                        function () {
                            return this._tf.valign;
                        },
                        function (t) {
                            this._tf.valign = t;
                        }),
                    a(0, s, "leading",
                        function () {
                            return this._tf.leading;
                        },
                        function (t) {
                            this._tf.leading = t;
                        }),
                    a(0, s, "fontSize",
                        function () {
                            return this._tf.fontSize;
                        },
                        function (t) {
                            this._tf.fontSize = t;
                        }),
                    a(0, s, "bgColor",
                        function () {
                            return this._tf.bgColor;
                        },
                        function (t) {
                            this._tf.bgColor = t;
                        }),
                    a(0, s, "borderColor",
                        function () {
                            return this._tf.borderColor;
                        },
                        function (t) {
                            this._tf.borderColor = t;
                        }),
                    a(0, s, "stroke",
                        function () {
                            return this._tf.stroke;
                        },
                        function (t) {
                            this._tf.stroke = t;
                        }),
                    a(0, s, "strokeColor",
                        function () {
                            return this._tf.strokeColor;
                        },
                        function (t) {
                            this._tf.strokeColor = t;
                        }),
                    a(0, s, "textField",
                        function () {
                            return this._tf;
                        }),
                    a(0, s, "measureWidth",
                        function () {
                            return this._tf.width;
                        }),
                    a(0, s, "measureHeight",
                        function () {
                            return this._tf.height;
                        }),
                    a(0, s, "width",
                        function () {
                            return this._width || this._tf.text ? i.superGet(R, this, "width") : 0;
                        },
                        function (t) {
                            i.superSet(R, this, "width", t),
                                this._tf.width = t;
                        }),
                    a(0, s, "height",
                        function () {
                            return this._height || this._tf.text ? i.superGet(R, this, "height") : 0;
                        },
                        function (t) {
                            i.superSet(R, this, "height", t),
                                this._tf.height = t;
                        }),
                    a(0, s, "overflow",
                        function () {
                            return this._tf.overflow;
                        },
                        function (t) {
                            this._tf.overflow = t;
                        }),
                    a(0, s, "underline",
                        function () {
                            return this._tf.underline;
                        },
                        function (t) {
                            this._tf.underline = t;
                        }),
                    a(0, s, "underlineColor",
                        function () {
                            return this._tf.underlineColor;
                        },
                        function (t) {
                            this._tf.underlineColor = t;
                        }),
                    e;
            }(R),
            X = function (t) {
                function e(t) {
                    this.changeHandler = null,
                        this._bg = null,
                        this._bar = null,
                        this._skin = null,
                        this._value = .5,
                        e.__super.call(this),
                        this.skin = t;
                }
                n(e, "laya.ui.ProgressBar", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._bg && this._bg.destroy(e),
                        this._bar && this._bar.destroy(e),
                        this._bg = this._bar = null,
                        this.changeHandler = null;
                },
                    s.createChildren = function () {
                        this.addChild(this._bg = new U()),
                            this.addChild(this._bar = new U()),
                            this._bar._bitmap.autoCacheCmd = !1;
                    },
                    s.changeValue = function () {
                        if (this.sizeGrid) {
                            var t = this.sizeGrid.split(","),
                                e = Number(t[3]),
                                i = Number(t[1]),
                                s = (this.width - e - i) * this._value;
                            this._bar.width = e + i + s,
                                this._bar.visible = this._bar.width > e + i;
                        } else this._bar.width = this.width * this._value;
                    },
                    a(0, s, "measureHeight",
                        function () {
                            return this._bg.height;
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            this._skin != t && (this._skin = t, this._bg.skin = this._skin, this._bar.skin = this._skin.replace(".png", "$bar.png"), this.callLater(this.changeValue));
                        }),
                    a(0, s, "measureWidth",
                        function () {
                            return this._bg.width;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(R, this, "height", t),
                                this._bg.height = this._height,
                                this._bar.height = this._height;
                        }),
                    a(0, s, "bar",
                        function () {
                            return this._bar;
                        }),
                    a(0, s, "value",
                        function () {
                            return this._value;
                        },
                        function (t) {
                            this._value != t && (t = t > 1 ? 1 : t < 0 ? 0 : t, this._value = t, this.callLater(this.changeValue), this.event("change"), this.changeHandler && this.changeHandler.runWith(t));
                        }),
                    a(0, s, "bg",
                        function () {
                            return this._bg;
                        }),
                    a(0, s, "sizeGrid",
                        function () {
                            return this._bg.sizeGrid;
                        },
                        function (t) {
                            this._bg.sizeGrid = this._bar.sizeGrid = t;
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(R, this, "width", t),
                                this._bg.width = this._width,
                                this.callLater(this.changeValue);
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t || "string" == typeof t ? this.value = Number(t) : i.superSet(R, this, "dataSource", t);
                        }),
                    e;
            }(R),
            z = (function (t) {
                function e() {
                    this._tipBox = null,
                        this._tipText = null,
                        this._defaultTipHandler = null,
                        e.__super.call(this),
                        this._tipBox = new R(),
                        this._tipBox.addChild(this._tipText = new x()),
                        this._tipText.x = this._tipText.y = 5,
                        this._tipText.color = e.tipTextColor,
                        this._defaultTipHandler = this._showDefaultTip,
                        i.stage.on("showtip", this, this._onStageShowTip),
                        i.stage.on("hidetip", this, this._onStageHideTip),
                        this.zOrder = 1100;
                }
                n(e, "laya.ui.TipManager", R);
                var s = e.prototype;
                s._onStageHideTip = function (t) {
                    i.timer.clear(this, this._showTip),
                        this.closeAll(),
                        this.removeSelf();
                },
                    s._onStageShowTip = function (t) {
                        i.timer.once(e.tipDelay, this, this._showTip, [t], !0);
                    },
                    s._showTip = function (t) {
                        if ("string" == typeof t) {
                            var e = String(t);
                            Boolean(e) && this._defaultTipHandler(e);
                        } else t instanceof laya.utils.Handler ? t.run() : "function" == typeof t && t.apply();
                        i.stage.on("mousemove", this, this._onStageMouseMove),
                            i.stage.on("mousedown", this, this._onStageMouseDown),
                            this._onStageMouseMove(null);
                    },
                    s._onStageMouseDown = function (t) {
                        this.closeAll();
                    },
                    s._onStageMouseMove = function (t) {
                        this._showToStage(this, e.offsetX, e.offsetY);
                    },
                    s._showToStage = function (t, e, s) {
                        void 0 === e && (e = 0),
                            void 0 === s && (s = 0);
                        var n = t.getBounds();
                        t.x = i.stage.mouseX + e,
                            t.y = i.stage.mouseY + s,
                            t.x + n.width > i.stage.width && (t.x -= n.width + e),
                            t.y + n.height > i.stage.height && (t.y -= n.height + s);
                    },
                    s.closeAll = function () {
                        i.timer.clear(this, this._showTip),
                            i.stage.off("mousemove", this, this._onStageMouseMove),
                            i.stage.off("mousedown", this, this._onStageMouseDown),
                            this.removeChildren();
                    },
                    s.showDislayTip = function (t) {
                        this.addChild(t),
                            this._showToStage(this),
                            i._currentStage.addChild(this);
                    },
                    s._showDefaultTip = function (t) {
                        this._tipText.text = t;
                        var s = this._tipBox.graphics;
                        s.clear(),
                            s.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, e.tipBackColor),
                            this.addChild(this._tipBox),
                            this._showToStage(this),
                            i._currentStage.addChild(this);
                    },
                    a(0, s, "defaultTipHandler",
                        function () {
                            return this._defaultTipHandler;
                        },
                        function (t) {
                            this._defaultTipHandler = t;
                        }),
                    e.offsetX = 10,
                    e.offsetY = 15,
                    e.tipTextColor = "#ffffff",
                    e.tipBackColor = "#111111",
                    e.tipDelay = 200;
            }(),
                function (t) {
                    function e() {
                        this._idMap = null,
                            this._aniList = null,
                            this._watchMap = {},
                            e.__super.call(this);
                    }
                    var a;
                    n(e, "laya.ui.View", k);
                    var h = e.prototype;
                    return h.createView = function (t) {
                        if (t.animations && !this._idMap && (this._idMap = {}), e.createComp(t, this, this), t.animations) {
                            var i, s, n = [],
                                a = t.animations,
                                r = 0,
                                o = a.length;
                            for (r = 0; r < o; r++) {
                                switch (i = new d(), s = a[r], i._setUp(this._idMap, s), this[s.name] = i, i._setControlNode(this), s.action) {
                                    case 1:
                                        i.play(0, !1);
                                        break;

                                    case 2:
                                        i.play(0, !0);
                                }
                                n.push(i);
                            }
                            this._aniList = n;
                        }
                        this._width > 0 && null == t.props.hitTestPrior && !this.mouseThrough && (this.hitTestPrior = !0);
                    },
                        h.onEvent = function (t, e) { },
                        h.loadUI = function (t) {
                            var i = e.uiMap[t];
                            i && this.createView(i);
                        },
                        h.destroy = function (t) {
                            void 0 === t && (t = !0),
                                this._aniList && (this._aniList.length = 0),
                                this._idMap = null,
                                this._aniList = null,
                                this._watchMap = null,
                                laya.ui.Component.prototype.destroy.call(this, t);
                        },
                        h.changeData = function (t) {
                            var e = this._watchMap[t];
                            if (e) {
                                console.log("change", t);
                                for (var i = 0,
                                    s = e.length; i < s; i++) {
                                    e[i].exe(this);
                                }
                            }
                        },
                        e._regs = function () {
                            for (var t in e.uiClassMap) o.regClass(t, e.uiClassMap[t]);
                        },
                        e.createComp = function (t, s, n, a) {
                            if (!(s = s || e.getCompInstance(t))) return console.warn("can not create:" + t.type),
                                null;
                            var r = t.child;
                            if (r) for (var h = s instanceof laya.ui.List,
                                l = 0,
                                c = r.length; l < c; l++) {
                                var u = r[l];
                                if (!s.hasOwnProperty("itemRender") || "render" != u.props.name && "render" !== u.props.renderType) if ("Graphic" == u.type) o.addGraphicsToSprite(u, s);
                                else if (o.isDrawType(u.type)) o.addGraphicToSprite(u, s, !0);
                                else {
                                    if (h) {
                                        var d = [],
                                            _ = e.createComp(u, null, n, d);
                                        d.length && (_._$bindData = d);
                                    } else _ = e.createComp(u, null, n, a);
                                    "Script" == u.type ? "owner" in _ ? _.owner = s : "target" in _ && (_.target = s) : "mask" == u.props.renderType || "mask" == u.props.name ? s.mask = _ : _ instanceof laya.display.Sprite && s.addChild(_);
                                } else s.itemRender = u;
                            }
                            var p = t.props;
                            for (var f in p) {
                                var m = p[f];
                                e.eventDic[f] ? m && n && s.on(f, n, n.onEvent, [m]) : e.setCompValue(s, f, m, n, a);
                            }
                            return i.__typeof(s, "laya.ui.IItem") && s.initItems(),
                                t.compId && n && n._idMap && (n._idMap[t.compId] = s),
                                s;
                        },
                        e.setCompValue = function (t, s, n, r, h) {
                            if ("string" == typeof n && n.indexOf("${") > -1) {
                                if (e._sheet || (e._sheet = o.getClass("laya.data.Table")), !e._sheet) return void console.warn("Can not find class Sheet");
                                if (h) h.push(t, s, n);
                                else if (r) {
                                    - 1 == n.indexOf("].") && (n = n.replace(".", "[0]."));
                                    var l = new a(t, s, n);
                                    l.exe(r);
                                    for (var c, u, d = n.replace(/\[.*?\]\./g, "."); null != (c = e._parseWatchData.exec(d));) {
                                        for (var _ = c[1]; null != (u = e._parseKeyWord.exec(_));) {
                                            var p = u[0],
                                                f = r._watchMap[p] || (r._watchMap[p] = []);
                                            f.push(l),
                                                e._sheet.I.notifer.on(p, r, r.changeData, [p]);
                                        } (f = r._watchMap[_] || (r._watchMap[_] = [])).push(l),
                                            e._sheet.I.notifer.on(_, r, r.changeData, [_]);
                                    }
                                }
                            } else if ("var" === s && r) r[n] = t;
                            else if ("onClick" == s) {
                                var m = i._runScript("(function(){" + n + "})");
                                t.on("click", r, m);
                            } else t[s] = "true" === n || "false" !== n && n;
                        },
                        e.getCompInstance = function (t) {
                            var s, n = t.props ? t.props.runtime : null;
                            return s = n ? e.viewClassMap[n] || e.uiClassMap[n] || i.__classmap[n] : e.uiClassMap[t.type],
                                t.props && t.props.hasOwnProperty("renderType") && "instance" == t.props.renderType ? s.instance : s ? new s() : null;
                        },
                        e.regComponent = function (t, i) {
                            e.uiClassMap[t] = i,
                                o.regClass(t, i);
                        },
                        e.regViewRuntime = function (t, i) {
                            e.viewClassMap[t] = i;
                        },
                        e.uiMap = {},
                        e.viewClassMap = {},
                        e._sheet = null,
                        s(e, ["uiClassMap",
                            function () {
                                return this.uiClassMap = {
                                    ViewStack: tt,
                                    LinkButton: D,
                                    TextArea: lt,
                                    ColorPicker: N,
                                    Box: k,
                                    Button: D,
                                    CheckBox: Y,
                                    Clip: B,
                                    ComboBox: O,
                                    Component: R,
                                    HScrollBar: $,
                                    HSlider: j,
                                    Image: U,
                                    Label: W,
                                    List: K,
                                    Panel: q,
                                    ProgressBar: X,
                                    Radio: Z,
                                    RadioGroup: ot,
                                    ScrollBar: G,
                                    Slider: F,
                                    Tab: ht,
                                    TextInput: it,
                                    View: e,
                                    VScrollBar: et,
                                    VSlider: st,
                                    Tree: J,
                                    HBox: at,
                                    VBox: rt,
                                    Sprite: b,
                                    Animation: r,
                                    Text: x,
                                    FontClip: V
                                };
                            },
                            "eventDic",
                            function () {
                                return this.eventDic = {
                                    mousedown: !0,
                                    mouseup: !0,
                                    mousemove: !0,
                                    mouseover: !0,
                                    mouseout: !0,
                                    click: !0,
                                    doubleclick: !0,
                                    rightmousedown: !0,
                                    rightmouseup: !0,
                                    rightclick: !0
                                };
                            },
                            "_parseWatchData",
                            function () {
                                return this._parseWatchData = /\${(.*?)}/g;
                            },
                            "_parseKeyWord",
                            function () {
                                return this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;
                            }]),
                        e.__init$ = function () {
                            e._regs(),
                                a = function () {
                                    function t(t, e, i) {
                                        this.comp = null,
                                            this.prop = null,
                                            this.value = null,
                                            this.comp = t,
                                            this.prop = e,
                                            this.value = i;
                                    }
                                    n(t, "");
                                    return t.prototype.exe = function (t) {
                                        var e = L.getBindFun(this.value);
                                        this.comp[this.prop] = e.call(this, t);
                                    },
                                        t;
                                }();
                        },
                        e;
                }()),
            Y = function (t) {
                function e(t, i) {
                    void 0 === i && (i = ""),
                        e.__super.call(this, t, i);
                }
                n(e, "laya.ui.CheckBox", t);
                var s = e.prototype;
                return s.preinitialize = function () {
                    laya.ui.Component.prototype.preinitialize.call(this),
                        this.toggle = !0,
                        this._autoSize = !1;
                },
                    s.initialize = function () {
                        t.prototype.initialize.call(this),
                            this.createText(),
                            this._text.align = "left",
                            this._text.valign = "top",
                            this._text.width = 0;
                    },
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "boolean" == typeof t ? this.selected = t : "string" == typeof t ? this.selected = "true" === t : i.superSet(D, this, "dataSource", t);
                        }),
                    e;
            }(D),
            H = function (t) {
                function e() {
                    this._space = 0,
                        this._align = "none",
                        this._itemChanged = !1,
                        e.__super.call(this);
                }
                n(e, "laya.ui.LayoutBox", k);
                var i = e.prototype;
                return i.addChild = function (t) {
                    return t.on("resize", this, this.onResize),
                        this._setItemChanged(),
                        laya.display.Node.prototype.addChild.call(this, t);
                },
                    i.onResize = function (t) {
                        this._setItemChanged();
                    },
                    i.addChildAt = function (t, e) {
                        return t.on("resize", this, this.onResize),
                            this._setItemChanged(),
                            laya.display.Node.prototype.addChildAt.call(this, t, e);
                    },
                    i.removeChild = function (t) {
                        return t.off("resize", this, this.onResize),
                            this._setItemChanged(),
                            laya.display.Node.prototype.removeChild.call(this, t);
                    },
                    i.removeChildAt = function (t) {
                        return this.getChildAt(t).off("resize", this, this.onResize),
                            this._setItemChanged(),
                            laya.display.Node.prototype.removeChildAt.call(this, t);
                    },
                    i.refresh = function () {
                        this._setItemChanged();
                    },
                    i.changeItems = function () {
                        this._itemChanged = !1;
                    },
                    i.sortItem = function (t) {
                        t && t.sort(function (t, e) {
                            return t.y - e.y;
                        });
                    },
                    i._setItemChanged = function () {
                        this._itemChanged || (this._itemChanged = !0, this.callLater(this.changeItems));
                    },
                    a(0, i, "space",
                        function () {
                            return this._space;
                        },
                        function (t) {
                            this._space = t,
                                this._setItemChanged();
                        }),
                    a(0, i, "align",
                        function () {
                            return this._align;
                        },
                        function (t) {
                            this._align = t,
                                this._setItemChanged();
                        }),
                    e;
            }(),
            V = function (t) {
                function e(t, i) {
                    this._valueArr = null,
                        this._indexMap = null,
                        this._sheet = null,
                        this._direction = "horizontal",
                        this._spaceX = 0,
                        this._spaceY = 0,
                        this._align = "left",
                        this._wordsW = 0,
                        this._wordsH = 0,
                        e.__super.call(this),
                        t && (this.skin = t),
                        i && (this.sheet = i);
                }
                n(e, "laya.ui.FontClip", t);
                var s = e.prototype;
                return s.createChildren = function () {
                    this._bitmap = new A(),
                        this.on("loaded", this, this._onClipLoaded);
                },
                    s._onClipLoaded = function () {
                        this.callLater(this.changeValue);
                    },
                    s.changeValue = function () {
                        if (this._sources && this._valueArr) {
                            this.graphics.clear(!0);
                            var t;
                            if (t = this._sources[0]) {
                                var e = "horizontal" === this._direction;
                                e ? (this._wordsW = this._valueArr.length * (t.sourceWidth + this.spaceX), this._wordsH = t.sourceHeight) : (this._wordsW = t.sourceWidth, this._wordsH = (t.sourceHeight + this.spaceY) * this._valueArr.length);
                                var i = 0;
                                if (this._width) switch (this._align) {
                                    case "center":
                                        i = .5 * (this._width - this._wordsW);
                                        break;

                                    case "right":
                                        i = this._width - this._wordsW;
                                        break;

                                    default:
                                        i = 0;
                                }
                                for (var s = 0,
                                    n = this._valueArr.length; s < n; s++) {
                                    var a = this._indexMap[this._valueArr.charAt(s)];
                                    this.sources[a] && (t = this.sources[a], e ? this.graphics.drawTexture(t, i + s * (t.sourceWidth + this.spaceX), 0, t.sourceWidth, t.sourceHeight) : this.graphics.drawTexture(t, 0 + i, s * (t.sourceHeight + this.spaceY), t.sourceWidth, t.sourceHeight));
                                }
                                this._width || (this.resetLayoutX(), this.callLater(this.changeSize)),
                                    this._height || (this.resetLayoutY(), this.callLater(this.changeSize));
                            }
                        }
                    },
                    s.destroy = function (e) {
                        void 0 === e && (e = !0),
                            this._valueArr = null,
                            this._indexMap = null,
                            this.graphics.clear(!0),
                            this.removeSelf(),
                            this.off("loaded", this, this._onClipLoaded),
                            t.prototype.destroy.call(this, e);
                    },
                    a(0, s, "sheet",
                        function () {
                            return this._sheet;
                        },
                        function (t) {
                            t += "",
                                this._sheet = t;
                            var e = t.split(" ");
                            this._clipX = String(e[0]).length,
                                this.clipY = e.length,
                                this._indexMap = {};
                            for (var i = 0; i < this._clipY; i++) for (var s = e[i].split(""), n = 0, a = s.length; n < a; n++) this._indexMap[s[n]] = i * this._clipX + n;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(B, this, "height", t),
                                this.callLater(this.changeValue);
                        }),
                    a(0, s, "direction",
                        function () {
                            return this._direction;
                        },
                        function (t) {
                            this._direction = t,
                                this.callLater(this.changeValue);
                        }),
                    a(0, s, "value",
                        function () {
                            return this._valueArr ? this._valueArr : "";
                        },
                        function (t) {
                            t += "",
                                this._valueArr = t,
                                this.callLater(this.changeValue);
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(B, this, "width", t),
                                this.callLater(this.changeValue);
                        }),
                    a(0, s, "spaceX",
                        function () {
                            return this._spaceX;
                        },
                        function (t) {
                            this._spaceX = t,
                                "horizontal" === this._direction && this.callLater(this.changeValue);
                        }),
                    a(0, s, "spaceY",
                        function () {
                            return this._spaceY;
                        },
                        function (t) {
                            this._spaceY = t,
                                "horizontal" !== this._direction && this.callLater(this.changeValue);
                        }),
                    a(0, s, "align",
                        function () {
                            return this._align;
                        },
                        function (t) {
                            this._align = t,
                                this.callLater(this.changeValue);
                        }),
                    a(0, s, "measureWidth",
                        function () {
                            return this._wordsW;
                        }),
                    a(0, s, "measureHeight",
                        function () {
                            return this._wordsH;
                        }),
                    e;
            }(B),
            K = function (t) {
                function e() {
                    this.selectHandler = null,
                        this.renderHandler = null,
                        this.mouseHandler = null,
                        this.selectEnable = !1,
                        this.totalPage = 0,
                        this._content = null,
                        this._scrollBar = null,
                        this._itemRender = null,
                        this._repeatX = 0,
                        this._repeatY = 0,
                        this._repeatX2 = 0,
                        this._repeatY2 = 0,
                        this._spaceX = 0,
                        this._spaceY = 0,
                        this._array = null,
                        this._startIndex = 0,
                        this._selectedIndex = -1,
                        this._page = 0,
                        this._isVertical = !0,
                        this._cellSize = 20,
                        this._cellOffset = 0,
                        this._isMoved = !1,
                        this.cacheContent = !1,
                        this._createdLine = 0,
                        this._cellChanged = !1,
                        e.__super.call(this),
                        this._cells = [],
                        this._offset = new g();
                }
                n(e, "laya.ui.List", t);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.ui.IRender": !0,
                    "laya.ui.IItem": !0
                }),
                    s.destroy = function (t) {
                        void 0 === t && (t = !0),
                            this._content && this._content.destroy(t),
                            this._scrollBar && this._scrollBar.destroy(t),
                            laya.ui.Component.prototype.destroy.call(this, t),
                            this._content = null,
                            this._scrollBar = null,
                            this._itemRender = null,
                            this._cells = null,
                            this._array = null,
                            this.selectHandler = this.renderHandler = this.mouseHandler = null;
                    },
                    s.createChildren = function () {
                        this.addChild(this._content = new k());
                    },
                    s.onScrollStart = function () {
                        this._$P.cacheAs || (this._$P.cacheAs = i.superGet(k, this, "cacheAs")),
                            i.superSet(k, this, "cacheAs", "none"),
                            this._scrollBar.once("end", this, this.onScrollEnd);
                    },
                    s.onScrollEnd = function () {
                        i.superSet(k, this, "cacheAs", this._$P.cacheAs);
                    },
                    s._removePreScrollBar = function () {
                        var t = this.removeChildByName("scrollBar");
                        t && t.destroy(!0);
                    },
                    s.changeCells = function () {
                        if (this._cellChanged = !1, this._itemRender) {
                            this.scrollBar = this.getChildByName("scrollBar");
                            var t = this._getOneCell(),
                                e = t.width + this._spaceX || 1,
                                i = t.height + this._spaceY || 1;
                            this._width > 0 && (this._repeatX2 = this._isVertical ? Math.round(this._width / e) : Math.ceil(this._width / e)),
                                this._height > 0 && (this._repeatY2 = this._isVertical ? Math.ceil(this._height / i) : Math.round(this._height / i));
                            var s = this._width ? this._width : e * this.repeatX - this._spaceX,
                                n = this._height ? this._height : i * this.repeatY - this._spaceY;
                            this._cellSize = this._isVertical ? i : e,
                                this._cellOffset = this._isVertical ? i * Math.max(this._repeatY2, this._repeatY) - n - this._spaceY : e * Math.max(this._repeatX2, this._repeatX) - s - this._spaceX,
                                this._isVertical && this._scrollBar ? this._scrollBar.height = n : !this._isVertical && this._scrollBar && (this._scrollBar.width = s),
                                this.setContentSize(s, n);
                            var a = this._isVertical ? this.repeatX : this.repeatY,
                                r = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);
                            this._createItems(0, a, r),
                                this._createdLine = r,
                                this._array && (this.array = this._array, this.runCallLater(this.renderItems));
                        }
                    },
                    s._getOneCell = function () {
                        if (0 === this._cells.length) {
                            var t = this.createItem();
                            if (this._offset.setTo(t.x, t.y), this.cacheContent) return t;
                            this._cells.push(t);
                        }
                        return this._cells[0];
                    },
                    s._createItems = function (t, e, i) {
                        var s = this._content,
                            n = this._getOneCell(),
                            a = n.width + this._spaceX,
                            r = n.height + this._spaceY;
                        if (this.cacheContent) {
                            var o = new k();
                            o.cacheAsBitmap = !0,
                                o.pos((this._isVertical ? 0 : t) * a, (this._isVertical ? t : 0) * r),
                                this._content.addChild(o),
                                this._content.optimizeScrollRect = !0,
                                s = o;
                        } else {
                            for (var h = [], l = this._cells.length - 1; l > -1; l--) {
                                var c = this._cells[l];
                                c.removeSelf(),
                                    h.push(c);
                            }
                            this._cells.length = 0;
                        }
                        for (var u = t; u < i; u++) for (var d = 0; d < e; d++)(n = h && h.length ? h.pop() : this.createItem()).x = (this._isVertical ? d : u) * a - s.x,
                            n.y = (this._isVertical ? u : d) * r - s.y,
                            n.name = "item" + (u * e + d),
                            s.addChild(n),
                            this.addCell(n);
                    },
                    s.createItem = function () {
                        var t = [];
                        if ("function" == typeof this._itemRender) var e = new this._itemRender();
                        else e = z.createComp(this._itemRender, null, null, t);
                        if (0 == t.length && e._watchMap) {
                            var i = e._watchMap;
                            for (var s in i) for (var n = i[s], a = 0; a < n.length; a++) {
                                var r = n[a];
                                t.push(r.comp, r.prop, r.value);
                            }
                        }
                        return t.length && (e._$bindData = t),
                            e;
                    },
                    s.addCell = function (t) {
                        t.on("click", this, this.onCellMouse),
                            t.on("rightclick", this, this.onCellMouse),
                            t.on("mouseover", this, this.onCellMouse),
                            t.on("mouseout", this, this.onCellMouse),
                            t.on("mousedown", this, this.onCellMouse),
                            t.on("mouseup", this, this.onCellMouse),
                            this._cells.push(t);
                    },
                    s.initItems = function () {
                        if (!this._itemRender && null != this.getChildByName("item0")) {
                            this.repeatX = 1;
                            var t = 0;
                            t = 0;
                            for (var e = 0; e < 1e4; e++) {
                                var i = this.getChildByName("item" + e); {
                                    if (!i) break;
                                    this.addCell(i),
                                        t++;
                                }
                            }
                            this.repeatY = t;
                        }
                    },
                    s.setContentSize = function (t, e) {
                        this._content.width = t,
                            this._content.height = e,
                            (this._scrollBar || 0 != this._offset.x || 0 != this._offset.y) && (this._content.scrollRect || (this._content.scrollRect = new v()), this._content.scrollRect.setTo(- this._offset.x, -this._offset.y, t, e), this._content.scrollRect = this._content.scrollRect),
                            this.event("resize");
                    },
                    s.onCellMouse = function (t) {
                        "mousedown" === t.type && (this._isMoved = !1);
                        var e = t.currentTarget,
                            i = this._startIndex + this._cells.indexOf(e);
                        i < 0 || ("click" === t.type || "rightclick" === t.type ? this.selectEnable && !this._isMoved ? this.selectedIndex = i : this.changeCellState(e, !0, 0) : "mouseover" !== t.type && "mouseout" !== t.type || this._selectedIndex === i || this.changeCellState(e, "mouseover" === t.type, 0), this.mouseHandler && this.mouseHandler.runWith([t, i]));
                    },
                    s.changeCellState = function (t, e, i) {
                        var s = t.getChildByName("selectBox");
                        s && (this.selectEnable = !0, s.visible = e, s.index = i);
                    },
                    s.changeSize = function () {
                        laya.ui.Component.prototype.changeSize.call(this),
                            this.setContentSize(this.width, this.height),
                            this._scrollBar && this.callLater(this.onScrollBarChange);
                    },
                    s.onScrollBarChange = function (t) {
                        this.runCallLater(this.changeCells);
                        var e = this._scrollBar.value,
                            i = this._isVertical ? this.repeatX : this.repeatY,
                            s = this._isVertical ? this.repeatY : this.repeatX,
                            n = Math.floor(e / this._cellSize);
                        if (this.cacheContent) r = s + 1,
                            this._createdLine - n < r && (this._createItems(this._createdLine, i, this._createdLine + r), this.renderItems(this._createdLine * i, 0), this._createdLine += r);
                        else {
                            var a = n * i,
                                r = 0;
                            if (a > this._startIndex) {
                                r = a - this._startIndex;
                                var o = !0,
                                    h = this._startIndex + i * (s + 1);
                                this._isMoved = !0;
                            } else a < this._startIndex && (r = this._startIndex - a, o = !1, h = this._startIndex - 1, this._isMoved = !0);
                            for (var l = 0; l < r; l++) {
                                if (o) {
                                    var c = this._cells.shift();
                                    this._cells[this._cells.length] = c;
                                    var u = h + l;
                                } else c = this._cells.pop(),
                                    this._cells.unshift(c),
                                    u = h - l;
                                var d = Math.floor(u / i) * this._cellSize;
                                this._isVertical ? c.y = d : c.x = d,
                                    this.renderItem(c, u);
                            }
                            this._startIndex = a,
                                this.changeSelectStatus();
                        }
                        var _ = this._content.scrollRect;
                        this._isVertical ? (_.y = e - this._offset.y, _.x = -this._offset.x) : (_.y = -this._offset.y, _.x = e - this._offset.x),
                            this._content.scrollRect = _;
                    },
                    s.posCell = function (t, e) {
                        if (this._scrollBar) {
                            var i = this._isVertical ? this.repeatX : this.repeatY,
                                s = (this._isVertical ? this.repeatY : this.repeatX, Math.floor(e / i) * this._cellSize);
                            this._isVertical ? t.y = s : t.x = s;
                        }
                    },
                    s.changeSelectStatus = function () {
                        for (var t = 0,
                            e = this._cells.length; t < e; t++) this.changeCellState(this._cells[t], this._selectedIndex === this._startIndex + t, 1);
                    },
                    s.renderItems = function (t, e) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = 0);
                        for (var i = t,
                            s = e || this._cells.length; i < s; i++) this.renderItem(this._cells[i], this._startIndex + i);
                        this.changeSelectStatus();
                    },
                    s.renderItem = function (t, e) {
                        this._array && e >= 0 && e < this._array.length ? (t.visible = !0, t._$bindData ? (t._dataSource = this._array[e], this._bindData(t, this._array[e])) : t.dataSource = this._array[e], this.cacheContent || this.posCell(t, e), this.hasListener("render") && this.event("render", [t, e]), this.renderHandler && this.renderHandler.runWith([t, e])) : (t.visible = !1, t.dataSource = null);
                    },
                    s._bindData = function (t, e) {
                        for (var i = t._$bindData,
                            s = 0,
                            n = i.length; s < n; s++) {
                            var a = i[s++],
                                r = i[s++],
                                o = i[s],
                                h = L.getBindFun(o);
                            a[r] = h.call(this, e);
                        }
                    },
                    s.refresh = function () {
                        this.array = this._array;
                    },
                    s.getItem = function (t) {
                        return t > -1 && t < this._array.length ? this._array[t] : null;
                    },
                    s.changeItem = function (t, e) {
                        t > -1 && t < this._array.length && (this._array[t] = e, t >= this._startIndex && t < this._startIndex + this._cells.length && this.renderItem(this.getCell(t), t));
                    },
                    s.setItem = function (t, e) {
                        this.changeItem(t, e);
                    },
                    s.addItem = function (t) {
                        this._array.push(t),
                            this.array = this._array;
                    },
                    s.addItemAt = function (t, e) {
                        this._array.splice(e, 0, t),
                            this.array = this._array;
                    },
                    s.deleteItem = function (t) {
                        this._array.splice(t, 1),
                            this.array = this._array;
                    },
                    s.getCell = function (t) {
                        return this.runCallLater(this.changeCells),
                            t > -1 && this._cells ? this._cells[(t - this._startIndex) % this._cells.length] : null;
                    },
                    s.scrollTo = function (t) {
                        if (this._scrollBar) {
                            var e = this._isVertical ? this.repeatX : this.repeatY;
                            this._scrollBar.value = Math.floor(t / e) * this._cellSize;
                        } else this.startIndex = t;
                    },
                    s.tweenTo = function (t, e, i) {
                        if (void 0 === e && (e = 200), this._scrollBar) {
                            var s = this._isVertical ? this.repeatX : this.repeatY;
                            M.to(this._scrollBar, {
                                value: Math.floor(t / s) * this._cellSize
                            },
                                e, null, i, 0, !0);
                        } else this.startIndex = t,
                            i && i.run();
                    },
                    s._setCellChanged = function () {
                        this._cellChanged || (this._cellChanged = !0, this.callLater(this.changeCells));
                    },
                    s.commitMeasure = function () {
                        this.runCallLater(this.changeCells);
                    },
                    a(0, s, "cacheAs", t.prototype._$get_cacheAs,
                        function (t) {
                            i.superSet(k, this, "cacheAs", t),
                                this._scrollBar && (this._$P.cacheAs = null, "none" !== t ? this._scrollBar.on("start", this, this.onScrollStart) : this._scrollBar.off("start", this, this.onScrollStart));
                        }),
                    a(0, s, "content",
                        function () {
                            return this._content;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            t != this._height && (i.superSet(k, this, "height", t), this._setCellChanged());
                        }),
                    a(0, s, "itemRender",
                        function () {
                            return this._itemRender;
                        },
                        function (t) {
                            if (this._itemRender != t) {
                                this._itemRender = t;
                                for (var e = this._cells.length - 1; e > -1; e--) this._cells[e].destroy();
                                this._cells.length = 0,
                                    this._setCellChanged();
                            }
                        }),
                    a(0, s, "vScrollBarSkin",
                        function () {
                            return this._scrollBar ? this._scrollBar.skin : null;
                        },
                        function (t) {
                            this._removePreScrollBar();
                            var e = new et();
                            e.name = "scrollBar",
                                e.right = 0,
                                t && " " != t && (e.skin = t),
                                this.scrollBar = e,
                                this.addChild(e),
                                this._setCellChanged();
                        }),
                    a(0, s, "page",
                        function () {
                            return this._page;
                        },
                        function (t) {
                            this._page = t,
                                this._array && (this._page = t > 0 ? t : 0, this._page = this._page < this.totalPage ? this._page : this.totalPage - 1, this.startIndex = this._page * this.repeatX * this.repeatY);
                        }),
                    a(0, s, "hScrollBarSkin",
                        function () {
                            return this._scrollBar ? this._scrollBar.skin : null;
                        },
                        function (t) {
                            this._removePreScrollBar();
                            var e = new $();
                            e.name = "scrollBar",
                                e.bottom = 0,
                                t && " " != t && (e.skin = t),
                                this.scrollBar = e,
                                this.addChild(e),
                                this._setCellChanged();
                        }),
                    a(0, s, "repeatX",
                        function () {
                            return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1;
                        },
                        function (t) {
                            this._repeatX = t,
                                this._setCellChanged();
                        }),
                    a(0, s, "scrollBar",
                        function () {
                            return this._scrollBar;
                        },
                        function (t) {
                            this._scrollBar != t && (this._scrollBar = t, t && (this._isVertical = this._scrollBar.isVertical, this.addChild(this._scrollBar), this._scrollBar.on("change", this, this.onScrollBarChange)));
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            t != this._width && (i.superSet(k, this, "width", t), this._setCellChanged());
                        }),
                    a(0, s, "repeatY",
                        function () {
                            return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1;
                        },
                        function (t) {
                            this._repeatY = t,
                                this._setCellChanged();
                        }),
                    a(0, s, "spaceX",
                        function () {
                            return this._spaceX;
                        },
                        function (t) {
                            this._spaceX = t,
                                this._setCellChanged();
                        }),
                    a(0, s, "spaceY",
                        function () {
                            return this._spaceY;
                        },
                        function (t) {
                            this._spaceY = t,
                                this._setCellChanged();
                        }),
                    a(0, s, "selectedIndex",
                        function () {
                            return this._selectedIndex;
                        },
                        function (t) {
                            this._selectedIndex != t && (this._selectedIndex = t, this.changeSelectStatus(), this.event("change"), this.selectHandler && this.selectHandler.runWith(t), this.startIndex = this._startIndex);
                        }),
                    a(0, s, "selectedItem",
                        function () {
                            return - 1 != this._selectedIndex ? this._array[this._selectedIndex] : null;
                        },
                        function (t) {
                            this.selectedIndex = this._array.indexOf(t);
                        }),
                    a(0, s, "length",
                        function () {
                            return this._array ? this._array.length : 0;
                        }),
                    a(0, s, "selection",
                        function () {
                            return this.getCell(this._selectedIndex);
                        },
                        function (t) {
                            this.selectedIndex = this._startIndex + this._cells.indexOf(t);
                        }),
                    a(0, s, "startIndex",
                        function () {
                            return this._startIndex;
                        },
                        function (t) {
                            this._startIndex = t > 0 ? t : 0,
                                this.callLater(this.renderItems);
                        }),
                    a(0, s, "array",
                        function () {
                            return this._array;
                        },
                        function (t) {
                            this.runCallLater(this.changeCells),
                                this._array = t || [];
                            var e = this._array.length;
                            if (this.totalPage = Math.ceil(e / (this.repeatX * this.repeatY)), this._selectedIndex = this._selectedIndex < e ? this._selectedIndex : e - 1, this.startIndex = this._startIndex, this._scrollBar) {
                                this._scrollBar.stopScroll();
                                var i = this._isVertical ? this.repeatX : this.repeatY,
                                    s = this._isVertical ? this.repeatY : this.repeatX,
                                    n = Math.ceil(e / i); (this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage) > 1 ? (this._scrollBar.scrollSize = this._cellSize, this._scrollBar.thumbPercent = s / n, this._scrollBar.setScroll(0, (n - s) * this._cellSize + this._cellOffset, this._scrollBar.value), this._scrollBar.target = this._content) : (this._scrollBar.setScroll(0, 0, 0), this._scrollBar.target = this._content);
                            }
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.array = t : i.superSet(k, this, "dataSource", t);
                        }),
                    a(0, s, "cells",
                        function () {
                            return this.runCallLater(this.changeCells),
                                this._cells;
                        }),
                    e;
            }(k),
            q = function (t) {
                function e() {
                    this._content = null,
                        this._vScrollBar = null,
                        this._hScrollBar = null,
                        this._scrollChanged = !1,
                        e.__super.call(this),
                        this.width = this.height = 100;
                }
                n(e, "laya.ui.Panel", t);
                var s = e.prototype;
                return s.destroy = function (t) {
                    void 0 === t && (t = !0),
                        laya.ui.Component.prototype.destroy.call(this, t),
                        this._content && this._content.destroy(t),
                        this._vScrollBar && this._vScrollBar.destroy(t),
                        this._hScrollBar && this._hScrollBar.destroy(t),
                        this._vScrollBar = null,
                        this._hScrollBar = null,
                        this._content = null;
                },
                    s.destroyChildren = function () {
                        this._content.destroyChildren();
                    },
                    s.createChildren = function () {
                        laya.display.Node.prototype.addChild.call(this, this._content = new k());
                    },
                    s.addChild = function (t) {
                        return t.on("resize", this, this.onResize),
                            this._setScrollChanged(),
                            this._content.addChild(t);
                    },
                    s.onResize = function () {
                        this._setScrollChanged();
                    },
                    s.addChildAt = function (t, e) {
                        return t.on("resize", this, this.onResize),
                            this._setScrollChanged(),
                            this._content.addChildAt(t, e);
                    },
                    s.removeChild = function (t) {
                        return t.off("resize", this, this.onResize),
                            this._setScrollChanged(),
                            this._content.removeChild(t);
                    },
                    s.removeChildAt = function (t) {
                        return this.getChildAt(t).off("resize", this, this.onResize),
                            this._setScrollChanged(),
                            this._content.removeChildAt(t);
                    },
                    s.removeChildren = function (t, e) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = 2147483647);
                        for (var i = this._content.numChildren - 1; i > -1; i--) this._content.removeChildAt(i);
                        return this._setScrollChanged(),
                            this;
                    },
                    s.getChildAt = function (t) {
                        return this._content.getChildAt(t);
                    },
                    s.getChildByName = function (t) {
                        return this._content.getChildByName(t);
                    },
                    s.getChildIndex = function (t) {
                        return this._content.getChildIndex(t);
                    },
                    s.changeScroll = function () {
                        this._scrollChanged = !1;
                        var t = this.contentWidth || 1,
                            e = this.contentHeight || 1,
                            i = this._vScrollBar,
                            s = this._hScrollBar,
                            n = i && e > this._height,
                            a = s && t > this._width,
                            r = n ? this._width - i.width : this._width,
                            o = a ? this._height - s.height : this._height;
                        i && (i.x = this._width - i.width, i.y = 0, i.height = this._height - (a ? s.height : 0), i.scrollSize = Math.max(.033 * this._height, 1), i.thumbPercent = o / e, i.setScroll(0, e - o, i.value)),
                            s && (s.x = 0, s.y = this._height - s.height, s.width = this._width - (n ? i.width : 0), s.scrollSize = Math.max(.033 * this._width, 1), s.thumbPercent = r / t, s.setScroll(0, t - r, s.value));
                    },
                    s.changeSize = function () {
                        laya.ui.Component.prototype.changeSize.call(this),
                            this.setContentSize(this._width, this._height);
                    },
                    s.setContentSize = function (t, e) {
                        var i = this._content;
                        i.width = t,
                            i.height = e,
                            i.scrollRect || (i.scrollRect = new v()),
                            i.scrollRect.setTo(0, 0, t, e),
                            i.scrollRect = i.scrollRect;
                    },
                    s.onScrollBarChange = function (t) {
                        var e = this._content.scrollRect;
                        if (e) {
                            var i = Math.round(t.value);
                            t.isVertical ? e.y = i : e.x = i,
                                this._content.scrollRect = e;
                        }
                    },
                    s.scrollTo = function (t, e) {
                        void 0 === t && (t = 0),
                            void 0 === e && (e = 0),
                            this.vScrollBar && (this.vScrollBar.value = e),
                            this.hScrollBar && (this.hScrollBar.value = t);
                    },
                    s.refresh = function () {
                        this.changeScroll();
                    },
                    s.onScrollStart = function () {
                        this._$P.cacheAs || (this._$P.cacheAs = i.superGet(k, this, "cacheAs")),
                            i.superSet(k, this, "cacheAs", "none"),
                            this._hScrollBar && this._hScrollBar.once("end", this, this.onScrollEnd),
                            this._vScrollBar && this._vScrollBar.once("end", this, this.onScrollEnd);
                    },
                    s.onScrollEnd = function () {
                        i.superSet(k, this, "cacheAs", this._$P.cacheAs);
                    },
                    s._setScrollChanged = function () {
                        this._scrollChanged || (this._scrollChanged = !0, this.callLater(this.changeScroll));
                    },
                    a(0, s, "numChildren",
                        function () {
                            return this._content.numChildren;
                        }),
                    a(0, s, "hScrollBarSkin",
                        function () {
                            return this._hScrollBar ? this._hScrollBar.skin : null;
                        },
                        function (t) {
                            null == this._hScrollBar && (laya.display.Node.prototype.addChild.call(this, this._hScrollBar = new $()), this._hScrollBar.on("change", this, this.onScrollBarChange, [this._hScrollBar]), this._hScrollBar.target = this._content, this._setScrollChanged()),
                                this._hScrollBar.skin = t;
                        }),
                    a(0, s, "contentWidth",
                        function () {
                            for (var t = 0,
                                e = this._content.numChildren - 1; e > -1; e--) {
                                var i = this._content.getChildAt(e);
                                t = Math.max(i.x + i.width * i.scaleX, t);
                            }
                            return t;
                        }),
                    a(0, s, "contentHeight",
                        function () {
                            for (var t = 0,
                                e = this._content.numChildren - 1; e > -1; e--) {
                                var i = this._content.getChildAt(e);
                                t = Math.max(i.y + i.height * i.scaleY, t);
                            }
                            return t;
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(k, this, "width", t),
                                this._setScrollChanged();
                        }),
                    a(0, s, "hScrollBar",
                        function () {
                            return this._hScrollBar;
                        }),
                    a(0, s, "content",
                        function () {
                            return this._content;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(k, this, "height", t),
                                this._setScrollChanged();
                        }),
                    a(0, s, "vScrollBarSkin",
                        function () {
                            return this._vScrollBar ? this._vScrollBar.skin : null;
                        },
                        function (t) {
                            null == this._vScrollBar && (laya.display.Node.prototype.addChild.call(this, this._vScrollBar = new et()), this._vScrollBar.on("change", this, this.onScrollBarChange, [this._vScrollBar]), this._vScrollBar.target = this._content, this._setScrollChanged()),
                                this._vScrollBar.skin = t;
                        }),
                    a(0, s, "vScrollBar",
                        function () {
                            return this._vScrollBar;
                        }),
                    a(0, s, "cacheAs", t.prototype._$get_cacheAs,
                        function (t) {
                            i.superSet(k, this, "cacheAs", t),
                                this._$P.cacheAs = null,
                                "none" !== t ? (this._hScrollBar && this._hScrollBar.on("start", this, this.onScrollStart), this._vScrollBar && this._vScrollBar.on("start", this, this.onScrollStart)) : (this._hScrollBar && this._hScrollBar.off("start", this, this.onScrollStart), this._vScrollBar && this._vScrollBar.off("start", this, this.onScrollStart));
                        }),
                    e;
            }(k),
            $ = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.ui.HScrollBar", t);
                return e.prototype.initialize = function () {
                    t.prototype.initialize.call(this),
                        this.slider.isVertical = !1;
                },
                    e;
            }(G),
            j = function (t) {
                function e(t) {
                    e.__super.call(this, t),
                        this.isVertical = !1;
                }
                return n(e, "laya.ui.HSlider", F),
                    e;
            }(),
            Q = function (t) {
                function e(t, i) {
                    this.selectHandler = null,
                        this._items = null,
                        this._selectedIndex = -1,
                        this._skin = null,
                        this._direction = "horizontal",
                        this._space = 0,
                        this._labels = null,
                        this._labelColors = null,
                        this._labelFont = null,
                        this._labelStrokeColor = null,
                        this._strokeColors = null,
                        this._labelStroke = NaN,
                        this._labelSize = 0,
                        this._labelBold = !1,
                        this._labelPadding = null,
                        this._labelAlign = null,
                        this._stateNum = 0,
                        this._labelChanged = !1,
                        e.__super.call(this),
                        this.skin = i,
                        this.labels = t;
                }
                n(e, "laya.ui.UIGroup", t);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.ui.IItem": !0
                }),
                    s.preinitialize = function () {
                        this.mouseEnabled = !0;
                    },
                    s.destroy = function (t) {
                        void 0 === t && (t = !0),
                            laya.ui.Component.prototype.destroy.call(this, t),
                            this._items && (this._items.length = 0),
                            this._items = null,
                            this.selectHandler = null;
                    },
                    s.addItem = function (t, e) {
                        void 0 === e && (e = !0);
                        var i = t,
                            s = this._items.length;
                        if (i.name = "item" + s, this.addChild(i), this.initItems(), e && s > 0) {
                            var n = this._items[s - 1];
                            "horizontal" == this._direction ? i.x = n.x + n.width + this._space : i.y = n.y + n.height + this._space;
                        } else e && (i.x = 0, i.y = 0);
                        return s;
                    },
                    s.delItem = function (t, e) {
                        void 0 === e && (e = !0);
                        var i = this._items.indexOf(t);
                        if (- 1 != i) {
                            var s = t;
                            this.removeChild(s);
                            for (var n = i + 1,
                                a = this._items.length; n < a; n++) {
                                var r = this._items[n];
                                r.name = "item" + (n - 1),
                                    e && ("horizontal" == this._direction ? r.x -= s.width + this._space : r.y -= s.height + this._space);
                            }
                            if (this.initItems(), this._selectedIndex > -1) {
                                var o = 0;
                                o = this._selectedIndex < this._items.length ? this._selectedIndex : this._selectedIndex - 1,
                                    this._selectedIndex = -1,
                                    this.selectedIndex = o;
                            }
                        }
                    },
                    s.initItems = function () {
                        this._items || (this._items = []),
                            this._items.length = 0;
                        for (var t = 0; t < 1e4; t++) {
                            var e = this.getChildByName("item" + t);
                            if (null == e) break;
                            this._items.push(e),
                                e.selected = t === this._selectedIndex,
                                e.clickHandler = p.create(this, this.itemClick, [t], !1);
                        }
                    },
                    s.itemClick = function (t) {
                        this.selectedIndex = t;
                    },
                    s.setSelect = function (t, e) {
                        this._items && t > -1 && t < this._items.length && (this._items[t].selected = e);
                    },
                    s.createItem = function (t, e) {
                        return null;
                    },
                    s.changeLabels = function () {
                        if (this._labelChanged = !1, this._items) for (var t = 0,
                            e = 0,
                            i = this._items.length; e < i; e++) {
                            var s = this._items[e];
                            this._skin && (s.skin = this._skin),
                                this._labelColors && (s.labelColors = this._labelColors),
                                this._labelSize && (s.labelSize = this._labelSize),
                                this._labelStroke && (s.labelStroke = this._labelStroke),
                                this._labelStrokeColor && (s.labelStrokeColor = this._labelStrokeColor),
                                this._strokeColors && (s.strokeColors = this._strokeColors),
                                this._labelBold && (s.labelBold = this._labelBold),
                                this._labelPadding && (s.labelPadding = this._labelPadding),
                                this._labelAlign && (s.labelAlign = this._labelAlign),
                                this._stateNum && (s.stateNum = this._stateNum),
                                this._labelFont && (s.labelFont = this._labelFont),
                                "horizontal" === this._direction ? (s.y = 0, s.x = t, t += s.width + this._space) : (s.x = 0, s.y = t, t += s.height + this._space);
                        }
                        this.changeSize();
                    },
                    s.commitMeasure = function () {
                        this.runCallLater(this.changeLabels);
                    },
                    s._setLabelChanged = function () {
                        this._labelChanged || (this._labelChanged = !0, this.callLater(this.changeLabels));
                    },
                    a(0, s, "labelStrokeColor",
                        function () {
                            return this._labelStrokeColor;
                        },
                        function (t) {
                            this._labelStrokeColor != t && (this._labelStrokeColor = t, this._setLabelChanged());
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            this._skin != t && (this._skin = t, this._setLabelChanged());
                        }),
                    a(0, s, "selectedIndex",
                        function () {
                            return this._selectedIndex;
                        },
                        function (t) {
                            this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t, this.setSelect(t, !0), this.event("change"), this.selectHandler && this.selectHandler.runWith(this._selectedIndex));
                        }),
                    a(0, s, "labels",
                        function () {
                            return this._labels;
                        },
                        function (t) {
                            if (this._labels != t) {
                                if (this._labels = t, this.removeChildren(), this._setLabelChanged(), this._labels) for (var e = this._labels.split(","), i = 0, s = e.length; i < s; i++) {
                                    var n = this.createItem(this._skin, e[i]);
                                    n.name = "item" + i,
                                        this.addChild(n);
                                }
                                this.initItems();
                            }
                        }),
                    a(0, s, "strokeColors",
                        function () {
                            return this._strokeColors;
                        },
                        function (t) {
                            this._strokeColors != t && (this._strokeColors = t, this._setLabelChanged());
                        }),
                    a(0, s, "labelColors",
                        function () {
                            return this._labelColors;
                        },
                        function (t) {
                            this._labelColors != t && (this._labelColors = t, this._setLabelChanged());
                        }),
                    a(0, s, "labelStroke",
                        function () {
                            return this._labelStroke;
                        },
                        function (t) {
                            this._labelStroke != t && (this._labelStroke = t, this._setLabelChanged());
                        }),
                    a(0, s, "labelSize",
                        function () {
                            return this._labelSize;
                        },
                        function (t) {
                            this._labelSize != t && (this._labelSize = t, this._setLabelChanged());
                        }),
                    a(0, s, "stateNum",
                        function () {
                            return this._stateNum;
                        },
                        function (t) {
                            this._stateNum != t && (this._stateNum = t, this._setLabelChanged());
                        }),
                    a(0, s, "labelBold",
                        function () {
                            return this._labelBold;
                        },
                        function (t) {
                            this._labelBold != t && (this._labelBold = t, this._setLabelChanged());
                        }),
                    a(0, s, "labelFont",
                        function () {
                            return this._labelFont;
                        },
                        function (t) {
                            this._labelFont != t && (this._labelFont = t, this._setLabelChanged());
                        }),
                    a(0, s, "labelPadding",
                        function () {
                            return this._labelPadding;
                        },
                        function (t) {
                            this._labelPadding != t && (this._labelPadding = t, this._setLabelChanged());
                        }),
                    a(0, s, "direction",
                        function () {
                            return this._direction;
                        },
                        function (t) {
                            this._direction = t,
                                this._setLabelChanged();
                        }),
                    a(0, s, "space",
                        function () {
                            return this._space;
                        },
                        function (t) {
                            this._space = t,
                                this._setLabelChanged();
                        }),
                    a(0, s, "items",
                        function () {
                            return this._items;
                        }),
                    a(0, s, "selection",
                        function () {
                            return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
                        },
                        function (t) {
                            this.selectedIndex = this._items.indexOf(t);
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : i.superSet(k, this, "dataSource", t);
                        }),
                    e;
            }(k),
            Z = function (t) {
                function e(t, i) {
                    this._value = null,
                        void 0 === i && (i = ""),
                        e.__super.call(this, t, i);
                }
                n(e, "laya.ui.Radio", t);
                var i = e.prototype;
                return i.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._value = null;
                },
                    i.preinitialize = function () {
                        laya.ui.Component.prototype.preinitialize.call(this),
                            this.toggle = !1,
                            this._autoSize = !1;
                    },
                    i.initialize = function () {
                        t.prototype.initialize.call(this),
                            this.createText(),
                            this._text.align = "left",
                            this._text.valign = "top",
                            this._text.width = 0,
                            this.on("click", this, this.onClick);
                    },
                    i.onClick = function (t) {
                        this.selected = !0;
                    },
                    a(0, i, "value",
                        function () {
                            return null != this._value ? this._value : this.label;
                        },
                        function (t) {
                            this._value = t;
                        }),
                    e;
            }(D),
            J = function (t) {
                function e() {
                    this._list = null,
                        this._source = null,
                        this._renderHandler = null,
                        this._spaceLeft = 10,
                        this._spaceBottom = 0,
                        this._keepStatus = !0,
                        e.__super.call(this),
                        this.width = this.height = 200;
                }
                n(e, "laya.ui.Tree", t);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.ui.IRender": !0
                }),
                    s.destroy = function (t) {
                        void 0 === t && (t = !0),
                            laya.ui.Component.prototype.destroy.call(this, t),
                            this._list && this._list.destroy(t),
                            this._list = null,
                            this._source = null,
                            this._renderHandler = null;
                    },
                    s.createChildren = function () {
                        this.addChild(this._list = new K()),
                            this._list.renderHandler = p.create(this, this.renderItem, null, !1),
                            this._list.repeatX = 1,
                            this._list.on("change", this, this.onListChange);
                    },
                    s.onListChange = function (t) {
                        this.event("change");
                    },
                    s.getArray = function () {
                        var t, e = [];
                        for (var i in this._source) t = this._source[i],
                            this.getParentOpenStatus(t) && (t.x = this._spaceLeft * this.getDepth(t), e.push(t));
                        return e;
                    },
                    s.getDepth = function (t, e) {
                        return void 0 === e && (e = 0),
                            null == t.nodeParent ? e : this.getDepth(t.nodeParent, e + 1);
                    },
                    s.getParentOpenStatus = function (t) {
                        var e = t.nodeParent;
                        return null == e || !!e.isOpen && (null == e.nodeParent || this.getParentOpenStatus(e));
                    },
                    s.renderItem = function (t, e) {
                        var i = t.dataSource;
                        if (i) {
                            t.left = i.x;
                            var s = t.getChildByName("arrow");
                            s && (i.hasChild ? (s.visible = !0, s.index = i.isOpen ? 1 : 0, s.tag = e, s.off("click", this, this.onArrowClick), s.on("click", this, this.onArrowClick)) : s.visible = !1);
                            var n = t.getChildByName("folder");
                            n && (2 == n.clipY ? n.index = i.isDirectory ? 0 : 1 : n.index = i.isDirectory ? i.isOpen ? 1 : 0 : 2),
                                this._renderHandler && this._renderHandler.runWith([t, e]);
                        }
                    },
                    s.onArrowClick = function (t) {
                        var e = t.currentTarget.tag;
                        this._list.array[e].isOpen = !this._list.array[e].isOpen,
                            this.event("open"),
                            this._list.array = this.getArray();
                    },
                    s.setItemState = function (t, e) {
                        this._list.array[t] && (this._list.array[t].isOpen = e, this._list.array = this.getArray());
                    },
                    s.fresh = function () {
                        this._list.array = this.getArray(),
                            this.repaint();
                    },
                    s.parseXml = function (t, e, i, s) {
                        var n, a = t.childNodes,
                            r = a.length;
                        if (!s) {
                            n = {};
                            var o, h = t.attributes;
                            for (var l in h) {
                                var c = (o = h[l]).nodeName,
                                    u = o.nodeValue;
                                n[c] = "true" == u || "false" != u && u;
                            }
                            n.nodeParent = i,
                                r > 0 && (n.isDirectory = !0),
                                n.hasChild = r > 0,
                                e.push(n);
                        }
                        for (var d = 0; d < r; d++) {
                            var _ = a[d];
                            this.parseXml(_, e, n, !1);
                        }
                    },
                    s.parseOpenStatus = function (t, e) {
                        for (var i = 0,
                            s = e.length; i < s; i++) {
                            var n = e[i];
                            if (n.isDirectory) for (var a = 0,
                                r = t.length; a < r; a++) {
                                var o = t[a];
                                if (o.isDirectory && this.isSameParent(o, n) && n.label == o.label) {
                                    n.isOpen = o.isOpen;
                                    break;
                                }
                            }
                        }
                    },
                    s.isSameParent = function (t, e) {
                        return null == t.nodeParent && null == e.nodeParent || null != t.nodeParent && null != e.nodeParent && (t.nodeParent.label == e.nodeParent.label && this.isSameParent(t.nodeParent, e.nodeParent));
                    },
                    s.filter = function (t) {
                        if (Boolean(t)) {
                            var e = [];
                            this.getFilterSource(this._source, e, t),
                                this._list.array = e;
                        } else this._list.array = this.getArray();
                    },
                    s.getFilterSource = function (t, e, i) {
                        i = i.toLocaleLowerCase();
                        var s;
                        for (var n in t) !(s = t[n]).isDirectory && String(s.label).toLowerCase().indexOf(i) > -1 && (s.x = 0, e.push(s)),
                            s.child && s.child.length > 0 && this.getFilterSource(s.child, e, i);
                    },
                    a(0, s, "spaceBottom",
                        function () {
                            return this._list.spaceY;
                        },
                        function (t) {
                            this._list.spaceY = t;
                        }),
                    a(0, s, "keepStatus",
                        function () {
                            return this._keepStatus;
                        },
                        function (t) {
                            this._keepStatus = t;
                        }),
                    a(0, s, "itemRender",
                        function () {
                            return this._list.itemRender;
                        },
                        function (t) {
                            this._list.itemRender = t;
                        }),
                    a(0, s, "array",
                        function () {
                            return this._list.array;
                        },
                        function (t) {
                            this._keepStatus && this._list.array && t && this.parseOpenStatus(this._list.array, t),
                                this._source = t,
                                this._list.array = this.getArray();
                        }),
                    a(0, s, "mouseHandler",
                        function () {
                            return this._list.mouseHandler;
                        },
                        function (t) {
                            this._list.mouseHandler = t;
                        }),
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            this._dataSource = t,
                                i.superSet(k, this, "dataSource", t);
                        }),
                    a(0, s, "source",
                        function () {
                            return this._source;
                        }),
                    a(0, s, "scrollBar",
                        function () {
                            return this._list.scrollBar;
                        }),
                    a(0, s, "list",
                        function () {
                            return this._list;
                        }),
                    a(0, s, "scrollBarSkin",
                        function () {
                            return this._list.vScrollBarSkin;
                        },
                        function (t) {
                            this._list.vScrollBarSkin = t;
                        }),
                    a(0, s, "renderHandler",
                        function () {
                            return this._renderHandler;
                        },
                        function (t) {
                            this._renderHandler = t;
                        }),
                    a(0, s, "selectedIndex",
                        function () {
                            return this._list.selectedIndex;
                        },
                        function (t) {
                            this._list.selectedIndex = t;
                        }),
                    a(0, s, "spaceLeft",
                        function () {
                            return this._spaceLeft;
                        },
                        function (t) {
                            this._spaceLeft = t;
                        }),
                    a(0, s, "selectedItem",
                        function () {
                            return this._list.selectedItem;
                        },
                        function (t) {
                            this._list.selectedItem = t;
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(k, this, "width", t),
                                this._list.width = t;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(k, this, "height", t),
                                this._list.height = t;
                        }),
                    a(0, s, "xml", null,
                        function (t) {
                            var e = [];
                            this.parseXml(t.childNodes[0], e, null, !0),
                                this.array = e;
                        }),
                    a(0, s, "selectedPath",
                        function () {
                            return this._list.selectedItem ? this._list.selectedItem.path : null;
                        }),
                    e;
            }(k),
            tt = function (t) {
                function e() {
                    this._items = null,
                        this._selectedIndex = 0,
                        e.__super.call(this),
                        this._setIndexHandler = p.create(this, this.setIndex, null, !1);
                }
                n(e, "laya.ui.ViewStack", t);
                var s = e.prototype;
                return i.imps(s, {
                    "laya.ui.IItem": !0
                }),
                    s.setItems = function (t) {
                        this.removeChildren();
                        for (var e = 0,
                            i = 0,
                            s = t.length; i < s; i++) {
                            var n = t[i];
                            n && (n.name = "item" + e, this.addChild(n), e++);
                        }
                        this.initItems();
                    },
                    s.addItem = function (t) {
                        t.name = "item" + this._items.length,
                            this.addChild(t),
                            this.initItems();
                    },
                    s.initItems = function () {
                        this._items = [];
                        for (var t = 0; t < 1e4; t++) {
                            var e = this.getChildByName("item" + t);
                            if (null == e) break;
                            this._items.push(e),
                                e.visible = t == this._selectedIndex;
                        }
                    },
                    s.setSelect = function (t, e) {
                        this._items && t > -1 && t < this._items.length && (this._items[t].visible = e);
                    },
                    s.setIndex = function (t) {
                        this.selectedIndex = t;
                    },
                    a(0, s, "dataSource", t.prototype._$get_dataSource,
                        function (t) {
                            if (this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t) this.selectedIndex = parseInt(t);
                            else for (var e in this._dataSource) this.hasOwnProperty(e) && (this[e] = this._dataSource[e]);
                        }),
                    a(0, s, "selectedIndex",
                        function () {
                            return this._selectedIndex;
                        },
                        function (t) {
                            this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t, this.setSelect(this._selectedIndex, !0));
                        }),
                    a(0, s, "selection",
                        function () {
                            return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
                        },
                        function (t) {
                            this.selectedIndex = this._items.indexOf(t);
                        }),
                    a(0, s, "items",
                        function () {
                            return this._items;
                        }),
                    a(0, s, "setIndexHandler",
                        function () {
                            return this._setIndexHandler;
                        },
                        function (t) {
                            this._setIndexHandler = t;
                        }),
                    e;
            }(k),
            et = function (t) {
                function e() {
                    e.__super.call(this);
                }
                return n(e, "laya.ui.VScrollBar", G),
                    e;
            }(),
            it = function (t) {
                function e(t) {
                    this._bg = null,
                        this._skin = null,
                        e.__super.call(this),
                        void 0 === t && (t = ""),
                        this.text = t,
                        this.skin = this.skin;
                }
                n(e, "laya.ui.TextInput", t);
                var s = e.prototype;
                return s.preinitialize = function () {
                    this.mouseEnabled = !0;
                },
                    s.destroy = function (e) {
                        void 0 === e && (e = !0),
                            t.prototype.destroy.call(this, e),
                            this._bg && this._bg.destroy(),
                            this._bg = null;
                    },
                    s.createChildren = function () {
                        this.addChild(this._tf = new f()),
                            this._tf.padding = I.inputLabelPadding,
                            this._tf.on("input", this, this._onInput),
                            this._tf.on("enter", this, this._onEnter),
                            this._tf.on("blur", this, this._onBlur),
                            this._tf.on("focus", this, this._onFocus);
                    },
                    s._onFocus = function () {
                        this.event("focus", this);
                    },
                    s._onBlur = function () {
                        this.event("blur", this);
                    },
                    s._onInput = function () {
                        this.event("input", this);
                    },
                    s._onEnter = function () {
                        this.event("enter", this);
                    },
                    s.initialize = function () {
                        this.width = 128,
                            this.height = 22;
                    },
                    s.select = function () {
                        this._tf.select();
                    },
                    s.setSelection = function (t, e) {
                        this._tf.setSelection(t, e);
                    },
                    a(0, s, "text", t.prototype._$get_text,
                        function (t) {
                            this._tf.text != t && (t += "", this._tf.text = t, this.event("change"));
                        }),
                    a(0, s, "bg",
                        function () {
                            return this._bg;
                        },
                        function (t) {
                            this.graphics = this._bg = t;
                        }),
                    a(0, s, "inputElementYAdjuster",
                        function () {
                            return this._tf.inputElementYAdjuster;
                        },
                        function (t) {
                            this._tf.inputElementYAdjuster = t;
                        }),
                    a(0, s, "multiline",
                        function () {
                            return this._tf.multiline;
                        },
                        function (t) {
                            this._tf.multiline = t;
                        }),
                    a(0, s, "skin",
                        function () {
                            return this._skin;
                        },
                        function (t) {
                            this._skin != t && (this._skin = t, this._bg || (this.graphics = this._bg = new A()), this._bg.source = m.getRes(this._skin), this._width && (this._bg.width = this._width), this._height && (this._bg.height = this._height));
                        }),
                    a(0, s, "sizeGrid",
                        function () {
                            return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(",") : null;
                        },
                        function (t) {
                            this._bg || (this.graphics = this._bg = new A()),
                                this._bg.sizeGrid = L.fillArray(I.defaultSizeGrid, t, Number);
                        }),
                    a(0, s, "inputElementXAdjuster",
                        function () {
                            return this._tf.inputElementXAdjuster;
                        },
                        function (t) {
                            this._tf.inputElementXAdjuster = t;
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(W, this, "width", t),
                                this._bg && (this._bg.width = t);
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(W, this, "height", t),
                                this._bg && (this._bg.height = t);
                        }),
                    a(0, s, "editable",
                        function () {
                            return this._tf.editable;
                        },
                        function (t) {
                            this._tf.editable = t;
                        }),
                    a(0, s, "restrict",
                        function () {
                            return this._tf.restrict;
                        },
                        function (t) {
                            this._tf.restrict = t;
                        }),
                    a(0, s, "prompt",
                        function () {
                            return this._tf.prompt;
                        },
                        function (t) {
                            this._tf.prompt = t;
                        }),
                    a(0, s, "promptColor",
                        function () {
                            return this._tf.promptColor;
                        },
                        function (t) {
                            this._tf.promptColor = t;
                        }),
                    a(0, s, "maxChars",
                        function () {
                            return this._tf.maxChars;
                        },
                        function (t) {
                            this._tf.maxChars = t;
                        }),
                    a(0, s, "focus",
                        function () {
                            return this._tf.focus;
                        },
                        function (t) {
                            this._tf.focus = t;
                        }),
                    a(0, s, "type",
                        function () {
                            return this._tf.type;
                        },
                        function (t) {
                            this._tf.type = t;
                        }),
                    a(0, s, "asPassword",
                        function () {
                            return this._tf.asPassword;
                        },
                        function (t) {
                            this._tf.asPassword = t;
                        }),
                    e;
            }(W),
            st = function (t) {
                function e() {
                    e.__super.call(this);
                }
                return n(e, "laya.ui.VSlider", F),
                    e;
            }(),
            nt = function (t) {
                function e() {
                    this.popupCenter = !0,
                        this.closeHandler = null,
                        this.popupEffect = null,
                        this.closeEffect = null,
                        this.group = null,
                        this.isModal = !1,
                        this._dragArea = null,
                        e.__super.call(this);
                }
                n(e, "laya.ui.Dialog", t);
                var s = e.prototype;
                return s.initialize = function () {
                    this.popupEffect = e.manager.popupEffectHandler,
                        this.closeEffect = e.manager.closeEffectHandler,
                        this._dealDragArea(),
                        this.on("click", this, this._onClick);
                },
                    s._dealDragArea = function () {
                        var t = this.getChildByName("drag");
                        t && (this.dragArea = t.x + "," + t.y + "," + t.width + "," + t.height, t.removeSelf());
                    },
                    s._onClick = function (t) {
                        var e = t.target;
                        if (e) switch (e.name) {
                            case "close":
                            case "cancel":
                            case "sure":
                            case "no":
                            case "ok":
                            case "yes":
                                this.close(e.name);
                        }
                    },
                    s.show = function (t, e) {
                        void 0 === t && (t = !1),
                            void 0 === e && (e = !0),
                            this._open(!1, t, e);
                    },
                    s.popup = function (t, e) {
                        void 0 === t && (t = !1),
                            void 0 === e && (e = !0),
                            this._open(!0, t, e);
                    },
                    s._open = function (t, i, s) {
                        e.manager.lock(!1),
                            this.isModal = t,
                            e.manager.open(this, i, s);
                    },
                    s.onOpened = function () { },
                    s.close = function (t, i) {
                        void 0 === i && (i = !0),
                            e.manager.close(this, t, i);
                    },
                    s.onClosed = function (t) { },
                    s._onMouseDown = function (t) {
                        var e = this.getMousePoint();
                        this._dragArea.contains(e.x, e.y) ? this.startDrag() : this.stopDrag();
                    },
                    a(0, s, "dragArea",
                        function () {
                            return this._dragArea ? this._dragArea.toString() : null;
                        },
                        function (t) {
                            if (t) {
                                var e = L.fillArray([0, 0, 0, 0], t, Number);
                                this._dragArea = new v(e[0], e[1], e[2], e[3]),
                                    this.on("mousedown", this, this._onMouseDown);
                            } else this._dragArea = null,
                                this.off("mousedown", this, this._onMouseDown);
                        }),
                    a(0, s, "isPopup",
                        function () {
                            return null != this.parent;
                        }),
                    a(0, s, "zOrder", t.prototype._$get_zOrder,
                        function (t) {
                            i.superSet(z, this, "zOrder", t),
                                e.manager._checkMask();
                        }),
                    a(1, e, "manager",
                        function () {
                            return e._manager = e._manager || new P();
                        },
                        function (t) {
                            e._manager = t;
                        }),
                    e.setLockView = function (t) {
                        e.manager.setLockView(t);
                    },
                    e.lock = function (t) {
                        e.manager.lock(t);
                    },
                    e.closeAll = function () {
                        e.manager.closeAll();
                    },
                    e.getDialogsByGroup = function (t) {
                        return e.manager.getDialogsByGroup(t);
                    },
                    e.closeByGroup = function (t) {
                        return e.manager.closeByGroup(t);
                    },
                    e.CLOSE = "close",
                    e.CANCEL = "cancel",
                    e.SURE = "sure",
                    e.NO = "no",
                    e.OK = "ok",
                    e.YES = "yes",
                    e._manager = null,
                    e;
            }(z),
            at = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.ui.HBox", t);
                var s = e.prototype;
                return s.sortItem = function (t) {
                    t && t.sort(function (t, e) {
                        return t.x - e.x;
                    });
                },
                    s.changeItems = function () {
                        this._itemChanged = !1;
                        for (var t = [], e = 0, i = 0, s = this.numChildren; i < s; i++) {
                            var n = this.getChildAt(i);
                            n && n.layoutEnabled && (t.push(n), e = this._height ? this._height : Math.max(e, n.height * n.scaleY));
                        }
                        this.sortItem(t);
                        var a = 0;
                        for (i = 0, s = t.length; i < s; i++)(n = t[i]).x = a,
                            a += n.width * n.scaleX + this._space,
                            "top" == this._align ? n.y = 0 : "middle" == this._align ? n.y = .5 * (e - n.height * n.scaleY) : "bottom" == this._align && (n.y = e - n.height * n.scaleY);
                        this.changeSize();
                    },
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            this._height != t && (i.superSet(H, this, "height", t), this.callLater(this.changeItems));
                        }),
                    e.NONE = "none",
                    e.TOP = "top",
                    e.MIDDLE = "middle",
                    e.BOTTOM = "bottom",
                    e;
            }(H),
            rt = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.ui.VBox", t);
                var s = e.prototype;
                return s.changeItems = function () {
                    this._itemChanged = !1;
                    for (var t = [], e = 0, i = 0, s = this.numChildren; i < s; i++) {
                        var n = this.getChildAt(i);
                        n && n.layoutEnabled && (t.push(n), e = this._width ? this._width : Math.max(e, n.width * n.scaleX));
                    }
                    this.sortItem(t);
                    var a = 0;
                    for (i = 0, s = t.length; i < s; i++)(n = t[i]).y = a,
                        a += n.height * n.scaleY + this._space,
                        "left" == this._align ? n.x = 0 : "center" == this._align ? n.x = .5 * (e - n.width * n.scaleX) : "right" == this._align && (n.x = e - n.width * n.scaleX);
                    this.changeSize();
                },
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            this._width != t && (i.superSet(H, this, "width", t), this.callLater(this.changeItems));
                        }),
                    e.NONE = "none",
                    e.LEFT = "left",
                    e.CENTER = "center",
                    e.RIGHT = "right",
                    e;
            }(H),
            ot = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.ui.RadioGroup", Q);
                return e.prototype.createItem = function (t, e) {
                    return new Z(t, e);
                },
                    e;
            }(),
            ht = function (t) {
                function e() {
                    e.__super.call(this);
                }
                n(e, "laya.ui.Tab", Q);
                return e.prototype.createItem = function (t, e) {
                    return new D(t, e);
                },
                    e;
            }(),
            lt = function (t) {
                function e(t) {
                    this._vScrollBar = null,
                        this._hScrollBar = null,
                        void 0 === t && (t = ""),
                        e.__super.call(this, t);
                }
                n(e, "laya.ui.TextArea", t);
                var s = e.prototype;
                return s.destroy = function (e) {
                    void 0 === e && (e = !0),
                        t.prototype.destroy.call(this, e),
                        this._vScrollBar && this._vScrollBar.destroy(),
                        this._hScrollBar && this._hScrollBar.destroy(),
                        this._vScrollBar = null,
                        this._hScrollBar = null;
                },
                    s.initialize = function () {
                        this.width = 180,
                            this.height = 150,
                            this._tf.wordWrap = !0,
                            this.multiline = !0;
                    },
                    s.onVBarChanged = function (t) {
                        this._tf.scrollY != this._vScrollBar.value && (this._tf.scrollY = this._vScrollBar.value);
                    },
                    s.onHBarChanged = function (t) {
                        this._tf.scrollX != this._hScrollBar.value && (this._tf.scrollX = this._hScrollBar.value);
                    },
                    s.changeScroll = function () {
                        var t = this._vScrollBar && this._tf.maxScrollY > 0,
                            e = this._hScrollBar && this._tf.maxScrollX > 0,
                            i = t ? this._width - this._vScrollBar.width : this._width,
                            s = e ? this._height - this._hScrollBar.height : this._height,
                            n = this._tf.padding || I.labelPadding;
                        this._tf.width = i,
                            this._tf.height = s,
                            this._vScrollBar && (this._vScrollBar.x = this._width - this._vScrollBar.width - n[2], this._vScrollBar.y = n[1], this._vScrollBar.height = this._height - (e ? this._hScrollBar.height : 0) - n[1] - n[3], this._vScrollBar.scrollSize = 1, this._vScrollBar.thumbPercent = s / Math.max(this._tf.textHeight, s), this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY), this._vScrollBar.visible = t),
                            this._hScrollBar && (this._hScrollBar.x = n[0], this._hScrollBar.y = this._height - this._hScrollBar.height - n[3], this._hScrollBar.width = this._width - (t ? this._vScrollBar.width : 0) - n[0] - n[2], this._hScrollBar.scrollSize = Math.max(.033 * i, 1), this._hScrollBar.thumbPercent = i / Math.max(this._tf.textWidth, i), this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX), this._hScrollBar.visible = e);
                    },
                    s.scrollTo = function (t) {
                        this.commitMeasure(),
                            this._tf.scrollY = t;
                    },
                    a(0, s, "scrollY",
                        function () {
                            return this._tf.scrollY;
                        }),
                    a(0, s, "width", t.prototype._$get_width,
                        function (t) {
                            i.superSet(it, this, "width", t),
                                this.callLater(this.changeScroll);
                        }),
                    a(0, s, "hScrollBar",
                        function () {
                            return this._hScrollBar;
                        }),
                    a(0, s, "height", t.prototype._$get_height,
                        function (t) {
                            i.superSet(it, this, "height", t),
                                this.callLater(this.changeScroll);
                        }),
                    a(0, s, "maxScrollX",
                        function () {
                            return this._tf.maxScrollX;
                        }),
                    a(0, s, "vScrollBarSkin",
                        function () {
                            return this._vScrollBar ? this._vScrollBar.skin : null;
                        },
                        function (t) {
                            null == this._vScrollBar && (this.addChild(this._vScrollBar = new et()), this._vScrollBar.on("change", this, this.onVBarChanged), this._vScrollBar.target = this._tf, this.callLater(this.changeScroll)),
                                this._vScrollBar.skin = t;
                        }),
                    a(0, s, "hScrollBarSkin",
                        function () {
                            return this._hScrollBar ? this._hScrollBar.skin : null;
                        },
                        function (t) {
                            null == this._hScrollBar && (this.addChild(this._hScrollBar = new $()), this._hScrollBar.on("change", this, this.onHBarChanged), this._hScrollBar.mouseWheelEnable = !1, this._hScrollBar.target = this._tf, this.callLater(this.changeScroll)),
                                this._hScrollBar.skin = t;
                        }),
                    a(0, s, "vScrollBar",
                        function () {
                            return this._vScrollBar;
                        }),
                    a(0, s, "maxScrollY",
                        function () {
                            return this._tf.maxScrollY;
                        }),
                    a(0, s, "scrollX",
                        function () {
                            return this._tf.scrollX;
                        }),
                    e;
            }(it); !
                function (t) {
                    function e() {
                        this._uiView = null,
                            this.isCloseOther = !1,
                            e.__super.call(this);
                    }
                    n(e, "laya.ui.AsynDialog", nt);
                    var i = e.prototype;
                    i.createView = function (t) {
                        this._uiView = t;
                    },
                        i._open = function (t, e, i) {
                            this.isModal = t,
                                this.isCloseOther = e,
                                nt.manager.lock(!0),
                                this._uiView ? this.onCreated() : this.onOpen();
                        },
                        i.onCreated = function () {
                            this.createUI(),
                                this.onOpen();
                        },
                        i.createUI = function () {
                            laya.ui.View.prototype.createView.call(this, this._uiView),
                                this._uiView = null,
                                this._dealDragArea();
                        },
                        i.onOpen = function () {
                            nt.manager.open(this, this.isCloseOther),
                                nt.manager.lock(!1);
                        },
                        i.close = function (t, e) {
                            void 0 === e && (e = !0),
                                nt.manager.close(this),
                                this.onClose();
                        },
                        i.onClose = function () { },
                        i.destroy = function (t) {
                            void 0 === t && (t = !0),
                                laya.ui.View.prototype.destroy.call(this, t),
                                this._uiView = null,
                                this.onDestroy();
                        },
                        i.onDestroy = function () { };
                }();
        i.__init([z]);
    }(window, document, Laya),
    "function" == typeof define && define.amd && define("laya.core", ["require", "exports"],
        function (t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            for (var i in Laya) {
                var s = Laya[i];
                s && s.__isclass && (e[i] = s);
            }
        });

var wanzhu, SeedRandom = function () {
    function t() {
        this.seed = 1;
    }
    return t.prototype.randomInt = function (t, e) {
        t = t || 0,
            e = e || 1,
            e += 1;
        var i = this.random();
        return Math.floor(t + i * (e - t));
    },
        t.prototype.random = function () {
            return this.seed = (9301 * this.seed + 49297) % 233280,
                this.seed / 233280;
        },
        t;
}();

!
    function (t) {
        var e = function () {
            function t() {
                this.net = null,
                    this.reLink = null,
                    this.mToken = "",
                    this.mID = "",
                    this.mUrl = "",
                    this.mSession = 0;
            }
            return t.prototype.onInit = function (t, e, i) {
                this.mUrl = e,
                    this.mID = t,
                    this.mToken = i,
                    console.log("初始化网络连接"),
                    this.net = new netCore(),
                    this.net.init(Handler.create(this, this.onConnected), Handler.create(this, this.onDealClose), null, Handler.create(this, this.onDealMessage, null, !1), Handler.create(this, this.showMask, null, !1)),
                    this.net.connectURL(e);
            },
                t.prototype.onConnected = function () {
                    console.log("连接服务器成功");
                    var t = this.net.createMessage();
                    t.addCmd(1),
                        t.addLong(GameMain.app.mWX.mUID),
                        t.addString(this.mID);
                    var e = Math.floor(new Date().getTime() / 1e3);
                    t.addLong(e),
                        t.addString(md5(this.mToken + e + this.mID + GameMain.app.mWX.mUID)),
                        this.net.rpc(t);
                },
                t.prototype.onStar = function () {
                    console.log("发送开始游戏");
                    var t = this.net.createMessage();
                    t.addCmd(5),
                        t.addString(GameMain.app.mGamePvp.room.roomid),
                        t.addLong(GameMain.app.mWX.mUID),
                        this.net.rpc(t);
                },
                t.prototype.onClash = function (t) {
                    console.log("发送撞死");
                    var e = this.net.createMessage();
                    e.addCmd(7),
                        e.addString(GameMain.app.mGamePvp.room.roomid),
                        e.addLong(1),
                        e.addLong(t),
                        this.net.postMessage(e);
                },
                t.prototype.onWin = function () {
                    console.log("发送结果");
                    var t = this.net.createMessage();
                    t.addCmd(6),
                        t.addString(GameMain.app.mGamePvp.room.roomid),
                        this.net.postMessage(t);
                },
                t.prototype.onAgain = function () {
                    console.log("发送结果");
                    var t = this.net.createMessage();
                    t.addCmd(8),
                        t.addString(GameMain.app.mGamePvp.room.roomid),
                        this.net.rpc(t);
                },
                t.prototype.onClear = function () {
                    this.net.close();
                },
                t.prototype.reConnect = function () {
                    this.net.close(),
                        this.net = new netCore(),
                        this.net.init(Handler.create(this, this.onConnected), Handler.create(this, this.onDealClose), null, Handler.create(this, this.onDealMessage, null, !1), Handler.create(this, this.showMask, null, !1)),
                        this.net.connectURL(this.mUrl),
                        this.mSession > 0 && this.net.setSession(this.mSession);
                },
                t.prototype.onDealClose = function () {
                    console.log("断线了"),
                        null != GameMain.app.mGamePvp && GameMain.app.mGamePvp.reset(),
                        this.net.close();
                },
                t.prototype.onDealMessage = function (t) {
                    var e = t.getCmd();
                    console.log(GameMain.app.getServerTime() + ":0x" + e.toString(16)),
                        4097 == e ? GameMain.app.mGamePvp.onLogined(t) : 268435457 == e ? GameMain.app.mGamePvp.onJoin(t) : 268435458 == e ? GameMain.app.mGamePvp.onLine(t) : 268435459 == e ? GameMain.app.mGamePvp.offLine(t) : 268435460 == e ? GameMain.app.mGamePvp.onLeave(t) : 268435461 == e ? GameMain.app.mGamePvp.showMarks(t) : 4101 == e ? GameMain.app.mGamePvp.onStar(t) : 4102 == e ? GameMain.app.mGamePvp.onWin(t) : 4103 == e ? GameMain.app.mGamePvp.onClash(t) : 4104 == e && GameMain.app.mGamePvp.onPlayAgain(t);
                },
                t.prototype.showMask = function (t) { },
                t;
        }();
        t.gnet = e;
    }(wanzhu || (wanzhu = {}));

var ui, md5 = require("/ultima/md5.min.js"),
    base64 = require("/ultima/base64.min.js"),
    HttpRequest = Laya.HttpRequest,
    wxMinPro = function () {
        function t() {
            this.mOpenid = "",
                this.mVersion = "1001",
                this.mUID = 0,
                this.mADKeep = 0,
                this.mCards = 0,
                this.mMyRank = 0,
                this.mMoreGames = [],
                this.mWudi = 10,
                this.mHttpCall = null,
                this.mURL = "https://mas.wanzhushipin.cn/uo/",
                this.mUser = {},
                this.mSaveImage = "",
                this.mLaunch = null,
                this.mChallengeID = 0,
                this.mShareID = 0,
                this.mChallenge = null,
                this.mMarks = [0, 0, 0, 0],
                this.mQR = 0,
                this.mQRs = {},
                this.mLogined = !1;
        }
        return t.prototype.initWX = function () {
            var t = wx.getLaunchOptionsSync();
            if (this.mLaunch = {},
                this.mLaunch.query = t.query, this.mLaunch.scene = t.scene, this.mLaunch.isSticky = t.isSticky, this.mLaunch.shareTicket = t.shareTicket, null != this.mLaunch.query.scene) {
                console.log(this.mLaunch.scene);
                var e = decodeURIComponent(this.mLaunch.query.scene);
                console.log(e);
                for (var i = e.split("&"), s = 0; s < i.length; s++) {
                    var n = i[s].split("=");
                    2 == n.length && (this.mLaunch.query[n[0]] = n[1]);
                }
            }
            console.log(this.mLaunch),
                // this.checkAuthorize(),

                GameMain.app.mGameScene.clearPage()
            GameMain.app.mGameRank.showGroupRank()
            GameMain.app.mGameScene.showPage()
            // wx.onShow(this.wxShow),
            // wx.onHide(this.wxHide);
        },
            t.prototype.wxHide = function (t) {
                console.log("hide"),
                    console.log(t),
                    null != GameMain.app.mGamePvp && GameMain.app.mGamePvp.onHide();
            },
            t.prototype.wxShow = function (t) {
                var e = GameMain.app.mWX,
                    i = {};
                if (i.query = t.query, i.scene = t.scene, i.shareTicket = t.shareTicket, i.isSticky = t.isSticky, null != i.query.scene) for (var s = decodeURIComponent(i.query.scene).split("&"), n = 0; n < s.length; n++) {
                    var a = s[n].split("=");
                    2 == a.length && (i.query[a[0]] = a[1]);
                }
                if (console.log(i), wx.hideLoading({}), null != GameMain.app.mGamePvp && GameMain.app.mGamePvp.reset(), GameMain.app.mWX.mUID <= 0) GameMain.app.mWX.checkAuthorize();
                else if (void 0 !== i.query.id) {
                    if (i.scene == e.mLaunch.scene && i.shareTicket == e.mLaunch.shareTicket && i.query.id == e.mLaunch.query.id && i.query.gift == e.mLaunch.query.gift && i.query.map == e.mLaunch.query.map && i.query.type == e.mLaunch.query.type && i.query.help == e.mLaunch.query.help && 0 == GameMain.app.mGameScene.showError.visible) return Number(i.query.id) ? 1 == GameMain.app.mGameScene.mPage.visible && 1 == GameMain.app.mGameScene.mChallenge.visible ? void console.log("什么都不做3") : (e.mChallengeID = Number(e.mLaunch.query.id), void (e.mChallengeID > 0 && (GameMain.app.mGameScene.mSolo = 1, 1 == Number(e.mLaunch.query.help) && (GameMain.app.mGameScene.mSolo = 0), e.showChallenge(!1)))) : void console.log("什么都不做2");
                    e.mLaunch = i,
                        GameMain.app.mGameScene.btnConnect.visible = !1,
                        GameMain.app.mGameScene.showError.visible = !1,
                        GameMain.app.mGameScene.mPlayed = !1,
                        GameMain.app.mGameScene.unShowGame(),
                        void 0 !== i.query.gift && GameMain.app.mWX.dealCards(Number(i.query.gift), i.shareTicket),
                        0 == e.mLaunch.query.id ? 8 == Number(i.query.type) ? void 0 === e.mLaunch.shareTicket || "undefined" == e.mLaunch.shareTicket || "" == e.mLaunch.shareTicket ? GameMain.app.mGameScene.showPage() : (GameMain.app.mGameScene.mMapLevel = Number(e.mLaunch.query.map), GameMain.app.mGameScene.clearPage(), GameMain.app.mGameRank.showGroupRank()) : GameMain.app.mGameScene.showPage() : (e.mChallengeID = Number(e.mLaunch.query.id), e.mChallengeID > 0 && (GameMain.app.mGameScene.mSolo = 1, 1 == Number(e.mLaunch.query.help) && (GameMain.app.mGameScene.mSolo = 0), e.showChallenge(!1)));
                } else console.log("什么都不做1");
            },
            t.prototype.checkAuthorize = function () {
                var t = this;
                wx.getSetting({
                    success: function (e) {
                        null == e.authSetting["scope.userInfo"] ? t.dealAuthorize() : 1 == e.authSetting["scope.userInfo"] ? t.checkSession() : t.openSeting();
                    },
                    fail: function (e) {
                        t.dealAuthorize();
                    }
                });
            },
            t.prototype.dealAuthorize = function () {
                if (GameMain.app.mGameScene.mSDKVersion >= "3.0.1") GameMain.app.mGameScene.showLogin();
                else {
                    var t = this;
                    wx.authorize({
                        scope: "scope.userInfo",
                        success: function (e) {
                            t.checkSession();
                        },
                        fail: function (e) {
                            t.openSeting();
                        }
                    });
                }
            },
            t.prototype.openSeting = function () {
                var t = this;
                wx.showModal({
                    title: "提示",
                    content: "游戏需要您授权头像和用户名信息",
                    showCancel: !1,
                    cancelText: "取消",
                    confirmText: "确认",
                    success: function (e) {
                        wx.openSetting({
                            success: function (e) {
                                0 == e.authSetting["scope.userInfo"] ? t.openSeting() : t.checkSession();
                            },
                            fail: function (e) {
                                t.openSeting();
                            }
                        });
                    }
                });
            },
            t.prototype.checkSession = function () {
                var t = this,
                    e = laya.wx.mini.MiniLocalStorage.getItem("openid");
                e.length <= 2 ? t.login() : (this.mOpenid = e, this.mUser.openid = this.mOpenid, GameMain.app.mGameScene.mSDKVersion >= "3.0.1" ? t.login() : wx.checkSession({
                    success: function (e) {
                        t.getUserInfo();
                    },
                    fail: function (e) {
                        t.login();
                    }
                }));
            },
            t.prototype.login = function () {
                // var t = this;
                // wx.login({
                //     success: function(e) {
                //         t.checkCode(e.code);
                //     }
                // });
                console.log('login-------------')
            },
            t.prototype.checkCode = function (t) {
                var e = this;
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            var i = null;
                            i = "string" == typeof t ? util.getJSON(t) : util.getJSON(e.mHttpCall.data),
                                console.log(i),
                                0 == i.code ? (e.mOpenid = i.openid, e.mUser.openid = e.mOpenid, laya.wx.mini.MiniLocalStorage.setItem("openid", e.mOpenid), e.getUserInfo()) : console.log(i),
                                e.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError),
                    console.log("uo/check");
                var i = [];
                i.code = t;
                var s = this.mURL + "1.0.1/login/check?" + util.getUrlParams(i);
                this.mHttpCall.send(s, null, "get", "text");
            },
            t.prototype.reportMark = function (t) {
                var e = this;
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this, function (t) {
                        wx.hideLoading({});
                        var i = null;
                        if (i = "string" == typeof t ? util.getJSON(t) : util.getJSON(e.mHttpCall.data),
                            console.log(i),
                            0 == i.code) {
                            var s = Number(i.rank);
                            s > 0 && e.mMarks[0] > 0 && (e.mMyRank = s),
                                e.mShareID = i.id,
                                Number(i.challengeid) > 0 && (e.mChallenge.data = i.data),
                                e.mCards = Number(i.cards),
                                GameMain.app.mGameScene.mShares = 0;
                        }
                        e.mHttpCall = null;
                    }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError),
                    console.log("uo/report");
                var i = [];
                i.mark = t,
                    i.uid = this.mUID,
                    i.id = this.mChallengeID,
                    console.log(i),
                    1 == GameMain.app.mGameScene.mUseCards ? i.continue = 1 : i.continue = 0,
                    i.level = GameMain.app.mGameScene.mMapLevel,
                    i.shares = GameMain.app.mGameScene.mShares,
                    void 0 !== this.mLaunch.query.help ? i.help = Number(this.mLaunch.query.help) : i.help = 0;
                var s = this.mURL + "1.1.5/uo/report?" + util.getUrlParams(i, "1.0.3");
                wx.showLoading({
                    title: "",
                    mask: !0
                }),
                    this.mHttpCall.send(s, null, "get", "text");
            },
            t.prototype.queryCards = function () {
                var t = this;
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (e) {
                            var i = null;
                            i = "string" == typeof e ? util.getJSON(e) : util.getJSON(t.mHttpCall.data),
                                wx.hideLoading({}),
                                0 == i.code && (t.mCards = Number(i.cards), GameMain.app.mGameGift.show()),
                                t.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError),
                    wx.showLoading({
                        title: "",
                        mask: !0
                    });
                var e = [];
                e.uid = this.mUID,
                    console.log("uo/querycards");
                var i = this.mURL + "1.0.6/uo/querycards?" + util.getUrlParams(e, "1.0.5");
                this.mHttpCall.send(i, null, "get", "text");
            },
            t.prototype.dealCards = function (t, e) {
                var i = this;
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            var e = null;
                            0 == (e = "string" == typeof t ? util.getJSON(t) : util.getJSON(i.mHttpCall.data)).code && (i.mCards = Number(e.cards.cards), wx.postMessage({
                                type: "send",
                                mark: Number(e.cards.mark),
                                level: 0,
                                best: i.mMarks[0],
                                user: GameMain.app.mWX.mUser
                            }), i.mMarks[0] = Number(e.cards.mark), i.mMarks[1] = Number(e.cards.mark1), i.mMarks[2] = Number(e.cards.mark2), i.mMarks[3] = Number(e.cards.mark3)),
                                i.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError);
                var s = [];
                s.uid = this.mUID,
                    null != t ? s.gift = t : void 0 !== this.mLaunch.query.gift ? s.gift = Number(this.mLaunch.query.gift) : s.gift = 0,
                    null != e ? s.ticket = e : void 0 !== this.mLaunch.shareTicket && (s.ticket = this.mLaunch.shareTicket),
                    console.log("uo/querycards");
                var n = this.mURL + "1.1.5/uo/querycards?" + util.getUrlParams(s, "1.0.3");
                this.mHttpCall.send(n, null, "get", "text");
            },
            t.prototype.createQR = function (t) {
                var e = this;
                if (this.mQR = t, null != this.mQRs[this.mShareID]) return console.log("已经有了"),
                    void (1 == this.mQR ? GameMain.app.mGameScene.saveimage1(this.mQRs[this.mShareID]) : GameMain.app.mGameScene.saveimage2(this.mQRs[this.mShareID]));
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            var i = null;
                            if (i = "string" == typeof t ? util.getJSON(t) : util.getJSON(e.mHttpCall.data), console.log(i), 0 == i.code) {
                                var s = i.url;
                                s.length > 10 ? (e.mQRs[e.mShareID] = s, 1 == e.mQR ? Laya.loader.load(s, Laya.Handler.create(GameMain.app.mGameScene, GameMain.app.mGameScene.saveimage1, [s]), null) : Laya.loader.load(s, Laya.Handler.create(GameMain.app.mGameScene, GameMain.app.mGameScene.saveimage2, [s]), null)) : 1 == e.mQR ? GameMain.app.mGameScene.saveimage1("") : GameMain.app.mGameScene.saveimage2("");
                            } else 1 == e.mQR ? GameMain.app.mGameScene.saveimage1("") : GameMain.app.mGameScene.saveimage2("");
                            e.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError);
                var i = [];
                i.uid = this.mUID,
                    i.id = this.mShareID,
                    console.log("uo/qr");
                var s = this.mURL + "1.0.5/uo/qr?" + util.getUrlParams(i, "1.0.5");
                wx.showLoading({
                    title: "生成图片中",
                    mask: !0
                }),
                    this.mHttpCall.send(s, null, "get", "text");
            },
            t.prototype.getUserInfo = function () {
                debugger;
                if (GameMain.app.mGameScene.mSDKVersion >= "3.0.1") GameMain.app.mGameScene.showLogin();
                else {
                    var t = this;
                    wx.getUserInfo({
                        withCredentials: !0,
                        lang: "zh_CN",
                        success: function (e) {
                            debugger
                            var i = e.userInfo;
                            t.mUser.nickName = i.nickName;
                            var s = i.avatarUrl;
                            "0" == s.charAt(s.length - 1) && "/" == s.charAt(s.length - 2) && (s = s.substr(0, s.length - 2), s += "/132"),
                                t.mUser.avatarUrl = s,
                                t.mUser.gender = i.gender,
                                t.mUser.province = i.province,
                                t.mUser.city = i.city,
                                t.mUser.country = i.country,
                                t.loginServer(e.rawData, e.signature, e.encryptedData, e.iv);
                        },
                        fail: function (e) {
                            debugger
                            t.login();
                        }
                    });
                }
            },
            t.prototype.onLogin = function (t) {
                var e = t.userInfo;
                this.mUser.nickName = e.nickName;
                var i = e.avatarUrl;
                "0" == i.charAt(i.length - 1) && "/" == i.charAt(i.length - 2) && (i = i.substr(0, i.length - 2), i += "/132"),
                    this.mUser.avatarUrl = i,
                    this.mUser.gender = e.gender,
                    this.mUser.province = e.province,
                    this.mUser.city = e.city,
                    this.mUser.country = e.country,
                    this.loginServer(t.rawData, t.signature, t.encryptedData, t.iv);
            },
            t.prototype.loginServer = function (t, e, i, s) {
                debugger
                var n = this;
                console.log("openid:" + this.mOpenid),
                    this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            var e = null;
                            0 == (e = "string" == typeof t ? util.getJSON(t) : util.getJSON(n.mHttpCall.data)).code && (Laya.Browser.window.sharedCanvas.width = Laya.stage.width, Laya.Browser.window.sharedCanvas.height = Laya.stage.height, n.mUID = e.uid, n.mMoreGames = e.games, n.mMarks[0] = Number(e.marks.mark), n.mMarks[1] = Number(e.marks.mark1), n.mMarks[2] = Number(e.marks.mark2), n.mMarks[3] = Number(e.marks.mark3), wx.postMessage({
                                type: "send",
                                mark: n.mMarks[0],
                                level: 0,
                                best: n.mMarks[0] - 1,
                                user: GameMain.app.mWX.mUser
                            }), n.mADKeep = Number(e.ad_onoff), Number(e.share_onoff) > 0 ? (this.mWudi = Number(e.share_onoff), GameMain.app.mGameResult.wudi = !0) : (this.mWudi = 0, GameMain.app.mGameResult.wudi = !1), null != n.mLaunch && Number(n.mLaunch.query.id) > 0 ? (n.mChallengeID = n.mLaunch.query.id, GameMain.app.mGameScene.mSolo = 1, 1 == Number(n.mLaunch.query.help) && (GameMain.app.mGameScene.mSolo = 0), n.showChallenge(!1)) : (wx.hideLoading({}), 8 == Number(n.mLaunch.query.type) ? void 0 === n.mLaunch.shareTicket || "undefined" == n.mLaunch.shareTicket || "" == n.mLaunch.shareTicket ? (n.mLaunch.shareTicket = "", GameMain.app.mGameScene.showPage()) : (GameMain.app.mGameScene.mMapLevel = Number(n.mLaunch.query.map), GameMain.app.mGameScene.clearPage(), GameMain.app.mGameRank.showGroupRank()) : GameMain.app.mGameScene.showPage())),
                                console.log(e),
                                -3 == e.code && n.login(),
                                -999 == e.code && n.onHttpRequestError("error"),
                                n.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError),
                    console.log("uo/login");
                var a = [];
                a.secen = 0,
                    Laya.Browser.onIOS ? a.platform = 2 : a.platform = 1,
                    a.openid = this.mOpenid,
                    a.ver = this.mVersion,
                    a.raw = base64.Base64.encodeURI(t),
                    a.data = base64.Base64.encodeURI(i),
                    a.signature = e,
                    a.iv = base64.Base64.encodeURI(s),
                    void 0 !== this.mLaunch.query.gift ? a.gift = Number(this.mLaunch.query.gift) : a.gift = 0,
                    void 0 !== this.mLaunch.query.client && (a.client = this.mLaunch.query.client),
                    null != this.mLaunch && null != this.mLaunch.query.uid && Number(this.mLaunch.query.uid) != this.mUID && (a.friend = this.mLaunch.query.uid);
                var r = this.mURL + "1.1.3/uo/login?" + util.getUrlParams(a);
                wx.showLoading({
                    title: "获取用户信息",
                    mask: !0
                }),
                    this.mHttpCall.send(r, null, "get", "text");
            },
            t.prototype.showChallenge = function (t) {
                var e = this;
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            wx.hideLoading({});
                            var i = null;
                            if (i = "string" == typeof t ? util.getJSON(t) : util.getJSON(e.mHttpCall.data), console.log(i), 0 == i.code) {
                                var s = Number(i.best);
                                s > e.mMarks[0] && (wx.postMessage({
                                    type: "send",
                                    mark: s,
                                    level: 0,
                                    best: e.mMarks[0],
                                    user: GameMain.app.mWX.mUser
                                }), e.mMarks[0] = s),
                                    e.mChallenge = i,
                                    e.mMoreGames = i.games,
                                    GameMain.app.mGameScene.showChallenge(e.mChallenge);
                            } else GameMain.app.mGameScene.showPage();
                            e.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError),
                    1 == t && wx.showLoading({
                        title: "",
                        mask: !0
                    }),
                    console.log("uo/Challenge");
                var i = [];
                i.uid = this.mUID,
                    i.id = this.mChallengeID,
                    void 0 !== this.mLaunch.shareTicket && (i.ticket = this.mLaunch.shareTicket);
                var s = this.mURL + "1.1.5/uo/challenge?" + util.getUrlParams(i, "1.0.3");
                this.mHttpCall.send(s, null, "get", "text");
            },
            t.prototype.showWorldRank = function (t) {
                void 0 === t && (t = 0);
                var e = this;
                wx.showLoading({
                    title: "",
                    mask: !0
                }),
                    this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            var i = null;
                            if (i = "string" == typeof t ? util.getJSON(t) : util.getJSON(e.mHttpCall.data), console.log(i), 0 == i.code) {
                                var s = Number(i.rank);
                                s > 0 && e.mMarks[0] > 0 && (e.mMyRank = s);
                                for (var n = GameMain.app.mGameRank.wRankData,
                                    a = i.data,
                                    r = 0; r < a.length; r++) {
                                    var o = {};
                                    o.name = base64.Base64.decode(a[r].name);
                                    var h = base64.Base64.decode(a[r].avatar);
                                    "0" == h.charAt(h.length - 1) && "/" == h.charAt(h.length - 2) && (h = h.substr(0, h.length - 2), h += "/132"),
                                        o.avatar = h,
                                        o.mark = Math.floor(a[r].hismark / 10),
                                        o.city = a[r].city,
                                        o.uid = a[r].uid,
                                        o.map1 = Math.floor(a[r].mark1 / 10),
                                        o.map2 = Math.floor(a[r].mark2 / 10),
                                        o.map3 = Math.floor(a[r].mark3 / 10);
                                    for (var l = GameMain.app.mGameScene.mLevel,
                                        c = GameMain.app.mGameScene.mLevelName,
                                        u = l.length,
                                        d = 0; d < l.length; d++) if (o.mark < l[d]) {
                                            u = d + 1;
                                            break;
                                        }
                                    o.level = c[u - 1],
                                        n.push(o);
                                }
                                for (r = 0; r < n.length; r++) n[r].rank = r + 1;
                                GameMain.app.mGameRank.showWorldRank(n),
                                    wx.hideLoading({});
                            }
                            e.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError),
                    console.log("uo/rank");
                var i = [];
                i.uid = this.mUID,
                    i.page = t;
                var s = this.mURL + "1.1.0/uo/rank?" + util.getUrlParams(i);
                this.mHttpCall.send(s, null, "get", "text");
            },
            t.prototype.onHttpRequestError = function (t) {
                wx.hideLoading({}),
                    this.mHttpCall = null,
                    GameMain.app.mGameScene.showNetError(),
                    console.log("onHttpRequestError:" + t);
            },
            t.prototype.openAlbumSeting = function () {
                var t = this;
                wx.showModal({
                    title: "提示",
                    content: "游戏需要您授权保存图片到相册",
                    showCancel: !1,
                    cancelText: "取消",
                    confirmText: "确认",
                    success: function (e) {
                        wx.openSetting({
                            success: function (e) {
                                0 == e.authSetting["scope.writePhotosAlbum"] || t.saveToAlbum();
                            }
                        });
                    }
                });
            },
            t.prototype.dealAlbum = function () {
                var t = this;
                wx.authorize({
                    scope: "scope.writePhotosAlbum",
                    success: function (e) {
                        t.saveToAlbum();
                    },
                    fail: function (e) {
                        t.openAlbumSeting();
                    }
                });
            },
            t.prototype.saveImage = function (t) {
                this.mSaveImage = t;
                var e = this;
                wx.getSetting({
                    success: function (t) {
                        null == t.authSetting["scope.writePhotosAlbum"] ? e.dealAlbum() : 1 == t.authSetting["scope.writePhotosAlbum"] ? e.saveToAlbum() : e.openAlbumSeting();
                    },
                    fail: function (t) {
                        e.dealAlbum();
                    }
                });
            },
            t.prototype.saveToAlbum = function () {
                wx.saveImageToPhotosAlbum({
                    filePath: this.mSaveImage,
                    success: function (t) {
                        wx.showToast({
                            title: "保存成功",
                            icon: "success",
                            image: "",
                            duration: 2e3
                        });
                    }
                });
            },
            t.prototype.initMore = function (t, e) {
                for (var i = 0,
                    s = 0; s < this.mMoreGames.length; s++) 1 == Laya.Browser.onAndriod && 2 == Number(this.mMoreGames[s].sys) && (i += Number(this.mMoreGames[s].random)),
                        1 == Laya.Browser.onIOS && 1 == Number(this.mMoreGames[s].sys) && (i += Number(this.mMoreGames[s].random)),
                        0 == Number(this.mMoreGames[s].sys) && (i += Number(this.mMoreGames[s].random));
                var n = Math.floor(Math.random() * i) - 1;
                i = 0;
                for (s = 0; s < this.mMoreGames.length; s++) if (0 == Number(this.mMoreGames[s].sys) ? i += Number(this.mMoreGames[s].random) : 1 == Laya.Browser.onAndriod && 2 == Number(this.mMoreGames[s].sys) ? i += Number(this.mMoreGames[s].random) : 1 == Laya.Browser.onIOS && 1 == Number(this.mMoreGames[s].sys) && (i += Number(this.mMoreGames[s].random)), n <= i) return t.name = this.mMoreGames[s].id,
                    void (t.skin = 0 == e ? util.getCDN() + this.mMoreGames[s].icon : util.getCDN() + this.mMoreGames[s].icon + ".btn2.png");
            },
            t.prototype.getMoreUrl = function (t) {
                for (var e = 0; e < this.mMoreGames.length; e++) if (Number(t) == Number(this.mMoreGames[e].id)) return this.mMoreGames[e].url;
                return "logo5.jpg";
            },
            t.prototype.reportADHit = function (t) {
                var e = this;
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            e.mHttpCall = null;
                        }),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError),
                    console.log("uo/data");
                var i = [];
                i.uid = this.mUID,
                    i.id = t;
                var s = this.mURL + "1.1.3/uo/data?" + util.getUrlParams(i, "1.0.9");
                this.mHttpCall.send(s, null, "get", "text");
            },
            t.prototype.onPvp = function (t) {
                var e = this;
                this.mHttpCall = new HttpRequest(),
                    this.mHttpCall.once(Events.ERROR, this, this.onHttpRequestError);
                var i = "",
                    s = [];
                if (0 == t) this.mHttpCall.once(Events.COMPLETE, this,
                    function (t) {
                        var i = null;
                        i = "string" == typeof t ? util.getJSON(t) : util.getJSON(e.mHttpCall.data),
                            console.log(i),
                            0 == i.code && GameMain.app.mGamePvp.showMaster(i),
                            e.mHttpCall = null;
                    }),
                    console.log("pvp/SelectServer"),
                    s.uid = this.mUID,
                    i = this.mURL + "1.1.2/pvp/SelectServer?" + util.getUrlParams(s, "1.0.9");
                else {
                    this.mHttpCall.once(Events.COMPLETE, this,
                        function (t) {
                            var i = null;
                            i = "string" == typeof t ? util.getJSON(t) : util.getJSON(e.mHttpCall.data),
                                console.log(i),
                                0 == i.code && GameMain.app.mGamePvp.showMaster(i),
                                e.mHttpCall = null;
                        }),
                        console.log("pvp/actionPvpQuery"),
                        s.uid = this.mUID,
                        s.id = t;
                    var n = 0;
                    n = void 0 === this.mLaunch.query.type ? 11 : Number(this.mLaunch.query.type),
                        s.type = n,
                        i = this.mURL + "1.1.2/pvp/pvpquery?" + util.getUrlParams(s, "1.0.9");
                }
                wx.showLoading({
                    title: "",
                    mask: !0
                }),
                    this.mHttpCall.send(i, null, "get", "text");
            },
            t;
    }(),
    util = function () {
        function t() { }
        return t.getUrlParams = function (e, i) {
            void 0 === i && (i = "1.0.1");
            var s = !1,
                n = new Array();
            for (var a in e) if ("string" == typeof e[a] || "number" == typeof e[a]) {
                "tick" == a && (s = !0);
                var r = a.toLocaleLowerCase();
                e[r] = e[a],
                    n.push(r);
            }
            if (0 == s) {
                var o = new Date();
                e.tick = Math.floor(o.getTime() / 1e3),
                    n.push("tick");
            }
            n.sort(function (t, e) {
                return t > e ? 1 : -1;
            });
            for (var h = "",
                l = 0; l < n.length; l++) h = h + n[l] + "=" + e[n[l]] + "&";
            var c = "";
            return c = md5(null != t.mKeys[i] ? h + "key=" + t.mKeys[i] : h + "key=fatality"),
                h + "key=" + c;
        },
            t.getCDN = function () {
                return "https://t.wanzhucdn.com/xcx/zhishen/";
            },
            t.getJSON = function (t) {
                if ("" == t || null == t) return {
                    code: -999
                };
                var e = t.indexOf("{", 0);
                return t = t.substr(e, t.length - e),
                    JSON.parse(t);
            },
            t.mKeys = {
                "1.0.1": "fatality",
                "1.0.3": "vicky2009",
                "1.0.5": "kivi2017",
                "1.0.7": "kivi2018",
                "1.0.9": "fczlm3"
            },
            t;
    }(),
    NetTable = function () {
        function t() {
            this.rows = [],
                this.cols = {};
        }
        return t.prototype.rowCount = function () {
            return this.rows.length;
        },
            t.prototype.colCount = function () {
                var t = 0;
                for (var e in this.cols) t++;
                return t;
            },
            t.prototype.addCol = function (t, e) {
                return null == this.cols[t] && (this.cols[t] = e, !0);
            },
            t.prototype.addRow = function () {
                var t = new Object();
                return this.rows.push(t);
            },
            t.prototype.delRow = function (t) {
                return !(t < 1) && (!(this.rows.length < t) && (this.rows.splice(t - 1, 1), !0));
            },
            t.prototype.delRows = function () {
                this.rows.splice(0, this.rows.length);
            },
            t.prototype.setLong = function (t, e, i) {
                if (t < 1) return !1;
                if (this.rows.length < t) return !1;
                return this.rows[t - 1][e] = i,
                    !0;
            },
            t.prototype.getLong = function (t, e) {
                if (t < 1) return - 999999;
                if (this.rows.length < t) return - 999999;
                return this.rows[t - 1][e];
            },
            t.prototype.setString = function (t, e, i) {
                if (t < 1) return !1;
                if (this.rows.length < t) return !1;
                return this.rows[t - 1][e] = i,
                    !0;
            },
            t.prototype.getString = function (t, e) {
                if (t < 1) return "";
                if (this.rows.length < t) return "";
                return this.rows[t - 1][e];
            },
            t.prototype.getTable = function (t, e) {
                if (t < 1) return null;
                if (this.rows.length < t) return null;
                return this.rows[t - 1][e];
            },
            t.prototype.setTable = function (t, e, i) {
                if (t < 1) return !1;
                if (this.rows.length < t) return !1;
                return this.rows[t - 1][e] = i,
                    !0;
            },
            t.prototype.encodec = function () {
                var e = new Byte();
                e.endian = Socket.BIG_ENDIAN,
                    e.writeByte(105),
                    e.writeInt32(this.colCount()),
                    e.writeByte(105),
                    e.writeInt32(this.rowCount());
                for (var i in this.cols) e.writeByte(115),
                    e.writeInt16(i.length),
                    e.writeUTFBytes(i),
                    e.writeByte(0),
                    e.writeByte(105),
                    e.writeInt32(this.cols[i]);
                for (var s = 1; s <= this.rowCount(); s++) for (var i in this.cols) {
                    if (this.cols[i] == t.NET_LONG && (e.writeByte(105), e.writeInt32(this.getLong(s, i))), this.cols[i] == t.NET_STRING) {
                        var n = this.getString(s, i),
                            a = new Byte();
                        a.writeUTFBytes(n),
                            e.writeByte(115),
                            e.writeInt16(a.length),
                            e.writeUTFBytes(n),
                            e.writeByte(0),
                            a.clear();
                    }
                    if (this.cols[i] == t.NET_TABLE) {
                        if (null == (n = this.getTable(s, i))) return null;
                        e.writeByte(116);
                        var r = n.encodec();
                        e.writeArrayBuffer(r.buffer, 0, r.buffer.byteLength),
                            r.clear();
                    }
                }
                return e;
            },
            t.prototype.decodec = function (e) {
                e.getByte();
                var i = e.getInt32();
                e.getByte();
                for (var s = e.getInt32(), n = [], a = 0; a < i; a++) {
                    if (115 != (l = e.readByte())) return !1;
                    var r = e.getInt16(),
                        o = e.getUTFBytes(r);
                    if (e.getByte(), 105 != (l = e.readByte())) return !1;
                    l = e.getInt32(),
                        this.addCol(o, l),
                        n.push(o);
                }
                for (a = 1; a <= s; a++) {
                    this.addRow();
                    for (var h = 0; h < n.length; h++) {
                        var l = this.cols[n[h]];
                        if (l == t.NET_LONG) {
                            if (105 != e.readByte()) return !1;
                            this.setLong(a, n[h], e.getInt32());
                        }
                        if (l == t.NET_STRING) {
                            if (115 != e.readByte()) return !1; (r = e.getInt16()) <= 0 ? this.setString(a, n[h], "") : this.setString(a, n[h], e.getUTFBytes(r)),
                                e.getByte();
                        }
                        if (l == t.NET_TABLE) {
                            if (116 != e.readByte()) return !1;
                            var c = new t();
                            if (1 != c.decodec(e)) return !1;
                            this.setTable(a, n[h], c);
                        }
                    }
                }
                return !0;
            },
            t.prototype.addRows = function (e, i, s) {
                for (var n = i; n < i + s; n++) {
                    var a = this.addRow();
                    for (var r in this.cols) this.cols[r] == t.NET_LONG && this.setLong(a, r, e.getLong(n, r)),
                        this.cols[r] == t.NET_STRING && this.setString(a, r, e.getString(n, r)),
                        this.cols[r] == t.NET_TABLE && this.setTable(a, r, e.getTable(n, r));
                }
            },
            t.prototype.clone = function () {
                var e = new t();
                for (var i in this.cols) e.addCol(i, this.cols[i]);
                for (var s = 1; s <= this.rowCount(); s++) {
                    e.addRow();
                    for (var i in this.cols) this.cols[i] == t.NET_LONG && e.setLong(s, i, this.getLong(s, i)),
                        this.cols[i] == t.NET_STRING && e.setString(s, i, this.getString(s, i)),
                        this.cols[i] == t.NET_TABLE && e.setTable(s, i, this.getTable(s, i));
                }
                return e;
            },
            t.prototype.printTable = function () {
                console.log(this.toString());
            },
            t.prototype.toString = function () {
                var e = "{",
                    i = "[";
                for (var s in this.cols) e += i + s,
                    i = ",";
                e += "]";
                for (var n = 1; n <= this.rowCount(); n++) {
                    e += ",",
                        i = "[";
                    for (var s in this.cols) this.cols[s] == t.NET_LONG && (e += i + this.getLong(n, s), i = ","),
                        this.cols[s] == t.NET_STRING && (e += i + '"' + this.getString(n, s) + '"', i = ","),
                        this.cols[s] == t.NET_TABLE && (e += i + this.getTable(n, s).toString(), i = ",");
                    e += "]";
                }
                return e += "}";
            },
            t.prototype.test = function () {
                this.addCol("t1", t.NET_LONG),
                    this.addCol("t2", t.NET_STRING),
                    this.addCol("t3", t.NET_TABLE),
                    this.addRow(),
                    this.setLong(1, "t1", 99),
                    this.setString(1, "t2", "test99");
                var e = new t();
                e.addCol("t4", t.NET_LONG),
                    e.addCol("t5", t.NET_STRING),
                    e.addRow(),
                    e.setLong(1, "t4", 77),
                    e.setString(1, "t5", "test77"),
                    this.setTable(1, "t3", e);
            },
            t.NET_LONG = 19,
            t.NET_STRING = 22,
            t.NET_TABLE = 25,
            t;
    }(),
    NetMessage = function () {
        function t() {
            this.bufs = null,
                this.cmd = 0,
                this.bufs = new Byte(),
                this.bufs.endian = Socket.BIG_ENDIAN,
                this.bufs.writeInt32(0),
                this.bufs.writeInt32(0),
                this.bufs.writeInt32(0);
        }
        return t.prototype.addCmd = function (t) {
            var e = this.bufs.pos;
            this.bufs.pos = 0,
                this.bufs.writeInt32(t),
                this.bufs.pos = e,
                this.cmd = t;
        },
            t.prototype.setSession = function (t) {
                var e = this.bufs.pos;
                this.bufs.pos = 4,
                    this.bufs.writeInt32(t),
                    this.bufs.pos = e;
            },
            t.prototype.setTick = function (t) {
                var e = this.bufs.pos;
                this.bufs.pos = 8,
                    this.bufs.writeInt32(t),
                    this.bufs.pos = e;
            },
            t.prototype.getCmd = function () {
                return this.cmd;
            },
            t.prototype.addLong = function (t) {
                this.bufs.writeByte(105),
                    this.bufs.writeInt32(t);
            },
            t.prototype.getLong = function () {
                return 105 == this.bufs.getByte() ? this.bufs.getInt32() : -99999;
            },
            t.prototype.addString = function (t) {
                this.bufs.writeByte(115),
                    this.bufs.writeUTFString(t),
                    this.bufs.writeByte(0);
            },
            t.prototype.getString = function () {
                if (115 == this.bufs.getByte()) {
                    var t = this.bufs.getInt16(),
                        e = this.bufs.getUTFBytes(t);
                    return this.bufs.getByte(),
                        e;
                }
                return "";
            },
            t.prototype.getTable = function () {
                try {
                    if (116 == this.bufs.getByte()) {
                        var t = new NetTable();
                        return t.decodec(this.bufs),
                            t;
                    }
                    return null;
                } catch (t) {
                    return null;
                }
            },
            t.prototype.addTable = function (t) {
                this.bufs.writeByte(116);
                var e = t.encodec();
                this.bufs.writeArrayBuffer(e.buffer, 0, e.buffer.byteLength);
            },
            t.prototype.encodec = function (t) {
                if (null != this.bufs) return this.bufs;
                this.setSession(t);
                var e = new Date();
                return this.setTick(Math.floor(e.getTime() / 1e3)),
                    this.bufs;
            },
            t.prototype.decodec = function (t) {
                for (t.pos = 0, this.addCmd(t.getInt32()), this.setSession(t.getInt32()), this.setTick(t.getInt32()); t.bytesAvailable > 0;) {
                    var e = t.readByte();
                    if (105 == e && this.addLong(t.getInt32()), 115 == e) {
                        var i = t.getInt16();
                        i > 0 ? this.addString(t.getUTFBytes(i)) : this.addString("");
                    }
                    if (116 == e) {
                        var s = new NetTable();
                        s.decodec(t),
                            this.addTable(s);
                    }
                }
                return t.clear(),
                    this.bufs.pos = 12,
                    !0;
            },
            t.prototype.clear = function () {
                null != this.bufs && this.bufs.clear();
            },
            t.prototype.test = function () {
                var e = new Date();
                console.log(e.getTime()),
                    this.addCmd(1),
                    this.addLong(1),
                    this.addString("2");
                var i = new NetTable();
                i.addCol("c1", NetTable.NET_LONG),
                    i.addCol("c2", NetTable.NET_STRING),
                    i.addRow(),
                    i.setLong(1, "c1", 1),
                    i.setString(1, "c2", "2"),
                    this.addTable(i);
                var s = new t();
                s.decodec(this.encodec(1)),
                    console.log(s.getCmd()),
                    console.log(s.getLong()),
                    console.log(s.getString()),
                    i = s.getTable(),
                    console.log(i.getLong(1, "c1")),
                    console.log(i.getString(1, "c2"));
            },
            t;
    }(),
    netCore = function () {
        function t() {
            this.mSession = 0,
                this.mToken = "",
                this.mLastUpdate = 0,
                this.mLastCall = 0,
                this.onOpen = null,
                this.onClose = null,
                this.onError = null,
                this.onDeal = null,
                this.onMask = null,
                this.mLock = !1,
                this.mMessage = [],
                this.mConnect = !1;
        }
        return t.prototype.init = function (t, e, i, s, n) {
            void 0 === n && (n = null),
                this.socket = new Socket(),
                this.mSession = 1,
                this.onOpen = t,
                this.onError = i,
                this.onClose = e,
                this.onDeal = s,
                this.onMask = n;
        },
            t.prototype.connect = function (t, e) {
                this.socket.connect(t, e),
                    this.socket.on(Events.OPEN, this, this.onSocketOpen),
                    this.socket.on(Events.CLOSE, this, this.onSocketClose),
                    this.socket.on(Events.MESSAGE, this, this.onMessageReveived),
                    this.socket.on(Events.ERROR, this, this.onConnectError);
            },
            t.prototype.connectURL = function (t) {
                this.socket.connectByUrl(t),
                    this.socket.on(Events.OPEN, this, this.onSocketOpen),
                    this.socket.on(Events.CLOSE, this, this.onSocketClose),
                    this.socket.on(Events.MESSAGE, this, this.onMessageReveived),
                    this.socket.on(Events.ERROR, this, this.onConnectError);
            },
            t.prototype.connectWSS = function (t) {
                this.socket.connectByUrl(t),
                    this.socket.on(Events.OPEN, this, this.onSocketOpen),
                    this.socket.on(Events.CLOSE, this, this.onSocketClose),
                    this.socket.on(Events.MESSAGE, this, this.onMessageReveived),
                    this.socket.on(Events.ERROR, this, this.onConnectError);
            },
            t.prototype.reConnect = function (t, e) {
                this.socket.connect(t, e);
            },
            t.prototype.onStar = function () {
                console.log("star deal message"),
                    this.mLock = !1,
                    Laya.timer.loop(30, this, this.dealMessage);
            },
            t.prototype.onStop = function () {
                console.log("stop deal message"),
                    this.mLock = !0,
                    Laya.timer.clear(this, this.dealMessage);
            },
            t.prototype.onSocketOpen = function () {
                console.log("连接成功"),
                    this.mConnect = !0,
                    this.output = this.socket.output,
                    null != this.onOpen && this.onOpen.run(),
                    this.onStar();
                var t = new Date();
                this.mLastUpdate = t.getTime(),
                    Laya.timer.loop(6e4, this, this.keepLive);
            },
            t.prototype.keepLive = function () {
                var t = new Date();
                if (this.mLastUpdate + 12e4 <= t.getTime()) {
                    var e = this.createMessage();
                    e.addCmd(2457),
                        e.addLong(1),
                        this.postMessage(e);
                }
            },
            t.prototype.onSocketClose = function () {
                this.mConnect = !1,
                    Laya.timer.clear(this, this.keepLive),
                    null != this.onClose && this.onClose.run(),
                    console.log("连接关闭");
            },
            t.prototype.onMessageReveived = function (t) {
                if ("string" == typeof t) console.log(t);
                else if (t instanceof ArrayBuffer) {
                    var e = new NetMessage(),
                        i = new Byte(t);
                    i.endian = Socket.BIG_ENDIAN,
                        e.decodec(i),
                        i.clear(),
                        this.socket.input.clear(),
                        this.mMessage.push(e);
                    var s = new Date();
                    this.mLastUpdate = s.getTime();
                }
                this.socket.input.clear();
            },
            t.prototype.onConnectError = function () {
                this.mConnect = !1,
                    null != this.onError && (this.onError.args = ["网络连接失败"], this.onError.run());
            },
            t.prototype.setSession = function (t) {
                this.mSession = t;
            },
            t.prototype.createMessage = function () {
                var t = new NetMessage();
                return t.setSession(this.mSession),
                    t;
            },
            t.prototype.postMessage = function (t) {
                if (1 == this.mConnect) {
                    var e = t.encodec(this.mSession);
                    this.output.writeArrayBuffer(e.buffer, 0, e.buffer.byteLength),
                        this.socket.flush(),
                        t.clear();
                    var i = new Date();
                    return this.mLastUpdate = i.getTime(),
                        !0;
                }
                return !1;
            },
            t.prototype.rpc = function (t) {
                return this.mLastCall = t.getCmd(),
                    null != this.onMask && (this.onMask.args = [!0], this.onMask.run()),
                    this.postMessage(t);
            },
            t.prototype.dealMessage = function () {
                if (1 != this.mLock && !(this.mMessage.length <= 0)) {
                    var t = this.mMessage.shift();
                    null != this.onDeal && (this.onDeal.args = [t], this.onDeal.run()),
                        this.mLastCall > 0 && this.mLastCall + 4096 == t.getCmd() && null != this.onMask && (this.onMask.args = [!1], this.onMask.run()),
                        t.clear();
                }
            },
            t.prototype.close = function () {
                null != this.onError && this.onError.clear(),
                    null != this.onDeal && this.onDeal.clear(),
                    null != this.onMask && this.onMask.clear(),
                    Laya.timer.clearAll(this),
                    this.socket.off(Events.OPEN, this, this.onSocketOpen),
                    this.socket.off(Events.CLOSE, this, this.onSocketClose),
                    this.socket.off(Events.MESSAGE, this, this.onMessageReveived),
                    this.socket.off(Events.ERROR, this, this.onConnectError),
                    this.socket.close();
            },
            t.prototype.testclose = function () {
                this.socket.close(),
                    this.onSocketClose();
            },
            t;
    }(),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    View = laya.ui.View,
    Dialog = laya.ui.Dialog;

!
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.gameUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        height: 1334
                    },
                    child: [{
                        type: "Panel",
                        props: {
                            y: 0,
                            x: 0,
                            width: 750,
                            var: "bg",
                            mouseThrough: !1,
                            mouseEnabled: !1,
                            layoutEnabled: !1,
                            hitTestPrior: !1,
                            height: 1334
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 0,
                                var: "bg1",
                                skin: "main/bg1.png",
                                mouseThrough: !1,
                                mouseEnabled: !1,
                                layoutEnabled: !1,
                                hitTestPrior: !1
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                var: "bg2",
                                skin: "main/bg2.png",
                                mouseThrough: !1,
                                mouseEnabled: !1,
                                layoutEnabled: !1,
                                hitTestPrior: !1
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: -667,
                                x: 0,
                                var: "bg3",
                                skin: "main/bg1.png",
                                mouseThrough: !1,
                                mouseEnabled: !1,
                                layoutEnabled: !1,
                                hitTestPrior: !1
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: -1334,
                                x: 0,
                                var: "bg4",
                                skin: "main/bg2.png",
                                mouseThrough: !1,
                                mouseEnabled: !1,
                                layoutEnabled: !1,
                                hitTestPrior: !1
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 80,
                            x: 375,
                            var: "scoreBox",
                            skin: "main/ver1001/score_box.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Label",
                            props: {
                                y: 47,
                                x: 71,
                                width: 120,
                                var: "scoreLabel",
                                text: "1000m",
                                fontSize: 32,
                                color: "#ffffff",
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            }
                        }]
                    },
                    {
                        type: "Button",
                        props: {
                            x: 335,
                            var: "fingerLeft",
                            stateNum: 2,
                            skin: "main/finger.png",
                            bottom: 0,
                            anchorX: 1
                        },
                        child: [{
                            type: "Rect",
                            props: {
                                y: -998,
                                x: -35,
                                width: 370,
                                renderType: "hit",
                                lineWidth: 0,
                                height: 1334,
                                fillColor: "#ff0000"
                            }
                        }]
                    },
                    {
                        type: "Button",
                        props: {
                            x: 415,
                            var: "fingerRight",
                            stateNum: 2,
                            skin: "main/finger.png",
                            scaleX: -1,
                            bottom: 0,
                            anchorX: 1
                        },
                        child: [{
                            type: "Rect",
                            props: {
                                y: -998,
                                x: -35,
                                width: 370,
                                renderType: "hit",
                                lineWidth: 1,
                                height: 1334,
                                fillColor: "#ff0000"
                            }
                        }]
                    },
                    {
                        type: "Animation",
                        props: {
                            y: 1334,
                            x: 335,
                            width: 300,
                            var: "overFingerLeft",
                            source: "main/finger_1.png,main/finger_2.png,main/finger_3.png,main/finger_4.png",
                            scaleX: -1,
                            pivotY: 336,
                            interval: 200,
                            height: 336
                        }
                    },
                    {
                        type: "Animation",
                        props: {
                            y: 1334,
                            x: 415,
                            width: 300,
                            var: "overFingerRight",
                            source: "main/finger_1.png,main/finger_2.png,main/finger_3.png,main/finger_4.png",
                            pivotY: 336,
                            interval: 200,
                            height: 336
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: -290,
                            x: 375,
                            var: "endline",
                            skin: "main/ver1001/endline.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: -32,
                                x: 375,
                                skin: "main/ver1001/end.png",
                                scaleY: 1.6,
                                scaleX: 1.6,
                                anchorY: 1,
                                anchorX: .5
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: -300,
                            var: "bestLine",
                            skin: "main/best_line.png",
                            right: 0,
                            left: 0,
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Image",
                            props: {
                                skin: "main/best_mark.png",
                                scaleY: 1.6,
                                scaleX: 1.6,
                                right: 200,
                                anchorY: 1,
                                anchorX: .5
                            }
                        }]
                    },
                    {
                        type: "Sprite",
                        props: {
                            width: 750,
                            visible: !1,
                            var: "mPage",
                            height: 1334
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 140,
                                x: 300,
                                width: 150,
                                var: "mSelfTX",
                                height: 150,
                                anchorX: 0
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 150,
                                    skin: "main/ver1001/tzhead.png",
                                    height: 150,
                                    anchorY: 0,
                                    anchorX: 0
                                }
                            },
                            {
                                type: "Label",
                                props: {
                                    y: 180,
                                    x: 75,
                                    width: 600,
                                    var: "mSelfMZ",
                                    text: "我是名字",
                                    height: 41,
                                    fontSize: 32,
                                    color: "#18171A",
                                    bold: !0,
                                    anchorX: .5,
                                    align: "center"
                                }
                            },
                            {
                                type: "Label",
                                props: {
                                    y: -70,
                                    x: 75,
                                    width: 600,
                                    var: "mGateName",
                                    text: "简易关卡",
                                    height: 41,
                                    fontSize: 42,
                                    color: "#18171A",
                                    bold: !0,
                                    anchorX: .5,
                                    align: "center"
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 160,
                                x: 375,
                                var: "page1",
                                skin: "main/ver1001/icon.png",
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 190,
                                    x: -41,
                                    width: 142,
                                    var: "btnAD",
                                    height: 166
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 660,
                                x: 375,
                                var: "mStar",
                                skin: "main/ver1001/start-game.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        // {
                        //     type: "Image",
                        //     props: {
                        //         y: 820,
                        //         x: 230,
                        //         var: "mFRank",
                        //         skin: "main/ver1001/friendsrank.png",
                        //         anchorY: .5,
                        //         anchorX: .5
                        //     }
                        // },
                        // {
                        //     type: "Image",
                        //     props: {
                        //         y: 820,
                        //         x: 578,
                        //         var: "mWRank",
                        //         skin: "main/ver1001/worldrank.png",
                        //         anchorY: .5,
                        //         anchorX: .5
                        //     }
                        // },
                        // {
                        //     type: "Image",
                        //     props: {
                        //         y: 992,
                        //         x: 513,
                        //         var: "btnFriendPK",
                        //         skin: "main/pvp/friendpk.png",
                        //         anchorY: .5,
                        //         anchorX: .5
                        //     }
                        // },
                        {
                            type: "Image",
                            props: {
                                y: 380,
                                x: 375,
                                var: "mChallenge",
                                skin: "main/ver1001/challenge.png",
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 830,
                                    x: 333,
                                    var: "btnChallenge",
                                    skin: "main/ver1001/stiaozhan.png",
                                    anchorY: .5,
                                    anchorX: .5
                                }
                            },
                            {
                                type: "List",
                                props: {
                                    y: 100,
                                    x: 23,
                                    width: 620,
                                    var: "lists",
                                    selectEnable: !1,
                                    repeatY: 5,
                                    repeatX: 1,
                                    height: 600
                                },
                                child: [{
                                    type: "Box",
                                    props: {
                                        x: 0,
                                        width: 620,
                                        name: "render",
                                        height: 120
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 60,
                                            x: 50,
                                            text: 1,
                                            name: "rank",
                                            fontSize: 32,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5
                                        }
                                    },
                                    {
                                        type: "Image",
                                        props: {
                                            y: 60,
                                            x: 140,
                                            width: 90,
                                            name: "face",
                                            height: 90,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 90,
                                                skin: "main/ver1001/chahead.png",
                                                height: 90
                                            }
                                        }]
                                    },
                                    {
                                        type: "Label",
                                        props: {
                                            y: 60,
                                            x: 220,
                                            width: 220,
                                            text: "fatality",
                                            overflow: "hidden",
                                            name: "name",
                                            fontSize: 32,
                                            color: "#dedede",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: 0,
                                            align: "left"
                                        }
                                    },
                                    {
                                        type: "Label",
                                        props: {
                                            y: 60,
                                            x: 582,
                                            width: 120,
                                            text: 99999,
                                            overflow: "hidden",
                                            name: "mark",
                                            fontSize: 32,
                                            color: "#dedede",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: 1,
                                            align: "right"
                                        }
                                    },
                                    {
                                        type: "Image",
                                        props: {
                                            skin: "main/ver1001/aline.png",
                                            centerX: 0,
                                            bottom: 2
                                        }
                                    }]
                                }]
                            },
                                // {
                                //   type: "Image",
                                //   props: {
                                //     y: 830,
                                //     x: 333,
                                //     var: "btnShareChallenge",
                                //     skin: "main/ver1001/yaoqin.png",
                                //     anchorY: .5,
                                //     anchorX: .5
                                //   }
                                // }

                            ]
                        },
                        // {
                        //     type: "Image",
                        //     props: {
                        //         y: 989,
                        //         x: 171,
                        //         var: "btnFriends",
                        //         skin: "main/pvp/grouprank.png",
                        //         anchorY: .5,
                        //         anchorX: .5
                        //     }
                        // },
                        // {
                        //     type: "Image",
                        //     props: {
                        //         y: 1184,
                        //         x: 578,
                        //         var: "btnRydt",
                        //         skin: "main/ver1001/brydt.png",
                        //         anchorY: .5,
                        //         anchorX: .5
                        //     }
                        // },
                        {
                            type: "Image",
                            props: {
                                y: 488,
                                x: 653,
                                var: "giftm",
                                skin: "main/groups/gbg.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                            // {
                            //     type: "Image",
                            //     props: {
                            //         y: 364,
                            //         x: 661,
                            //         var: "btnGift",
                            //         skin: "main/groups/gift.png",
                            //         anchorY: .5,
                            //         anchorX: .5
                            //     }
                            // },
                            // {
                            //     type: "Image",
                            //     props: {
                            //         y: 1184,
                            //         x: 238,
                            //         var: "btnMap",
                            //         skin: "main/ver1001/map.png",
                            //         anchorY: .5,
                            //         anchorX: .5
                            //     }
                            // }
                        ]
                    },
                    {
                        type: "Sprite",
                        props: {
                            y: 110,
                            x: 0,
                            width: 750,
                            var: "mTop",
                            height: 116
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 3,
                                x: 57,
                                skin: "main/ver1001/dz-tip-bg.png",
                                anchorY: 0,
                                anchorX: 0
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 25,
                                    x: 60,
                                    width: 160,
                                    var: "lname",
                                    text: "测试你好",
                                    overflow: "hidden",
                                    fontSize: 24,
                                    color: "#000000",
                                    anchorY: .5,
                                    anchorX: 0,
                                    align: "left"
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 693,
                                skin: "main/ver1001/dz-tip-bg.png",
                                anchorY: 0,
                                anchorX: 1
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 25,
                                    x: 179,
                                    width: 160,
                                    var: "rname",
                                    text: "测试你好",
                                    overflow: "hidden",
                                    fontSize: 24,
                                    color: "#000000",
                                    anchorY: .5,
                                    anchorX: 1,
                                    align: "right"
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 55,
                                x: 55,
                                width: 86,
                                var: "lface",
                                height: 86,
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 55,
                                x: 694,
                                width: 80,
                                var: "rface",
                                height: 80,
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        // {
                        //   type: "Image",
                        //   props: {
                        //     y: 58,
                        //     x: 0,
                        //     width: 113,
                        //     skin: "main/ver1001/dz-user-bgl.png",
                        //     height: 112,
                        //     anchorY: .5,
                        //     anchorX: 0
                        //   }
                        // },
                        {
                            type: "Image",
                            props: {
                                y: 58,
                                x: 750,
                                skin: "main/ver1001/dz-user-bg.png",
                                anchorY: .5,
                                anchorX: 1
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 900,
                            x: 375,
                            var: "mTips",
                            skin: "main/ver1001/xm-tip-fail.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 0,
                            width: 750,
                            var: "playGuide",
                            height: 1334
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 567,
                                x: 375,
                                var: "tipsGuide",
                                skin: "main/guide.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 500,
                                x: 375,
                                var: "pvpTime",
                                skin: "main/new/life-cdtm-bg.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 180,
                                    x: 180,
                                    width: 240,
                                    var: "ptime",
                                    text: "3",
                                    strokeColor: "#000000",
                                    stroke: 3,
                                    fontSize: 220,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                }
                            }]
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 60,
                            x: 150,
                            var: "btnMusic",
                            skin: "main/check/music_on.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 60,
                            x: 60,
                            var: "btnReturn",
                            skin: "main/ver1001/up-back.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 60,
                            x: 90,
                            var: "btnReturn2",
                            skin: "main/check/mainp.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 600,
                            x: 375,
                            var: "showError",
                            skin: "main/ver1001/404.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 960,
                            x: 375,
                            var: "btnConnect",
                            skin: "main/ver1001/reconnect.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Sprite",
                        props: {
                            width: 750,
                            visible: !1,
                            var: "mPalace",
                            height: 1334
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 200,
                                x: 375,
                                skin: "main/ver1001/rydt.png",
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                skin: "main/ver1001/bg2.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 240,
                                    x: 234,
                                    width: 300,
                                    var: "pPAchieve",
                                    height: 300,
                                    anchorY: .5,
                                    anchorX: .5
                                }
                            },
                            {
                                type: "Label",
                                props: {
                                    y: 430,
                                    x: 234,
                                    width: 354,
                                    var: "pLargeTip",
                                    text: "跑得更远才能点亮",
                                    fontSize: 32,
                                    color: "#000000",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                }
                            },
                            {
                                type: "Label",
                                props: {
                                    y: 35,
                                    x: 449,
                                    width: 90,
                                    var: "pLevelPAge",
                                    text: "10/14",
                                    fontSize: 32,
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: 1,
                                    align: "right"
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 940,
                                x: 375,
                                width: 320,
                                skin: "main/ver1001/rydt_bk.png",
                                sizeGrid: "0,46,0,47",
                                height: 60,
                                anchorX: .5
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 28,
                                    x: 160,
                                    width: 320,
                                    var: "pXAchieve",
                                    text: "Lv.1 手残党 | 已点亮",
                                    fontSize: 24,
                                    color: "#18171A",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 1100,
                                x: 375,
                                var: "pBack",
                                skin: "main/ver1001/return.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 667,
                                x: 70,
                                var: "pLeft",
                                skin: "main/ver1001/rleft.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 667,
                                x: 680,
                                var: "pRight",
                                skin: "main/ver1001/rright.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 155,
                            x: 1558,
                            skin: "main/stone/stone_cracked.png"
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 278,
                            x: 1568,
                            skin: "main/stone/stone_normal.png"
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 384,
                            x: 1558,
                            skin: "main/stone/stone_normal_2.png"
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 39,
                            x: 1547,
                            skin: "main/stone/stone_normal_3.png"
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 548,
                            x: 1536,
                            skin: "main/invincible.png"
                        }
                    }]
                },
                i;
        }(View);
        t.gameUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.gatesUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        height: 1334
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 289,
                            x: 375,
                            var: "title",
                            skin: "main/check/tip-checkpoint.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 506,
                            x: 375,
                            var: "mSample",
                            skin: "main/check/guanqia-1.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Label",
                            props: {
                                y: 40,
                                x: 530,
                                width: 120,
                                var: "mark1",
                                text: "90%",
                                strokeColor: "#000000",
                                stroke: 3,
                                fontSize: 40,
                                color: "#ffffff",
                                bold: !0,
                                anchorY: .5,
                                anchorX: 1,
                                align: "right"
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 706,
                            x: 375,
                            var: "mHard",
                            skin: "main/check/guanqia-2.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Label",
                            props: {
                                y: 40,
                                x: 530,
                                width: 120,
                                var: "mark2",
                                text: "90%",
                                strokeColor: "#000000",
                                stroke: 3,
                                fontSize: 40,
                                color: "#ffffff",
                                bold: !0,
                                anchorY: .5,
                                anchorX: 1,
                                align: "right"
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 906,
                            x: 375,
                            visible: !1,
                            var: "mInfernal",
                            skin: "main/check/guanqia-3.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Label",
                            props: {
                                y: 30,
                                x: 530,
                                width: 120,
                                var: "mark3",
                                text: "90%",
                                strokeColor: "#000000",
                                stroke: 3,
                                fontSize: 40,
                                color: "#ffffff",
                                bold: !0,
                                anchorY: .5,
                                anchorX: 1,
                                align: "right"
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 88,
                            x: 138,
                            var: "btnReturn",
                            skin: "main/ver1001/up-back.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 505,
                            x: 451,
                            width: 200,
                            var: "btnMapRank1",
                            height: 60
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 705,
                            x: 451,
                            width: 200,
                            var: "btnMapRank2",
                            height: 60
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 821,
                            x: 375,
                            var: "mWH",
                            skin: "main/check/wenhao.png",
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 400,
                            x: 50,
                            visible: !1,
                            var: "gPass1",
                            skin: "main/groups/pass.png"
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 600,
                            x: 50,
                            visible: !1,
                            var: "gPass2",
                            skin: "main/groups/pass.png"
                        }
                    }]
                },
                i;
        }(View);
        t.gatesUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.giftUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        visible: !1,
                        height: 1334
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 10,
                            x: 10,
                            var: "bmask",
                            top: 0,
                            skin: "main/new/bb.png",
                            sizeGrid: "4,4,4,4",
                            right: 0,
                            mouseThrough: !1,
                            mouseEnabled: !1,
                            left: 0,
                            bottom: 0
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 360,
                            x: 375,
                            var: "mView",
                            skin: "main/groups/giftbg.png",
                            anchorY: 0,
                            anchorX: .5
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 41,
                                x: 562,
                                visible: !0,
                                var: "btnGiftClose",
                                skin: "main/groups/close.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 50,
                                x: 302,
                                var: "title",
                                skin: "main/groups/title1.png",
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 200,
                                x: 302,
                                skin: "main/groups/yqt.png",
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 323,
                                x: 280,
                                skin: "main/groups/card_icon.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 33,
                                    x: 93,
                                    var: "mCount",
                                    text: "x2",
                                    fontSize: 32,
                                    color: "#000000",
                                    bold: !0,
                                    anchorY: .5
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: -10,
                                    x: -60,
                                    visible: !1,
                                    skin: "main/groups/ctips.png"
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 440,
                                x: 302,
                                var: "btnYQ",
                                skin: "main/groups/yqhyw.png",
                                anchorX: .5
                            }
                        }]
                    }]
                },
                i;
        }(View);
        t.giftUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.goonUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        height: 1334
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 60,
                            x: 80,
                            var: "btnReturn",
                            skin: "main/check/mainp.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 200,
                            x: 375,
                            var: "mChallenge",
                            skin: "main/goon/relay_bg.png",
                            anchorX: .5
                        },
                        child: [{
                            type: "List",
                            props: {
                                y: 174,
                                x: 23,
                                width: 620,
                                var: "lists",
                                selectEnable: !1,
                                repeatY: 5,
                                repeatX: 1,
                                height: 650
                            },
                            child: [{
                                type: "Box",
                                props: {
                                    x: 0,
                                    width: 620,
                                    name: "render",
                                    height: 120
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 60,
                                        x: 100,
                                        width: 90,
                                        name: "face",
                                        height: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 90,
                                            skin: "main/ver1001/chahead.png",
                                            height: 90
                                        }
                                    }]
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 60,
                                        x: 220,
                                        width: 220,
                                        text: "fatality",
                                        overflow: "hidden",
                                        name: "name",
                                        fontSize: 28,
                                        color: "#dedede",
                                        anchorY: .5,
                                        anchorX: 0,
                                        align: "left"
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 60,
                                        x: 582,
                                        width: 120,
                                        text: 99999,
                                        strokeColor: "#000000",
                                        stroke: 2,
                                        overflow: "hidden",
                                        name: "mark",
                                        fontSize: 32,
                                        color: "#dedede",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 1,
                                        align: "right"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        x: 580,
                                        width: 380,
                                        skin: "main/ver1001/aline.png",
                                        bottom: 2,
                                        anchorX: 1
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: -1,
                                        x: 0,
                                        skin: "main/goon/rb.png",
                                        name: "rkb"
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 20,
                                            x: 20,
                                            width: 40,
                                            text: 1,
                                            overflow: "hidden",
                                            name: "rank",
                                            fontSize: 22,
                                            color: "#ffffff",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                }]
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 950,
                                x: 330,
                                var: "btnYaoqing",
                                skin: "main/goon/relay_3.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 950,
                                x: 330,
                                var: "btnStar",
                                skin: "main/goon/relay_4.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Box",
                            props: {
                                y: 30,
                                x: 20,
                                width: 620,
                                height: 120
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 50,
                                    x: 100,
                                    width: 90,
                                    skin: "main/ver1001/head.png",
                                    height: 90,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 2,
                                        x: 2,
                                        width: 86,
                                        var: "face",
                                        height: 86
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            width: 86,
                                            skin: "main/ver1001/listhead.png",
                                            renderType: "mask",
                                            height: 86
                                        }
                                    }]
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 110,
                                        x: 45,
                                        width: 220,
                                        var: "masterName",
                                        text: "fatality",
                                        overflow: "hidden",
                                        fontSize: 28,
                                        color: "#000000",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 380,
                                    skin: "main/goon/relay_label_bg.png"
                                },
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 18,
                                        x: 100,
                                        width: 180,
                                        var: "mark",
                                        text: 99999,
                                        strokeColor: "#000000",
                                        stroke: 2,
                                        overflow: "hidden",
                                        fontSize: 24,
                                        color: "#ffffff",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 18,
                                        x: -110,
                                        text: "初始成绩:",
                                        fontSize: 22,
                                        color: "#000000",
                                        anchorY: .5
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 40,
                                    x: 380,
                                    skin: "main/goon/relay_label_bg.png"
                                },
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 18,
                                        x: 100,
                                        width: 180,
                                        var: "helpmark",
                                        text: 99999,
                                        strokeColor: "#000000",
                                        stroke: 2,
                                        overflow: "hidden",
                                        fontSize: 24,
                                        color: "#ffffff",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 18,
                                        x: -110,
                                        text: "最佳助力:",
                                        fontSize: 22,
                                        color: "#000000",
                                        anchorY: .5
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 60,
                                    x: 220,
                                    skin: "main/goon/hl.png",
                                    anchorY: .5
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 80,
                                    x: 380,
                                    skin: "main/goon/relay_label_bg.png"
                                },
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 18,
                                        x: 100,
                                        width: 180,
                                        var: "theMark",
                                        text: 99999,
                                        strokeColor: "#000000",
                                        stroke: 2,
                                        overflow: "hidden",
                                        fontSize: 24,
                                        color: "#ffffff",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 18,
                                        x: -110,
                                        text: "最终成绩:",
                                        fontSize: 22,
                                        color: "#000000",
                                        anchorY: .5
                                    }
                                }]
                            }]
                        }]
                    }]
                },
                i;
        }(View);
        t.goonUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.loginUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        visible: !1,
                        height: 1334
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 300,
                            x: 375,
                            skin: "main/check/gamet.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 800,
                            x: 375,
                            skin: "main/check/hello.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }]
                },
                i;
        }(View);
        t.loginUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.pvpUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        visible: !1,
                        height: 1334
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 146,
                            x: 42,
                            var: "roombg",
                            skin: "main/pvp/titlebg.png"
                        },
                        child: [{
                            type: "Label",
                            props: {
                                y: 15,
                                x: 150,
                                width: 220,
                                var: "roomname",
                                text: "名字为7个字的房间",
                                overflow: "hidden",
                                fontSize: 24,
                                color: "#ffffff",
                                anchorX: .5,
                                align: "center"
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 200,
                            x: 375,
                            var: "listBK",
                            skin: "main/check/newb.png",
                            anchorX: .5
                        },
                        child: [{
                            type: "List",
                            props: {
                                y: 25,
                                x: 23,
                                width: 620,
                                var: "mList",
                                repeatY: 6,
                                repeatX: 1,
                                height: 780
                            },
                            child: [{
                                type: "Box",
                                props: {
                                    width: 620,
                                    name: "render",
                                    height: 130
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 26,
                                        x: 51,
                                        width: 78,
                                        name: "face",
                                        height: 78,
                                        anchorY: 0,
                                        anchorX: 0
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -1,
                                            x: -1,
                                            width: 80,
                                            skin: "main/groups/fbg.png",
                                            height: 80,
                                            anchorY: 0,
                                            anchorX: 0
                                        }
                                    }]
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 34,
                                        x: 159,
                                        width: 300,
                                        text: "测试用户",
                                        overflow: "hidden",
                                        name: "name",
                                        fontSize: 22,
                                        color: "#ffffff",
                                        align: "left"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 69,
                                        x: 150,
                                        skin: "main/groups/rank_bg.png",
                                        name: "ll"
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 18,
                                            x: 70,
                                            width: 140,
                                            text: "灵犀一指",
                                            name: "level",
                                            fontSize: 22,
                                            color: "#18171A",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 90,
                                        x: 590,
                                        width: 240,
                                        text: "00:15:59",
                                        stroke: 2,
                                        overflow: "hidden",
                                        name: "mk",
                                        fontSize: 26,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 1,
                                        align: "right"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 130,
                                        x: 160,
                                        width: 420,
                                        skin: "main/ver1001/aline.png"
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 50,
                                        x: 590,
                                        width: 120,
                                        text: "第一名",
                                        stroke: 2,
                                        overflow: "hidden",
                                        name: "rk",
                                        fontSize: 26,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 1,
                                        align: "right"
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 65,
                                        x: 590,
                                        width: 120,
                                        text: "准备中",
                                        stroke: 2,
                                        overflow: "hidden",
                                        name: "ready",
                                        fontSize: 26,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 1,
                                        align: "right"
                                    }
                                }]
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: -47,
                                x: 559,
                                skin: "main/pvp/state.png",
                                anchorX: .5
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 20,
                                    x: 100,
                                    width: 180,
                                    var: "tips",
                                    text: "等待房主开始...",
                                    overflow: "hidden",
                                    fontSize: 22,
                                    color: "#ffffff",
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                }
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 35,
                                x: 3,
                                width: 80,
                                var: "fztips",
                                skin: "main/groups/myrankbg2.png",
                                sizeGrid: "0,43,0,23"
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 15,
                                    x: 18,
                                    text: "房主",
                                    fontSize: 22,
                                    color: "#ffffff",
                                    anchorY: .5,
                                    align: "center"
                                }
                            }]
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 80,
                            x: 375,
                            var: "title",
                            skin: "main/pvp/title.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1120,
                            x: 207,
                            var: "btnYaoqing",
                            skin: "main/pvp/yaoqing.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1120,
                            x: 547,
                            var: "btnStar",
                            skin: "main/pvp/star.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1240,
                            x: 375,
                            var: "btnShare",
                            skin: "main/pvp/share.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 60,
                            x: 80,
                            var: "btnReturn",
                            skin: "main/check/mainp.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1140,
                            x: 375,
                            var: "btnYaoqing2",
                            skin: "main/pvp/yaoqing2.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1120,
                            x: 207,
                            var: "btnSolo",
                            skin: "main/pvp/solo.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1120,
                            x: 547,
                            var: "btnMul",
                            skin: "main/pvp/mul.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1120,
                            x: 547,
                            var: "btnAgain",
                            skin: "main/check/again.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }]
                },
                i;
        }(View);
        t.pvpUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.pvpTopUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        height: 110
                    },
                    child: [{
                        type: "Image",
                        props: {
                            x: 375,
                            skin: "main/pvp/pvp.png",
                            bottom: 0,
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 20,
                            var: "p1",
                            skin: "main/pvp/head.png"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 46,
                                var: "face1",
                                height: 46
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 35,
                            var: "p2",
                            skin: "main/pvp/head.png"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 46,
                                var: "face2",
                                height: 46
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 45,
                            var: "p3",
                            skin: "main/pvp/head.png"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 46,
                                var: "face3",
                                height: 46
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 55,
                            var: "p4",
                            skin: "main/pvp/head.png"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 46,
                                var: "face4",
                                height: 46
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 65,
                            var: "p5",
                            skin: "main/pvp/head.png"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 46,
                                var: "face5",
                                height: 46
                            }
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 75,
                            var: "p6",
                            skin: "main/pvp/head.png"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 2,
                                x: 2,
                                width: 46,
                                var: "face6",
                                height: 46
                            }
                        }]
                    }]
                },
                i;
        }(View);
        t.pvpTopUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.rankUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        height: 1334
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 1100,
                            x: 212,
                            var: "mLastPage",
                            skin: "main/ver1001/last-page.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1100,
                            x: 538,
                            var: "mNextPage",
                            skin: "main/ver1001/next-page.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 169,
                            x: 375,
                            var: "listBK",
                            skin: "main/groups/newbg.png",
                            anchorX: .5
                        },
                        child: [{
                            type: "List",
                            props: {
                                y: 32,
                                x: 23,
                                width: 620,
                                var: "mList",
                                repeatY: 5,
                                repeatX: 1,
                                height: 650
                            },
                            child: [{
                                type: "Box",
                                props: {
                                    width: 620,
                                    name: "render",
                                    height: 130
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 1,
                                        x: 0,
                                        skin: "main/groups/ranktag.png",
                                        name: "rk"
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 2,
                                            x: 29,
                                            width: 50,
                                            text: 99,
                                            overflow: "hidden",
                                            name: "rank",
                                            fontSize: 20,
                                            color: "#ffffff",
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 26,
                                        x: 51,
                                        width: 78,
                                        name: "face",
                                        height: 78,
                                        anchorY: 0,
                                        anchorX: 0
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -1,
                                            x: -1,
                                            width: 80,
                                            skin: "main/groups/fbg.png",
                                            height: 80,
                                            anchorY: 0,
                                            anchorX: 0
                                        }
                                    }]
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 34,
                                        x: 159,
                                        width: 300,
                                        text: "测试用户",
                                        overflow: "hidden",
                                        name: "name",
                                        fontSize: 22,
                                        color: "#ffffff",
                                        align: "left"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 69,
                                        x: 150,
                                        skin: "main/groups/rank_bg.png",
                                        name: "ll"
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 18,
                                            x: 70,
                                            width: 140,
                                            text: "灵犀一指",
                                            name: "level",
                                            fontSize: 22,
                                            color: "#18171A",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 90,
                                        x: 590,
                                        width: 120,
                                        text: "2999米",
                                        stroke: 2,
                                        overflow: "hidden",
                                        name: "mk",
                                        fontSize: 30,
                                        color: "#ffffff",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: 1,
                                        align: "right"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 130,
                                        x: 160,
                                        width: 420,
                                        skin: "main/ver1001/aline.png"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 30,
                                        x: 590,
                                        skin: "main/groups/star_0.png",
                                        name: "map_1",
                                        anchorX: 1
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 30,
                                        x: 560,
                                        skin: "main/groups/star_0.png",
                                        name: "map_2",
                                        anchorX: 1
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 30,
                                        x: 530,
                                        skin: "main/groups/star_0.png",
                                        name: "map_3",
                                        anchorX: 1
                                    }
                                }]
                            }]
                        },
                        {
                            type: "Box",
                            props: {
                                y: 700,
                                x: 333,
                                width: 620,
                                var: "mSelf",
                                height: 130,
                                anchorX: .5
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 34,
                                    x: 159,
                                    width: 260,
                                    var: "mName",
                                    text: "测试用户",
                                    overflow: "hidden",
                                    fontSize: 22,
                                    color: "#000000",
                                    align: "left"
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 69,
                                    x: 150,
                                    skin: "main/groups/rank_bg.png"
                                },
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 18,
                                        x: 70,
                                        width: 140,
                                        var: "myLevel",
                                        text: "灵犀一指",
                                        fontSize: 22,
                                        color: "#18171A",
                                        bold: !0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    }
                                }]
                            },
                            {
                                type: "Label",
                                props: {
                                    y: 90,
                                    x: 590,
                                    width: 120,
                                    var: "mMark",
                                    text: "999米",
                                    overflow: "hidden",
                                    fontSize: 30,
                                    color: "#000000",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: 1,
                                    align: "right"
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 26,
                                    x: 51,
                                    width: 78,
                                    var: "selfFace",
                                    height: 78,
                                    anchorY: 0,
                                    anchorX: 0
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -1,
                                        x: -1,
                                        width: 80,
                                        skin: "main/groups/fb2.png",
                                        height: 80,
                                        anchorY: 0,
                                        anchorX: 0
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: -20,
                                    var: "rankbk",
                                    skin: "main/groups/myrankbg2.png"
                                },
                                child: [{
                                    type: "Label",
                                    props: {
                                        y: 3,
                                        x: -5,
                                        width: 100,
                                        var: "mRank",
                                        text: 999999,
                                        overflow: "hidden",
                                        fontSize: 24,
                                        color: "#ffffff",
                                        anchorX: 0,
                                        align: "center"
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 30,
                                    x: 590,
                                    var: "mMap1",
                                    skin: "main/groups/star_0.png",
                                    anchorX: 1
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 30,
                                    x: 560,
                                    var: "mMap2",
                                    skin: "main/groups/star_0.png",
                                    anchorX: 1
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 30,
                                    x: 530,
                                    var: "mMap3",
                                    skin: "main/groups/star_0.png",
                                    anchorX: 1
                                }
                            }]
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 98,
                            x: 375,
                            var: "mTitle",
                            skin: "main/groups/groupname.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 1230,
                            x: 375,
                            var: "btnChallenge",
                            skin: "main/groups/gstar.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 60,
                            x: 60,
                            var: "btnReturn",
                            skin: "main/ver1001/up-back.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 70,
                            x: 70,
                            var: "btnReturn2",
                            skin: "main/check/mainp.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 951,
                            x: 694,
                            var: "btnWDTag",
                            skin: "main/groups/card_icon.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Label",
                            props: {
                                y: 40,
                                x: 48,
                                var: "mCards4",
                                text: "x2",
                                strokeColor: "#000000",
                                stroke: 2,
                                fontSize: 24,
                                color: "#ffffff",
                                bold: !0
                            }
                        }]
                    }]
                },
                i;
        }(View);
        t.rankUI = e;
    }(ui || (ui = {})),
    function (t) {
        var e = function (e) {
            function i() {
                return e.call(this) || this;
            }
            return __extends(i, e),
                i.prototype.createChildren = function () {
                    e.prototype.createChildren.call(this),
                        this.createView(t.resultUI.uiView);
                },
                i.uiView = {
                    type: "View",
                    props: {
                        width: 750,
                        height: 1334
                    },
                    child: [{
                        type: "Image",
                        props: {
                            var: "bMask",
                            top: 0,
                            skin: "main/new/bb.png",
                            sizeGrid: "4,4,4,4",
                            right: 0,
                            left: 0,
                            bottom: 0
                        }
                    },
                    {
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 0,
                            width: 750,
                            visible: !1,
                            var: "mContinue",
                            height: 1334
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 667,
                                x: 375,
                                var: "sTime",
                                skin: "main/ver1001/continue.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 65,
                                    x: 302,
                                    width: 500,
                                    text: "- 当前成绩 -",
                                    fontSize: 32,
                                    color: "#000000",
                                    anchorX: .5,
                                    align: "center"
                                }
                            },
                            {
                                type: "Label",
                                props: {
                                    y: 124,
                                    x: 302,
                                    width: 400,
                                    var: "mDistance",
                                    text: "86米",
                                    fontSize: 76,
                                    color: "#000000",
                                    bold: !0,
                                    anchorX: .5,
                                    align: "center"
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 249,
                                    x: 2,
                                    width: 604,
                                    var: "noCards",
                                    height: 400
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 71,
                                        x: 304,
                                        skin: "main/newend/fhk_tips.png",
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 140,
                                        x: 280,
                                        var: "mVIcon",
                                        skin: "main/newend/fhk.png",
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 300,
                                        x: 300,
                                        var: "btnNoCard",
                                        skin: "main/newend/no_card.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 157,
                                        x: 330,
                                        visible: !0,
                                        var: "mCards",
                                        text: "x0",
                                        fontSize: 32,
                                        color: "#000000",
                                        bold: !0,
                                        anchorX: 0,
                                        align: "left"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 300,
                                        x: 180,
                                        var: "btnXMShare4",
                                        skin: "main/newend/use_card.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 300,
                                        x: 420,
                                        var: "btnXMShare2",
                                        skin: "main/newend/av_card.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 140,
                                        x: 300,
                                        var: "mVIcon2",
                                        skin: "main/ver1001/mid_icon.png",
                                        anchorX: .5
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 249,
                                    x: 2,
                                    width: 604,
                                    visible: !1,
                                    var: "haveCards",
                                    height: 400
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 140,
                                        x: 300,
                                        var: "avTips",
                                        skin: "main/ver1001/mid_icon.png",
                                        anchorX: .5
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: -69,
                                            x: 35,
                                            skin: "main/ver1001/mid_txt.png",
                                            anchorX: .5
                                        }
                                    }]
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 300,
                                        x: 432,
                                        var: "btnXMShare3",
                                        skin: "main/groups/nouse.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 161,
                                        x: 320,
                                        visible: !1,
                                        var: "mCardsCount",
                                        text: "x 5",
                                        fontSize: 32,
                                        color: "#f45b74",
                                        bold: !0,
                                        anchorX: 0,
                                        align: "left"
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 71,
                                        x: 300,
                                        var: "cardsTips",
                                        skin: "main/groups/cardtips.png",
                                        anchorX: .5
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 69,
                                            x: 160,
                                            skin: "main/groups/card_icon.png",
                                            anchorX: .5
                                        }
                                    }]
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 300,
                                        x: 172,
                                        var: "btnShare3",
                                        skin: "main/groups/card_share.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 92,
                                            x: 112,
                                            text: "5秒后刷新",
                                            name: "time",
                                            fontSize: 22,
                                            color: "#000000",
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    },
                                    {
                                        type: "Image",
                                        props: {
                                            y: -34,
                                            x: -30,
                                            skin: "main/groups/getcards.png"
                                        }
                                    }]
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 300,
                                        x: 432,
                                        var: "btnWuDi",
                                        skin: "main/groups/usecards.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 300,
                                        x: 302,
                                        var: "btnAVWudi",
                                        skin: "main/groups/wudifuhuo.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                }]
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 1045,
                                x: 375,
                                var: "btnPass",
                                skin: "main/ver1001/pass.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        }]
                    },
                    {
                        type: "Sprite",
                        props: {
                            y: 0,
                            width: 750,
                            visible: !1,
                            var: "mSettlement",
                            height: 1334
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 240,
                                x: 375,
                                width: 604,
                                height: 614,
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    visible: !1,
                                    var: "sbg2",
                                    skin: "main/ver1001/bg3.png"
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -9,
                                        x: 302,
                                        var: "mapTitlew",
                                        skin: "main/check/wint.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 468,
                                        x: 300,
                                        skin: "main/check/wc.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    visible: !0,
                                    var: "sbg1",
                                    skin: "main/ver1001/bg1.png"
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -9,
                                        x: 302,
                                        var: "mapTitlef",
                                        skin: "main/check/loset.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 307,
                                    x: 302,
                                    var: "s2",
                                    skin: "main/ver1001/card0.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 394,
                                        x: 394,
                                        width: 120,
                                        var: "mQR",
                                        skin: "main/qr.png",
                                        height: 120
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 220,
                                        x: 262,
                                        width: 300,
                                        var: "mDWPicture",
                                        height: 300,
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        x: 510,
                                        width: 180,
                                        top: 21,
                                        skin: "main/ver1001/share-dw-bg.png",
                                        sizeGrid: "0,36,0,53",
                                        anchorY: .5,
                                        anchorX: 1
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 14,
                                            x: 90,
                                            width: 180,
                                            var: "mSelfSName",
                                            text: "Lv.1 大力金刚刚",
                                            fontSize: 22,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 476,
                                        x: 140,
                                        width: 258,
                                        var: "mScore",
                                        height: 60,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 30,
                                            x: 33,
                                            width: 50,
                                            var: "mSelfSTX",
                                            height: 50,
                                            anchorY: .5,
                                            anchorX: .5
                                        }
                                    },
                                    {
                                        type: "Image",
                                        props: {
                                            y: 30,
                                            x: 129,
                                            skin: "main/ver1001/result_bg.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        }
                                    },
                                    {
                                        type: "Label",
                                        props: {
                                            y: 28,
                                            x: 150,
                                            width: 160,
                                            var: "mAchieve",
                                            text: "200m",
                                            strokeColor: "#ffffff",
                                            fontSize: 48,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    },
                                    {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 125,
                                            width: 403,
                                            var: "mOverProgress",
                                            text: "-已超越了98%的玩家- ",
                                            fontSize: 22,
                                            color: "#000000",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                }]
                            }]
                        },
                        {
                            type: "Image",
                            props: {
                                y: 926,
                                x: 375,
                                var: "mShareFriend",
                                skin: "main/groups/share-friend.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        {
                            type: "Image",
                            props: {
                                y: 926,
                                x: 178,
                                var: "mGameAgain",
                                skin: "main/groups/yaoqing.png",
                                anchorY: .5,
                                anchorX: .5
                            }
                        },
                        // {
                        //   type: "Image",
                        //   props: {
                        //     y: 1080,
                        //     x: 548,
                        //     var: "mShowFriend",
                        //     skin: "main/groups/game-again.png",
                        //     anchorY: .5,
                        //     anchorX: .5
                        //   },
                        //   child: [{
                        //     type: "Image",
                        //     props: {
                        //       y: 102,
                        //       x: 142,
                        //       visible: !1,
                        //       var: "hytips1",
                        //       skin: "main/groups/tips.png",
                        //       anchorX: .5
                        //     }
                        //   }]
                        // },
                        {
                            type: "Image",
                            props: {
                                y: 926,
                                x: 460,
                                var: "btnCards",
                                skin: "main/groups/cards.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: -16,
                                    x: 45,
                                    skin: "main/groups/ctips.png"
                                }
                            },
                            {
                                type: "Label",
                                props: {
                                    y: 32,
                                    x: 80,
                                    var: "mCardsCount2",
                                    text: "x2",
                                    fontSize: 24,
                                    color: "#ffffff"
                                }
                            }]
                        },
                        // {
                        //     type: "Image",
                        //     props: {
                        //         y: 926,
                        //         x: 584,
                        //         var: "btnMore",
                        //         skin: "main/groups/more.png",
                        //         anchorY: .5,
                        //         anchorX: .5
                        //     }
                        // },
                        // {
                        //   type: "Image",
                        //   props: {
                        //     y: 1080,
                        //     x: 217,
                        //     var: "btnGoOn",
                        //     skin: "main/groups/gl.png",
                        //     anchorY: .5,
                        //     anchorX: .5
                        //   },
                        //   child: [{
                        //     type: "Image",
                        //     props: {
                        //       y: 115,
                        //       x: 67,
                        //       skin: "main/goon/tip.png"
                        //     }
                        //   }]
                        // },
                        {
                            type: "Image",
                            props: {
                                y: 1080,
                                x: 217,
                                var: "btnBest",
                                skin: "main/groups/bestmark.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: -7,
                                    x: 216,
                                    skin: "main/groups/group.png"
                                }
                            }]
                        }]
                    },
                    {
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 0,
                            width: 750,
                            visible: !1,
                            var: "mResult",
                            height: 1334
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 560,
                                x: 375,
                                width: 604,
                                var: "resultbk",
                                height: 812,
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "sfail",
                                    skin: "main/ver1001/fail.png"
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "swin",
                                    skin: "main/ver1001/win.png"
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 890,
                                    x: 77,
                                    var: "btnChallengeAgain",
                                    skin: "main/groups/yaoqing.png",
                                    anchorY: .5,
                                    anchorX: .5
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 390,
                                    x: 302,
                                    skin: "main/ver1001/card0.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 394,
                                        x: 394,
                                        width: 120,
                                        var: "mQR2",
                                        skin: "main/qr.png",
                                        height: 120
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 220,
                                        x: 262,
                                        width: 300,
                                        var: "mDWPicture2",
                                        height: 300,
                                        anchorY: .5,
                                        anchorX: .5
                                    }
                                },
                                {
                                    type: "Image",
                                    props: {
                                        x: 510,
                                        width: 180,
                                        top: 21,
                                        skin: "main/ver1001/share-dw-bg.png",
                                        sizeGrid: "0,36,0,53",
                                        anchorY: .5,
                                        anchorX: 1
                                    },
                                    child: [{
                                        type: "Label",
                                        props: {
                                            y: 14,
                                            x: 90,
                                            width: 180,
                                            var: "mSelfSName2",
                                            text: "Lv.1 大力金刚刚",
                                            fontSize: 22,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                },
                                {
                                    type: "Image",
                                    props: {
                                        y: 450,
                                        x: 140,
                                        width: 258,
                                        var: "marktips2",
                                        height: 60,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            y: 30,
                                            x: 33,
                                            width: 50,
                                            var: "mSelfSTX2",
                                            height: 50,
                                            anchorY: .5,
                                            anchorX: .5
                                        }
                                    },
                                    {
                                        type: "Image",
                                        props: {
                                            y: 30,
                                            x: 129,
                                            width: 258,
                                            skin: "main/ver1001/result_bg.png",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        }
                                    },
                                    {
                                        type: "Label",
                                        props: {
                                            y: 28,
                                            x: 150,
                                            width: 160,
                                            var: "mAchieve2",
                                            text: "完成1%",
                                            strokeColor: "#ffffff",
                                            fontSize: 36,
                                            color: "#ffffff",
                                            bold: !0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    },
                                    {
                                        type: "Label",
                                        props: {
                                            y: -27,
                                            x: 125,
                                            width: 403,
                                            var: "mOverProgress2",
                                            text: "-已超越了98%的玩家- ",
                                            fontSize: 22,
                                            color: "#000000",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        }
                                    }]
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 890,
                                    x: 227,
                                    var: "btnSave2",
                                    skin: "main/groups/share-friend.png",
                                    anchorY: .5,
                                    anchorX: .5
                                }
                            },
                            // {
                            //   type: "Image",
                            //   props: {
                            //     y: 1030,
                            //     x: 462,
                            //     var: "btnShareChallenge2",
                            //     skin: "main/groups/game-again.png",
                            //     anchorY: .5,
                            //     anchorX: .5
                            //   },
                            //   child: [{
                            //     type: "Image",
                            //     props: {
                            //       y: 108,
                            //       x: 142,
                            //       var: "hytips2",
                            //       skin: "main/groups/tips.png",
                            //       anchorX: .5
                            //     }
                            //   }
                            // ]
                            // },
                            // {
                            //     type: "Image",
                            //     props: {
                            //         y: 890,
                            //         x: 527,
                            //         var: "btnMore2",
                            //         skin: "main/groups/more.png",
                            //         anchorY: .5,
                            //         anchorX: .5
                            //     }
                            // },
                            {
                                type: "List",
                                props: {
                                    y: 670,
                                    x: 13,
                                    width: 500,
                                    var: "mChallengeLists",
                                    selectEnable: !1,
                                    repeatY: 1,
                                    repeatX: 4,
                                    mouseEnabled: !1,
                                    height: 105
                                },
                                child: [{
                                    type: "Box",
                                    props: {
                                        width: 125,
                                        name: "render",
                                        height: 100
                                    },
                                    child: [{
                                        type: "Image",
                                        props: {
                                            x: 25,
                                            width: 80,
                                            skin: "main/ver1001/clist.png",
                                            name: "face",
                                            height: 80
                                        },
                                        child: [{
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 80,
                                                skin: "main/ver1001/result_rank.png",
                                                height: 80
                                            }
                                        },
                                        {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: -10,
                                                skin: "main/ver1001/r1.png",
                                                name: "rank"
                                            }
                                        },
                                        {
                                            type: "Label",
                                            props: {
                                                y: 92,
                                                x: 40,
                                                width: 80,
                                                text: "888m",
                                                overflow: "hidden",
                                                name: "mark",
                                                fontSize: 22,
                                                color: "#000000",
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            }
                                        }]
                                    }]
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 720,
                                    x: 550,
                                    skin: "main/new/morelists.png",
                                    anchorY: .5,
                                    anchorX: .5
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 670,
                                    x: 13,
                                    width: 580,
                                    var: "mListClick",
                                    skin: "main/new/bb.jpg",
                                    height: 102,
                                    alpha: 0
                                }
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 1030,
                                    x: 142,
                                    var: "btnBest2",
                                    skin: "main/groups/bestmark.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -7,
                                        x: 216,
                                        skin: "main/groups/group.png"
                                    }
                                }]
                            },
                            {
                                type: "Image",
                                props: {
                                    y: 890,
                                    x: 377,
                                    var: "btnCards2",
                                    skin: "main/groups/cards.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: -16,
                                        x: 45,
                                        skin: "main/groups/ctips.png"
                                    }
                                },
                                {
                                    type: "Label",
                                    props: {
                                        y: 32,
                                        x: 80,
                                        var: "mCardsCount3",
                                        text: "x2",
                                        fontSize: 24,
                                        color: "#ffffff"
                                    }
                                }]
                            }]
                        }]
                    },
                    {
                        type: "Image",
                        props: {
                            y: 60,
                            x: 90,
                            var: "btnMainPage",
                            skin: "main/check/mainp.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    },
                    {
                        type: "Image",
                        props: {
                            y: 60,
                            x: 60,
                            var: "btnReturn",
                            skin: "main/ver1001/up-back.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }]
                },
                i;
        }(View);
        t.resultUI = e;
    }(ui || (ui = {}));

var __extends = this && this.__extends ||
    function () {
        var t = Object.setPrototypeOf || {
            __proto__: []
        }
            instanceof Array &&
            function (t, e) {
                t.__proto__ = e;
            } ||
            function (t, e) {
                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
            };
        return function (e, i) {
            function s() {
                this.constructor = e;
            }
            t(e, i),
                e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
        };
    }(),
    GameScene = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.lightFilter = new ColorFilter([1, 0, 0, 0, 20, 0, 1, 0, 0, 20, 0, 0, 1, 0, 20, 0, 0, 0, 1, 0]),
                e.mLevel = [3, 5, 10, 18, 28, 40, 80, 180, 330, 530, 780, 1080, 1430, 2e3],
                e.mLevelName = ["手残党", "剁手天使", "鸡爪手", "滑不留手", "九阴白骨爪", "分筋错骨手", "葵花点穴手", "大触手", "一指禅", "弹指神通", "灵犀一指", "六脉神剑", "大力金刚指", "一阳指"],
                e.mLevelTips = [10, 80, 85, 90, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99],
                e.stonesPool = [],
                e.stones = [],
                e.mRands = [],
                e.mRands2 = [],
                e.mRandIndex = 0,
                e.stoneMoveTween = 50,
                e.meterPerFrame = 0,
                e.pixelPerMeter = 0,
                e.pixelPerFrame = 0,
                e.distance = 0,
                e.nextDis = 0,
                e.score = 0,
                e.playerSpeed = 0,
                e.level = 0,
                e.mSolo = 0,
                e.mXP = !1,
                e.myLevel = 0,
                e.mKeepGo = 0,
                e.mUseCards = !1,
                e.mNowWuDi = !1,
                e.mPlayed = !1,
                e.mMapLevel = 0,
                e.mShares = 0,
                e.mSDKVersion = "",
                e.mScreenHeight = 0,
                e.mScreenWidth = 0,
                e.scoreMultiplier = 10,
                e.mCardsUpdate = 0,
                e.videoAd = null,
                e.lt = null,
                e.mMusic = !0,
                e.mGameAnalysis = {},
                e.mHelped = !1,
                e.mWudi = 0,
                e;
        }
        return __extends(e, t),
            e.prototype.initResult = function () {
                GameMain.app.mGameResult = new GameResult(),
                    GameMain.app.mGameResult.zOrder = 19,
                    this.addChild(GameMain.app.mGameResult),
                    GameMain.app.mGameResult.onInit();
            },
            e.prototype.initRank = function () {
                GameMain.app.mGameRank = new GameRank(),
                    GameMain.app.mGameRank.zOrder = 19,
                    this.addChild(GameMain.app.mGameRank),
                    GameMain.app.mGameRank.onInit();
            },
            e.prototype.onInit = function () {
                if (this.onResize(),
                    this.initResult(),
                    this.initRank(),
                    null == GameMain.app.mGameGates && (GameMain.app.mGameGates = new GameGates(),
                        GameMain.app.mGameGates.onInit(this),
                        GameMain.app.mGameGates.name = "gates",
                        Laya.stage.addChild(GameMain.app.mGameGates),
                        GameMain.app.mGameGates.visible = !1),
                    this.seedRandom = new SeedRandom(),
                    this.playerL = new Player("left"),
                    this.addChild(this.playerL),
                    this.playerR = new Player("right"),
                    this.addChild(this.playerR),
                    this.playerL.onReady(),
                    this.playerR.onReady(),
                    this.playerL.visible = !1,
                    this.playerR.visible = !1,
                    this.overFingerLeft.y = this.height,
                    this.overFingerRight.y = this.height,
                    this.overFingerLeft.visible = !1,
                    this.overFingerRight.visible = !1,
                    this.overFingerLeft.zOrder = 8,
                    this.overFingerRight.zOrder = 8,
                    this.bg.zOrder = 0,
                    this.bestLine.zOrder = 4,
                    this.playerL.zOrder = 5,
                    this.playerR.zOrder = 5,
                    this.fingerLeft.zOrder = 5,
                    this.fingerRight.zOrder = 5,
                    this.scoreBox.zOrder = 10,
                    this.mPage.zOrder = 19,
                    this.mTop.zOrder = 9,
                    this.mTop.visible = !1,
                    this.mPalace.visible = !1,
                    this.mPalace.zOrder = 20,
                    this.mCardsUpdate = 0,
                    this.btnReturn.zOrder = 20,
                    this.btnReturn.visible = !1,
                    this.btnReturn2.zOrder = 20,
                    this.btnReturn2.visible = !1,
                    this.btnMusic.zOrder = 20,
                    this.visible = !0,
                    this.mTips.visible = !1,
                    this.mTips.zOrder = 20,
                    this.fingerLeft.on(Events.MOUSE_DOWN, this, this.onFinger, ["left", "down"]),
                    this.fingerLeft.on(Events.MOUSE_OVER, this, this.onFinger, ["left", "down"]),
                    this.fingerLeft.on(Events.MOUSE_UP, this, this.onFinger, ["left", "up"]),
                    this.fingerLeft.on(Events.MOUSE_OUT, this, this.onFinger, ["left", "up"]),
                    this.fingerRight.on(Events.MOUSE_DOWN, this, this.onFinger, ["right", "down"]),
                    this.fingerRight.on(Events.MOUSE_OVER, this, this.onFinger, ["right", "down"]),
                    this.fingerRight.on(Events.MOUSE_UP, this, this.onFinger, ["right", "up"]),
                    this.fingerRight.on(Events.MOUSE_OUT, this, this.onFinger, ["right", "up"]),
                    this.btnConnect.visible = !1,
                    this.showError.visible = !1,
                    this.fingerLeft.visible = !1,
                    this.fingerRight.visible = !1,
                    this.scoreBox.visible = !1,
                    this.mPage.visible = !1,
                    this.playGuide.visible = !1,
                    this.playGuide.zOrder = 19,
                    this.lists.vScrollBarSkin = "",
                    this.lists.selectEnable = !1,
                    this.lists.renderHandler = new Laya.Handler(this, this.updateChallenge),
                    this.mStar.on(Events.CLICK, this, this.startGame),
                    this.mStar.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.mStar]),
                    this.mStar.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.mStar]),
                    this.mStar.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.mStar]),
                    // this.mFRank.on(Events.CLICK, GameMain.app.mGameRank, GameMain.app.mGameRank.showRank),
                    // this.mFRank.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.mFRank]),
                    // this.mFRank.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.mFRank]),
                    // this.mFRank.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.mFRank]),
                    // this.mWRank.on(Events.CLICK, GameMain.app.mGameRank, GameMain.app.mGameRank.onWRank),
                    // this.mWRank.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.mWRank]),
                    // this.mWRank.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.mWRank]),
                    // this.mWRank.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.mWRank]),
                    this.btnChallenge.on(Events.CLICK, this, this.onChallenge),
                    this.btnChallenge.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnChallenge]),
                    this.btnChallenge.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnChallenge]),
                    this.btnChallenge.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnChallenge]),
                    // this.btnFriends.on(Events.CLICK, GameMain.app.mGameResult, GameMain.app.mGameResult.showGroups),
                    // this.btnFriends.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnFriends]),
                    // this.btnFriends.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnFriends]),
                    // this.btnFriends.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnFriends]),
                    // this.btnShareChallenge.on(Events.CLICK, this, this.onShareFriendsGo),
                    // this.btnShareChallenge.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnShareChallenge]),
                    // this.btnShareChallenge.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnShareChallenge]),
                    // this.btnShareChallenge.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnShareChallenge]),
                    // this.btnRydt.on(Events.CLICK, this, this.onPalace),
                    // this.btnRydt.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnRydt]),
                    // this.btnRydt.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnRydt]),
                    // this.btnRydt.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnRydt]),
                    // this.btnMap.on(Events.CLICK, this, this.showMapGame),
                    // this.btnMap.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnMap]),
                    // this.btnMap.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnMap]),
                    // this.btnMap.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnMap]),
                    this.playGuide.on(Events.CLICK, this, this.onStart),
                    this.btnReturn.on(Events.CLICK, this, this.onReturn2),
                    this.btnReturn.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn2.on(Events.CLICK, this, this.showPage),
                    this.btnReturn2.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnReturn2]),
                    this.btnReturn2.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnReturn2]),
                    this.btnReturn2.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnReturn2]),
                    this.btnConnect.on(Events.CLICK, this, this.onReConnect),
                    this.btnConnect.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnConnect]),
                    this.btnConnect.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnConnect]),
                    this.btnConnect.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnConnect]),
                    this.pLeft.on(Events.CLICK, this, this.onLeft),
                    this.pLeft.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.pLeft]),
                    this.pLeft.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.pLeft]),
                    this.pLeft.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.pLeft]),
                    this.pRight.on(Events.CLICK, this, this.onRight),
                    this.pRight.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.pRight]),
                    this.pRight.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.pRight]),
                    this.pRight.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.pRight]),
                    this.pBack.on(Events.CLICK, this, this.onPBack),
                    this.pBack.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.pBack]),
                    this.pBack.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.pBack]),
                    this.pBack.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.pBack]),
                    this.btnMusic.on(Events.CLICK, this, this.onMusic),
                    this.btnMusic.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnMusic]),
                    this.btnMusic.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnMusic]),
                    this.btnMusic.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnMusic]),
                    // this.btnGift.on(Events.CLICK, this, this.showGift, [1]),
                    // this.btnGift.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnGift]),
                    // this.btnGift.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnGift]),
                    // this.btnGift.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnGift]),
                    // this.btnFriendPK.on(Events.CLICK, this, this.showPvp, [0]),
                    // this.btnFriendPK.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnFriendPK]),
                    // this.btnFriendPK.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnFriendPK]),
                    // this.btnFriendPK.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnFriendPK]),
                    this.btnAD.on(Events.CLICK, this, this.showAD, [this.btnAD]),
                    this.btnAD.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnAD]),
                    this.btnAD.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnAD]),
                    this.btnAD.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnAD]),
                    this.addStonesToPool(28),
                    this.initRands(),
                    1 == Laya.Browser.onMiniGame) {
                    wx.postMessage({
                        type: "init",
                        width: Laya.stage.width,
                        height: Laya.stage.height
                    }),
                        GameMain.app.mWX = new wxMinPro(),
                        GameMain.app.mWX.initWX(),
                        wx.showShareMenu({
                            withShareTicket: !0
                        }),
                        wx.onShareAppMessage(function () {
                            return GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1,
                                {
                                    title: "朋友圈都在玩的虐心游戏，快来试试！",
                                    imageUrl: GameMain.app.getCDN() + "level/def.jpg",
                                    query: "uid=" + GameMain.app.mWX.mUID + "&score=0&client=0&type=0&id=0"
                                };
                        });
                    var t = laya.wx.mini.MiniLocalStorage.getItem("music");
                    "" != t && null != t || (laya.wx.mini.MiniLocalStorage.setItem("music", "1"),
                        t = "1"),
                        1 == Number(t) ? (this.mMusic = !0,
                            this.btnMusic.skin = "main/check/music_on.png") : (this.mMusic = !1,
                                this.btnMusic.skin = "main/check/music_off.png"),
                        this.btnMusic.visible = !1;
                } else
                    this.processStageConfig(),
                        this.onStart();
                if (1 == Laya.Browser.onMiniGame) {
                    if (this.mSDKVersion >= "2.0.4")
                        try {
                            this.videoAd = wx.createRewardedVideoAd({
                                adUnitId: "adunit-50a14e3b412ca18f"
                            }),
                                this.videoAd.onError(function (t) {
                                    console.log(t.errMsg),
                                        GameMain.app.mGameScene.videoAd = null;
                                }),
                                this.videoAd.load();
                        } catch (t) {
                            console.log("读取广告失败"),
                                GameMain.app.mGameScene.videoAd = null;
                        }
                    this.mSDKVersion >= "2.0.3" && (this.lt = wx.createGameClubButton({
                        icon: "dark",
                        style: {
                            left: 15,
                            top: 15,
                            width: 30,
                            height: 30
                        }
                    }),
                        this.lt.hide());
                }
            },
            e.prototype.onMusic = function () {
                1 == this.mMusic ? (this.mMusic = !1, this.btnMusic.skin = "main/check/music_off.png", Laya.SoundManager.stopAll(), laya.wx.mini.MiniLocalStorage.setItem("music", "0")) : (this.mMusic = !0, this.btnMusic.skin = "main/check/music_on.png", laya.wx.mini.MiniLocalStorage.setItem("music", "1"), 1 == this.isPlaying && Laya.SoundManager.playMusic("https://t.wanzhucdn.com/xcx/zhishen/sounds/BGM_InGame.mp3"));
            },
            e.prototype.onPalace = function () {
                this.mPage.visible = !1,
                    Laya.timer.clear(this, this.giftAnimate),
                    null != this.lt && this.lt.hide(),
                    this.mPalace.visible = !0,
                    this.btnMusic.visible = !1;
                for (var t = 1,
                    e = GameMain.app.mWX.mMarks[0], i = 0; i < this.mLevel.length; i++) if (Math.floor(e / 10) < this.mLevel[i]) {
                        t = i + 1;
                        break;
                    }
                this.myLevel = t,
                    this.refreshPalace(this.myLevel);
            },
            e.prototype.refreshPalace = function (t) {
                this.pLevelPAge.changeText(t.toString() + "/14"),
                    t > this.myLevel ? (this.pXAchieve.changeText("未点亮"), this.pPAchieve.skin = GameMain.app.getCDN() + "nodef.png", this.pLargeTip.visible = !0) : (this.pXAchieve.changeText("Lv." + t + " " + this.mLevelName[t - 1] + " | 已点亮"), this.pPAchieve.skin = GameMain.app.getCDN() + "level3/" + t + ".jpg", this.pLargeTip.visible = !1),
                    this.pRight.visible = !0,
                    this.pLeft.visible = !0,
                    14 == t && (this.pRight.visible = !1, this.pLeft.visible = !0),
                    t <= 1 && (this.pLeft.visible = !1, this.pRight.visible = !0);
            },
            e.prototype.onPBack = function () {
                this.showPage();
            },
            e.prototype.onLeft = function () {
                var t = this.pLevelPAge.text.split("/"),
                    e = Number(t[0]); (e -= 1) < 1 && (e = 1),
                        this.refreshPalace(e);
            },
            e.prototype.onRight = function () {
                var t = this.pLevelPAge.text.split("/"),
                    e = Number(t[0]); (e += 1) > 14 && (e = 14),
                        this.refreshPalace(e);
            },
            e.prototype.addStonesToPool = function (t) {
                for (var e = 0; e < t; e++) {
                    var i = new Stone(1, this.seedRandom.randomInt(1, 3));
                    this.stonesPool.push(i),
                        i.visible = !1,
                        this.addChild(i);
                }
            },
            e.prototype.initRands = function () {
                new Date().getTime();
                this.mRandIndex = 0,
                    this.seedRandom.seed = 1;
                for (t = 0; t < 3e3; t++) this.mRands.push(this.seedRandom.randomInt(1, 2)),
                    this.seedRandom.randomInt(1, 3),
                    this.mRands.push(this.seedRandom.randomInt(3, 4)),
                    this.seedRandom.randomInt(1, 3),
                    this.mRands.push(this.seedRandom.random());
                for (var t = 0; t < 3e3; t++) this.mRands2.push(this.seedRandom.randomInt(1, 2)),
                    this.mRands2.push(this.seedRandom.randomInt(3, 4));
            },
            e.prototype.showNetError = function () {
                Laya.timer.clearAll(this),
                    this.btnConnect.visible = !0,
                    this.showError.visible = !0,
                    this.mPage.visible = !1,
                    Laya.timer.clear(this, this.giftAnimate),
                    null != this.lt && this.lt.hide(),
                    this.mTop.visible = !1,
                    GameMain.app.mGameRank.close(),
                    GameMain.app.mGameResult.close(),
                    this.mPalace.visible = !1,
                    this.mTips.visible = !1,
                    this.btnReturn.visible = !1,
                    this.btnReturn2.visible = !1,
                    this.scoreBox.visible = !1,
                    this.fingerLeft.visible = !1,
                    this.fingerRight.visible = !1,
                    this.overFingerLeft.visible = !1,
                    this.overFingerRight.visible = !1,
                    this.playerL.visible = !1,
                    this.playerR.visible = !1;
            },
            e.prototype.onReConnect = function () {
                this.btnConnect.visible = !1,
                    this.showError.visible = !1,
                    GameMain.app.mWX.checkAuthorize();
            },
            e.prototype.clearPage = function () {
                null != GameMain.app.mGameGates && GameMain.app.mGameGates.onClose(),
                    this.removeChildByName("goon"),
                    this.mSelfTX.visible = !1,
                    this.mSelfMZ.visible = !1,
                    this.mTips.visible = !1,
                    this.playerL.visible = !1,
                    this.playerR.visible = !1,
                    this.overFingerLeft.visible = !1,
                    this.overFingerRight.visible = !1,
                    GameMain.app.mGameResult.close(),
                    this.mPalace.visible = !1,
                    this.btnReturn.visible = !1,
                    this.btnReturn2.visible = !1,
                    this.mTop.visible = !1,
                    this.playerL.visible = !1,
                    this.playerR.visible = !1,
                    this.scoreBox.visible = !1,
                    this.clearStones(),
                    GameMain.app.mGameRank.close(),
                    this.mSolo = 0,
                    GameMain.app.mWX.mShareID = 0,
                    GameMain.app.mWX.mChallengeID = 0,
                    this.mChallenge.visible = !1,
                    null != GameMain.app.mGamePvp && GameMain.app.mGamePvp.close();
            },
            e.prototype.unShowGame = function () {
                console.log("unShowGame"),
                    this.isPlaying && (this.bestLine.visible = !1, Laya.SoundManager.stopAll(), Laya.Tween.clearAll(this.playerL), Laya.Tween.clearAll(this.playerR), this.isPlaying = !1, this.fingerLeft.visible = !1, this.fingerRight.visible = !1, this.overFingerLeft.visible = !0, this.overFingerRight.visible = !0, this.overFingerLeft.play(0, !1), this.overFingerRight.play(0, !1), this.playGuide.visible = !1, Laya.timer.clearAll(this));
            },
            e.prototype.showPage = function () {
                var t = this.getChildByName("pvptop");
                null != t && t.close(),
                    GameMain.app.mWX.dealCards(0, null),
                    Laya.timer.clear(this, this.giftAnimate),
                    Laya.timer.frameLoop(3, this, this.giftAnimate),
                    // this.btnGift.y = 494,
                    this.giftm.y = 488;
                var e = Laya.stage.getChildByName("login");
                null != e && e.login.destroy(),
                    Laya.stage.removeChildByName("login"),
                    null != GameMain.app.mGameGates && GameMain.app.mGameGates.onClose(),
                    null != GameMain.app.mGamePvp && (GameMain.app.mGamePvp.closeNet(), GameMain.app.mGamePvp.close()),
                    this.removeChildByName("goon"),
                    this.bestLine.visible = !1,
                    this.mMapLevel = 0,
                    this.mSelfTX.visible = !1,
                    this.mSelfMZ.visible = !1,
                    this.mTips.visible = !1,
                    this.playerL.visible = !1,
                    this.playerR.visible = !1,
                    this.overFingerLeft.visible = !1,
                    this.overFingerRight.visible = !1,
                    GameMain.app.mGameResult.close(),
                    this.mPalace.visible = !1,
                    this.btnReturn.visible = !1,
                    this.btnReturn2.visible = !1,
                    this.mTop.visible = !1,
                    this.playerL.visible = !1,
                    this.playerR.visible = !1,
                    this.scoreBox.visible = !1,
                    this.clearStones(),
                    GameMain.app.mGameRank.close(),
                    this.mSolo = 0,
                    GameMain.app.mWX.mShareID = 0,
                    GameMain.app.mWX.mChallengeID = 0,
                    this.mChallenge.visible = !1,
                    this.mHelped = !1,
                    this.page1.visible = !0,
                    this.mStar.visible = !0,
                    // this.mFRank.visible = !0,
                    // this.mWRank.visible = !0,
                    // this.btnFriends.visible = !0,
                    // this.btnRydt.visible = !0,
                    // this.btnMap.visible = !0,
                    this.mPage.visible = !0,
                    GameMain.app.mWX.initMore(this.btnAD, 1),
                    this.btnMusic.visible = !0,
                    this.btnMusic.x = 150,
                    null != this.lt && this.lt.show();
            },
            e.prototype.onShowChallenge = function () {
                GameMain.app.mWX.showChallenge(!0);
            },
            e.prototype.showChallenge = function (t) {
                var e = Laya.stage.getChildByName("login");
                null != e && e.login.destroy(),
                    Laya.stage.removeChildByName("login");
                var i = this.getChildByName("pvptop");
                if (null != i && i.close(),
                    null != GameMain.app.mGameGates && GameMain.app.mGameGates.onClose(),
                    null != GameMain.app.mGamePvp && (GameMain.app.mGamePvp.closeNet(),
                        GameMain.app.mGamePvp.close()),
                    this.clearStones(),
                    this.mTips.visible = !1,
                    this.mTop.visible = !1,
                    this.playerL.visible = !1,
                    this.playerR.visible = !1,
                    this.overFingerLeft.visible = !1,
                    this.overFingerRight.visible = !1,
                    this.scoreBox.visible = !1,
                    this.btnMusic.visible = !0,
                    this.btnMusic.x = 200,
                    Laya.timer.clear(this, this.onLive),
                    GameMain.app.mGameRank.close(),
                    wx.postMessage({
                        type: "next",
                        show: 0
                    }),
                    Laya.stage.removeChildByName("next"),
                    this.playGuide.visible = !1,
                    GameMain.app.mGameResult.close(),
                    this.mPalace.visible = !1,
                    this.btnChallenge.visible = !1,
                    // this.btnShareChallenge.visible = !1,
                    null != this.lt && this.lt.hide(),
                    1 == Number(GameMain.app.mWX.mLaunch.query.help)) {
                    var s = this.getChildByName("goon");
                    return null == s && ((s = new GameGoon()).name = "goon",
                        s.zOrder = 19,
                        this.addChild(s)),
                        this.mHelped = !0,
                        this.mPage.visible = !1,
                        this.btnMusic.visible = !1,
                        void s.onShow(t);
                }
                if (this.removeChildByName("goon"),
                    t.master.uid == GameMain.app.mWX.mUID ? (this.score = Number(t.master.mark / 10),
                        console.log("this.score:" + this.score),
                        // this.btnShareChallenge.visible = !0,
                        this.btnMusic.visible = !1) : (this.btnMusic.visible = !0,
                            this.btnChallenge.visible = !0),
                    this.btnReturn.visible = !1,
                    this.btnReturn2.visible = !0,
                    this.mChallenge.visible = !0,
                    Laya.timer.clear(this, this.giftAnimate),
                    Laya.timer.frameLoop(3, this, this.giftAnimate),
                    // this.btnGift.y = 364,
                    this.giftm.y = 358,
                    this.mPage.visible = !0,
                    GameMain.app.mGameGates.onClose(),
                    GameMain.app.mGameResult.close(),
                    this.page1.visible = !1,
                    this.mStar.visible = !1,
                    // this.mFRank.visible = !1,
                    // this.mWRank.visible = !1,
                    // this.btnFriends.visible = !1,
                    // this.btnRydt.visible = !1,
                    // this.btnMap.visible = !1,
                    this.mSelfTX.visible = !0,
                    this.mSelfMZ.visible = !0,
                    this.mMapLevel = Number(t.master.level),
                    0 == this.mMapLevel)
                    this.mSelfMZ.text = base64.Base64.decode(t.master.name) + " | " + Math.floor(t.master.mark / 10).toString() + "米",
                        this.mGateName.visible = !1;
                else {
                    if (99 == this.mMapLevel)
                        return this.mMapLevel = 0,
                            void this.showPvp(GameMain.app.mWX.mChallengeID);
                    this.mSelfMZ.text = base64.Base64.decode(t.master.name) + " | " + Math.floor(t.master.mark / 10) + "%",
                        this.mGateName.visible = !0,
                        this.mGateName.changeText(GameMain.app.mGameGates.mMapName[this.mMapLevel - 1]);
                }
                a = base64.Base64.decode(t.master.avatar);
                "0" == a.charAt(a.length - 1) && "/" == a.charAt(a.length - 2) && (a = a.substr(0, a.length - 2),
                    a += "/132"),
                    this.mSelfTX.skin = a,
                    this.lists.repeatX = 1;
                for (var n = 0; n < t.data.length; n++) {
                    var a;
                    "0" == (a = base64.Base64.decode(t.data[n].avatar)).charAt(a.length - 1) && "/" == a.charAt(a.length - 2) && (a = a.substr(0, a.length - 2),
                        a += "/132"),
                        t.data[n].level = t.master.level,
                        t.data[n].avatar = a;
                }
                this.lists.array = t.data,
                    this.lists.repeatY = this.lists.array.length;
            },
            e.prototype.updateChallenge = function (t, e) {
                var i = t.getChildByName("rank"),
                    s = t.getChildByName("name"),
                    n = t.getChildByName("mark");
                t.getChildByName("face").skin = t.dataSource.avatar,
                    s.text = base64.Base64.decode(t.dataSource.name),
                    i.text = (e + 1).toString(),
                    0 == Number(t.dataSource.level) ? n.text = Math.floor(t.dataSource.mark / 10).toString() + "米" : n.text = Math.floor(t.dataSource.mark / 10) + "%";
            },
            e.prototype.onChallenge = function () {
                this.mTop.visible = !0,
                    this.btnReturn.visible = !1,
                    this.btnReturn2.visible = !1,
                    this.mPage.visible = !1,
                    Laya.timer.clear(this, this.giftAnimate),
                    Laya.timer.frameLoop(3, this, this.giftAnimate),
                    // this.btnGift.y = 364,
                    this.giftm.y = 358,
                    null != this.lt && this.lt.hide(),
                    this.lname.text = GameMain.app.mWX.mUser.nickName,
                    this.rname.text = base64.Base64.decode(GameMain.app.mWX.mChallenge.master.name),
                    this.lface.skin = GameMain.app.mWX.mUser.avatarUrl;
                var t = base64.Base64.decode(GameMain.app.mWX.mChallenge.master.avatar);
                "0" == t.charAt(t.length - 1) && "/" == t.charAt(t.length - 2) && (t = t.substr(0, t.length - 2), t += "/132"),
                    this.rface.skin = t,
                    this.startGame();
            },
            e.prototype.onChallengeAgain = function () {
                this.mKeepGo = 0,
                    this.mUseCards = !1,
                    GameMain.app.mGameGates.mMapIndex = 0,
                    GameMain.app.mGameGates.mAdd = !0,
                    this.mMapLevel > 0 && (this.nextDis = 200, this.playerSpeed = 1.1),
                    GameMain.app.mGameResult.close(),
                    this.mPalace.visible = !1,
                    this.processStageConfig(),
                    this.onStart();
            },
            e.prototype.playAgain = function () {
                this.mKeepGo = 0,
                    this.mUseCards = !1,
                    GameMain.app.mGameGates.mMapIndex = 0,
                    GameMain.app.mGameGates.mAdd = !0,
                    this.mMapLevel > 0 && (this.nextDis = 200, this.playerSpeed = 1.1),
                    GameMain.app.mGameResult.close(),
                    this.mPalace.visible = !1,
                    this.processStageConfig(),
                    this.onStart();
            },
            e.prototype.saveimage1 = function (t) {
                console.log("saveimage1:" + t),
                    "" != t && (GameMain.app.mGameResult.mQR.skin = t),
                    1 == Laya.Browser.onMiniGame && Laya.timer.once(200, this,
                        function () {
                            var t = GameMain.app.mGameResult.mSettlement.y + 240 + 45,
                                e = canvas.toTempFilePathSync({
                                    x: 113,
                                    y: t,
                                    width: 524,
                                    height: 524,
                                    destWidth: 750,
                                    destHeight: 750,
                                    fileType: "jpg",
                                    quality: .8
                                });
                            wx.hideLoading({}),
                                GameMain.app.mWX.saveImage(e);
                        });
            },
            e.prototype.saveimage2 = function (t) {
                1 == Laya.Browser.onMiniGame && (console.log("saveimage2:" + t), "" != t && (GameMain.app.mGameResult.mQR2.skin = t), Laya.timer.once(200, this,
                    function () {
                        var t = GameMain.app.mGameResult.mResult.y + 154 + 128,
                            e = canvas.toTempFilePathSync({
                                x: 113,
                                y: t,
                                width: 524,
                                height: 524,
                                destWidth: 750,
                                destHeight: 750,
                                fileType: "jpg",
                                quality: .8
                            });
                        wx.hideLoading({}),
                            GameMain.app.mWX.saveImage(e);
                    }));
            },
            // e.prototype.onShareFriendsGo = function () {
            //   1 == Laya.Browser.onMiniGame && wx.shareAppMessage({
            //     title: "神手" + Math.floor(this.score) + "米！我变残了，也变强了！你能超过我吗？",
            //     imageUrl: GameMain.app.getCDN() + "level/998.png",
            //     query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mChallengeID + "&score=" + this.score + "&client=0&type=0",
            //     success: function (t) {
            //       GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
            //     },
            //     fail: function (t) { }
            //   });
            // },
            e.prototype.showLiveOn = function () {
                GameMain.app.mGameScene.mTips.skin = "main/ver1001/xm-tip-sucess.png",
                    GameMain.app.mGameScene.mTips.visible = !0,
                    Laya.timer.once(2e3, GameMain.app.mGameScene, GameMain.app.mGameScene.onLive),
                    this.mUseCards = !0,
                    GameMain.app.mWX.mCards = GameMain.app.mWX.mCards - 1,
                    GameMain.app.mWX.mCards < 0 && (GameMain.app.mWX.mCards = 0),
                    GameMain.app.mGameResult.mCards.changeText("x" + GameMain.app.mWX.mCards),
                    GameMain.app.mGameResult.mCardsCount2.changeText("x" + GameMain.app.mWX.mCards),
                    GameMain.app.mGameResult.mCardsCount3.changeText("x" + GameMain.app.mWX.mCards),
                    GameMain.app.mGameResult.close(),
                    this.mWudi = new Date().getTime() + 13e3,
                    Laya.timer.once(300, this, this.flashPlayer);
            },
            e.prototype.onShowADEx = function (t) {
                this.onShowAD(t),
                    this.mWudi = new Date().getTime() + 13e3,
                    Laya.timer.once(300, this, this.flashPlayer);
            },
            e.prototype.onShowAD = function (t) {
                var e = this;
                if (this.mUseCards = !1, this.mNowWuDi = !0, this.mWudi = 0, Laya.timer.clear(GameMain.app.mGameResult, GameMain.app.mGameResult.updateCardsCount), 1 == Laya.Browser.onMiniGame) if (this.mSDKVersion >= "2.0.4") {
                    try {
                        this.videoAd.show().
                            catch(function (t) {
                                return function () {
                                    console.log("广告播放失败"),
                                        0 == GameMain.app.mGameScene.mPage.visible && 1 == GameMain.app.mGameResult.visible && 1 == GameMain.app.mGameResult.mContinue.visible && (GameMain.app.mGameScene.mTips.skin = "main/ver1001/xm-tip-sucess.png", GameMain.app.mGameScene.mTips.visible = !0, GameMain.app.mGameResult.close(), Laya.timer.once(2e3, GameMain.app.mGameScene, GameMain.app.mGameScene.onLive));
                                };
                            });
                    } catch (t) {
                        console.log("广告播放失败"),
                            0 == GameMain.app.mGameScene.mPage.visible && 1 == GameMain.app.mGameResult.visible && 1 == GameMain.app.mGameResult.mContinue.visible && (GameMain.app.mGameScene.mTips.skin = "main/ver1001/xm-tip-sucess.png", GameMain.app.mGameScene.mTips.visible = !0, GameMain.app.mGameResult.close(), Laya.timer.once(2e3, GameMain.app.mGameScene, GameMain.app.mGameScene.onLive));
                    }
                    this.videoAd.onError(function () {
                        0 == GameMain.app.mGameScene.mPage.visible && 1 == GameMain.app.mGameResult.visible && 1 == GameMain.app.mGameResult.mContinue.visible && (GameMain.app.mGameScene.mTips.skin = "main/ver1001/xm-tip-sucess.png", GameMain.app.mGameScene.mTips.visible = !0, GameMain.app.mGameResult.close(), Laya.timer.once(2e3, GameMain.app.mGameScene, GameMain.app.mGameScene.onLive));
                    }),
                        this.videoAd.onClose(function () {
                            0 == GameMain.app.mGameScene.mPage.visible && (GameMain.app.mGameScene.mTips.skin = "main/ver1001/xm-tip-sucess.png", GameMain.app.mGameScene.mTips.visible = !0, GameMain.app.mGameResult.close(), e.mWudi = new Date().getTime() + 13e3, Laya.timer.once(300, e, e.flashPlayer), Laya.timer.once(2e3, GameMain.app.mGameScene, GameMain.app.mGameScene.onLive));
                        });
                } else GameMain.app.mGameResult.showResult();
            },
            e.prototype.closeTips = function () {
                this.mTips.visible = !1;
            },
            e.prototype.onLive = function () {
                this.mNowWuDi = !1,
                    GameMain.app.mGameScene.mTips.visible = !1,
                    0 == this.mMapLevel && this.processStageConfig(),
                    this.onResume();
            },
            e.prototype.clearNearRowStones = function () {
                var t = this;
                this.stones && (this.stones = this.stones.filter(function (e) {
                    return !t.checkOneNear(t.playerL, e) && !t.checkOneNear(t.playerR, e) || (e.visible = !1, t.stonesPool.push(e), !1);
                }));
            },
            e.prototype.checkOneNear = function (t, e) {
                return Math.abs(t.y - e.y) < 2 * e.hitRadius;
            },
            e.prototype.startGame = function () {
                this.mKeepGo = 0,
                    this.mUseCards = !1,
                    this.mPage.visible = !1,
                    Laya.timer.clear(this, this.giftAnimate),
                    null != this.lt && this.lt.hide(),
                    GameMain.app.mGameResult.close(),
                    GameMain.app.mGameRank.close(),
                    this.playGuide.visible = !0,
                    this.tipsGuide.visible = !1,
                    this.pvpTime.visible = !1,
                    99 == this.mMapLevel ? (this.playGuide.mouseEnabled = !1, this.pvpTime.visible = !0) : (this.tipsGuide.visible = !0, this.playGuide.mouseEnabled = !0),
                    this.playerL.visible = !0,
                    this.playerR.visible = !0,
                    this.playerL.stopWD(),
                    this.playerR.stopWD(),
                    this.playerL.x = 3 * this.width / 8,
                    this.playerR.x = 5 * this.width / 8,
                    this.playerL.onStart(),
                    this.playerR.onStart(),
                    this.fingerLeft.visible = !0,
                    this.fingerRight.visible = !0,
                    this.processStageConfig();
            },
            e.prototype.onReturn = function () {
                this.showPage();
            },
            e.prototype.onReturn2 = function () {
                1 == this.mPage.visible && (1 == this.mPlayed ? (this.mPage.visible = !1, Laya.timer.clear(this, this.giftAnimate), null != this.lt && this.lt.hide(), GameMain.app.mGameResult.onShow(), GameMain.app.mGameResult.mResult.visible = !0) : this.showPage()),
                    1 == GameMain.app.mGameRank.visible && GameMain.app.mGameRank.inMaps() ? (GameMain.app.mGameRank.close(), this.btnReturn.visible = !1, this.btnReturn2.visible = !1, GameMain.app.mGameGates.show()) : this.showPage();
            },
            e.prototype.onBtnMouseDown = function (t) {
                t.scale(1.02, 1.02);
            },
            e.prototype.onBtnMouseDown2 = function (t) {
                t.filters = [this.lightFilter];
            },
            e.prototype.onBtnMouseOut = function (t) {
                t.scale(1, 1),
                    t.filters = [];
            },
            e.prototype.processStageConfig = function () {
                var t = this;
                if (0 == this.mMapLevel) {
                    this.stageData = [];
                    var e = Laya.loader.getRes("main/stage.json");
                    this.meterPerFrame = parseFloat(e.meterPerFrame),
                        this.pixelPerMeter = .7 * parseFloat(e.pixelPerMeter),
                        this.pixelPerFrame = this.meterPerFrame * this.pixelPerMeter,
                        e.stages.forEach(function (e) {
                            for (var i = e.split(";"), s = i[3].split(","), n = [], a = 0; a < s.length; a += 2) n.push({
                                distance: .7 * parseFloat(s[a]),
                                percent: parseFloat(s[a + 1])
                            });
                            var r = {
                                level: parseInt(i[0]),
                                distance: parseFloat(i[1]),
                                speed: parseFloat(i[2]),
                                percents: n
                            };
                            t.stageData.push(r);
                        });
                } else this.meterPerFrame = parseFloat(GameMain.app.mGameGates.maps.meterPerFrame),
                    this.pixelPerMeter = parseFloat(GameMain.app.mGameGates.maps.pixelPerMeter),
                    this.pixelPerFrame = this.meterPerFrame * this.pixelPerMeter,
                    this.playerSpeed = 1.05;
            },
            e.prototype.clearShareCanvas = function () { },
            e.prototype.onResume = function () {
                this.isPlaying || (this.isPlaying = !0, 1 == this.mMusic && Laya.SoundManager.playMusic("https://t.wanzhucdn.com/xcx/zhishen/sounds/BGM_InGame.mp3"), this.fingerLeft.visible = !0, this.fingerRight.visible = !0, this.overFingerLeft.visible = !1, this.overFingerRight.visible = !1, this.playerL.x = 3 * this.width / 8, this.playerR.x = 5 * this.width / 8, this.playerL.onStart(), this.playerR.onStart(), 1 == this.mXP && (this.scoreBox.y = 280), this.scoreBox.visible = !0, this.clearNearRowStones(), this.btnMusic.visible = !1, Laya.timer.once(1e3, this, this.resume));
            },
            e.prototype.resume = function () {
                Laya.timer.frameLoop(1, this, this.onLoop);
            },
            e.prototype.onStart = function () {
                if (GameMain.app.mWX.dealCards(0, null), this.btnConnect.visible = !1, this.showError.visible = !1, this.btnReturn.visible = !1, this.btnReturn2.visible = !1, this.playGuide.visible = !1, this.mPage.visible = !1, null != this.lt && this.lt.hide(), this.scoreBox.visible = !0, Laya.SoundManager.stopAll(), 1 == this.mMusic && Laya.SoundManager.playMusic("https://t.wanzhucdn.com/xcx/zhishen/sounds/BGM_InGame.mp3"), this.distance = 0, this.score = 0, 0 == this.mMapLevel ? (this.playerSpeed = 0, this.scoreLabel.text = "0m") : 99 == this.mMapLevel ? this.scoreLabel.text = "00:00" : this.scoreLabel.text = "0%", this.nextDis = 0, this.level = 1, this.playerL.x = 3 * this.width / 8, this.playerR.x = 5 * this.width / 8, this.playerL.onStart(), this.playerR.onStart(), this.playerL.visible = !0, this.playerR.visible = !0, this.playerL.stopWD(), this.playerR.stopWD(), this.fingerLeft.visible = !0, this.fingerRight.visible = !0, this.overFingerLeft.visible = !1, this.overFingerRight.visible = !1, GameMain.app.mGameGates.mMapIndex = 0, GameMain.app.mGameGates.mAdd = !0, this.endline.visible = !1, this.bestLine.visible = !1, 0 == this.mMapLevel) GameMain.app.mWX.mMarks[0] > 0 && (this.bestLine.y = this.height - Player.yFromBottom - GameMain.app.mWX.mMarks[0] / 10 * this.pixelPerMeter);
                else if (99 == this.mMapLevel) this.endline.y = -8e4 - this.height / 2 + 300;
                else {
                    if (GameMain.app.mWX.mMarks[this.mMapLevel] > 0) {
                        var t = GameMain.app.mGameGates.mMapDistance[this.mMapLevel - 1] * GameMain.app.mWX.mMarks[this.mMapLevel] / 1e3;
                        this.bestLine.y = -t - this.height;
                    }
                    this.endline.y = -GameMain.app.mGameGates.mMapDistance[this.mMapLevel - 1] - this.height / 2 + 300;
                }
                99 == this.mMapLevel ? (this.mRandIndex = 2 * Math.floor(Number(GameMain.app.mGamePvp.room.roomid) % 600 + 1), console.log("mRandIndex:" + this.mRandIndex)) : this.mRandIndex = 0,
                    this.clearStones(),
                    this.playGuide.visible = !1,
                    this.btnMusic.visible = !1,
                    Laya.timer.frameLoop(1, this, this.onLoop),
                    this.isPlaying = !0;
            },
            e.prototype.clearStones = function () {
                var t = this;
                this.stones && this.stones.forEach(function (e) {
                    e.visible = !1,
                        t.stonesPool.push(e);
                }),
                    this.stones = [];
            },
            e.prototype.onStop = function () {
                var t = this;
                this.isPlaying && (this.mPlayed = !0,
                    Laya.SoundManager.stopAll(),
                    Laya.timer.callLater(this, function () {
                        1 == t.mMusic && Laya.SoundManager.playSound("https://t.wanzhucdn.com/xcx/zhishen/sounds/SE_GameOver.mp3");
                    }),
                    Laya.Tween.clearAll(this.playerL),
                    Laya.Tween.clearAll(this.playerR),
                    this.isPlaying = !1,
                    this.bestLine.visible = !1,
                    console.log("结束:" + this.score),
                    this.score <= 0 && (this.score = .1),
                    Laya.Browser.onMiniGame && wx.postMessage({
                        type: "send",
                        mark: 10 * this.score,
                        level: this.mMapLevel,
                        best: GameMain.app.mWX.mMarks[this.mMapLevel],
                        user: GameMain.app.mWX.mUser
                    }),
                    GameMain.app.mWX.mMarks[this.mMapLevel] = Math.max(10 * this.score, GameMain.app.mWX.mMarks[this.mMapLevel]),
                    // null != GameMain.app.mWX && GameMain.app.mWX.reportMark(10 * this.score),
                    this.fingerLeft.visible = !1,
                    this.fingerRight.visible = !1,
                    this.overFingerLeft.visible = !0,
                    this.overFingerRight.visible = !0,
                    this.overFingerLeft.play(0, !1),
                    this.overFingerRight.play(0, !1),
                    Laya.timer.clear(this, this.onLoop),
                    Laya.timer.once(2e3, this, function () {
                        if (t.mMapLevel > 0 && Math.floor(t.score) >= 100)
                            GameMain.app.mGameResult.showResult();
                        else if (t.mKeepGo <= 1) {
                            GameMain.app.mGameResult.haveCards.visible = !1,
                                GameMain.app.mGameResult.noCards.visible = !0,
                                t.scoreBox.visible = !1,
                                t.mTop.visible = !1,
                                t.overFingerLeft.visible = !1,
                                t.overFingerRight.visible = !1,
                                GameMain.app.mGameResult.close(),
                                GameMain.app.mGameResult.onShow(),
                                GameMain.app.mGameResult.mContinue.visible = !0,
                                0 == t.mMapLevel ? GameMain.app.mGameResult.mDistance.text = Math.floor(t.score).toString() + "米" : GameMain.app.mGameResult.mDistance.text = Math.floor(t.score).toString() + "%",
                                GameMain.app.mGameResult.updateCards(),
                                t.mKeepGo = t.mKeepGo + 1,
                                wx.postMessage({
                                    type: "next",
                                    show: 1,
                                    mark: 10 * t.score,
                                    level: t.mMapLevel,
                                    openid: GameMain.app.mWX.mUser.openid
                                });
                            var e = new Laya.Sprite();
                            Laya.stage.addChild(e),
                                e.name = "next";
                            var i = new Laya.Texture(Laya.Browser.window.sharedCanvas);
                            i.bitmap.alwaysChange = !0,
                                e.graphics.drawTexture(i, 0, 0, i.width, i.height);
                        } else
                            GameMain.app.mGameResult.showResult();
                    }));
            },
            e.prototype.onFinger = function (t, e) {
                if (this.isPlaying) {
                    var i = "left" === t ? this.playerL : this.playerR,
                        s = "down" === e ? 1 : 3,
                        n = ("left" === t ? s : 8 - s) / 8 * this.width;
                    Laya.Tween.to(i, {
                        x: n
                    },
                        this.stoneMoveTween, null, null, 0, !0);
                }
            },
            e.prototype.onLoop = function () {
                var t = this.playerSpeed * this.pixelPerFrame;
                if (0 == this.mMapLevel) this.updateLevel(),
                    this.stoneCreate();
                else if (99 == this.mMapLevel) {
                    if (1 == this.stoneMapCreate2()) return void GameMain.app.mGamePvp.gameOver();
                } else if (1 == this.stoneMapCreate()) return void this.onStop();
                if (this.checkHit(), this.stoneStep(t), this.bestLineStep(t), this.distance += this.playerSpeed * this.meterPerFrame, 0 == this.mMapLevel) this.distance > this.score && (this.score = this.distance, this.scoreLabel.changeText(Math.floor(this.score).toString() + "m"));
                else if (99 == this.mMapLevel) {
                    (e = 100 * (this.distance * this.pixelPerMeter - this.height) / 8e4) < 0 && (e = 0),
                        e > this.score && (this.score = e, Math.floor(this.score) > 100 && (this.score = 100));
                } else {
                    var e = 100 * (this.distance * this.pixelPerMeter - this.height) / GameMain.app.mGameGates.mMapDistance[this.mMapLevel - 1];
                    e < 0 && (e = 0),
                        e > this.score && (this.score = e, Math.floor(this.score) > 100 && (this.score = 100), this.scoreLabel.changeText(Math.floor(this.score).toString() + "%"));
                }
                this.bgStep(t);
            },
            e.prototype.checkHit = function () {
                var t = this,
                    e = new Date().getTime();
                if (e <= this.mWudi) e >= this.mWudi - 600 && (this.playerL.stopWD(), this.playerR.stopWD());
                else {
                    var i = !1,
                        s = !1,
                        n = !1;
                    this.stones.forEach(function (e) {
                        t.checkOneHit(t.playerL, e) && (i = !0, s = !0, t.playerL.onCracked()),
                            t.checkOneHit(t.playerR, e) && (i = !0, n = !0, t.playerR.onCracked());
                    }),
                        (s || n) && (s ? this.playerL.onCracked() : this.playerL.onReady(), n ? this.playerR.onCracked() : this.playerR.onReady(), 99 == this.mMapLevel ? GameMain.app.mGamePvp.onStop() : this.onStop());
                }
            },
            e.prototype.checkOneHit = function (t, e) {
                return !(Math.abs(t.x - e.x) > e.hitRadius || Math.abs(t.y - e.y) > e.hitRadius) && this.calcDistance(t, e) <= e.hitRadius;
            },
            e.prototype.calcDistance = function (t, e) {
                return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2));
            },
            e.prototype.stoneCreate = function () {
                if (this.distance >= this.nextDis) {
                    this.stonesPool.length < 2 && this.addStonesToPool(2),
                        this.mRandIndex >= this.mRands.length && (this.mRandIndex = 0);
                    var t = this.stonesPool.shift();
                    t.renew(this.mRands[this.mRandIndex]),
                        this.mRandIndex = this.mRandIndex + 1,
                        t.visible = !0,
                        this.stones.push(t);
                    var e = this.stonesPool.shift();
                    e.renew(this.mRands[this.mRandIndex]),
                        this.mRandIndex = this.mRandIndex + 1,
                        e.visible = !0,
                        this.stones.push(e);
                    var i = 0;
                    i = this.mRands[this.mRandIndex],
                        this.mRandIndex = this.mRandIndex + 1;
                    for (var s = 0,
                        n = this.stageData[this.level - 1].percents, a = 0; a < n.length; a++) if (s += n[a].percent, i <= s) {
                            this.nextDis += n[a].distance / this.pixelPerMeter;
                            break;
                        }
                }
            },
            e.prototype.stoneMapCreate = function () {
                var t = GameMain.app.mGameGates.maps.maps[this.mMapLevel - 1],
                    e = GameMain.app.mGameGates.mMapIndex;
                e < 0 && (GameMain.app.mGameGates.mMapIndex = 0, e = 0, GameMain.app.mGameGates.mAdd = !0);
                var i = t[e].speed;
                if (this.distance * this.pixelPerMeter < GameMain.app.mGameGates.mMapDistance[this.mMapLevel - 1] + this.height) 0 == i && (1 == GameMain.app.mGameGates.mAdd && (GameMain.app.mGameGates.mAdd = !1, GameMain.app.mGameGates.mMapIndex = GameMain.app.mGameGates.mMapIndex - 1), e = GameMain.app.mGameGates.mMapIndex, 1 == this.mMapLevel ? this.nextDis = this.nextDis + 300 + 100 * (1.5 - this.playerSpeed) : this.nextDis = this.nextDis + 200 + 100 * (1.5 - this.playerSpeed));
                else if (this.distance * this.pixelPerMeter >= GameMain.app.mGameGates.mMapDistance[this.mMapLevel - 1] + this.height) return !0;
                if (this.nextDis > GameMain.app.mGameGates.mMapDistance[this.mMapLevel - 1]) return !1;
                if (this.distance * this.pixelPerMeter >= this.nextDis - 100) {
                    for (var s = 0; s < t[e].stones.length; s++) {
                        1 == this.mMapLevel && e % 8 == 0 && this.playerSpeed < 1.5 && (this.playerSpeed = this.playerSpeed + .01),
                            2 == this.mMapLevel && e % 6 == 0 && this.playerSpeed < 1.5 && (this.playerSpeed = this.playerSpeed + .01);
                        var n = this.stonesPool.shift(),
                            a = t[e].stones[s][1],
                            r = this.nextDis - this.distance * this.pixelPerMeter;
                        n.pos(Laya.stage.width * (2 * a - 1) / 8, -r),
                            n.visible = !0,
                            this.stones.push(n);
                    }
                    1 == this.mMapLevel ? this.nextDis = this.nextDis + 350 + t[e].distance + 300 * (1.5 - this.playerSpeed) : this.nextDis = this.nextDis + 200 + t[e].distance + 200 * (1.5 - this.playerSpeed),
                        1 == GameMain.app.mGameGates.mAdd ? GameMain.app.mGameGates.mMapIndex = GameMain.app.mGameGates.mMapIndex + 1 : GameMain.app.mGameGates.mMapIndex = GameMain.app.mGameGates.mMapIndex - 1;
                }
                return !1;
            },
            e.prototype.stoneMapCreate2 = function () {
                if (this.distance * this.pixelPerMeter >= 8e4 + this.height) return !0;
                if (this.distance * this.pixelPerMeter > 8e4) return !1;
                if (this.distance * this.pixelPerMeter >= this.nextDis - 100) {
                    this.mRandIndex >= this.mRands2.length && (this.mRandIndex = 0);
                    var t = this.stonesPool.shift();
                    t.renew(this.mRands2[this.mRandIndex]),
                        this.mRandIndex = this.mRandIndex + 1,
                        t.visible = !0,
                        this.stones.push(t);
                    var e = this.stonesPool.shift();
                    return e.renew(this.mRands2[this.mRandIndex]),
                        this.mRandIndex = this.mRandIndex + 1,
                        e.visible = !0,
                        this.stones.push(e),
                        this.playerSpeed = this.playerSpeed + .01 * Math.floor(this.nextDis / 2e3),
                        this.playerSpeed > 1.6 && (this.playerSpeed = 1.6),
                        this.nextDis = this.nextDis + (350 + Math.floor(60 * Math.random()) + 300 * (1.6 - this.playerSpeed)),
                        !1;
                }
            },
            e.prototype.updateLevel = function () {
                0 == this.playerSpeed && (this.level = 1, this.playerSpeed = this.stageData[this.level - 1].speed),
                    void 0 !== this.stageData[this.level] && this.distance >= this.stageData[this.level].distance && (this.playerSpeed = this.stageData[this.level].speed, this.level++);
            },
            e.prototype.stoneStep = function (t) {
                var e = this;
                this.stones = this.stones.filter(function (i) {
                    return i.move(t),
                        !e.isOutsideWindow(i) || (e.stonesPool.push(i), i.visible = !1, !1);
                });
            },
            e.prototype.bgStep = function (t) {
                this.bg1.y += t,
                    this.bg2.y += t,
                    this.bg3.y += t,
                    this.bg4.y += t,
                    this.isOutsideWindow(this.bg4) && (this.bg4.y -= 2668),
                    this.isOutsideWindow(this.bg3) && (this.bg3.y -= 2668),
                    this.isOutsideWindow(this.bg2) && (this.bg2.y -= 2668),
                    this.isOutsideWindow(this.bg1) && (this.bg1.y -= 2668);
            },
            e.prototype.bestLineStep = function (t) {
                99 != this.mMapLevel && (this.bestLine.y > -60 && (this.bestLine.y > this.height ? this.bestLine.visible = !1 : this.bestLine.visible = !0), this.bestLine.y += t),
                    this.mMapLevel > 0 && (this.endline.y > -60 && (this.endline.visible = !0), this.endline.y += t);
            },
            e.prototype.isOutsideWindow = function (t) {
                return t.y > this.height + 100;
            },
            e.prototype.onResize = function () {
                if (this.width = Laya.stage.width, this.height = Laya.stage.height, this.bg.width = Laya.stage.width, this.bg.height = Laya.stage.height, this.bg.pos(0, 0), this.bg1.y = this.height - 667, this.bg2.y = this.height - 1334, this.bg3.y = this.height - 1334 - 667, this.bg4.y = this.height - 2668, this.pos(0, 0, !0), console.log("Set mGame width = " + this.width + " , height = " + this.height), this.mPage.y = (this.height - this.mPage.height) / 2, this.mPalace.y = (this.height - this.mPalace.height) / 2, this.playGuide.height = this.height, this.playGuide.y = 0, this.tipsGuide.y = this.tipsGuide.y + (this.height - this.mPage.height) / 2, this.pvpTime.y = this.pvpTime.y + (this.height - this.mPage.height) / 2, Laya.Browser.onMiniGame) {
                    var t = wx.getSystemInfoSync();
                    this.mSDKVersion = t.SDKVersion,
                        this.mScreenHeight = Number(t.screenHeight),
                        this.mScreenWidth = Number(t.screenWidth),
                        console.log(t);
                    t.model.indexOf("iPhone X") >= 0 ? (this.mXP = !0, this.btnReturn.y = 116, this.scoreBox.y = 140, this.mTop.y = 140) : this.btnReturn.y = 60,
                        this.height > 1334 && this.btnReturn2.pos(90, 80);
                }
            },
            e.prototype.showMapGame = function () {
                this.mPage.visible = !1,
                    Laya.timer.clear(this, this.giftAnimate),
                    null != this.lt && this.lt.hide(),
                    GameMain.app.mGameGates.show();
            },
            e.prototype.getLevel = function () {
                for (var t = this.mLevel.length,
                    e = 0; e < this.mLevel.length; e++) if (Math.floor(this.score) < this.mLevel[e]) {
                        t = e + 1;
                        break;
                    }
                return t;
            },
            e.prototype.showLogin = function () {
                var t = new GameLogin();
                t.name = "login",
                    Laya.stage.addChild(t),
                    t.init();
            },
            e.prototype.flashPlayer = function () {
                this.playerL.playWD(),
                    this.playerR.playWD();
            },
            e.prototype.showGift = function (t) {
                null == GameMain.app.mGameGift && (GameMain.app.mGameGift = new GameGift(), GameMain.app.mGameGift.zOrder = 19, this.addChild(GameMain.app.mGameGift), GameMain.app.mGameGift.onInit()),
                    GameMain.app.mGameGift.onShow(t);
            },
            e.prototype.giftAnimate = function (t) {
                this.giftm.rotation += 2;
            },
            e.prototype.showPvp = function (t) {
                null == GameMain.app.mGamePvp && (GameMain.app.mGamePvp = new GamePvp(), GameMain.app.mGamePvp.zOrder = 19, this.addChild(GameMain.app.mGamePvp), GameMain.app.mGamePvp.onInit()),
                    GameMain.app.mWX.onPvp(t);
            },
            e.prototype.showAD = function (t) {
                var e = GameMain.app.getCDN() + GameMain.app.mWX.getMoreUrl(t.name);
                GameMain.app.mWX.reportADHit(t.name),
                    wx.previewImage({
                        urls: [e],
                        success: function (t) {
                            console.log("预览图片成功");
                        }
                    });
            },
            e;
    }(ui.gameUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    GameGates = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.maps = {
                meterPerFrame: .01667,
                pixelPerMeter: 840,
                maps: [[{
                    speed: 1.05,
                    distance: 20,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 20,
                    stones: [[2, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 30,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 30,
                    stones: [[2, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -50,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 20,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[3, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[2, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 20,
                    stones: [[2, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -50,
                    stones: [[2, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -50,
                    stones: [[3, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 20,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -50,
                    stones: [[2, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 20,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[3, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[1, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[2, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[1, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 30,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[3, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -50,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[1, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 40,
                    stones: [[3, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[2, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[2, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 20,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 30,
                    stones: [[2, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[3, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -50,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[2, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[3, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[2, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[2, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[1, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[1, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 1], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -10,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: -50,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: -40,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -20,
                    stones: [[1, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[3, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: -30,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2], [3, 4]]
                },
                {
                    speed: 0
                }], [{
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 2], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 2], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 1], [3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 1], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 1], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 100,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 0,
                    stones: [[3, 3]]
                },
                {
                    speed: 0
                }], [{
                    speed: 1.05,
                    distance: 191,
                    stones: [[1, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 516,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 709,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 892,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 1269,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 1312,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 1644,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 1736,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 1924,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 2021,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 2344,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 2488,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 2721,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 2818,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 3099,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 3187,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 3566,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 3750,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 3943,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 4363,
                    stones: [[3, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 4597,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 4877,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 5068,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 5250,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 5627,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 5722,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 5955,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 6146,
                    stones: [[3, 4]]
                },
                {
                    speed: 1.05,
                    distance: 6422,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 6707,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 6799,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 6894,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 7219,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 7318,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 7406,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 7738,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 8209,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 8629,
                    stones: [[2, 2], [1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 9051,
                    stones: [[1, 1], [3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 9474,
                    stones: [[3, 2], [1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 9752,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 9894,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10271,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 10312,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 10644,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 10736,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 10972,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 11250,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 11394,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 11627,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 11959,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 12047,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 12379,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 12517,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 12849,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 12891,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 13177,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 13314,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 13687,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 13738,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 14111,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 14207,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 14531,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 14584,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 14955,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 15004,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 15285,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 15422,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 15662,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 15846,
                    stones: [[3, 2]]
                },
                {
                    speed: 1.05,
                    distance: 16082,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 16361,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 16552,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 16734,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 16972,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 17111,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 17484,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 17631,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 17861,
                    stones: [[2, 2]]
                },
                {
                    speed: 1.05,
                    distance: 18004,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 18381,
                    stones: [[1, 1], [2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 18756,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 18986,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 19129,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 19312,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 19646,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 19783,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 20019,
                    stones: [[3, 3]]
                },
                {
                    speed: 1.05,
                    distance: 20111,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 20349,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 20484,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 20537,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 20816,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 20955,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 21051,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 21281,
                    stones: [[2, 1]]
                },
                {
                    speed: 1.05,
                    distance: 21427,
                    stones: [[2, 4]]
                },
                {
                    speed: 1.05,
                    distance: 21801,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 21844,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 22221,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 22316,
                    stones: [[2, 3]]
                },
                {
                    speed: 1.05,
                    distance: 22547,
                    stones: [[1, 1]]
                },
                {
                    speed: 1.05,
                    distance: 22693,
                    stones: [[1, 4]]
                },
                {
                    speed: 1.05,
                    distance: 22830,
                    stones: [[1, 2]]
                },
                {
                    speed: 1.05,
                    distance: 23019,
                    stones: [[1, 3]]
                },
                {
                    speed: 1.05,
                    distance: 23203,
                    stones: [[3, 1]]
                },
                {
                    speed: 1.05,
                    distance: 23441,
                    stones: [[3, 3]]
                },
                {
                    speed: 0
                }]]
            },
                e.mMapDistance = [18e4, 2e5, 23443],
                e.mMapName = ["拇指大会", "群石乱舞", "律动跟随"],
                e.mMapIndex = 0,
                e.mStep = 0,
                e.mAdd = !0,
                e.gs = null,
                e;
        }
        return __extends(e, t),
            e.prototype.onInit = function (t) {
                null == this.gs && (this.gs = t, this.registerBtn(), this.width = Laya.stage.width, this.height = Laya.stage.height, this.pos(0, 0), this.title.y = this.title.y + (Laya.stage.height - 1334) / 2, this.mSample.y = this.mSample.y + (Laya.stage.height - 1334) / 2, this.mHard.y = this.mHard.y + (Laya.stage.height - 1334) / 2, this.mInfernal.y = this.mInfernal.y + (Laya.stage.height - 1334) / 2, this.btnMapRank1.y = this.btnMapRank1.y + (Laya.stage.height - 1334) / 2, this.btnMapRank2.y = this.btnMapRank2.y + (Laya.stage.height - 1334) / 2, this.gPass1.y = this.gPass1.y + (Laya.stage.height - 1334) / 2, this.gPass2.y = this.gPass2.y + (Laya.stage.height - 1334) / 2, this.mWH.y = this.mWH.y + (Laya.stage.height - 1334) / 2),
                    this.btnReturn.pos(this.gs.btnReturn.x, this.gs.btnReturn.y);
            },
            e.prototype.show = function () {
                this.gs.btnMusic.visible = !1,
                    this.visible = !0,
                    this.showMarks();
            },
            e.prototype.showMarks = function () {
                if (GameMain.app.mWX.mMarks[1] >= 1e3 ? this.gPass1.visible = !0 : this.gPass1.visible = !1, GameMain.app.mWX.mMarks[2] >= 1e3 ? this.gPass2.visible = !0 : this.gPass2.visible = !1, GameMain.app.mWX.mMarks[1] <= 0) this.mark1.visible = !1;
                else {
                    this.mark1.visible = !0; (t = Math.floor(GameMain.app.mWX.mMarks[1] / 10)) > 100 ? this.mark1.changeText("100%") : this.mark1.changeText(t + "%");
                }
                if (GameMain.app.mWX.mMarks[2] <= 0) this.mark2.visible = !1;
                else {
                    this.mark2.visible = !0;
                    var t = Math.floor(GameMain.app.mWX.mMarks[2] / 10);
                    t > 100 ? this.mark2.changeText("100%") : this.mark2.changeText(t + "%");
                }
                wx.postMessage({
                    type: "gateInfo",
                    show: 1
                });
                var e = new Laya.Sprite();
                Laya.stage.addChild(e),
                    e.name = "info";
                var i = new Laya.Texture(Laya.Browser.window.sharedCanvas);
                i.bitmap.alwaysChange = !0,
                    e.graphics.drawTexture(i, 0, 0, i.width, i.height);
            },
            e.prototype.registerBtn = function () {
                this.btnReturn.on(Events.CLICK, this, this.onReturn),
                    this.btnReturn.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.btnReturn]),
                    this.mSample.on(Events.CLICK, this, this.onCheck, [1]),
                    this.mSample.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.mSample]),
                    this.mSample.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.mSample]),
                    this.mSample.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.mSample]),
                    this.mHard.on(Events.CLICK, this, this.onCheck, [2]),
                    this.mHard.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.mHard]),
                    this.mHard.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.mHard]),
                    this.mHard.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.mHard]),
                    this.mInfernal.on(Events.CLICK, this, this.onCheck, [3]),
                    this.mInfernal.on(Events.MOUSE_DOWN, this, this.onBtnMouseDown, [this.mInfernal]),
                    this.mInfernal.on(Events.MOUSE_OUT, this, this.onBtnMouseOut, [this.mInfernal]),
                    this.mInfernal.on(Events.MOUSE_UP, this, this.onBtnMouseOut, [this.mInfernal]),
                    this.btnMapRank1.on(Events.CLICK, this, this.onRank, [1]),
                    this.btnMapRank2.on(Events.CLICK, this, this.onRank, [2]);
            },
            e.prototype.onReturn = function () {
                console.log("onreturn"),
                    this.onClose(),
                    this.gs.showPage();
            },
            e.prototype.onClose = function () {
                this.visible = !1,
                    wx.postMessage({
                        type: "gateInfo",
                        show: 0
                    }),
                    Laya.stage.removeChildByName("info");
            },
            e.prototype.onCheck = function (t) {
                t > 2 ? wx.showToast({
                    title: "地图尚未开放",
                    icon: "success",
                    image: "",
                    duration: 3e3
                }) : (this.mMapIndex = 0, this.mAdd = !0, GameMain.app.mGameScene.mSolo = 0, GameMain.app.mGameScene.mMapLevel = t, this.onClose(), this.gs.startGame());
            },
            e.prototype.onRank = function (t) {
                this.onClose(),
                    GameMain.app.mGameRank.showMapRank(t);
            },
            e.prototype.onBtnMouseDown = function (t) {
                t.scale(1.02, 1.02, !0),
                    t.filters = [this.gs.lightFilter];
            },
            e.prototype.onBtnMouseOut = function (t) {
                t.scale(1, 1, !0),
                    t.filters = [];
            },
            e;
    }(ui.gatesUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    GameGift = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.gs = null,
                e.mType = 0,
                e;
        }
        return __extends(e, t),
            e.prototype.onInit = function () {
                this.gs = GameMain.app.mGameScene,
                    this.width = Laya.stage.width,
                    this.height = Laya.stage.height,
                    this.pos(0, 0, !0),
                    this.bmask.width = this.width,
                    this.bmask.height = this.height,
                    this.mView.y = this.mView.y + (this.height - 1334) / 2,
                    this.visible = !1,
                    this.btnYQ.on(Events.CLICK, this, this.onShare),
                    this.btnYQ.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnYQ]),
                    this.btnYQ.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnYQ]),
                    this.btnYQ.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnYQ]),
                    this.btnGiftClose.on(Events.CLICK, this, this.close),
                    this.btnGiftClose.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnGiftClose]),
                    this.btnGiftClose.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnGiftClose]),
                    this.btnGiftClose.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnGiftClose]);
            },
            e.prototype.onShow = function (t) {
                this.mType = t,
                    GameMain.app.mWX.queryCards();
            },
            e.prototype.show = function () {
                1 == this.mType ? this.title.skin = "main/groups/title1.png" : this.title.skin = "main/groups/title2.png",
                    this.mCount.changeText("x" + GameMain.app.mWX.mCards),
                    GameMain.app.mGameRank.mCards4.changeText("x" + GameMain.app.mWX.mCards),
                    this.visible = !0;
            },
            e.prototype.close = function () {
                this.visible = !1;
            },
            e.prototype.onShare = function () {
                if (GameMain.app.mGameGift.close(), 1 == this.mType || 3 == this.mType) {
                    var t = "来！比一比谁的手速最快？",
                        e = GameMain.app.getCDN() + "level/997.png";
                    wx.shareAppMessage({
                        title: t,
                        imageUrl: e,
                        query: "uid=" + GameMain.app.mWX.mUID + "&score=0&client=0&type=0&id=0&gift=" + GameMain.app.mWX.mUID,
                        success: function (t) {
                            wx.showToast({
                                title: "分享成功",
                                icon: "success",
                                image: "",
                                duration: 3e3
                            });
                        },
                        fail: function (t) { }
                    });
                } else if (1 == Laya.Browser.onMiniGame) {
                    t = "神手" + Math.floor(this.gs.score) + "米！我变残了，也变强了！你能超过我吗？";
                    this.gs.mMapLevel > 0 && (t = "神手[" + GameMain.app.mGameGates.mMapName[this.gs.mMapLevel - 1] + "]完成" + Math.floor(this.gs.score) + "%！哈哈哈哈哈哈追不上我吧！");
                    e = GameMain.app.getCDN() + "level/997.png";
                    wx.shareAppMessage({
                        title: t,
                        imageUrl: e,
                        query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mShareID + "&score=" + this.gs.score + "&client=0&type=0",
                        success: function (t) {
                            wx.showToast({
                                title: "分享成功",
                                icon: "success",
                                image: "",
                                duration: 3e3
                            });
                        },
                        fail: function (t) { }
                    });
                }
            },
            e;
    }(ui.giftUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    GameGoon = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.gs = null,
                e.mMaster = null,
                e;
        }
        return __extends(e, t),
            e.prototype.onShow = function (t) {
                this.gs = GameMain.app.mGameScene,
                    this.width = Laya.stage.width,
                    this.height = Laya.stage.height,
                    this.mChallenge.y = this.mChallenge.y + (Laya.stage.height - 1334) / 2,
                    this.btnStar.on(Events.CLICK, this, this.onChallenge),
                    this.btnStar.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnStar]),
                    this.btnStar.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnStar]),
                    this.btnStar.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnStar]),
                    // this.btnYaoqing.on(Events.CLICK, this, this.onGoOn),
                    this.btnYaoqing.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnYaoqing]),
                    this.btnYaoqing.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnYaoqing]),
                    this.btnYaoqing.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnYaoqing]),
                    this.btnReturn.on(Events.CLICK, this, this.onReturn),
                    this.btnReturn.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnYaoqing.visible = !1,
                    this.btnStar.visible = !1;
                r = base64.Base64.decode(t.master.avatar);
                "0" == r.charAt(r.length - 1) && "/" == r.charAt(r.length - 2) && (r = r.substr(0, r.length - 2), r += "/132"),
                    this.face.skin = r,
                    this.masterName.text = base64.Base64.decode(t.master.name);
                for (var e = 0,
                    i = 0,
                    s = 1,
                    n = [], a = 0; a < t.data.length; a++) if (Number(t.data[a].uid) != Number(t.master.uid)) {
                        0 == i && (i = Number(t.data[a].mark));
                        var r;
                        "0" == (r = base64.Base64.decode(t.data[a].avatar)).charAt(r.length - 1) && "/" == r.charAt(r.length - 2) && (r = r.substr(0, r.length - 2), r += "/132"),
                            t.data[a].level = t.master.level,
                            t.data[a].avatar = r,
                            t.data[a].rank = s,
                            s += 1,
                            n.push(t.data[a]);
                    } else e = Number(t.data[a].mark);
                for (a = n.length; a < 5; a++) n.push({
                    uid: 0
                });
                this.mark.text = Math.floor(e / 10).toString() + "米",
                    this.theMark.text = Math.floor(e / 10) + Math.floor(i / 10) + "米",
                    this.helpmark.text = Math.floor(i / 10).toString() + "米",
                    this.lists.vScrollBarSkin = "",
                    this.lists.selectEnable = !1,
                    this.lists.renderHandler = new Laya.Handler(this, this.updateChallenge),
                    this.lists.repeatX = 1,
                    this.lists.array = n,
                    this.lists.repeatY = this.lists.array.length,
                    GameMain.app.mWX.mUID == Number(t.master.uid) ? this.btnYaoqing.visible = !0 : this.btnStar.visible = !0,
                    this.mMaster = t.master,
                    this.visible = !0;
            },
            e.prototype.updateChallenge = function (t, e) {
                var i = t.getChildByName("rkb").getChildByName("rank"),
                    s = t.getChildByName("name"),
                    n = t.getChildByName("mark"),
                    a = t.getChildByName("face"),
                    r = t.getChildByName("rkb");
                i.visible = !1,
                    a.visible = !1,
                    s.visible = !1,
                    n.visible = !1,
                    r.visible = !1,
                    0 != Number(t.dataSource.uid) && (i.visible = !0, a.visible = !0, s.visible = !0, n.visible = !0, r.visible = !0, a.skin = t.dataSource.avatar, s.text = base64.Base64.decode(t.dataSource.name), i.text = (e + 1).toString(), n.text = Math.floor(t.dataSource.mark / 10).toString() + "米");
            },
            e.prototype.onChallenge = function () {
                this.close(),
                    this.gs.startGame();
            },
            // e.prototype.onGoOn = function () {
            //   if (1 == Laya.Browser.onMiniGame) {
            //     var t = "神手" + Math.floor(this.mMaster.mark / 10) + "米！帮我继续玩，让我冲上榜首。",
            //       e = GameMain.app.getCDN() + "level/997.png";
            //     wx.shareAppMessage({
            //       title: t,
            //       imageUrl: e,
            //       query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mChallengeID + "&score=" + this.mMaster.mark + "&client=0&help=1",
            //       success: function (t) {
            //         wx.showToast({
            //           title: "分享成功",
            //           icon: "success",
            //           image: "",
            //           duration: 2e3
            //         }),
            //           GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
            //       },
            //       fail: function (t) { }
            //     });
            //   }
            // },
            e.prototype.onReturn = function () {
                this.gs.showPage(),
                    this.close();
            },
            e.prototype.close = function () {
                this.visible = !1,
                    this.removeSelf();
            },
            e;
    }(ui.goonUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    GameLogin = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.login = null,
                e;
        }
        return __extends(e, t),
            e.prototype.init = function () {
                var t = Math.floor(424 * GameMain.app.mGameScene.mScreenWidth / Laya.stage.width),
                    e = Math.floor(134 * GameMain.app.mGameScene.mScreenWidth / Laya.stage.width),
                    i = Math.floor(163 * GameMain.app.mGameScene.mScreenWidth / Laya.stage.width),
                    s = Math.floor((880 + (Laya.stage.height - 1334) / 2) * GameMain.app.mGameScene.mScreenHeight / Laya.stage.height);
                this.y = this.y + (Laya.stage.height - 1334) / 2,
                    this.login = wx.createUserInfoButton({
                        type: "image",
                        image: "main/check/blogin.png",
                        style: {
                            left: i,
                            top: s,
                            width: t,
                            height: e
                        }
                    }),
                    this.login.show(),
                    this.login.onTap(function (t) {
                        wx.showLoading({
                            title: "获取用户信息",
                            mask: !0
                        }),
                            GameMain.app.mWX.onLogin(t);
                    }),
                    this.visible = !0;
            },
            e;
    }(ui.loginUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    GamePvp = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.net = null,
                e.gs = null,
                e.room = {},
                e.mRankName = ["一", "二", "三", "四", "五", "六"],
                e.isGame = !1,
                e;
        }
        return __extends(e, t),
            e.prototype.onInit = function () {
                this.gs = GameMain.app.mGameScene,
                    this.width = Laya.stage.width,
                    this.height = Laya.stage.height,
                    this.pos(0, 0),
                    this.title.y = this.title.y + (this.height - 1334) / 2,
                    this.listBK.y = this.listBK.y + (this.height - 1334) / 2,
                    this.btnYaoqing.y = this.btnYaoqing.y + (this.height - 1334) / 2,
                    this.btnStar.y = this.btnStar.y + (this.height - 1334) / 2,
                    this.btnShare.y = this.btnShare.y + (this.height - 1334) / 2,
                    this.btnYaoqing2.y = this.btnYaoqing2.y + (this.height - 1334) / 2,
                    this.btnSolo.y = this.btnSolo.y + (this.height - 1334) / 2,
                    this.btnMul.y = this.btnMul.y + (this.height - 1334) / 2,
                    this.btnAgain.y = this.btnAgain.y + (this.height - 1334) / 2,
                    this.roombg.y = this.roombg.y + (this.height - 1334) / 2,
                    this.btnReturn.on(Events.CLICK, this, this.onMainPapge),
                    this.btnReturn.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnSolo.on(Events.CLICK, this, this.onSolo),
                    this.btnSolo.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnSolo]),
                    this.btnSolo.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnSolo]),
                    this.btnSolo.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnSolo]),
                    this.btnYaoqing.on(Events.CLICK, this, this.onInvite),
                    this.btnYaoqing.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnYaoqing]),
                    this.btnYaoqing.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnYaoqing]),
                    this.btnYaoqing.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnYaoqing]),
                    this.btnYaoqing2.on(Events.CLICK, this, this.onInvite),
                    this.btnYaoqing2.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnYaoqing2]),
                    this.btnYaoqing2.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnYaoqing2]),
                    this.btnYaoqing2.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnYaoqing2]),
                    this.btnMul.on(Events.CLICK, this, this.onMul),
                    this.btnMul.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnMul]),
                    this.btnMul.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnMul]),
                    this.btnMul.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnMul]),
                    this.btnStar.on(Events.CLICK, this, this.onMulStar),
                    this.btnStar.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnStar]),
                    this.btnStar.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnStar]),
                    this.btnStar.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnStar]),
                    this.btnShare.on(Events.CLICK, this, this.onInvite2),
                    this.btnShare.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnShare]),
                    this.btnShare.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnShare]),
                    this.btnShare.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnShare]),
                    this.btnAgain.on(Events.CLICK, this, this.onAgain),
                    this.btnAgain.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnAgain]),
                    this.btnAgain.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnAgain]),
                    this.btnAgain.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnAgain]),
                    this.mList.vScrollBarSkin = "",
                    this.mList.selectEnable = !1,
                    this.mList.renderHandler = new Laya.Handler(this, this.updateUser),
                    this.visible = !1;
            },
            e.prototype.onShow = function () {
                this.gs.btnMusic.visible = !1,
                    this.gs.clearPage(),
                    this.gs.mPage.visible = !1,
                    null != this.gs.lt && this.gs.lt.hide(),
                    this.mList.array = [],
                    this.btnYaoqing.visible = !1,
                    this.btnStar.visible = !1,
                    this.btnShare.visible = !1,
                    this.btnYaoqing2.visible = !1,
                    this.btnSolo.visible = !1,
                    this.btnMul.visible = !1,
                    this.btnAgain.visible = !1,
                    this.visible = !0,
                    this.isGame = !1;
            },
            e.prototype.updateUser = function (t, e) {
                var i = t.getChildByName("face"),
                    s = t.getChildByName("name"),
                    n = t.getChildByName("mk"),
                    a = t.getChildByName("rk"),
                    r = t.getChildByName("ll").getChildByName("level"),
                    o = t.getChildByName("ready");
                if (t.dataSource.uid <= 0) {
                    i.visible = !1;
                    return (h = t.getChildByName("ll")).visible = !1,
                        n.visible = !1,
                        s.visible = !1,
                        a.visible = !1,
                        void (o.visible = !1);
                }
                i.visible = !0;
                var h = t.getChildByName("ll");
                if (h.visible = !0, n.visible = !0, s.visible = !0, a.visible = !0, o.visible = !0, s.changeText(t.dataSource.name), i.skin = t.dataSource.avatar, r.text = t.dataSource.level, t.dataSource.state <= 1) {
                    n.visible = !1,
                        a.visible = !1;
                    for (var l = this.room.players,
                        c = 1; c <= l.rowCount(); c++) t.dataSource.uid == l.getLong(c, "uid") && (0 == l.getLong(c, "online") ? o.text = "离线中" : 1 == l.getLong(c, "ready") ? o.text = "已准备" : o.text = "未准备");
                    o.visible = !0;
                } else 2 == t.dataSource.state ? (n.visible = !1, a.visible = !1, o.text = "游戏中", o.visible = !0) : (n.visible = !0, a.visible = !0, o.visible = !1, t.dataSource.mark <= 0 ? (n.text = "无排名", a.text = "未完成") : (n.text = this.showTime(t.dataSource.mark), a.text = "第" + this.mRankName[t.dataSource.rank - 1] + "名"));
            },
            e.prototype.showTime = function (t) {
                var e = "",
                    i = Math.floor(t / 60),
                    s = Math.floor(t % 60);
                return i >= 10 ? e += i.toString() : e = e + "0" + i.toString(),
                    e += ":",
                    s >= 10 ? e += s : e = e + "0" + s,
                    e;
            },
            e.prototype.onInvite = function () {
                for (var t = "",
                    e = this.room.players,
                    i = 1; i <= e.rowCount(); i++) if (e.getLong(i, "uid") == this.room.master) {
                        t = base64.Base64.decode(e.getString(i, "name"));
                        break;
                    }
                var s = t + "向你发起了手速PK，点击应战！",
                    n = GameMain.app.getCDN() + "level/9941.png";
                wx.shareAppMessage({
                    title: s,
                    imageUrl: n,
                    query: "uid=" + GameMain.app.mWX.mUID + "&id=" + this.room.roomid + "&type=12",
                    success: function (t) {
                        wx.showToast({
                            title: "分享成功",
                            icon: "success",
                            image: "",
                            duration: 2e3
                        });
                    }
                });
            },
            e.prototype.onInvite2 = function () {
                var t = GameMain.app.getCDN() + "level/9942.png";
                wx.shareAppMessage({
                    title: "分享我的神手PVP战绩，你能超过我吗？",
                    imageUrl: t,
                    query: "uid=" + GameMain.app.mWX.mUID + "&id=" + this.room.battleid + "&type=11",
                    success: function (t) {
                        wx.showToast({
                            title: "分享成功",
                            icon: "success",
                            image: "",
                            duration: 2e3
                        });
                    }
                });
            },
            e.prototype.onAgain = function () {
                this.net.onAgain();
            },
            e.prototype.onPlayAgain = function (t) {
                var e = t.getLong();
                if (0 == e) {
                    var i = t.getLong();
                    if (i == GameMain.app.mWX.mUID) this.btnYaoqing.visible = !1,
                        this.btnStar.visible = !1,
                        this.btnShare.visible = !1,
                        this.btnYaoqing2.visible = !1,
                        this.btnSolo.visible = !1,
                        this.btnMul.visible = !1,
                        this.btnAgain.visible = !1,
                        this.room.battleid = t.getString(),
                        this.room.players = t.getTable(),
                        this.room.state = 0,
                        console.log(this.room),
                        this.room.master == GameMain.app.mWX.mUID ? (this.btnSolo.visible = !0, this.btnStar.visible = !0) : this.btnYaoqing2.visible = !0;
                    else for (var s = this.room.players,
                        n = 1; n <= s.rowCount(); n++) if (s.getLong(n, "uid") == i) {
                            s.setLong(n, "ready", 1),
                                s.setLong(n, "online", 1);
                            break;
                        }
                    this.updateLists();
                } else - 1 == e && wx.showToast({
                    title: "游戏已经开始",
                    icon: "success",
                    image: "",
                    duration: 2e3
                });
            },
            e.prototype.onMainPapge = function () {
                this.gs.playGuide.visible = !1,
                    this.isGame = !1,
                    this.closeNet(),
                    this.close(),
                    this.gs.onReturn();
            },
            e.prototype.showMaster = function (t) {
                this.onShow();
                var e = t.id,
                    i = t.url,
                    s = t.token,
                    n = Number(t.master);
                if (2 == Number(t.state)) {
                    var a = t.data;
                    if (null == a || 0 == a.length) return this.btnMul.visible = !0,
                        this.btnSolo.visible = !0,
                        this.visible = !0,
                        this.fztips.visible = !1,
                        this.tips.changeText("对战已结束"),
                        wx.hideLoading({}),
                        void wx.showToast({
                            title: "对战已结束",
                            icon: "success",
                            image: "",
                            duration: 2e3
                        });
                    this.fztips.visible = !0,
                        this.room = {},
                        this.room.state = 3,
                        this.room.roomid = e,
                        this.room.master = n;
                    var r = new NetTable();
                    r.addCol("name", NetTable.NET_STRING),
                        r.addCol("avatar", NetTable.NET_STRING),
                        r.addCol("mark", NetTable.NET_LONG),
                        r.addCol("uid", NetTable.NET_LONG),
                        r.addCol("rank", NetTable.NET_LONG),
                        r.addCol("hismark", NetTable.NET_LONG),
                        r.addCol("online", NetTable.NET_LONG);
                    for (var o = 0; o < a.length; o++) {
                        var h = r.addRow();
                        r.setString(h, "name", a[o].name),
                            r.setString(h, "avatar", a[o].avatar),
                            r.setLong(h, "mark", Math.floor(a[o].mark / 1e5)),
                            r.setLong(h, "hismark", Math.floor(a[o].mark % 1e5 / 10)),
                            r.setLong(h, "uid", a[o].uid),
                            r.setLong(h, "rank", a[o].mark % 10);
                    }
                    this.room.players = r,
                        this.updateLists(),
                        this.btnMul.visible = !0,
                        this.btnSolo.visible = !0;
                } else this.net = new wanzhu.gnet(),
                    this.net.onInit(e, i, s);
                this.visible = !0,
                    wx.hideLoading({});
            },
            e.prototype.close = function () {
                this.visible = !1;
            },
            e.prototype.closeNet = function () {
                wx.hideLoading({}),
                    null != this.net && (this.net.onClear(), this.net = null);
            },
            e.prototype.onSolo = function () {
                this.gs.mMapLevel = 0,
                    this.closeNet(),
                    this.close(),
                    this.gs.startGame();
            },
            e.prototype.onMul = function () {
                GameMain.app.mWX.onPvp(0);
            },
            e.prototype.onMulStar = function () {
                this.room.players.rowCount() >= 2 && GameMain.app.mWX.mUID == this.room.master ? (null != this.net && this.net.onStar(), console.log("开始游戏")) : wx.showToast({
                    title: "至少需要2位玩家",
                    icon: "success",
                    image: "",
                    duration: 2e3
                });
            },
            e.prototype.onStar = function (t) {
                var e = t.getLong();
                if (0 == e) {
                    if (this.close(), this.gs.mMapLevel = 99, this.gs.startGame(), this.room.start = t.getLong(), this.isGame = !0, null != this.net && this.net.onClash(1), 0 == this.starGame() && Laya.timer.once(1e3, this, this.starGame), null == this.gs.getChildByName("pvptop")) {
                        var i = new PvpTop();
                        i.name = "pvptop",
                            this.gs.addChild(i),
                            i.zOrder = 19,
                            i.show(this.room.players);
                    }
                    Laya.timer.loop(1e3, this, this.updateTime),
                        console.log("开始游戏");
                } else - 1 == e ? wx.showToast({
                    title: "你不是房主",
                    icon: "success",
                    image: "",
                    duration: 2e3
                }) : -2 == e ? wx.showToast({
                    title: "至少需要2位玩家",
                    icon: "success",
                    image: "",
                    duration: 2e3
                }) : this.showError(e);
            },
            e.prototype.updateTime = function () {
                this.showScore(this.gs.score);
            },
            e.prototype.update = function () {
                var t = this.gs.score,
                    e = this.gs.getChildByName("pvptop");
                null != e && e.update(t, this.room.start);
            },
            e.prototype.starGame = function () {
                var t = this.room.start - GameMain.app.getServerTime();
                return t <= 0 ? (this.gs.playGuide.visible = !1, Laya.timer.frameLoop(1, this, this.update), this.gs.onStart(), !0) : (t > 5 && (t = 5), this.gs.ptime.changeText(t.toString()), Laya.timer.once(1e3, this, this.starGame), !1);
            },
            e.prototype.onLogined = function (t) {
                var e = t.getLong();
                console.log("login code:" + e),
                    0 == e ? (this.room = {},
                        this.room.state = t.getLong() - 1, this.room.master = t.getLong(), this.room.born = t.getLong(), GameMain.app.setServerTime(t.getLong()), this.room.roomid = t.getString(), this.room.battleid = t.getString(), this.room.players = t.getTable(), this.net.mSession = t.getLong(), this.net.net.setSession(this.net.mSession), this.updateLists(), 0 == this.room.state && (this.room.master == GameMain.app.mWX.mUID ? (this.btnYaoqing.visible = !0, this.btnStar.visible = !0) : this.btnYaoqing2.visible = !0)) : 50331653 == e || 50331652 == e ? (this.room.state = t.getLong(), this.room.master = t.getLong(), this.room.roomid = t.getString(), 50331653 == e && wx.showToast({
                            title: "房间满员",
                            icon: "success",
                            image: "",
                            duration: 2e3
                        }), this.room.state = 2, this.room.players = t.getTable(), this.closeNet(), this.updateLists(), this.btnMul.visible = !0, this.btnSolo.visible = !0) : this.showError(e),
                    console.log(this.room);
            },
            e.prototype.onJoin = function (t) {
                for (var e = t.getTable(), i = e.getLong(1, "uid"), s = this.room.players, n = 0, a = 1; a <= s.rowCount(); a++) if (s.getLong(a, "uid") == i) {
                    n = a,
                        s.setLong(a, "online", 1);
                    break;
                }
                0 == n && (n = s.addRow(), s.setLong(n, "uid", i), s.setString(n, "name", e.getString(1, "name")), s.setString(n, "avatar", e.getString(1, "avatar")), s.setLong(n, "hismark", e.getLong(1, "hismark")), s.setLong(n, "mark", 0), s.setLong(n, "rank", 0), s.setLong(n, "online", 1), s.setLong(n, "ready", 1)),
                    this.updateLists();
            },
            e.prototype.onLeave = function (t) {
                var e = t.getLong();
                if (e == this.room.master) return wx.showToast({
                    title: "房主退出，房间关闭",
                    icon: "success",
                    image: "",
                    duration: 3e3
                }),
                    void this.onMainPapge();
                for (var i = this.room.players,
                    s = 1; s <= i.rowCount(); s++) if (i.getLong(s, "uid") == e) {
                        i.delRow(s);
                        break;
                    }
                var n = this.gs.getChildByName("pvptop");
                null != n && n.offLine(e),
                    this.updateLists();
            },
            e.prototype.onLine = function (t) {
                for (var e = t.getLong(), i = this.room.players, s = 1; s <= i.rowCount(); s++) if (i.getLong(s, "uid") == e) {
                    i.setLong(s, "online", 1),
                        i.setLong(s, "ready", 1);
                    break;
                }
                this.updateLists();
            },
            e.prototype.offLine = function (t) {
                for (var e = t.getLong(), i = this.room.players, s = 1; s <= i.rowCount(); s++) if (i.getLong(s, "uid") == e) {
                    i.setLong(s, "online", 0);
                    break;
                }
                var n = this.gs.getChildByName("pvptop");
                null != n && n.offLine(e),
                    this.updateLists();
            },
            e.prototype.showScore = function (t) {
                var e = this.showTime(GameMain.app.getServerTime() - this.room.start);
                this.gs.scoreLabel.changeText(e);
            },
            e.prototype.updateLists = function () {
                if (1 != this.btnAgain.visible) {
                    for (var t = GameMain.app.mGameScene.mLevel,
                        e = GameMain.app.mGameScene.mLevelName,
                        i = [], s = this.room.players, n = 1; n <= s.rowCount(); n++) if (s.getLong(n, "uid") == this.room.master) {
                            var a = {},
                                r = base64.Base64.decode(s.getString(n, "name")),
                                o = base64.Base64.decode(s.getString(n, "avatar"));
                            this.roomname.changeText(r + "的房间"),
                                "0" == o.charAt(o.length - 1) && "/" == o.charAt(o.length - 2) && (o = o.substr(0, o.length - 2), o += "/132");
                            for (var h = Math.floor(s.getLong(n, "hismark")), l = t.length, c = 0; c < t.length; c++) if (h < t[c]) {
                                l = c + 1;
                                break;
                            }
                            a.name = r,
                                a.avatar = o,
                                a.level = e[l - 1],
                                a.mark = s.getLong(n, "mark"),
                                a.rank = s.getLong(n, "rank"),
                                a.state = this.room.state,
                                a.uid = s.getLong(n, "uid"),
                                i.push(a);
                            break;
                        }
                    for (n = 1; n <= s.rowCount(); n++) if (s.getLong(n, "uid") != this.room.master && 0 != s.getLong(n, "ready")) {
                        var a = {},
                            r = base64.Base64.decode(s.getString(n, "name"));
                        "0" == (o = base64.Base64.decode(s.getString(n, "avatar"))).charAt(o.length - 1) && "/" == o.charAt(o.length - 2) && (o = o.substr(0, o.length - 2), o += "/132");
                        for (var h = Math.floor(s.getLong(n, "hismark")), l = t.length, c = 0; c < t.length; c++) if (h < t[c]) {
                            l = c + 1;
                            break;
                        }
                        a.name = r,
                            a.avatar = o,
                            a.level = e[l - 1],
                            a.mark = s.getLong(n, "mark"),
                            a.rank = s.getLong(n, "rank"),
                            a.uid = s.getLong(n, "uid"),
                            a.state = this.room.state,
                            i.push(a);
                    }
                    for (n = i.length; n < 6; n++) i.push({
                        uid: 0
                    });
                    this.mList.array = i,
                        this.room.state > 2 ? this.tips.changeText("游戏已经结束") : 2 == this.room.state ? this.tips.changeText("游戏进行中") : 1 == s.rowCount() ? this.tips.changeText("邀请群友加入游戏") : this.tips.changeText("等待房主开始游戏");
                }
            },
            e.prototype.onStop = function () {
                var t = this;
                Laya.SoundManager.stopAll(),
                    Laya.timer.callLater(this,
                        function () {
                            1 == t.gs.mMusic && Laya.SoundManager.playSound("https://t.wanzhucdn.com/xcx/zhishen/sounds/SE_GameOver.mp3");
                        }),
                    Laya.Tween.clearAll(this.gs.playerL),
                    Laya.Tween.clearAll(this.gs.playerR),
                    this.gs.isPlaying = !1,
                    this.gs.fingerLeft.visible = !0,
                    this.gs.fingerRight.visible = !0,
                    Laya.timer.clear(this.gs, this.gs.onLoop),
                    Laya.timer.once(2e3, this, this.resume),
                    null != this.net && this.net.onClash(0);
            },
            e.prototype.resume = function () {
                this.gs.onResume();
            },
            e.prototype.onClash = function (t) {
                if (0 == t.getLong()) {
                    var e = t.getLong(),
                        i = (t.getLong(), t.getLong()),
                        s = this.gs.getChildByName("pvptop");
                    null != s && s.onCrash(e, i),
                        console.log("撞死了");
                }
            },
            e.prototype.onWin = function (t) {
                0 == t.getLong() && (this.room.winer = t.getLong(), this.room.endtime = t.getLong(), 0 == this.endGame() && (this.gs.playGuide.visible = !0, Laya.timer.once(1e3, this, this.endGame)), console.log("10秒后游戏结束"));
            },
            e.prototype.endGame = function () {
                var t = this.room.endtime - GameMain.app.getServerTime();
                return t <= 0 ? (this.gs.ptime.changeText("0"), this.stopGame(), !0) : (t > 10 && (t = 10), this.gs.ptime.changeText(t.toString()), Laya.timer.once(1e3, this, this.endGame), !1);
            },
            e.prototype.showMarks = function (t) {
                var e = this.gs.getChildByName("pvptop");
                null != e && e.close(),
                    Laya.timer.clear(this, this.updateTime),
                    Laya.timer.clear(this, this.update),
                    this.gs.playGuide.visible = !1,
                    this.stopGame(),
                    this.gs.scoreBox.visible = !1,
                    this.gs.endline.visible = !1,
                    this.gs.overFingerLeft.visible = !1,
                    this.gs.overFingerRight.visible = !1,
                    Laya.Tween.clearAll(this.gs.playerL),
                    Laya.Tween.clearAll(this.gs.playerR),
                    this.gs.playerL.visible = !1,
                    this.gs.playerR.visible = !1,
                    this.room.state = 3;
                for (var i = t.getTable(), s = 1; s <= i.rowCount(); s++) {
                    var n = i.getLong(s, "mark");
                    i.setLong(s, "mark", Math.floor(n / 1e5)),
                        i.setLong(s, "rank", n % 10);
                }
                this.room.players = i,
                    this.updateLists(),
                    this.btnAgain.visible = !0,
                    this.btnSolo.visible = !0,
                    this.btnShare.visible = !0,
                    this.btnYaoqing2.visible = !1,
                    this.visible = !0;
            },
            e.prototype.gameOver = function () {
                var t = this;
                this.stopGame(),
                    null != this.net && (this.net.onWin(), Laya.timer.callLater(this,
                        function () {
                            1 == t.gs.mMusic && Laya.SoundManager.playSound("https://t.wanzhucdn.com/xcx/zhishen/sounds/SE_GameOver.mp3");
                        }));
            },
            e.prototype.stopGame = function () {
                console.log("stopGame"),
                    this.isGame = !1,
                    Laya.SoundManager.stopAll(),
                    Laya.Tween.clearAll(this.gs.playerL),
                    Laya.Tween.clearAll(this.gs.playerR),
                    this.gs.isPlaying = !1,
                    this.gs.fingerLeft.visible = !1,
                    this.gs.fingerRight.visible = !1,
                    this.gs.overFingerLeft.visible = !0,
                    this.gs.overFingerRight.visible = !0,
                    this.gs.overFingerLeft.play(0, !1),
                    this.gs.overFingerRight.play(0, !1),
                    Laya.timer.clear(this.gs, this.gs.resume),
                    Laya.timer.clear(this.gs, this.gs.onLoop),
                    Laya.timer.clear(this, this.resume);
            },
            e.prototype.showError = function (t) {
                console.log(t.toString(16));
            },
            e.prototype.reset = function () {
                null != this.net && 0 == this.net.net.mConnect && (console.log("清理......"), this.closeNet(), this.stopGame(), this.close(), Laya.timer.clearAll(this), Laya.timer.clearAll(this.gs), this.onMainPapge()),
                    GameMain.app.mWX.mLaunch.query.id = 0;
            },
            e.prototype.onHide = function () {
                1 == this.isGame ? (console.log("清理1......"), this.closeNet(), this.stopGame(), this.close(), Laya.timer.clearAll(this), Laya.timer.clearAll(this.gs), this.onMainPapge()) : null != this.net && 0 == this.net.net.mConnect && (console.log("清理2......"), this.closeNet(), this.stopGame(), this.close(), Laya.timer.clearAll(this), Laya.timer.clearAll(this.gs), this.onMainPapge());
            },
            e;
    }(ui.pvpUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    GameRank = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.gs = null,
                e.wRankData = [],
                e.dataPage = 0,
                e.cWRankPage = 0,
                e.mType = 0,
                e;
        }
        return __extends(e, t),
            e.prototype.onInit = function () {
                this.gs = GameMain.app.mGameScene,
                    this.width = Laya.stage.width,
                    this.height = Laya.stage.height,
                    this.pos(0, 0, !0),
                    this.visible = !1,
                    this.mLastPage.y = this.mLastPage.y + (this.height - 1334) / 2,
                    this.mNextPage.y = this.mNextPage.y + (this.height - 1334) / 2,
                    this.listBK.y = this.listBK.y + (this.height - 1334) / 2,
                    this.mTitle.y = this.mTitle.y + (this.height - 1334) / 2,
                    this.btnChallenge.y = this.btnChallenge.y + (this.height - 1334) / 2,
                    this.btnReturn.pos(this.gs.btnReturn.x, this.gs.btnReturn.y),
                    this.btnReturn2.pos(this.gs.btnReturn2.x, this.gs.btnReturn2.y),
                    this.mList.vScrollBarSkin = "",
                    this.mList.selectEnable = !1,
                    this.mList.renderHandler = new Laya.Handler(this, this.updateUser),
                    this.mLastPage.on(Events.CLICK, this, this.onChangePage, ["previous"]),
                    this.mLastPage.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.mLastPage]),
                    this.mLastPage.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.mLastPage]),
                    this.mLastPage.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.mLastPage]),
                    this.mNextPage.on(Events.CLICK, this, this.onChangePage, ["next"]),
                    this.mNextPage.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.mNextPage]),
                    this.mNextPage.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.mNextPage]),
                    this.mNextPage.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.mNextPage]),
                    this.btnReturn.on(Events.CLICK, this.gs, this.gs.onReturn2),
                    this.btnReturn.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn2.on(Events.CLICK, this.gs, this.gs.onReturn2),
                    this.btnReturn2.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnReturn2]),
                    this.btnReturn2.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnReturn2]),
                    this.btnReturn2.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnReturn2]),
                    this.btnChallenge.on(Events.CLICK, this.gs, this.gs.startGame),
                    this.btnChallenge.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnChallenge]),
                    this.btnChallenge.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnChallenge]),
                    this.btnChallenge.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnChallenge]),
                    this.btnWDTag.on(Events.CLICK, this.gs, this.gs.showGift, [3]),
                    this.btnWDTag.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnWDTag]),
                    this.btnWDTag.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnWDTag]),
                    this.btnWDTag.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnWDTag]);
            },
            e.prototype.close = function () {
                wx.postMessage({
                    type: "rank",
                    show: 0
                }),
                    this.removeChildByName("rank"),
                    1 == this.mList.visible && (this.cWRankPage = 0, this.dataPage = 0, this.wRankData.splice(0, this.wRankData.length)),
                    this.mList.visible = !1,
                    this.mSelf.visible = !1,
                    this.visible = !1;
            },
            e.prototype.show = function () {
                this.btnReturn2.visible = !1,
                    this.btnReturn.visible = !0,
                    this.btnChallenge.visible = !1,
                    this.gs.btnReturn2.visible = !1,
                    this.gs.mPage.visible = !1,
                    null != this.gs.lt && this.gs.lt.hide(),
                    this.gs.playGuide.visible = !1,
                    this.gs.btnMusic.visible = !1,
                    this.mTitle.visible = !0;
                for (var t = GameMain.app.mWX.mMarks[0], e = this.gs.mLevel.length, i = 0; i < this.gs.mLevel.length; i++) if (Math.floor(t / 10) < this.gs.mLevel[i]) {
                    e = i + 1;
                    break;
                }
                this.myLevel.text = this.gs.mLevelName[e - 1].toString(),
                    this.selfFace.skin = GameMain.app.mWX.mUser.avatarUrl,
                    this.mName.text = GameMain.app.mWX.mUser.nickName,
                    this.btnWDTag.zOrder = 20,
                    this.mCards4.changeText("x" + GameMain.app.mWX.mCards),
                    this.visible = !0;
            },
            e.prototype.showRank = function () {
                this.close(),
                    this.show(),
                    this.mTitle.skin = "main/groups/frank.png",
                    this.mType = 1,
                    this.rankbk.visible = !1,
                    GameMain.app.mWX.mMyRank > 0 && (this.rankbk.visible = !0, GameMain.app.mWX.mMyRank < 999999 ? this.mRank.text = GameMain.app.mWX.mMyRank.toString() : this.mRank.text = "未上榜"),
                    0 == GameMain.app.mWX.mMarks[0] ? this.mMark.changeText("暂无成绩") : this.mMark.changeText(Math.floor(GameMain.app.mWX.mMarks[0] / 10).toString() + "米"),
                    GameMain.app.mWX.mMarks[1] >= 1e3 ? this.mMap1.skin = "main/groups/star_1.png" : this.mMap1.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[2] >= 1e3 ? this.mMap2.skin = "main/groups/star_1.png" : this.mMap2.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[3] >= 1e3 ? this.mMap3.skin = "main/groups/star_1.png" : this.mMap3.skin = "main/groups/star_0.png",
                    wx.postMessage({
                        type: "rank",
                        show: 1,
                        level: 0,
                        info: GameMain.app.mWX.mUser,
                        dir: "none"
                    });
                var t = new Laya.Sprite();
                this.addChild(t),
                    t.name = "rank";
                var e = new Laya.Texture(Laya.Browser.window.sharedCanvas);
                e.bitmap.alwaysChange = !0,
                    t.graphics.drawTexture(e, 0, 0, e.width, e.height);
            },
            e.prototype.showGroupRank = function () {
                wx.showLoading({
                    title: "",
                    mask: !0
                }),
                    Laya.timer.once(2e3, this,
                        function () {
                            wx.hideLoading({});
                        }),
                    this.close(),
                    this.show(),
                    this.btnReturn.visible = !1,
                    this.btnReturn2.visible = !0,
                    this.mTitle.skin = "main/groups/groupname.png",
                    this.mType = 2,
                    wx.postMessage({
                        type: "group",
                        show: 1,
                        groupid: GameMain.app.mWX.mLaunch.shareTicket,
                        level: 0,
                        openid: GameMain.app.mWX.mUser.openid,
                        dir: "none"
                    }),
                    this.rankbk.visible = !1,
                    GameMain.app.mWX.mMyRank > 0 && (this.rankbk.visible = !0, GameMain.app.mWX.mMyRank < 999999 ? this.mRank.text = GameMain.app.mWX.mMyRank.toString() : this.mRank.text = "未上榜"),
                    0 == GameMain.app.mWX.mMarks[0] ? this.mMark.changeText("暂无成绩") : this.mMark.changeText(Math.floor(GameMain.app.mWX.mMarks[0] / 10).toString() + "米"),
                    GameMain.app.mWX.mMarks[1] >= 1e3 ? this.mMap1.skin = "main/groups/star_1.png" : this.mMap1.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[2] >= 1e3 ? this.mMap2.skin = "main/groups/star_1.png" : this.mMap2.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[3] >= 1e3 ? this.mMap3.skin = "main/groups/star_1.png" : this.mMap3.skin = "main/groups/star_0.png",
                    this.btnChallenge.visible = !0;
                var t = new Laya.Sprite();
                this.addChild(t),
                    t.name = "rank";
                var e = new Laya.Texture(Laya.Browser.window.sharedCanvas);
                e.bitmap.alwaysChange = !0,
                    t.graphics.drawTexture(e, 0, 0, e.width, e.height);
            },
            e.prototype.showMapRank = function (t) {
                this.close(),
                    this.show(),
                    this.mTitle.skin = "main/groups/map_title_" + t + ".png",
                    this.mType = 3,
                    this.mMark.changeText(Math.floor(GameMain.app.mWX.mMarks[t] / 10).toString() + "%"),
                    GameMain.app.mWX.mMarks[1] >= 1e3 ? this.mMap1.skin = "main/groups/star_1.png" : this.mMap1.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[2] >= 1e3 ? this.mMap2.skin = "main/groups/star_1.png" : this.mMap2.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[3] >= 1e3 ? this.mMap3.skin = "main/groups/star_1.png" : this.mMap3.skin = "main/groups/star_0.png",
                    wx.postMessage({
                        type: "rank",
                        show: 1,
                        level: t,
                        info: GameMain.app.mWX.mUser,
                        dir: "none"
                    });
                var e = new Laya.Sprite();
                this.addChild(e),
                    e.name = "rank";
                var i = new Laya.Texture(Laya.Browser.window.sharedCanvas);
                i.bitmap.alwaysChange = !0,
                    e.graphics.drawTexture(i, 0, 0, i.width, i.height);
            },
            e.prototype.onChangePage = function (t) {
                if (1 != this.mType) if (2 != this.mType) if (3 != this.mType) {
                    "previous" === t ? this.cWRankPage-- : "next" === t && this.cWRankPage++;
                    var e = Math.floor(this.wRankData.length / 5) + 1;
                    this.wRankData.length % 5 == 0 && (e -= 1),
                        this.cWRankPage < 1 ? this.cWRankPage = 1 : this.cWRankPage >= e ? e % 10 == 0 ? (this.dataPage++ , GameMain.app.mWX.showWorldRank(this.dataPage)) : this.cWRankPage-- : this.parseRankData();
                } else wx.postMessage({
                    type: "rank",
                    show: 1,
                    level: this.gs.mMapLevel,
                    info: GameMain.app.mWX.mUser,
                    dir: t
                });
                else wx.postMessage({
                    type: "group",
                    show: 1,
                    groupid: GameMain.app.mWX.mLaunch.shareTicket,
                    level: 0,
                    openid: GameMain.app.mWX.mUser.openid,
                    dir: t
                });
                else wx.postMessage({
                    type: "rank",
                    show: 1,
                    level: 0,
                    info: GameMain.app.mWX.mUser,
                    dir: t
                });
            },
            e.prototype.onWRank = function () {
                this.close(),
                    this.mList.visible = !0,
                    this.mSelf.visible = !0,
                    GameMain.app.mWX.showWorldRank(0),
                    this.cWRankPage = 1;
            },
            e.prototype.showWorldRank = function (t) {
                this.show(),
                    this.wRankData = t,
                    this.mType = 4,
                    this.mTitle.skin = "main/groups/wrank.png",
                    this.rankbk.visible = !1,
                    GameMain.app.mWX.mMyRank > 0 && (this.rankbk.visible = !0, GameMain.app.mWX.mMyRank < 999999 ? this.mRank.text = GameMain.app.mWX.mMyRank.toString() : this.mRank.text = "未上榜"),
                    0 == GameMain.app.mWX.mMarks[0] ? this.mMark.changeText("暂无成绩") : this.mMark.changeText(Math.floor(GameMain.app.mWX.mMarks[0] / 10).toString() + "米"),
                    GameMain.app.mWX.mMarks[1] >= 1e3 ? this.mMap1.skin = "main/groups/star_1.png" : this.mMap1.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[2] >= 1e3 ? this.mMap2.skin = "main/groups/star_1.png" : this.mMap2.skin = "main/groups/star_0.png",
                    GameMain.app.mWX.mMarks[3] >= 1e3 ? this.mMap3.skin = "main/groups/star_1.png" : this.mMap3.skin = "main/groups/star_0.png",
                    this.parseRankData();
            },
            e.prototype.parseRankData = function () {
                for (var t = [], e = 5 * (this.cWRankPage - 1), i = e; i < e + 5; i++) {
                    var s = this.wRankData[i];
                    if (null == s || void 0 == s) break;
                    t.push(s);
                }
                this.mList.repeatX = 1,
                    this.mList.repeatY = t.length,
                    this.mList.array = t;
            },
            e.prototype.updateUser = function (t, e) {
                var i = t.getChildByName("face"),
                    s = t.getChildByName("name"),
                    n = t.getChildByName("rk").getChildByName("rank"),
                    a = t.getChildByName("ll").getChildByName("level"),
                    r = t.getChildByName("mk");
                s.changeText(t.dataSource.name),
                    i.skin = t.dataSource.avatar,
                    n.text = t.dataSource.rank,
                    a.text = t.dataSource.level,
                    r.text = t.dataSource.mark + "米";
                var o = t.getChildByName("map_1"),
                    h = t.getChildByName("map_1"),
                    l = t.getChildByName("map_1");
                t.dataSource.map1 >= 100 ? o.skin = "main/groups/star_1.png" : o.skin = "main/groups/star_0.png",
                    t.dataSource.map2 >= 100 ? h.skin = "main/groups/star_1.png" : h.skin = "main/groups/star_0.png",
                    t.dataSource.map3 >= 100 ? l.skin = "main/groups/star_1.png" : l.skin = "main/groups/star_0.png";
            },
            e.prototype.inMaps = function () {
                return 3 == this.mType;
            },
            e;
    }(ui.rankUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    GameResult = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.gs = null,
                e.wudi = !0,
                e;
        }
        return __extends(e, t),
            e.prototype.onInit = function () {
                this.gs = GameMain.app.mGameScene,
                    this.width = Laya.stage.width,
                    this.height = Laya.stage.height,
                    this.pos(0, 0, !0),
                    this.mSettlement.y = (this.height - this.mSettlement.height) / 2,
                    this.mContinue.y = (this.height - this.mContinue.height) / 2,
                    this.mResult.y = (this.height - this.mResult.height) / 2,
                    this.height > 1334 && this.btnMainPage.pos(90, 80),
                    this.bMask.height = this.height,
                    this.bMask.width = this.width,
                    this.bMask.x = 0,
                    this.bMask.y = 0,
                    this.mContinue.visible = !1,
                    this.mResult.visible = !1,
                    this.mSettlement.visible = !1,
                    this.mChallengeLists.vScrollBarSkin = "",
                    this.mChallengeLists.hScrollBarSkin = "",
                    this.mChallengeLists.selectEnable = !1,
                    this.mChallengeLists.mouseEnabled = !1,
                    this.mChallengeLists.renderHandler = new Laya.Handler(this, this.updateChallengeList),
                    this.mListClick.on(Events.CLICK, GameMain.app.mGameScene, GameMain.app.mGameScene.onShowChallenge),
                    this.btnSave2.on(Events.CLICK, this, this.onSaveImage2),
                    this.btnSave2.on(Events.MOUSE_DOWN, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseDown, [this.btnSave2]),
                    this.btnSave2.on(Events.MOUSE_OUT, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseOut, [this.btnSave2]),
                    this.btnSave2.on(Events.MOUSE_UP, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseOut, [this.btnSave2]),
                    this.mShareFriend.on(Events.CLICK, this, this.onSaveImage),
                    this.mShareFriend.on(Events.MOUSE_DOWN, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseDown, [this.mShareFriend]),
                    this.mShareFriend.on(Events.MOUSE_OUT, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseOut, [this.mShareFriend]),
                    this.mShareFriend.on(Events.MOUSE_UP, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseOut, [this.mShareFriend]),
                    // this.btnShareChallenge2.on(Events.CLICK, this, this.onShare2),
                    // this.btnShareChallenge2.on(Events.MOUSE_DOWN, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseDown, [this.btnShareChallenge2]),
                    // this.btnShareChallenge2.on(Events.MOUSE_OUT, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseOut, [this.btnShareChallenge2]),
                    // this.btnShareChallenge2.on(Events.MOUSE_UP, GameMain.app.mGameScene, GameMain.app.mGameScene.onBtnMouseOut, [this.btnShareChallenge2]),
                    // this.mShowFriend.on(Events.CLICK, this, this.onShare),
                    // this.mShowFriend.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.mShowFriend]),
                    // this.mShowFriend.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.mShowFriend]),
                    // this.mShowFriend.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.mShowFriend]),
                    this.mGameAgain.on(Events.CLICK, this, this.playAgain),
                    this.mGameAgain.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.mGameAgain]),
                    this.mGameAgain.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.mGameAgain]),
                    this.mGameAgain.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.mGameAgain]),
                    // this.btnMore.on(Events.CLICK, this, this.showMore, [this.btnMore]),
                    // this.btnMore.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnMore]),
                    // this.btnMore.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnMore]),
                    // this.btnMore.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnMore]),
                    // this.btnMore2.on(Events.CLICK, this, this.showMore, [this.btnMore2]),
                    // this.btnMore2.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnMore2]),
                    // this.btnMore2.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnMore2]),
                    // this.btnMore2.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnMore2]),
                    this.btnPass.on(Events.CLICK, this, this.showResult),
                    this.btnPass.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnPass]),
                    this.btnPass.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnPass]),
                    this.btnPass.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnPass]),
                    this.btnNoCard.on(Events.CLICK, this, this.showNoCards),
                    this.btnNoCard.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnNoCard]),
                    this.btnNoCard.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnNoCard]),
                    this.btnNoCard.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnNoCard]),
                    this.btnXMShare2.on(Events.CLICK, this.gs, this.gs.onShowADEx, [!1]),
                    this.btnXMShare2.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnXMShare2]),
                    this.btnXMShare2.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnXMShare2]),
                    this.btnXMShare2.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnXMShare2]),
                    this.btnXMShare4.on(Events.CLICK, this.gs, this.gs.showLiveOn),
                    this.btnXMShare4.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnXMShare4]),
                    this.btnXMShare4.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnXMShare4]),
                    this.btnXMShare4.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnXMShare4]),
                    this.btnChallengeAgain.on(Events.CLICK, this.gs, this.gs.onChallengeAgain),
                    this.btnChallengeAgain.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnChallengeAgain]),
                    this.btnChallengeAgain.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnChallengeAgain]),
                    this.btnChallengeAgain.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnChallengeAgain]),
                    this.btnMainPage.on(Events.CLICK, this.gs, this.gs.showPage),
                    this.btnMainPage.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown2, [this.btnMainPage]),
                    this.btnMainPage.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnMainPage]),
                    this.btnMainPage.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnMainPage]),
                    this.btnBest.on(Events.CLICK, this, this.showGroups),
                    this.btnBest.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown2, [this.btnBest]),
                    this.btnBest.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnBest]),
                    this.btnBest.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnBest]),
                    this.btnBest2.on(Events.CLICK, this, this.showGroups),
                    this.btnBest2.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown2, [this.btnBest2]),
                    this.btnBest2.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnBest2]),
                    this.btnBest2.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnBest2]),
                    this.btnXMShare3.on(Events.CLICK, this.gs, this.gs.onShowAD, [!1]),
                    this.btnXMShare3.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnXMShare3]),
                    this.btnXMShare3.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnXMShare3]),
                    this.btnXMShare3.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnXMShare3]),
                    this.btnAVWudi.on(Events.CLICK, this.gs, this.gs.onShowADEx, [!1]),
                    this.btnAVWudi.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnAVWudi]),
                    this.btnAVWudi.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnAVWudi]),
                    this.btnAVWudi.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnAVWudi]),
                    this.btnWuDi.on(Events.CLICK, this.gs, this.gs.onShowADEx, [!0]),
                    this.btnWuDi.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnWuDi]),
                    this.btnWuDi.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnWuDi]),
                    this.btnWuDi.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnWuDi]),
                    this.btnShare3.on(Events.CLICK, this, this.onShareFriendsGo),
                    this.btnShare3.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnShare3]),
                    this.btnShare3.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnShare3]),
                    this.btnShare3.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnShare3]),
                    this.btnCards.on(Events.CLICK, this, this.onShare3),
                    this.btnCards.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnCards]),
                    this.btnCards.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnCards]),
                    this.btnCards.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnCards]),
                    this.btnCards2.on(Events.CLICK, this, this.onShare3),
                    this.btnCards2.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnCards2]),
                    this.btnCards2.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnCards2]),
                    this.btnCards2.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnCards2]),
                    // this.btnGoOn.on(Events.CLICK, this, this.onGoOn),
                    // this.btnGoOn.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnGoOn]),
                    // this.btnGoOn.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnGoOn]),
                    // this.btnGoOn.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnGoOn]),
                    this.btnReturn.on(Events.CLICK, this.gs, this.gs.onShowChallenge),
                    this.btnReturn.on(Events.MOUSE_DOWN, this.gs, this.gs.onBtnMouseDown, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_OUT, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn.on(Events.MOUSE_UP, this.gs, this.gs.onBtnMouseOut, [this.btnReturn]),
                    this.btnReturn.visible = !1,
                    this.btnMainPage.visible = !1,
                    this.visible = !1;
            },
            e.prototype.updateChallengeList = function (t, e) {
                var i = t.getChildByName("face"),
                    s = t.getChildByName("face").getChildByName("rank"),
                    n = t.getChildByName("face").getChildByName("mark");
                i.skin = t.dataSource.avatar,
                    e >= 3 ? s.visible = !1 : (s.skin = "main/ver1001/r" + (e + 1) + ".png", s.visible = !0),
                    0 == Number(t.dataSource.level) ? n.text = Math.floor(t.dataSource.mark / 10).toString() + "m" : n.text = Math.floor(t.dataSource.mark / 10).toString() + "%";
            },
            e.prototype.onSaveImage = function () {
                GameMain.app.mWX.createQR(1);
            },
            e.prototype.onSaveImage2 = function () {
                GameMain.app.mWX.createQR(2);
            },
            // e.prototype.onShare2 = function () {
            //   if (1 == Laya.Browser.onMiniGame) {
            //     var t = "神手" + Math.floor(this.gs.score) + "米！我变残了，也变强了！你能超过我吗？";
            //     this.gs.mMapLevel > 0 && (t = "神手[" + GameMain.app.mGameGates.mMapName[this.gs.mMapLevel - 1] + "]完成" + Math.floor(this.gs.score) + "%！哈哈哈哈哈哈追不上我吧！");
            //     var e = this.mResult.y + 154 + 128;
            //     wx.shareAppMessage({
            //       title: t,
            //       imageUrl: canvas.toTempFilePathSync({
            //         x: 113,
            //         y: e,
            //         width: 524,
            //         height: 524,
            //         destWidth: 750,
            //         destHeight: 600
            //       }),
            //       query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mShareID + "&score=" + this.gs.score + "&client=0&type=0"
            //     }),
            //       GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
            //   }
            // },
            // e.prototype.onShare = function () {
            //   if (1 == Laya.Browser.onMiniGame) {
            //     var t = "神手" + Math.floor(this.gs.score) + "米！我变残了，也变强了！你能超过我吗？";
            //     this.gs.mMapLevel > 0 && (t = "神手[" + GameMain.app.mGameGates.mMapName[this.gs.mMapLevel - 1] + "]完成" + Math.floor(this.gs.score) + "%！哈哈哈哈哈哈追不上我吧！");
            //     var e = this.mSettlement.y + 240 + 45;
            //     wx.shareAppMessage({
            //       title: t,
            //       imageUrl: canvas.toTempFilePathSync({
            //         x: 113,
            //         y: e,
            //         width: 524,
            //         height: 524,
            //         destWidth: 750,
            //         destHeight: 600
            //       }),
            //       query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mShareID + "&score=" + this.gs.score + "&client=0&type=0"
            //     }),
            //       GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
            //   }
            // },
            // e.prototype.onGoOn = function () {
            //   if (1 == Laya.Browser.onMiniGame) {
            //     var t = "神手" + Math.floor(this.gs.score) + "米！帮我继续玩，让我冲上榜首。",
            //       e = GameMain.app.getCDN() + "level/997.png";
            //     wx.shareAppMessage({
            //       title: t,
            //       imageUrl: e,
            //       query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mShareID + "&score=" + this.gs.score + "&client=0&help=1",
            //       success: function (t) {
            //         GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
            //       },
            //       fail: function (t) { }
            //     }),
            //       GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
            //   }
            // },
            e.prototype.onShare3 = function () {
                this.gs.showGift(2);
            },
            e.prototype.playAgain = function () {
                this.close(),
                    this.gs.playAgain();
            },
            e.prototype.showFriends = function () {
                wx.showToast({
                    title: "功能暂未开放",
                    icon: "success",
                    image: "",
                    duration: 3e3
                });
            },
            e.prototype.showGroups = function () {
                wx.shareAppMessage({
                    title: "你在群里排第几名？",
                    imageUrl: GameMain.app.getCDN() + "level/9992.png",
                    query: "uid=" + GameMain.app.mWX.mUID + "&id=0&type=8&map=0",
                    success: function (t) {
                        console.log(t),
                            void 0 != t.shareTickets ? wx.showToast({
                                title: "可入群看排名",
                                icon: "success",
                                image: "",
                                duration: 2e3
                            }) : wx.showToast({
                                title: "需转发到群",
                                icon: "success",
                                image: "",
                                duration: 2e3
                            });
                    },
                    fail: function (t) {
                        console.log(t);
                    }
                });
            },
            e.prototype.showAll = function (t) {
                this.mContinue.visible = t,
                    this.mSettlement.visible = t,
                    this.mResult.visible = t,
                    0 == t && (wx.postMessage({
                        type: "next",
                        show: 0
                    }), Laya.stage.removeChildByName("next"));
            },
            e.prototype.close = function () {
                this.btnMainPage.visible = !1,
                    this.showAll(!1),
                    this.visible = !1;
            },
            e.prototype.onShow = function () {
                this.visible = !0,
                    this.showAll(!1),
                    this.gs.btnMusic.visible = !1,
                    this.gs.btnReturn.visible = !1;
            },
            e.prototype.showNoCards = function () {
                wx.showToast({
                    title: "您没有卡!",
                    icon: "success",
                    image: "",
                    duration: 2e3
                });
            },
            e.prototype.showResult = function () {
                this.gs.clearStones(),
                    this.gs.playerL.visible = !1,
                    this.gs.playerR.visible = !1,
                    this.btnReturn.visible = !1,
                    this.btnMainPage.visible = !0,
                    this.visible = !0,
                    this.showAll(!1),
                    this.gs.btnReturn.visible = !1,
                    1 == this.wudi ? (this.mGameAgain.x = 150,
                        this.mShareFriend.x = 300,
                        this.btnCards.x = 450,
                        // this.btnMore.x = 600,
                        this.btnCards.visible = !0,
                        this.btnChallengeAgain.x = 77,
                        this.btnSave2.x = 227,
                        this.btnCards2.x = 377,
                        // this.btnMore2.x = 527,
                        // this.hytips2.visible = !0
                        // this.hytips1.visible = !0,
                        this.btnCards2.visible = !0) : (this.mGameAgain.x = 150,
                            this.mShareFriend.x = 300,
                            this.btnCards.x = 450,
                            // this.btnMore.x = 600,
                            this.btnCards.visible = !0,
                            this.btnChallengeAgain.x = 77,
                            this.btnSave2.x = 227,
                            this.btnCards2.x = 377,
                            // this.btnMore2.x = 527,
                            // this.hytips1.visible = !1,
                            // this.hytips2.visible = !1
                            this.btnCards2.visible = !0);
                var t = this.gs.getLevel();
                if (0 == this.gs.mSolo)
                    // GameMain.app.mWX.initMore(this.btnMore, 0),
                    this.gs.overFingerLeft.visible = !1,
                        this.gs.overFingerRight.visible = !1,
                        this.mSettlement.visible = !0,
                        1 == this.gs.mHelped && (this.btnReturn.visible = !0,
                            this.btnMainPage.visible = !1),
                        this.mSelfSTX.skin = GameMain.app.mWX.mUser.avatarUrl,
                        0 == this.gs.mMapLevel ? (this.btnBest.visible = !1,
                            // this.btnGoOn.visible = !0,
                            this.mSelfSName.text = "Lv." + t + " " + this.gs.mLevelName[t - 1]) : (this.btnBest.visible = !0,
                                // this.btnGoOn.visible = !1,
                                this.mSelfSName.text = GameMain.app.mGameGates.mMapName[this.gs.mMapLevel - 1]),
                        0 == this.gs.mMapLevel ? (this.sbg1.visible = !0,
                            this.sbg2.visible = !1,
                            this.mapTitlef.visible = !1,
                            this.mDWPicture.skin = GameMain.app.getCDN() + "level3/" + t + ".jpg",
                            this.mAchieve.text = Math.floor(this.gs.score).toString() + "m",
                            this.mOverProgress.text = "-已超越了" + this.gs.mLevelTips[t - 1] + "%的玩家- ",
                            this.mOverProgress.visible = !0,
                            this.mScore.y = 476) : (this.mapTitlef.visible = !0,
                                Math.floor(this.gs.score) >= 100 ? (this.sbg1.visible = !1,
                                    this.sbg2.visible = !0) : (this.sbg1.visible = !0,
                                        this.sbg2.visible = !1),
                                1 == this.gs.mMapLevel && (Math.floor(this.gs.score) >= 100 ? this.mDWPicture.skin = GameMain.app.getCDN() + "ngates/4.png" : this.mDWPicture.skin = GameMain.app.getCDN() + "ngates/1.png"),
                                2 == this.gs.mMapLevel && (Math.floor(this.gs.score) >= 100 ? this.mDWPicture.skin = GameMain.app.getCDN() + "ngates/5.png" : this.mDWPicture.skin = GameMain.app.getCDN() + "ngates/2.png"),
                                3 == this.gs.mMapLevel && (Math.floor(this.gs.score) >= 100 ? this.mDWPicture.skin = GameMain.app.getCDN() + "ngates/6.png" : this.mDWPicture.skin = GameMain.app.getCDN() + "ngates/3.png"),
                                this.mAchieve.fontSize = 36,
                                this.mAchieve.text = "完成" + Math.floor(this.gs.score).toString() + "%",
                                this.mOverProgress.visible = !1,
                                this.mScore.y = 450),
                        this.mSettlement.visible = !0;
                else {
                    // GameMain.app.mWX.initMore(this.btnMore2, 0);
                    var e = GameMain.app.mWX.mChallenge.master
                        , i = GameMain.app.mWX.mUser
                        , s = Math.floor(this.gs.score) > Math.floor(e.mark / 10);
                    this.swin.visible = !1,
                        this.sfail.visible = !1,
                        1 == s ? this.swin.visible = !0 : this.sfail.visible = !0,
                        0 == this.gs.mMapLevel ? this.mSelfSName2.text = "Lv." + t + " " + this.gs.mLevelName[t - 1] : this.mSelfSName2.text = GameMain.app.mGameGates.mMapName[this.gs.mMapLevel - 1],
                        0 == this.gs.mMapLevel ? (this.mDWPicture2.skin = GameMain.app.getCDN() + "level3/" + t + ".jpg",
                            this.mAchieve2.text = Math.floor(this.gs.score).toString() + "m",
                            this.mOverProgress2.text = "-已超越了" + this.gs.mLevelTips[t - 1] + "%的玩家- ",
                            this.mOverProgress2.visible = !0,
                            this.marktips2.y = 476) : (1 == this.gs.mMapLevel && (Math.floor(this.gs.score) >= 100 ? this.mDWPicture2.skin = GameMain.app.getCDN() + "ngates/4.png" : this.mDWPicture2.skin = GameMain.app.getCDN() + "ngates/1.png"),
                                2 == this.gs.mMapLevel && (Math.floor(this.gs.score) >= 100 ? this.mDWPicture2.skin = GameMain.app.getCDN() + "ngates/5.png" : this.mDWPicture2.skin = GameMain.app.getCDN() + "ngates/2.png"),
                                3 == this.gs.mMapLevel && (Math.floor(this.gs.score) >= 100 ? this.mDWPicture2.skin = GameMain.app.getCDN() + "ngates/6.png" : this.mDWPicture2.skin = GameMain.app.getCDN() + "ngates/3.png"),
                                this.mAchieve2.fontSize = 36,
                                this.mAchieve2.text = "完成" + Math.floor(this.gs.score).toString() + "%",
                                this.mOverProgress2.visible = !1,
                                this.marktips2.y = 450),
                        this.mSelfSTX2.skin = i.avatarUrl;
                    for (var n = [], a = 0; a < GameMain.app.mWX.mChallenge.data.length && !(a > 3); a++) {
                        var r = GameMain.app.mWX.mChallenge.data[a]
                            , o = base64.Base64.decode(r.avatar);
                        "0" == o.charAt(o.length - 1) && "/" == o.charAt(o.length - 2) && (o = o.substr(0, o.length - 2),
                            o += "/132"),
                            r.avatar = o,
                            r.level = this.gs.mMapLevel,
                            n.push(r);
                    }
                    this.mChallengeLists.repeatX = n.length,
                        this.mChallengeLists.repeatY = 1,
                        this.mChallengeLists.array = n,
                        this.mResult.visible = !0,
                        this.btnMainPage.visible = !0;
                }
            },
            e.prototype.updateCards = function () {
                this.mCardsCount2.changeText("x" + GameMain.app.mWX.mCards),
                    this.mCardsCount3.changeText("x" + GameMain.app.mWX.mCards),
                    this.mCards.changeText("x" + GameMain.app.mWX.mCards),
                    this.noCards.visible = !0,
                    this.haveCards.visible = !1,
                    1 == this.mContinue.visible ? 0 == this.gs.mKeepGo || null == this.gs.videoAd ? (this.mVIcon2.visible = !1, this.mVIcon.visible = !0, this.mCards.visible = !0, GameMain.app.mWX.mCards > 0 ? (this.btnXMShare2.visible = !1, this.btnNoCard.visible = !1, this.btnXMShare4.visible = !0, this.btnXMShare4.x = 300, this.mCards.color = "0#000000") : (this.mCards.color = "0#ff4d4d", this.btnNoCard.visible = !0, this.btnXMShare4.visible = !1, this.btnXMShare2.visible = !1, this.btnNoCard.x = 300)) : (this.mVIcon2.visible = !0, this.mVIcon.visible = !1, this.mCards.visible = !1, this.btnNoCard.visible = !1, this.btnXMShare4.visible = !1, this.btnXMShare2.visible = !0, this.btnXMShare2.x = 300) : Laya.timer.clear(this, this.updateCardsCount);
            },
            // e.prototype.showMore = function (t) {
            //   var e = GameMain.app.getCDN() + GameMain.app.mWX.getMoreUrl(t.name);
            //   GameMain.app.mWX.reportADHit(t.name),
            //     wx.previewImage({
            //       urls: [e],
            //       success: function (t) {
            //         console.log("预览图片成功");
            //       }
            //     });
            // },
            // e.prototype.onShareFriendsGo2 = function () {
            //   var t = "求助！神手" + Math.floor(this.gs.score) + "米！确认过眼神，你是救我的人！";
            //   this.gs.mMapLevel > 0 && (t = "求助！神手[" + GameMain.app.mGameGates.mMapName[this.gs.mMapLevel - 1] + "]完成" + Math.floor(this.gs.score) + "%！快救救我！");
            //   var e = GameMain.app.getCDN() + "level/997.png";
            //   wx.shareAppMessage({
            //     title: t,
            //     imageUrl: e,
            //     query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mShareID + "&score=" + this.gs.score + "&client=0&type=0",
            //     success: function (t) {
            //       GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
            //     },
            //     fail: function (t) { }
            //   });
            // },
            e.prototype.onShareFriendsGo = function () {
                var t = "求助！神手" + Math.floor(this.gs.score) + "米！确认过眼神，你是救我的人！";
                this.gs.mMapLevel > 0 && (t = "续命求助！神手[" + GameMain.app.mGameGates.mMapName[this.gs.mMapLevel - 1] + "]完成" + Math.floor(this.gs.score) + "%！快救救我！");
                var e = GameMain.app.getCDN() + "level/997.png";
                wx.shareAppMessage({
                    title: t,
                    imageUrl: e,
                    query: "uid=" + GameMain.app.mWX.mUID + "&id=" + GameMain.app.mWX.mShareID + "&score=" + GameMain.app.mGameResult.gs.score + "&client=0&type=0",
                    success: function (t) {
                        if (1 == GameMain.app.mGameResult.visible && 1 == GameMain.app.mGameResult.mContinue.visible) {
                            var e = GameMain.app.mGameResult.btnShare3.getChildByName("time");
                            Laya.timer.clear(GameMain.app.mGameResult, GameMain.app.mGameResult.updateCardsCount),
                                GameMain.app.mWX.mCards <= 0 && (e.visible = !0, GameMain.app.mGameScene.mCardsUpdate <= 0 && (GameMain.app.mGameScene.mCardsUpdate = 5), Laya.timer.loop(1e3, GameMain.app.mGameResult, GameMain.app.mGameResult.updateCardsCount));
                        }
                        GameMain.app.mGameScene.mShares = GameMain.app.mGameScene.mShares + 1;
                    },
                    fail: function (t) { }
                });
            },
            e.prototype.updateCardsCount = function () {
                GameMain.app.mGameScene.mCardsUpdate = GameMain.app.mGameScene.mCardsUpdate - 1;
                var t = this.btnShare3.getChildByName("time");
                GameMain.app.mGameScene.mCardsUpdate <= 0 ? (t.changeText(""), t.visible = !1, Laya.timer.clear(this, this.updateCardsCount), GameMain.app.mGameScene.mCardsUpdate = 0, GameMain.app.mWX.updateCards()) : t.changeText(GameMain.app.mGameScene.mCardsUpdate.toString() + "秒后刷新");
            },
            e;
    }(ui.resultUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    PvpTop = function (t) {
        function e() {
            var e = t.call(this) || this;
            return e.mPlayers = [],
                e.mTotal = 65,
                e;
        }
        return __extends(e, t),
            e.prototype.show = function (t) {
                this.y = 20,
                    this.mPlayers = [],
                    GameMain.app.mGameScene.scoreBox.y = 150,
                    1 == GameMain.app.mGameScene.mXP && (this.y = 80, GameMain.app.mGameScene.scoreBox.y = 210),
                    this.p1.visible = !1,
                    this.p2.visible = !1,
                    this.p3.visible = !1,
                    this.p4.visible = !1,
                    this.p5.visible = !1,
                    this.p6.visible = !1;
                for (var e = 1; e <= t.rowCount(); e++) {
                    this["p" + e].visible = !0,
                        t.getLong(e, "uid") == GameMain.app.mWX.mUID ? this["p" + e].zOrder = 10 : this["p" + e].zOrder = e,
                        this["p" + e].x = 20;
                    var i = base64.Base64.decode(t.getString(e, "avatar"));
                    "0" == i.charAt(i.length - 1) && "/" == i.charAt(i.length - 2) && (i = i.substr(0, i.length - 2), i += "/132"),
                        this["face" + e].skin = i,
                        this.mPlayers.push({
                            uid: t.getLong(e, "uid"),
                            tick: 0,
                            online: 1,
                            delay: 0,
                            onoff: 0
                        });
                }
            },
            e.prototype.close = function () {
                GameMain.app.mGameScene.removeChildByName("pvptop"),
                    1 == GameMain.app.mGameScene.mXP ? GameMain.app.mGameScene.scoreBox.y = 140 : GameMain.app.mGameScene.scoreBox.y = 80;
            },
            e.prototype.update = function (t, e) {
                for (var i = 0; i < this.mPlayers.length; i++) if (0 != this.mPlayers[i].online && !(this.mPlayers[i].delay >= GameMain.app.getServerTime()) && 0 != this.mPlayers[i].onoff) {
                    var s = GameMain.app.getServerTick() - 1e3 * e; (s = (s - 1e3 * this.mPlayers[i].tick) / 1e3) > this.mTotal && (s = this.mTotal);
                    var n = 670 * s / this.mTotal;
                    n < 0 && (n = 0),
                        n > 650 && (n = 650),
                        this["p" + (i + 1)].x = 20 + n;
                }
            },
            e.prototype.offLine = function (t) {
                for (var e = 0; e < this.mPlayers.length; e++) if (this.mPlayers[e].uid == t) {
                    this.mPlayers[e].online = 0;
                    break;
                }
            },
            e.prototype.onCrash = function (t, e) {
                for (var i = 0; i < this.mPlayers.length; i++) if (this.mPlayers[i].uid == t) {
                    this.mPlayers[i].tick = this.mPlayers[i].tick + 3,
                        this.mPlayers[i].delay = GameMain.app.getServerTime() + 3,
                        0 == this.mPlayers[i].onoff && (this.mPlayers[i].onoff = e);
                    break;
                }
            },
            e;
    }(ui.pvpTopUI),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    Player = function (t) {
        function e(i) {
            var s = t.call(this) || this;
            return s.hitRadius = 5,
                s.inBlink = !1,
                s.body = new Laya.Animation(),
                s.body.loadAnimation("stoneRun.ani"),
                s.addChild(s.body),
                s.x = Laya.stage.width * ("left" === i ? 3 : 5) / 8,
                s.y = Laya.stage.height - e.yFromBottom,
                s;
        }
        return __extends(e, t),
            e.prototype.onReady = function () {
                this.inBlink = !1,
                    this.visible = !0,
                    this.body.play(0, !1, "normal");
            },
            e.prototype.onStart = function () {
                this.body.play(0, !0, "run");
            },
            e.prototype.onCracked = function () {
                this.body.play(0, !1, "crack");
            },
            e.prototype.playWD = function () {
                this.inBlink = !0;
                var t = this.getChildByName("wudi");
                null == t && ((t = new Laya.Animation()).loadAnimation("invincible.ani"), t.name = "wudi", this.addChild(t)),
                    t.play(0, !0, "ani1");
            },
            e.prototype.stopWD = function () {
                if (1 == this.inBlink) {
                    this.inBlink = !1;
                    var t = this.getChildByName("wudi");
                    null != t && (t.play(0, !1, "ani1_0"), Laya.timer.once(1e3, this, this.clearWD));
                }
            },
            e.prototype.clearWD = function () {
                this.inBlink = !1,
                    this.removeChildByName("wudi");
            },
            e.prototype.showCollisionBox = function () {
                var t = new Laya.Sprite();
                t.alpha = .3,
                    t.graphics.drawCircle(this.width / 2, this.height / 2, this.hitRadius, "#990000"),
                    this.addChild(t);
            },
            e.cached = !1,
            e.yFromBottom = 420,
            e;
    }(Laya.Sprite),
    __extends = this && this.__extends ||
        function () {
            var t = Object.setPrototypeOf || {
                __proto__: []
            }
                instanceof Array &&
                function (t, e) {
                    t.__proto__ = e;
                } ||
                function (t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                };
            return function (e, i) {
                function s() {
                    this.constructor = e;
                }
                t(e, i),
                    e.prototype = null === i ? Object.create(i) : (s.prototype = i.prototype, new s());
            };
        }(),
    Stone = function (t) {
        function e(e, i) {
            var s = t.call(this) || this;
            return s.init(e, i),
                s;
        }
        return __extends(e, t),
            e.prototype.init = function (t, i) {
                this.skin = "main/stone_" + i + ".png",
                    this.anchorX = .5,
                    this.anchorY = .5,
                    this.hitRadius = e.hitRadiusList[i - 1] || 0,
                    this.renew(t);
            },
            e.prototype.renew = function (t) {
                this.pos(Laya.stage.width * (2 * t - 1) / 8, Laya.stage.height - e.yFromBottom);
            },
            e.prototype.move = function (t) {
                this.y += t;
            },
            e.prototype.showCollisionBox = function () {
                var t = new Laya.Sprite();
                t.alpha = .3,
                    t.graphics.drawCircle(this.width / 2, this.height / 2, this.hitRadius, "#990000"),
                    this.addChild(t);
            },
            e.hitRadiusList = [85, 63, 75],
            e.yFromBottom = 1725,
            e;
    }(Laya.Image),
    WebGL = Laya.WebGL,
    Stage = Laya.Stage,
    Events = Laya.Event,
    ColorFilter = Laya.ColorFilter,
    Socket = Laya.Socket,
    Byte = Laya.Byte,
    Handler = Laya.Handler,
    GameMain = function () {
        function t() {
            this.mGameScene = null,
                this.mGameGates = null,
                this.mGameResult = null,
                this.mGameRank = null,
                this.mGameGift = null,
                this.mGamePvp = null,
                this.mWX = null,
                this.mServerTime = 0,
                t.app = this;
            wx.getSystemInfoSync();
            Laya.init(750, 0),
                Laya.ResourceManager.systemResourceManager.autoRelease = !1,
                Laya.stage.screenMode = Stage.SCREEN_VERTICAL,
                Laya.stage.scaleMode = Stage.SCALE_FIXED_WIDTH,
                this.onStartGame();
        }
        return t.prototype.onStartGame = function () {
            var t = [];
            t.push({
                url: "main/stone/stone_normal.png",
                type: Laya.Loader.IMAGE
            }),
                t.push({
                    url: "main/stone/stone_normal_2.png",
                    type: Laya.Loader.IMAGE
                }),
                t.push({
                    url: "main/stone/stone_normal_3.png",
                    type: Laya.Loader.IMAGE
                }),
                t.push({
                    url: "main/stone/stone_cracked.png",
                    type: Laya.Loader.IMAGE
                }),
                t.push({
                    url: "main/invincible.png",
                    type: Laya.Loader.IMAGE
                }),
                t.push({
                    url: "main/finger.png",
                    type: Laya.Loader.IMAGE
                }),
                t.push({
                    url: "main/best_line.png",
                    type: Laya.Loader.IMAGE
                }),
                t.push({
                    url: "main/stage.json",
                    type: Laya.Loader.JSON
                }),
                Laya.loader.load(t, Laya.Handler.create(this, this.onShowGame), null);
        },
            t.prototype.onShowGame = function () {
                this.mGameScene = new GameScene(),
                    Laya.stage.addChild(this.mGameScene),
                    Laya.timer.callLater(this.mGameScene, this.mGameScene.onInit);
            },
            t.prototype.isBase64 = function (t) {
                try {
                    return base64.Base64.encode(base64.Base64.decode(t)) == t;
                } catch (t) {
                    return !1;
                }
            },
            t.prototype.MD5 = function (t) {
                return md5.create().update(t);
            },
            t.prototype.getServerTime = function () {
                var t = new Date();
                return this.mServerTime + Math.floor(t.getTime() / 1e3);
            },
            t.prototype.getServerTick = function () {
                var t = new Date();
                return 1e3 * this.mServerTime + t.getTime();
            },
            t.prototype.setServerTime = function (t) {
                var e = new Date();
                this.mServerTime = t - Math.floor(e.getTime() / 1e3);
            },
            t.prototype.getCDN = function () {
                return util.getCDN();
            },
            t.app = null,
            t;
    }();

Laya.MiniAdpter.init(!0);
new GameMain();